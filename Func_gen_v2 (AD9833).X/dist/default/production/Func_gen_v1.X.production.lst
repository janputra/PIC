

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Aug 29 15:01:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F886 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222                           
   223                           	psect	nvBANK0
   224  005E                     __pnvBANK0:	
   225  005E                     _val0:	
   226  005E                     	ds	4
   227                           
   228                           	psect	nvBANK1
   229  00C2                     __pnvBANK1:	
   230  00C2                     _last_freq:	
   231  00C2                     	ds	4
   232  00C6                     _SYNCSRC:	
   233  00C6                     	ds	2
   234  00C8                     _UNRESET:	
   235  00C8                     	ds	2
   236  00CA                     _SET_1:	
   237  00CA                     	ds	2
   238  00CC                     _SET_0:	
   239  00CC                     	ds	2
   240  00CE                     _RESET:	
   241  00CE                     	ds	2
   242  003A                     _RC2	set	58
   243  005C                     _INTE	set	92
   244  005E                     _PEIE	set	94
   245  005F                     _GIE	set	95
   246  003B                     _RC3	set	59
   247  0059                     _INTF	set	89
   248  003F                     _RC7	set	63
   249  0031                     _RB1	set	49
   250  0032                     _RB2	set	50
   251  0033                     _RB3	set	51
   252  0034                     _RB4	set	52
   253  0035                     _RB5	set	53
   254  003E                     _RC6	set	62
   255  003D                     _RC5	set	61
   256  003C                     _RC4	set	60
   257  040E                     _INTEDG	set	1038
   258  043A                     _TRISC2	set	1082
   259  0430                     _TRISB0	set	1072
   260  0439                     _TRISC1	set	1081
   261  043B                     _TRISC3	set	1083
   262  043C                     _TRISC4	set	1084
   263  043D                     _TRISC5	set	1085
   264  043E                     _TRISC6	set	1086
   265  043F                     _TRISC7	set	1087
   266  0435                     _TRISB5	set	1077
   267  0434                     _TRISB4	set	1076
   268  0433                     _TRISB3	set	1075
   269  0432                     _TRISB2	set	1074
   270  0431                     _TRISB1	set	1073
   271  0C4B                     _ANS11	set	3147
   272  0C4D                     _ANS13	set	3149
   273  0C4C                     _ANS12	set	3148
   274  0C4A                     _ANS10	set	3146
   275  0C49                     _ANS9	set	3145
   276  0C48                     _ANS8	set	3144
   277                           
   278                           	psect	strings
   279  0800                     __pstrings:	
   280  0800                     stringtab:	
   281  0800                     __stringtab:	
   282                           
   283                           ;	String table - string pointers are 1 byte each
   284  0800  1BFF               	btfsc	btemp+1,7
   285  0801  280A               	ljmp	stringcode
   286  0802  1383               	bcf	3,7
   287  0803  187F               	btfsc	btemp+1,0
   288  0804  1783               	bsf	3,7
   289  0805  0800               	movf	0,w
   290  0806  0A84               	incf	4,f
   291  0807  1903               	skipnz
   292  0808  0AFF               	incf	btemp+1,f
   293  0809  0008               	return
   294  080A                     stringcode:	
   295  080A                     stringdir:	
   296  080A  3008               	movlw	high stringdir
   297  080B  008A               	movwf	10
   298  080C  0804               	movf	4,w
   299  080D  0A84               	incf	4,f
   300  080E  0782               	addwf	2,f
   301  080F                     __stringbase:	
   302  080F  3400               	retlw	0
   303  0810                     __end_of__stringtab:	
   304  0810                     STR_1:	
   305  0810  3432               	retlw	50	;'2'
   306  0811  3430               	retlw	48	;'0'
   307  0812  342E               	retlw	46	;'.'
   308  0813  3430               	retlw	48	;'0'
   309  0814  3430               	retlw	48	;'0'
   310  0815  3430               	retlw	48	;'0'
   311  0816  3400               	retlw	0
   312  0817                     STR_2:	
   313  0817  344B               	retlw	75	;'K'
   314  0818  3448               	retlw	72	;'H'
   315  0819  347A               	retlw	122	;'z'
   316  081A  3400               	retlw	0
   317                           
   318                           ; #config settings
   319  0000                     
   320                           	psect	cinit
   321  000F                     start_initialization:	
   322  000F                     __initialization:	
   323                           
   324                           ; Clear objects allocated to COMMON
   325  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   326  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  0011  1383               	bcf	3,7	;select IRP bank0
   330  0012  3020               	movlw	low __pbssBANK0
   331  0013  0084               	movwf	4
   332  0014  3049               	movlw	low (__pbssBANK0+41)
   333  0015  120A  158A  25AA  120A  118A  	fcall	clear_ram0
   334                           
   335                           ; Clear objects allocated to BANK1
   336  001A  30A0               	movlw	low __pbssBANK1
   337  001B  0084               	movwf	4
   338  001C  30B2               	movlw	low (__pbssBANK1+18)
   339  001D  120A  158A  25AA   	fcall	clear_ram0
   340  0020                     end_of_initialization:	
   341                           ;End of C runtime variable initialization code
   342                           
   343  0020                     __end_of__initialization:	
   344  0020  0183               	clrf	3
   345  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   346                           
   347                           	psect	bssCOMMON
   348  0079                     __pbssCOMMON:	
   349  0079                     _freqMSB:	
   350  0079                     	ds	2
   351                           
   352                           	psect	bssBANK0
   353  0020                     __pbssBANK0:	
   354  0020                     _pos:	
   355  0020                     	ds	4
   356  0024                     _val4:	
   357  0024                     	ds	4
   358  0028                     _val3:	
   359  0028                     	ds	4
   360  002C                     _val2:	
   361  002C                     	ds	4
   362  0030                     _val1:	
   363  0030                     	ds	4
   364  0034                     _freq:	
   365  0034                     	ds	4
   366  0038                     _freqLSB:	
   367  0038                     	ds	2
   368  003A                     _freqHLSB:	
   369  003A                     	ds	2
   370  003C                     _freqHMSB:	
   371  003C                     	ds	2
   372  003E                     _freqLLSB:	
   373  003E                     	ds	2
   374  0040                     _freqLMSB:	
   375  0040                     	ds	2
   376  0042                     _cursor_dir:	
   377  0042                     	ds	1
   378  0043                     _F_FREQ:	
   379  0043                     	ds	1
   380  0044                     _last_val4:	
   381  0044                     	ds	1
   382  0045                     _last_val3:	
   383  0045                     	ds	1
   384  0046                     _last_val2:	
   385  0046                     	ds	1
   386  0047                     _last_val1:	
   387  0047                     	ds	1
   388  0048                     _last_val0:	
   389  0048                     	ds	1
   390                           
   391                           	psect	bssBANK1
   392  00A0                     __pbssBANK1:	
   393  00A0                     _temp:	
   394  00A0                     	ds	4
   395  00A4                     _temp2:	
   396  00A4                     	ds	2
   397  00A6                     _temp1:	
   398  00A6                     	ds	2
   399  00A8                     _PHASE:	
   400  00A8                     	ds	2
   401  00AA                     _buff:	
   402  00AA                     	ds	8
   403                           
   404                           	psect	clrtext
   405  0DAA                     clear_ram0:	
   406                           ;	Called with FSR containing the base address, and
   407                           ;	W with the last address+1
   408                           
   409  0DAA  0064               	clrwdt	;clear the watchdog before getting into this loop
   410  0DAB                     clrloop0:	
   411  0DAB  0180               	clrf	0	;clear RAM location pointed to by FSR
   412  0DAC  0A84               	incf	4,f	;increment pointer
   413  0DAD  0604               	xorwf	4,w	;XOR with final address
   414  0DAE  1903               	btfsc	3,2	;have we reached the end yet?
   415  0DAF  3400               	retlw	0	;all done for this memory range, return
   416  0DB0  0604               	xorwf	4,w	;XOR again to restore value
   417  0DB1  2DAB               	goto	clrloop0	;do the next byte
   418                           
   419                           	psect	cstackBANK1
   420  00B2                     __pcstackBANK1:	
   421  00B2                     ??_main:	
   422                           
   423                           ; 1 bytes @ 0x0
   424  00B2                     	ds	16
   425                           
   426                           	psect	cstackCOMMON
   427  0070                     __pcstackCOMMON:	
   428  0070                     ?_DDS_init:	
   429  0070                     ?_data_write:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_lcd_data:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_lcd_cmd:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_lcd_init:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_lcd_clear:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_ISR:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455  0070                     	ds	3
   456  0073                     ?_spi_write:	
   457  0073                     ??_data_write:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ??___lmul:	
   461                           ; 1 bytes @ 0x3
   462                           
   463  0073                     ?___lwdiv:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0073                     ?___lwmod:	
   467                           ; 2 bytes @ 0x3
   468                           
   469  0073                     spi_write@data:	
   470                           ; 2 bytes @ 0x3
   471                           
   472  0073                     ___lwdiv@divisor:	
   473                           ; 2 bytes @ 0x3
   474                           
   475  0073                     ___lwmod@divisor:	
   476                           ; 2 bytes @ 0x3
   477                           
   478                           
   479                           ; 2 bytes @ 0x3
   480  0073                     	ds	1
   481  0074                     data_write@data:	
   482  0074                     ___lmul@product:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 4 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     ??_spi_write:	
   489  0075                     ??_lcd_data:	
   490                           ; 1 bytes @ 0x5
   491                           
   492  0075                     ??_lcd_cmd:	
   493                           ; 1 bytes @ 0x5
   494                           
   495  0075                     ___lwdiv@dividend:	
   496                           ; 1 bytes @ 0x5
   497                           
   498  0075                     ___lwmod@dividend:	
   499                           ; 2 bytes @ 0x5
   500                           
   501                           
   502                           ; 2 bytes @ 0x5
   503  0075                     	ds	1
   504  0076                     spi_write@i:	
   505  0076                     lcd_data@data:	
   506                           ; 1 bytes @ 0x6
   507                           
   508  0076                     lcd_cmd@data:	
   509                           ; 1 bytes @ 0x6
   510                           
   511                           
   512                           ; 1 bytes @ 0x6
   513  0076                     	ds	1
   514  0077                     ??_DDS_init:	
   515  0077                     ??_lcd_init:	
   516                           ; 1 bytes @ 0x7
   517                           
   518  0077                     ??_lcd_clear:	
   519                           ; 1 bytes @ 0x7
   520                           
   521  0077                     ?_send_string:	
   522                           ; 1 bytes @ 0x7
   523                           
   524  0077                     ??___lwdiv:	
   525                           ; 1 bytes @ 0x7
   526                           
   527  0077                     ??___lwmod:	
   528                           ; 1 bytes @ 0x7
   529                           
   530  0077                     send_string@s:	
   531                           ; 1 bytes @ 0x7
   532                           
   533                           
   534                           ; 2 bytes @ 0x7
   535  0077                     	ds	1
   536  0078                     ___lwmod@counter:	
   537                           
   538                           ; 1 bytes @ 0x8
   539  0078                     	ds	1
   540  0079                     ??_send_string:	
   541  0079                     ??_send_int:	
   542                           ; 1 bytes @ 0x9
   543                           
   544                           
   545                           	psect	cstackBANK0
   546  0049                     __pcstackBANK0:	
   547                           ; 1 bytes @ 0x9
   548                           
   549  0049                     ?_freq_write:	
   550  0049                     ?_phase_write:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0049                     ?___lmul:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0049                     ___lwdiv@counter:	
   557                           ; 4 bytes @ 0x0
   558                           
   559  0049                     send_string@i:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0049                     freq_write@input:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0049                     phase_write@input:	
   566                           ; 4 bytes @ 0x0
   567                           
   568  0049                     ___lmul@multiplier:	
   569                           ; 4 bytes @ 0x0
   570                           
   571                           
   572                           ; 4 bytes @ 0x0
   573  0049                     	ds	1
   574  004A                     ___lwdiv@quotient:	
   575                           
   576                           ; 2 bytes @ 0x1
   577  004A                     	ds	2
   578  004C                     ?_utoa:	
   579  004C                     utoa@val:	
   580                           ; 1 bytes @ 0x3
   581                           
   582                           
   583                           ; 2 bytes @ 0x3
   584  004C                     	ds	1
   585  004D                     ??_phase_write:	
   586  004D                     freq_write@reg:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  004D                     ___lmul@multiplicand:	
   590                           ; 1 bytes @ 0x4
   591                           
   592                           
   593                           ; 4 bytes @ 0x4
   594  004D                     	ds	1
   595  004E                     ??_freq_write:	
   596  004E                     utoa@base:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 2 bytes @ 0x5
   601  004E                     	ds	2
   602  0050                     ??_utoa:	
   603                           
   604                           ; 1 bytes @ 0x7
   605  0050                     	ds	1
   606  0051                     utoa@v:	
   607                           
   608                           ; 2 bytes @ 0x8
   609  0051                     	ds	2
   610  0053                     utoa@c:	
   611                           
   612                           ; 1 bytes @ 0xA
   613  0053                     	ds	1
   614  0054                     utoa@buf:	
   615                           
   616                           ; 1 bytes @ 0xB
   617  0054                     	ds	1
   618  0055                     ?_itoa:	
   619  0055                     itoa@val:	
   620                           ; 1 bytes @ 0xC
   621                           
   622                           
   623                           ; 2 bytes @ 0xC
   624  0055                     	ds	2
   625  0057                     itoa@base:	
   626                           
   627                           ; 2 bytes @ 0xE
   628  0057                     	ds	2
   629  0059                     ??_itoa:	
   630                           
   631                           ; 1 bytes @ 0x10
   632  0059                     	ds	2
   633  005B                     itoa@buf:	
   634                           
   635                           ; 1 bytes @ 0x12
   636  005B                     	ds	1
   637  005C                     ?_send_int:	
   638  005C                     send_int@data:	
   639                           ; 1 bytes @ 0x13
   640                           
   641                           
   642                           ; 2 bytes @ 0x13
   643  005C                     	ds	2
   644                           
   645                           	psect	maintext
   646  0024                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 16, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 326 in file "newmain.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B00/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0      16       0       0
   669 ;;      Totals:         0       0      16       0       0
   670 ;;Total ram usage:       16 bytes
   671 ;; Hardware stack levels required when called:    5
   672 ;; This function calls:
   673 ;;		_DDS_init
   674 ;;		___lmul
   675 ;;		_freq_write
   676 ;;		_lcd_clear
   677 ;;		_lcd_cmd
   678 ;;		_lcd_init
   679 ;;		_send_int
   680 ;;		_send_string
   681 ;;		_spi_write
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _main
   689  0024                     _main:	
   690                           
   691                           ;newmain.c: 329:     RESET=0xF800;
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   695  0024  3000               	movlw	0
   696  0025  1683               	bsf	3,5	;RP0=1, select bank1
   697  0026  1303               	bcf	3,6	;RP1=0, select bank1
   698  0027  00CE               	movwf	_RESET^(0+128)
   699  0028  30F8               	movlw	248
   700  0029  00CF               	movwf	(_RESET^(0+128)+1)
   701                           
   702                           ;newmain.c: 330:     UNRESET=0xC000;
   703  002A  3000               	movlw	0
   704  002B  00C8               	movwf	_UNRESET^(0+128)
   705  002C  30C0               	movlw	192
   706  002D  00C9               	movwf	(_UNRESET^(0+128)+1)
   707                           
   708                           ;newmain.c: 331:     SYNCSRC=0x9000;
   709  002E  3000               	movlw	0
   710  002F  00C6               	movwf	_SYNCSRC^(0+128)
   711  0030  3090               	movlw	144
   712  0031  00C7               	movwf	(_SYNCSRC^(0+128)+1)
   713                           
   714                           ;newmain.c: 332:     SET_0=0x6000;
   715  0032  3000               	movlw	0
   716  0033  00CC               	movwf	_SET_0^(0+128)
   717  0034  3060               	movlw	96
   718  0035  00CD               	movwf	(_SET_0^(0+128)+1)
   719                           
   720                           ;newmain.c: 333:     SET_1=0x6800;
   721  0036  3000               	movlw	0
   722  0037  00CA               	movwf	_SET_1^(0+128)
   723  0038  3068               	movlw	104
   724  0039  00CB               	movwf	(_SET_1^(0+128)+1)
   725                           
   726                           ;newmain.c: 335:     TRISC6 = 0;
   727  003A  1307               	bcf	7,6	;volatile
   728                           
   729                           ;newmain.c: 336:     TRISC5 = 0;
   730  003B  1287               	bcf	7,5	;volatile
   731                           
   732                           ;newmain.c: 337:     TRISC4 = 0;
   733  003C  1207               	bcf	7,4	;volatile
   734                           
   735                           ;newmain.c: 338:     F_FREQ = 0;
   736  003D  1283               	bcf	3,5	;RP0=0, select bank0
   737  003E  1303               	bcf	3,6	;RP1=0, select bank0
   738  003F  01C3               	clrf	_F_FREQ
   739                           
   740                           ;newmain.c: 339:     RC4 = 1;
   741  0040  1607               	bsf	7,4	;volatile
   742                           
   743                           ;newmain.c: 340:     RC6 = 1;
   744  0041  1707               	bsf	7,6	;volatile
   745                           
   746                           ;newmain.c: 343:     TRISC3=1;
   747  0042  1683               	bsf	3,5	;RP0=1, select bank1
   748  0043  1303               	bcf	3,6	;RP1=0, select bank1
   749  0044  1587               	bsf	7,3	;volatile
   750                           
   751                           ;newmain.c: 344:     TRISC1=0;
   752  0045  1087               	bcf	7,1	;volatile
   753                           
   754                           ;newmain.c: 345:     TRISB0=1;
   755  0046  1406               	bsf	6,0	;volatile
   756                           
   757                           ;newmain.c: 346:     TRISC2=1;
   758  0047  1507               	bsf	7,2	;volatile
   759                           
   760                           ;newmain.c: 347:     pos=0;
   761  0048  3000               	movlw	0
   762  0049  1283               	bcf	3,5	;RP0=0, select bank0
   763  004A  1303               	bcf	3,6	;RP1=0, select bank0
   764  004B  00A3               	movwf	_pos+3
   765  004C  3000               	movlw	0
   766  004D  00A2               	movwf	_pos+2
   767  004E  3000               	movlw	0
   768  004F  00A1               	movwf	_pos+1
   769  0050  3000               	movlw	0
   770  0051  00A0               	movwf	_pos
   771                           
   772                           ;newmain.c: 348:     last_freq=3495280;
   773  0052  3000               	movlw	0
   774  0053  1683               	bsf	3,5	;RP0=1, select bank1
   775  0054  1303               	bcf	3,6	;RP1=0, select bank1
   776  0055  00C5               	movwf	(_last_freq+3)^(0+128)
   777  0056  3035               	movlw	53
   778  0057  00C4               	movwf	(_last_freq+2)^(0+128)
   779  0058  3055               	movlw	85
   780  0059  00C3               	movwf	(_last_freq+1)^(0+128)
   781  005A  3070               	movlw	112
   782  005B  00C2               	movwf	_last_freq^(0+128)
   783                           
   784                           ;newmain.c: 350:     val0=2;
   785  005C  3000               	movlw	0
   786  005D  1283               	bcf	3,5	;RP0=0, select bank0
   787  005E  1303               	bcf	3,6	;RP1=0, select bank0
   788  005F  00E1               	movwf	_val0+3
   789  0060  3000               	movlw	0
   790  0061  00E0               	movwf	_val0+2
   791  0062  3000               	movlw	0
   792  0063  00DF               	movwf	_val0+1
   793  0064  3002               	movlw	2
   794  0065  00DE               	movwf	_val0
   795                           
   796                           ;newmain.c: 351:     val1=0;
   797  0066  3000               	movlw	0
   798  0067  00B3               	movwf	_val1+3
   799  0068  3000               	movlw	0
   800  0069  00B2               	movwf	_val1+2
   801  006A  3000               	movlw	0
   802  006B  00B1               	movwf	_val1+1
   803  006C  3000               	movlw	0
   804  006D  00B0               	movwf	_val1
   805                           
   806                           ;newmain.c: 352:     val2=0;
   807  006E  3000               	movlw	0
   808  006F  00AF               	movwf	_val2+3
   809  0070  3000               	movlw	0
   810  0071  00AE               	movwf	_val2+2
   811  0072  3000               	movlw	0
   812  0073  00AD               	movwf	_val2+1
   813  0074  3000               	movlw	0
   814  0075  00AC               	movwf	_val2
   815                           
   816                           ;newmain.c: 353:     val3=0;
   817  0076  3000               	movlw	0
   818  0077  00AB               	movwf	_val3+3
   819  0078  3000               	movlw	0
   820  0079  00AA               	movwf	_val3+2
   821  007A  3000               	movlw	0
   822  007B  00A9               	movwf	_val3+1
   823  007C  3000               	movlw	0
   824  007D  00A8               	movwf	_val3
   825                           
   826                           ;newmain.c: 354:     val4=0;
   827  007E  3000               	movlw	0
   828  007F  00A7               	movwf	_val4+3
   829  0080  3000               	movlw	0
   830  0081  00A6               	movwf	_val4+2
   831  0082  3000               	movlw	0
   832  0083  00A5               	movwf	_val4+1
   833  0084  3000               	movlw	0
   834  0085  00A4               	movwf	_val4
   835                           
   836                           ;newmain.c: 355:     lcd_init();
   837  0086  120A  118A  26FE  120A  118A  	fcall	_lcd_init
   838                           
   839                           ;newmain.c: 357:     INTEDG =0;
   840  008B  1683               	bsf	3,5	;RP0=1, select bank1
   841  008C  1303               	bcf	3,6	;RP1=0, select bank1
   842  008D  1301               	bcf	1,6	;volatile
   843                           
   844                           ;newmain.c: 358:     GIE =1;
   845  008E  178B               	bsf	11,7	;volatile
   846                           
   847                           ;newmain.c: 359:     PEIE =1;
   848  008F  170B               	bsf	11,6	;volatile
   849                           
   850                           ;newmain.c: 360:     INTF =0;
   851  0090  108B               	bcf	11,1	;volatile
   852                           
   853                           ;newmain.c: 361:     INTE =1;
   854  0091  160B               	bsf	11,4	;volatile
   855                           
   856                           ;newmain.c: 363:     lcd_clear();
   857  0092  120A  158A  25B2  120A  118A  	fcall	_lcd_clear
   858                           
   859                           ;newmain.c: 364:     send_string("20.000");
   860  0097  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   861  0098  00F7               	movwf	send_string@s
   862  0099  3080               	movlw	128
   863  009A  00F8               	movwf	send_string@s+1
   864  009B  120A  158A  2649  120A  118A  	fcall	_send_string
   865                           
   866                           ;newmain.c: 365:     lcd_cmd(0xC5);
   867  00A0  30C5               	movlw	197
   868  00A1  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
   869                           
   870                           ;newmain.c: 366:     send_string("KHz");
   871  00A6  3008               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   872  00A7  00F7               	movwf	send_string@s
   873  00A8  3080               	movlw	128
   874  00A9  00F8               	movwf	send_string@s+1
   875  00AA  120A  158A  2649  120A  118A  	fcall	_send_string
   876                           
   877                           ;newmain.c: 367:     DDS_init();
   878  00AF  120A  118A  2795  120A  118A  	fcall	_DDS_init
   879  00B4                     l2147:	
   880                           
   881                           ;newmain.c: 370:       {;newmain.c: 372:           if (val0!=last_val0){
   882  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   883  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   884  00B6  0848               	movf	_last_val0,w
   885  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   886  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   887  00B9  00B2               	movwf	??_main^(0+128)
   888  00BA  3000               	movlw	0
   889  00BB  1BB2               	btfsc	??_main^(0+128),7
   890  00BC  30FF               	movlw	255
   891  00BD  00B3               	movwf	(??_main^(0+128)+1)
   892  00BE  00B4               	movwf	(??_main^(0+128)+2)
   893  00BF  00B5               	movwf	(??_main^(0+128)+3)
   894  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   895  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   896  00C2  0861               	movf	_val0+3,w
   897  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   898  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   899  00C5  0635               	xorwf	(??_main+3)^(0+128),w
   900  00C6  1D03               	skipz
   901  00C7  28DE               	goto	u2085
   902  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   903  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   904  00CA  0860               	movf	_val0+2,w
   905  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   906  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   907  00CD  0634               	xorwf	(??_main+2)^(0+128),w
   908  00CE  1D03               	skipz
   909  00CF  28DE               	goto	u2085
   910  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   911  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   912  00D2  085F               	movf	_val0+1,w
   913  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   914  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   915  00D5  0633               	xorwf	(??_main+1)^(0+128),w
   916  00D6  1D03               	skipz
   917  00D7  28DE               	goto	u2085
   918  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   919  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   920  00DA  085E               	movf	_val0,w
   921  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   922  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   923  00DD  0632               	xorwf	??_main^(0+128),w
   924  00DE                     u2085:	
   925  00DE  1903               	skipnz
   926  00DF  2901               	goto	l2157
   927                           
   928                           ;newmain.c: 373:              lcd_cmd(0x80);
   929  00E0  3080               	movlw	128
   930  00E1  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
   931                           
   932                           ;newmain.c: 374:              send_int(val0);
   933  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   934  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   935  00E8  085F               	movf	_val0+1,w
   936  00E9  00DD               	movwf	send_int@data+1
   937  00EA  085E               	movf	_val0,w
   938  00EB  00DC               	movwf	send_int@data
   939  00EC  120A  158A  25C2  120A  118A  	fcall	_send_int
   940                           
   941                           ;newmain.c: 375:              lcd_cmd(0x10);
   942  00F1  3010               	movlw	16
   943  00F2  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
   944                           
   945                           ;newmain.c: 376:           last_val0=val0;
   946  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   947  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   948  00F9  085E               	movf	_val0,w
   949  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   950  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   951  00FC  00B2               	movwf	??_main^(0+128)
   952  00FD  0832               	movf	??_main^(0+128),w
   953  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   954  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   955  0100  00C8               	movwf	_last_val0
   956  0101                     l2157:	
   957                           
   958                           ;newmain.c: 379:             if (val1!=last_val1){
   959  0101  1283               	bcf	3,5	;RP0=0, select bank0
   960  0102  0847               	movf	_last_val1,w
   961  0103  1683               	bsf	3,5	;RP0=1, select bank1
   962  0104  1303               	bcf	3,6	;RP1=0, select bank1
   963  0105  00B2               	movwf	??_main^(0+128)
   964  0106  3000               	movlw	0
   965  0107  1BB2               	btfsc	??_main^(0+128),7
   966  0108  30FF               	movlw	255
   967  0109  00B3               	movwf	(??_main^(0+128)+1)
   968  010A  00B4               	movwf	(??_main^(0+128)+2)
   969  010B  00B5               	movwf	(??_main^(0+128)+3)
   970  010C  1283               	bcf	3,5	;RP0=0, select bank0
   971  010D  1303               	bcf	3,6	;RP1=0, select bank0
   972  010E  0833               	movf	_val1+3,w
   973  010F  1683               	bsf	3,5	;RP0=1, select bank1
   974  0110  1303               	bcf	3,6	;RP1=0, select bank1
   975  0111  0635               	xorwf	(??_main+3)^(0+128),w
   976  0112  1D03               	skipz
   977  0113  292A               	goto	u2095
   978  0114  1283               	bcf	3,5	;RP0=0, select bank0
   979  0115  1303               	bcf	3,6	;RP1=0, select bank0
   980  0116  0832               	movf	_val1+2,w
   981  0117  1683               	bsf	3,5	;RP0=1, select bank1
   982  0118  1303               	bcf	3,6	;RP1=0, select bank1
   983  0119  0634               	xorwf	(??_main+2)^(0+128),w
   984  011A  1D03               	skipz
   985  011B  292A               	goto	u2095
   986  011C  1283               	bcf	3,5	;RP0=0, select bank0
   987  011D  1303               	bcf	3,6	;RP1=0, select bank0
   988  011E  0831               	movf	_val1+1,w
   989  011F  1683               	bsf	3,5	;RP0=1, select bank1
   990  0120  1303               	bcf	3,6	;RP1=0, select bank1
   991  0121  0633               	xorwf	(??_main+1)^(0+128),w
   992  0122  1D03               	skipz
   993  0123  292A               	goto	u2095
   994  0124  1283               	bcf	3,5	;RP0=0, select bank0
   995  0125  1303               	bcf	3,6	;RP1=0, select bank0
   996  0126  0830               	movf	_val1,w
   997  0127  1683               	bsf	3,5	;RP0=1, select bank1
   998  0128  1303               	bcf	3,6	;RP1=0, select bank1
   999  0129  0632               	xorwf	??_main^(0+128),w
  1000  012A                     u2095:	
  1001  012A  1903               	skipnz
  1002  012B  294D               	goto	l2167
  1003                           
  1004                           ;newmain.c: 380:              lcd_cmd(0x81);
  1005  012C  3081               	movlw	129
  1006  012D  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1007                           
  1008                           ;newmain.c: 381:              send_int(val1);
  1009  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0134  0831               	movf	_val1+1,w
  1012  0135  00DD               	movwf	send_int@data+1
  1013  0136  0830               	movf	_val1,w
  1014  0137  00DC               	movwf	send_int@data
  1015  0138  120A  158A  25C2  120A  118A  	fcall	_send_int
  1016                           
  1017                           ;newmain.c: 382:              lcd_cmd(0x10);
  1018  013D  3010               	movlw	16
  1019  013E  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1020                           
  1021                           ;newmain.c: 383:           last_val1=val1;
  1022  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0145  0830               	movf	_val1,w
  1025  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0148  00B2               	movwf	??_main^(0+128)
  1028  0149  0832               	movf	??_main^(0+128),w
  1029  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1030  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1031  014C  00C7               	movwf	_last_val1
  1032  014D                     l2167:	
  1033                           
  1034                           ;newmain.c: 386:             if (val2!=last_val2){
  1035  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1036  014E  0846               	movf	_last_val2,w
  1037  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0151  00B2               	movwf	??_main^(0+128)
  1040  0152  3000               	movlw	0
  1041  0153  1BB2               	btfsc	??_main^(0+128),7
  1042  0154  30FF               	movlw	255
  1043  0155  00B3               	movwf	(??_main^(0+128)+1)
  1044  0156  00B4               	movwf	(??_main^(0+128)+2)
  1045  0157  00B5               	movwf	(??_main^(0+128)+3)
  1046  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1048  015A  082F               	movf	_val2+3,w
  1049  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1050  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1051  015D  0635               	xorwf	(??_main+3)^(0+128),w
  1052  015E  1D03               	skipz
  1053  015F  2976               	goto	u2105
  1054  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0162  082E               	movf	_val2+2,w
  1057  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0164  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0165  0634               	xorwf	(??_main+2)^(0+128),w
  1060  0166  1D03               	skipz
  1061  0167  2976               	goto	u2105
  1062  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1064  016A  082D               	movf	_val2+1,w
  1065  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1066  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1067  016D  0633               	xorwf	(??_main+1)^(0+128),w
  1068  016E  1D03               	skipz
  1069  016F  2976               	goto	u2105
  1070  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0172  082C               	movf	_val2,w
  1073  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1074  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1075  0175  0632               	xorwf	??_main^(0+128),w
  1076  0176                     u2105:	
  1077  0176  1903               	skipnz
  1078  0177  2999               	goto	l2177
  1079                           
  1080                           ;newmain.c: 387:              lcd_cmd(0x83);
  1081  0178  3083               	movlw	131
  1082  0179  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1083                           
  1084                           ;newmain.c: 388:              send_int(val2);
  1085  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1086  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0180  082D               	movf	_val2+1,w
  1088  0181  00DD               	movwf	send_int@data+1
  1089  0182  082C               	movf	_val2,w
  1090  0183  00DC               	movwf	send_int@data
  1091  0184  120A  158A  25C2  120A  118A  	fcall	_send_int
  1092                           
  1093                           ;newmain.c: 389:              lcd_cmd(0x10);
  1094  0189  3010               	movlw	16
  1095  018A  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1096                           
  1097                           ;newmain.c: 390:           last_val2=val2;
  1098  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0191  082C               	movf	_val2,w
  1101  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0194  00B2               	movwf	??_main^(0+128)
  1104  0195  0832               	movf	??_main^(0+128),w
  1105  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0198  00C6               	movwf	_last_val2
  1108  0199                     l2177:	
  1109                           
  1110                           ;newmain.c: 393:             if (val3!=last_val3){
  1111  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1112  019A  0845               	movf	_last_val3,w
  1113  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1114  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1115  019D  00B2               	movwf	??_main^(0+128)
  1116  019E  3000               	movlw	0
  1117  019F  1BB2               	btfsc	??_main^(0+128),7
  1118  01A0  30FF               	movlw	255
  1119  01A1  00B3               	movwf	(??_main^(0+128)+1)
  1120  01A2  00B4               	movwf	(??_main^(0+128)+2)
  1121  01A3  00B5               	movwf	(??_main^(0+128)+3)
  1122  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1123  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1124  01A6  082B               	movf	_val3+3,w
  1125  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1126  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1127  01A9  0635               	xorwf	(??_main+3)^(0+128),w
  1128  01AA  1D03               	skipz
  1129  01AB  29C2               	goto	u2115
  1130  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1131  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1132  01AE  082A               	movf	_val3+2,w
  1133  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1134  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1135  01B1  0634               	xorwf	(??_main+2)^(0+128),w
  1136  01B2  1D03               	skipz
  1137  01B3  29C2               	goto	u2115
  1138  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1139  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1140  01B6  0829               	movf	_val3+1,w
  1141  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1142  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1143  01B9  0633               	xorwf	(??_main+1)^(0+128),w
  1144  01BA  1D03               	skipz
  1145  01BB  29C2               	goto	u2115
  1146  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1147  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1148  01BE  0828               	movf	_val3,w
  1149  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1150  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1151  01C1  0632               	xorwf	??_main^(0+128),w
  1152  01C2                     u2115:	
  1153  01C2  1903               	skipnz
  1154  01C3  29E5               	goto	l2187
  1155                           
  1156                           ;newmain.c: 394:              lcd_cmd(0x84);
  1157  01C4  3084               	movlw	132
  1158  01C5  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1159                           
  1160                           ;newmain.c: 395:              send_int(val3);
  1161  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1162  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1163  01CC  0829               	movf	_val3+1,w
  1164  01CD  00DD               	movwf	send_int@data+1
  1165  01CE  0828               	movf	_val3,w
  1166  01CF  00DC               	movwf	send_int@data
  1167  01D0  120A  158A  25C2  120A  118A  	fcall	_send_int
  1168                           
  1169                           ;newmain.c: 396:              lcd_cmd(0x10);
  1170  01D5  3010               	movlw	16
  1171  01D6  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1172                           
  1173                           ;newmain.c: 397:           last_val3=val3;
  1174  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1175  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1176  01DD  0828               	movf	_val3,w
  1177  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1178  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1179  01E0  00B2               	movwf	??_main^(0+128)
  1180  01E1  0832               	movf	??_main^(0+128),w
  1181  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1182  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1183  01E4  00C5               	movwf	_last_val3
  1184  01E5                     l2187:	
  1185                           
  1186                           ;newmain.c: 400:             if (val4!=last_val4){
  1187  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1188  01E6  0844               	movf	_last_val4,w
  1189  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1190  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1191  01E9  00B2               	movwf	??_main^(0+128)
  1192  01EA  3000               	movlw	0
  1193  01EB  1BB2               	btfsc	??_main^(0+128),7
  1194  01EC  30FF               	movlw	255
  1195  01ED  00B3               	movwf	(??_main^(0+128)+1)
  1196  01EE  00B4               	movwf	(??_main^(0+128)+2)
  1197  01EF  00B5               	movwf	(??_main^(0+128)+3)
  1198  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1199  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1200  01F2  0827               	movf	_val4+3,w
  1201  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1202  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1203  01F5  0635               	xorwf	(??_main+3)^(0+128),w
  1204  01F6  1D03               	skipz
  1205  01F7  2A0E               	goto	u2125
  1206  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1207  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1208  01FA  0826               	movf	_val4+2,w
  1209  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1210  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1211  01FD  0634               	xorwf	(??_main+2)^(0+128),w
  1212  01FE  1D03               	skipz
  1213  01FF  2A0E               	goto	u2125
  1214  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0202  0825               	movf	_val4+1,w
  1217  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1219  0205  0633               	xorwf	(??_main+1)^(0+128),w
  1220  0206  1D03               	skipz
  1221  0207  2A0E               	goto	u2125
  1222  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1224  020A  0824               	movf	_val4,w
  1225  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1226  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1227  020D  0632               	xorwf	??_main^(0+128),w
  1228  020E                     u2125:	
  1229  020E  1903               	skipnz
  1230  020F  2A31               	goto	l2197
  1231                           
  1232                           ;newmain.c: 401:              lcd_cmd(0x85);
  1233  0210  3085               	movlw	133
  1234  0211  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1235                           
  1236                           ;newmain.c: 402:              send_int(val4);
  1237  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0218  0825               	movf	_val4+1,w
  1240  0219  00DD               	movwf	send_int@data+1
  1241  021A  0824               	movf	_val4,w
  1242  021B  00DC               	movwf	send_int@data
  1243  021C  120A  158A  25C2  120A  118A  	fcall	_send_int
  1244                           
  1245                           ;newmain.c: 403:              lcd_cmd(0x10);
  1246  0221  3010               	movlw	16
  1247  0222  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1248                           
  1249                           ;newmain.c: 404:           last_val4=val4;
  1250  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0229  0824               	movf	_val4,w
  1253  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1254  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1255  022C  00B2               	movwf	??_main^(0+128)
  1256  022D  0832               	movf	??_main^(0+128),w
  1257  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1258  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0230  00C4               	movwf	_last_val4
  1260  0231                     l2197:	
  1261                           
  1262                           ;newmain.c: 408:          freq=(val0*1747650)+(val1*174765)+(val2*17477)+(val3*1748)+val
      +                          4*175;
  1263  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0232  0827               	movf	_val4+3,w
  1265  0233  00CC               	movwf	___lmul@multiplier+3
  1266  0234  0826               	movf	_val4+2,w
  1267  0235  00CB               	movwf	___lmul@multiplier+2
  1268  0236  0825               	movf	_val4+1,w
  1269  0237  00CA               	movwf	___lmul@multiplier+1
  1270  0238  0824               	movf	_val4,w
  1271  0239  00C9               	movwf	___lmul@multiplier
  1272  023A  3000               	movlw	0
  1273  023B  00D0               	movwf	___lmul@multiplicand+3
  1274  023C  3000               	movlw	0
  1275  023D  00CF               	movwf	___lmul@multiplicand+2
  1276  023E  3000               	movlw	0
  1277  023F  00CE               	movwf	___lmul@multiplicand+1
  1278  0240  30AF               	movlw	175
  1279  0241  00CD               	movwf	___lmul@multiplicand
  1280  0242  120A  158A  2753  120A  118A  	fcall	___lmul
  1281  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0249  0849               	movf	?___lmul,w
  1284  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1285  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1286  024C  00B2               	movwf	??_main^(0+128)
  1287  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1288  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1289  024F  084A               	movf	?___lmul+1,w
  1290  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0252  00B3               	movwf	(??_main^(0+128)+1)
  1293  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0255  084B               	movf	?___lmul+2,w
  1296  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0258  00B4               	movwf	(??_main^(0+128)+2)
  1299  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1300  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1301  025B  084C               	movf	?___lmul+3,w
  1302  025C  1683               	bsf	3,5	;RP0=1, select bank1
  1303  025D  1303               	bcf	3,6	;RP1=0, select bank1
  1304  025E  00B5               	movwf	(??_main^(0+128)+3)
  1305  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0261  082B               	movf	_val3+3,w
  1308  0262  00CC               	movwf	___lmul@multiplier+3
  1309  0263  082A               	movf	_val3+2,w
  1310  0264  00CB               	movwf	___lmul@multiplier+2
  1311  0265  0829               	movf	_val3+1,w
  1312  0266  00CA               	movwf	___lmul@multiplier+1
  1313  0267  0828               	movf	_val3,w
  1314  0268  00C9               	movwf	___lmul@multiplier
  1315  0269  3000               	movlw	0
  1316  026A  00D0               	movwf	___lmul@multiplicand+3
  1317  026B  3000               	movlw	0
  1318  026C  00CF               	movwf	___lmul@multiplicand+2
  1319  026D  3006               	movlw	6
  1320  026E  00CE               	movwf	___lmul@multiplicand+1
  1321  026F  30D4               	movlw	212
  1322  0270  00CD               	movwf	___lmul@multiplicand
  1323  0271  120A  158A  2753  120A  118A  	fcall	___lmul
  1324  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0278  0849               	movf	?___lmul,w
  1327  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1328  027A  1303               	bcf	3,6	;RP1=0, select bank1
  1329  027B  00B6               	movwf	(??_main+4)^(0+128)
  1330  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1331  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1332  027E  084A               	movf	?___lmul+1,w
  1333  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1334  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1335  0281  00B7               	movwf	((??_main+4)^(0+128)+1)
  1336  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0284  084B               	movf	?___lmul+2,w
  1339  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1340  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1341  0287  00B8               	movwf	((??_main+4)^(0+128)+2)
  1342  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1344  028A  084C               	movf	?___lmul+3,w
  1345  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1346  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1347  028D  00B9               	movwf	((??_main+4)^(0+128)+3)
  1348  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1349  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0290  082F               	movf	_val2+3,w
  1351  0291  00CC               	movwf	___lmul@multiplier+3
  1352  0292  082E               	movf	_val2+2,w
  1353  0293  00CB               	movwf	___lmul@multiplier+2
  1354  0294  082D               	movf	_val2+1,w
  1355  0295  00CA               	movwf	___lmul@multiplier+1
  1356  0296  082C               	movf	_val2,w
  1357  0297  00C9               	movwf	___lmul@multiplier
  1358  0298  3000               	movlw	0
  1359  0299  00D0               	movwf	___lmul@multiplicand+3
  1360  029A  3000               	movlw	0
  1361  029B  00CF               	movwf	___lmul@multiplicand+2
  1362  029C  3044               	movlw	68
  1363  029D  00CE               	movwf	___lmul@multiplicand+1
  1364  029E  3045               	movlw	69
  1365  029F  00CD               	movwf	___lmul@multiplicand
  1366  02A0  120A  158A  2753  120A  118A  	fcall	___lmul
  1367  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1368  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1369  02A7  0849               	movf	?___lmul,w
  1370  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1371  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1372  02AA  00BA               	movwf	(??_main+8)^(0+128)
  1373  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1374  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1375  02AD  084A               	movf	?___lmul+1,w
  1376  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1377  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1378  02B0  00BB               	movwf	((??_main+8)^(0+128)+1)
  1379  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1380  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1381  02B3  084B               	movf	?___lmul+2,w
  1382  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1383  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1384  02B6  00BC               	movwf	((??_main+8)^(0+128)+2)
  1385  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1386  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1387  02B9  084C               	movf	?___lmul+3,w
  1388  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1389  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1390  02BC  00BD               	movwf	((??_main+8)^(0+128)+3)
  1391  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1392  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1393  02BF  0833               	movf	_val1+3,w
  1394  02C0  00CC               	movwf	___lmul@multiplier+3
  1395  02C1  0832               	movf	_val1+2,w
  1396  02C2  00CB               	movwf	___lmul@multiplier+2
  1397  02C3  0831               	movf	_val1+1,w
  1398  02C4  00CA               	movwf	___lmul@multiplier+1
  1399  02C5  0830               	movf	_val1,w
  1400  02C6  00C9               	movwf	___lmul@multiplier
  1401  02C7  3000               	movlw	0
  1402  02C8  00D0               	movwf	___lmul@multiplicand+3
  1403  02C9  3002               	movlw	2
  1404  02CA  00CF               	movwf	___lmul@multiplicand+2
  1405  02CB  30AA               	movlw	170
  1406  02CC  00CE               	movwf	___lmul@multiplicand+1
  1407  02CD  30AD               	movlw	173
  1408  02CE  00CD               	movwf	___lmul@multiplicand
  1409  02CF  120A  158A  2753  120A  118A  	fcall	___lmul
  1410  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1411  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1412  02D6  0849               	movf	?___lmul,w
  1413  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1414  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1415  02D9  00BE               	movwf	(??_main+12)^(0+128)
  1416  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1417  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1418  02DC  084A               	movf	?___lmul+1,w
  1419  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  1420  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  1421  02DF  00BF               	movwf	((??_main+12)^(0+128)+1)
  1422  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1423  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1424  02E2  084B               	movf	?___lmul+2,w
  1425  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1426  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1427  02E5  00C0               	movwf	((??_main+12)^(0+128)+2)
  1428  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1429  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1430  02E8  084C               	movf	?___lmul+3,w
  1431  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  1432  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  1433  02EB  00C1               	movwf	((??_main+12)^(0+128)+3)
  1434  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1435  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1436  02EE  0861               	movf	_val0+3,w
  1437  02EF  00CC               	movwf	___lmul@multiplier+3
  1438  02F0  0860               	movf	_val0+2,w
  1439  02F1  00CB               	movwf	___lmul@multiplier+2
  1440  02F2  085F               	movf	_val0+1,w
  1441  02F3  00CA               	movwf	___lmul@multiplier+1
  1442  02F4  085E               	movf	_val0,w
  1443  02F5  00C9               	movwf	___lmul@multiplier
  1444  02F6  3000               	movlw	0
  1445  02F7  00D0               	movwf	___lmul@multiplicand+3
  1446  02F8  301A               	movlw	26
  1447  02F9  00CF               	movwf	___lmul@multiplicand+2
  1448  02FA  30AA               	movlw	170
  1449  02FB  00CE               	movwf	___lmul@multiplicand+1
  1450  02FC  30C2               	movlw	194
  1451  02FD  00CD               	movwf	___lmul@multiplicand
  1452  02FE  120A  158A  2753  120A  118A  	fcall	___lmul
  1453  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0305  0849               	movf	?___lmul,w
  1456  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0308  07BE               	addwf	(??_main+12)^(0+128),f
  1459  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1460  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1461  030B  084A               	movf	?___lmul+1,w
  1462  030C  1803               	skipnc
  1463  030D  0F4A               	incfsz	?___lmul+1,w
  1464  030E  2B10               	goto	u2130
  1465  030F  2B13               	goto	u2131
  1466  0310                     u2130:	
  1467  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1469  0312  07BF               	addwf	((??_main+12)^(0+128)+1),f
  1470  0313                     u2131:	
  1471  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0315  084B               	movf	?___lmul+2,w
  1474  0316  1803               	skipnc
  1475  0317  0F4B               	incfsz	?___lmul+2,w
  1476  0318  2B1A               	goto	u2132
  1477  0319  2B1D               	goto	u2133
  1478  031A                     u2132:	
  1479  031A  1683               	bsf	3,5	;RP0=1, select bank1
  1480  031B  1303               	bcf	3,6	;RP1=0, select bank1
  1481  031C  07C0               	addwf	((??_main+12)^(0+128)+2),f
  1482  031D                     u2133:	
  1483  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1484  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1485  031F  084C               	movf	?___lmul+3,w
  1486  0320  1803               	skipnc
  1487  0321  0A4C               	incf	?___lmul+3,w
  1488  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0324  07C1               	addwf	((??_main+12)^(0+128)+3),f
  1491  0325  083E               	movf	(??_main+12)^(0+128),w
  1492  0326  07BA               	addwf	(??_main+8)^(0+128),f
  1493  0327  083F               	movf	(??_main+13)^(0+128),w
  1494  0328  1803               	skipnc
  1495  0329  0F3F               	incfsz	(??_main+13)^(0+128),w
  1496  032A  2B2C               	goto	u2140
  1497  032B  2B2D               	goto	u2141
  1498  032C                     u2140:	
  1499  032C  07BB               	addwf	((??_main+8)^(0+128)+1),f
  1500  032D                     u2141:	
  1501  032D  0840               	movf	(??_main+14)^(0+128),w
  1502  032E  1803               	skipnc
  1503  032F  0F40               	incfsz	(??_main+14)^(0+128),w
  1504  0330  2B32               	goto	u2142
  1505  0331  2B33               	goto	u2143
  1506  0332                     u2142:	
  1507  0332  07BC               	addwf	((??_main+8)^(0+128)+2),f
  1508  0333                     u2143:	
  1509  0333  0841               	movf	(??_main+15)^(0+128),w
  1510  0334  1803               	skipnc
  1511  0335  0A41               	incf	(??_main+15)^(0+128),w
  1512  0336  07BD               	addwf	((??_main+8)^(0+128)+3),f
  1513  0337  083A               	movf	(??_main+8)^(0+128),w
  1514  0338  07B6               	addwf	(??_main+4)^(0+128),f
  1515  0339  083B               	movf	(??_main+9)^(0+128),w
  1516  033A  1803               	skipnc
  1517  033B  0F3B               	incfsz	(??_main+9)^(0+128),w
  1518  033C  2B3E               	goto	u2150
  1519  033D  2B3F               	goto	u2151
  1520  033E                     u2150:	
  1521  033E  07B7               	addwf	((??_main+4)^(0+128)+1),f
  1522  033F                     u2151:	
  1523  033F  083C               	movf	(??_main+10)^(0+128),w
  1524  0340  1803               	skipnc
  1525  0341  0F3C               	incfsz	(??_main+10)^(0+128),w
  1526  0342  2B44               	goto	u2152
  1527  0343  2B45               	goto	u2153
  1528  0344                     u2152:	
  1529  0344  07B8               	addwf	((??_main+4)^(0+128)+2),f
  1530  0345                     u2153:	
  1531  0345  083D               	movf	(??_main+11)^(0+128),w
  1532  0346  1803               	skipnc
  1533  0347  0A3D               	incf	(??_main+11)^(0+128),w
  1534  0348  07B9               	addwf	((??_main+4)^(0+128)+3),f
  1535  0349  0836               	movf	(??_main+4)^(0+128),w
  1536  034A  07B2               	addwf	??_main^(0+128),f
  1537  034B  0837               	movf	(??_main+5)^(0+128),w
  1538  034C  1803               	skipnc
  1539  034D  0F37               	incfsz	(??_main+5)^(0+128),w
  1540  034E  2B50               	goto	u2160
  1541  034F  2B51               	goto	u2161
  1542  0350                     u2160:	
  1543  0350  07B3               	addwf	(??_main^(0+128)+1),f
  1544  0351                     u2161:	
  1545  0351  0838               	movf	(??_main+6)^(0+128),w
  1546  0352  1803               	skipnc
  1547  0353  0F38               	incfsz	(??_main+6)^(0+128),w
  1548  0354  2B56               	goto	u2162
  1549  0355  2B57               	goto	u2163
  1550  0356                     u2162:	
  1551  0356  07B4               	addwf	(??_main^(0+128)+2),f
  1552  0357                     u2163:	
  1553  0357  0839               	movf	(??_main+7)^(0+128),w
  1554  0358  1803               	skipnc
  1555  0359  0A39               	incf	(??_main+7)^(0+128),w
  1556  035A  07B5               	addwf	(??_main^(0+128)+3),f
  1557  035B  0835               	movf	(??_main+3)^(0+128),w
  1558  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1559  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1560  035E  00B7               	movwf	_freq+3
  1561  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0361  0834               	movf	(??_main+2)^(0+128),w
  1564  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0364  00B6               	movwf	_freq+2
  1567  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0367  0833               	movf	(??_main+1)^(0+128),w
  1570  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1572  036A  00B5               	movwf	_freq+1
  1573  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1574  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1575  036D  0832               	movf	??_main^(0+128),w
  1576  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1577  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0370  00B4               	movwf	_freq
  1579                           
  1580                           ;newmain.c: 411:           if (freq!=last_freq)
  1581  0371  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0372  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0373  0845               	movf	(_last_freq+3)^(0+128),w
  1584  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0376  0637               	xorwf	_freq+3,w
  1587  0377  1D03               	skipz
  1588  0378  2B8F               	goto	u2175
  1589  0379  1683               	bsf	3,5	;RP0=1, select bank1
  1590  037A  1303               	bcf	3,6	;RP1=0, select bank1
  1591  037B  0844               	movf	(_last_freq+2)^(0+128),w
  1592  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1593  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1594  037E  0636               	xorwf	_freq+2,w
  1595  037F  1D03               	skipz
  1596  0380  2B8F               	goto	u2175
  1597  0381  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0382  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0383  0843               	movf	(_last_freq+1)^(0+128),w
  1600  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0386  0635               	xorwf	_freq+1,w
  1603  0387  1D03               	skipz
  1604  0388  2B8F               	goto	u2175
  1605  0389  1683               	bsf	3,5	;RP0=1, select bank1
  1606  038A  1303               	bcf	3,6	;RP1=0, select bank1
  1607  038B  0842               	movf	_last_freq^(0+128),w
  1608  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1609  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1610  038E  0634               	xorwf	_freq,w
  1611  038F                     u2175:	
  1612  038F  1903               	skipnz
  1613  0390  2BE5               	goto	l2213
  1614                           
  1615                           ;newmain.c: 412:           {;newmain.c: 413:               if (F_FREQ==1)
  1616  0391  0343               	decf	_F_FREQ,w
  1617  0392  1D03               	btfss	3,2
  1618  0393  2BB1               	goto	l2207
  1619                           
  1620                           ;newmain.c: 414:               {;newmain.c: 415:               freq_write(freq,0);
  1621  0394  0837               	movf	_freq+3,w
  1622  0395  00CC               	movwf	freq_write@input+3
  1623  0396  0836               	movf	_freq+2,w
  1624  0397  00CB               	movwf	freq_write@input+2
  1625  0398  0835               	movf	_freq+1,w
  1626  0399  00CA               	movwf	freq_write@input+1
  1627  039A  0834               	movf	_freq,w
  1628  039B  00C9               	movwf	freq_write@input
  1629  039C  01CD               	clrf	freq_write@reg
  1630  039D  120A  118A  265F  120A  118A  	fcall	_freq_write
  1631                           
  1632                           ;newmain.c: 416:               spi_write(SET_0);
  1633  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1634  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1635  03A4  084D               	movf	(_SET_0+1)^(0+128),w
  1636  03A5  00F4               	movwf	spi_write@data+1
  1637  03A6  084C               	movf	_SET_0^(0+128),w
  1638  03A7  00F3               	movwf	spi_write@data
  1639  03A8  120A  158A  26A8  120A  118A  	fcall	_spi_write
  1640                           
  1641                           ;newmain.c: 417:               F_FREQ=0;
  1642  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1643  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1644  03AF  01C3               	clrf	_F_FREQ
  1645                           
  1646                           ;newmain.c: 418:               }
  1647  03B0  2BCF               	goto	l2211
  1648  03B1                     l2207:	
  1649                           
  1650                           ;newmain.c: 420:               {;newmain.c: 421:               freq_write(freq,1);
  1651  03B1  0837               	movf	_freq+3,w
  1652  03B2  00CC               	movwf	freq_write@input+3
  1653  03B3  0836               	movf	_freq+2,w
  1654  03B4  00CB               	movwf	freq_write@input+2
  1655  03B5  0835               	movf	_freq+1,w
  1656  03B6  00CA               	movwf	freq_write@input+1
  1657  03B7  0834               	movf	_freq,w
  1658  03B8  00C9               	movwf	freq_write@input
  1659  03B9  01CD               	clrf	freq_write@reg
  1660  03BA  0ACD               	incf	freq_write@reg,f
  1661  03BB  120A  118A  265F  120A  118A  	fcall	_freq_write
  1662                           
  1663                           ;newmain.c: 422:               spi_write(SET_1);
  1664  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1665  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1666  03C2  084B               	movf	(_SET_1+1)^(0+128),w
  1667  03C3  00F4               	movwf	spi_write@data+1
  1668  03C4  084A               	movf	_SET_1^(0+128),w
  1669  03C5  00F3               	movwf	spi_write@data
  1670  03C6  120A  158A  26A8  120A  118A  	fcall	_spi_write
  1671                           
  1672                           ;newmain.c: 423:               F_FREQ=1;
  1673  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1674  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1675  03CD  01C3               	clrf	_F_FREQ
  1676  03CE  0AC3               	incf	_F_FREQ,f
  1677  03CF                     l2211:	
  1678                           
  1679                           ;newmain.c: 425:               last_freq=freq;
  1680  03CF  0837               	movf	_freq+3,w
  1681  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1682  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1683  03D2  00C5               	movwf	(_last_freq+3)^(0+128)
  1684  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1685  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1686  03D5  0836               	movf	_freq+2,w
  1687  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1688  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1689  03D8  00C4               	movwf	(_last_freq+2)^(0+128)
  1690  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1691  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1692  03DB  0835               	movf	_freq+1,w
  1693  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  1694  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  1695  03DE  00C3               	movwf	(_last_freq+1)^(0+128)
  1696  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1697  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1698  03E1  0834               	movf	_freq,w
  1699  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1700  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1701  03E4  00C2               	movwf	_last_freq^(0+128)
  1702  03E5                     l2213:	
  1703                           
  1704                           ;newmain.c: 429:           if (RC2==0)
  1705  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1706  03E6  1907               	btfsc	7,2	;volatile
  1707  03E7  28B4               	goto	l2147
  1708                           
  1709                           ;newmain.c: 430:           {;newmain.c: 431:               _delay((unsigned long)((20000
      +                          )*(20000000/4000000.0)));
  1710  03E8  3082               	movlw	130
  1711  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1712  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1713  03EB  00B3               	movwf	(??_main^(0+128)+1)
  1714  03EC  30DD               	movlw	221
  1715  03ED  00B2               	movwf	??_main^(0+128)
  1716  03EE                     u2267:	
  1717  03EE  0BB2               	decfsz	??_main^(0+128),f
  1718  03EF  2BEE               	goto	u2267
  1719  03F0  0BB3               	decfsz	(??_main^(0+128)+1),f
  1720  03F1  2BEE               	goto	u2267
  1721                           
  1722                           ;newmain.c: 432:               if (cursor_dir==0)
  1723  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1724  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1725  03F4  0842               	movf	_cursor_dir,w
  1726  03F5  1D03               	btfss	3,2
  1727  03F6  2C34               	goto	l2233
  1728                           
  1729                           ;newmain.c: 433:             {;newmain.c: 434:               lcd_cmd(0x14);
  1730  03F7  3014               	movlw	20
  1731  03F8  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1732                           
  1733                           ;newmain.c: 435:               pos++;
  1734  03FD  3001               	movlw	1
  1735  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1736  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0400  07A0               	addwf	_pos,f
  1738  0401  3000               	movlw	0
  1739  0402  1803               	skipnc
  1740  0403  3001               	movlw	1
  1741  0404  07A1               	addwf	_pos+1,f
  1742  0405  3000               	movlw	0
  1743  0406  1803               	skipnc
  1744  0407  3001               	movlw	1
  1745  0408  07A2               	addwf	_pos+2,f
  1746  0409  3000               	movlw	0
  1747  040A  1803               	skipnc
  1748  040B  3001               	movlw	1
  1749  040C  07A3               	addwf	_pos+3,f
  1750                           
  1751                           ;newmain.c: 436:               if (pos==2)
  1752  040D  3002               	movlw	2
  1753  040E  0620               	xorwf	_pos,w
  1754  040F  0421               	iorwf	_pos+1,w
  1755  0410  0422               	iorwf	_pos+2,w
  1756  0411  0423               	iorwf	_pos+3,w
  1757  0412  1D03               	btfss	3,2
  1758  0413  2C28               	goto	l2229
  1759                           
  1760                           ;newmain.c: 437:               {;newmain.c: 438:                   pos++;
  1761  0414  3001               	movlw	1
  1762  0415  07A0               	addwf	_pos,f
  1763  0416  3000               	movlw	0
  1764  0417  1803               	skipnc
  1765  0418  3001               	movlw	1
  1766  0419  07A1               	addwf	_pos+1,f
  1767  041A  3000               	movlw	0
  1768  041B  1803               	skipnc
  1769  041C  3001               	movlw	1
  1770  041D  07A2               	addwf	_pos+2,f
  1771  041E  3000               	movlw	0
  1772  041F  1803               	skipnc
  1773  0420  3001               	movlw	1
  1774  0421  07A3               	addwf	_pos+3,f
  1775                           
  1776                           ;newmain.c: 439:                   lcd_cmd(0x14);
  1777  0422  3014               	movlw	20
  1778  0423  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1779  0428                     l2229:	
  1780                           
  1781                           ;newmain.c: 441:               if (pos==5)
  1782  0428  3005               	movlw	5
  1783  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1784  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1785  042B  0620               	xorwf	_pos,w
  1786  042C  0421               	iorwf	_pos+1,w
  1787  042D  0422               	iorwf	_pos+2,w
  1788  042E  0423               	iorwf	_pos+3,w
  1789  042F  1D03               	btfss	3,2
  1790  0430  2C67               	goto	l2247
  1791                           
  1792                           ;newmain.c: 442:               {;newmain.c: 443:                   cursor_dir=1;
  1793  0431  01C2               	clrf	_cursor_dir
  1794  0432  0AC2               	incf	_cursor_dir,f
  1795  0433  2C67               	goto	l2247
  1796  0434                     l2233:	
  1797                           
  1798                           ;newmain.c: 447:             {;newmain.c: 448:                   lcd_cmd(0x10);
  1799  0434  3010               	movlw	16
  1800  0435  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1801                           
  1802                           ;newmain.c: 449:                   pos--;
  1803  043A  30FF               	movlw	255
  1804  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1805  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1806  043D  07A0               	addwf	_pos,f
  1807  043E  30FF               	movlw	255
  1808  043F  1C03               	skipc
  1809  0440  07A1               	addwf	_pos+1,f
  1810  0441  30FF               	movlw	255
  1811  0442  1C03               	skipc
  1812  0443  07A2               	addwf	_pos+2,f
  1813  0444  30FF               	movlw	255
  1814  0445  1C03               	skipc
  1815  0446  07A3               	addwf	_pos+3,f
  1816                           
  1817                           ;newmain.c: 450:                   if(pos==2)
  1818  0447  3002               	movlw	2
  1819  0448  0620               	xorwf	_pos,w
  1820  0449  0421               	iorwf	_pos+1,w
  1821  044A  0422               	iorwf	_pos+2,w
  1822  044B  0423               	iorwf	_pos+3,w
  1823  044C  1D03               	btfss	3,2
  1824  044D  2C5F               	goto	l2243
  1825                           
  1826                           ;newmain.c: 451:                   {;newmain.c: 452:                       pos--;
  1827  044E  30FF               	movlw	255
  1828  044F  07A0               	addwf	_pos,f
  1829  0450  30FF               	movlw	255
  1830  0451  1C03               	skipc
  1831  0452  07A1               	addwf	_pos+1,f
  1832  0453  30FF               	movlw	255
  1833  0454  1C03               	skipc
  1834  0455  07A2               	addwf	_pos+2,f
  1835  0456  30FF               	movlw	255
  1836  0457  1C03               	skipc
  1837  0458  07A3               	addwf	_pos+3,f
  1838                           
  1839                           ;newmain.c: 453:                       lcd_cmd(0x10);
  1840  0459  3010               	movlw	16
  1841  045A  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  1842  045F                     l2243:	
  1843                           
  1844                           ;newmain.c: 455:                   if (pos==0)
  1845  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0461  0823               	movf	_pos+3,w
  1848  0462  0422               	iorwf	_pos+2,w
  1849  0463  0421               	iorwf	_pos+1,w
  1850  0464  0420               	iorwf	_pos,w
  1851  0465  1903               	btfsc	3,2
  1852                           
  1853                           ;newmain.c: 456:                   {;newmain.c: 457:                       cursor_dir=0;
  1854  0466  01C2               	clrf	_cursor_dir
  1855  0467                     l2247:	
  1856  0467  1907               	btfsc	7,2	;volatile
  1857  0468  28B4               	goto	l2147
  1858  0469  2C67               	goto	l2247
  1859  046A                     __end_of_main:	
  1860                           
  1861                           	psect	text1
  1862  0DC2                     __ptext1:	
  1863 ;; *************** function _send_int *****************
  1864 ;; Defined at:
  1865 ;;		line 270 in file "newmain.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  data            2   19[BANK0 ] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       2       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       2       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		_itoa
  1888 ;;		_send_string
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _send_int
  1896  0DC2                     _send_int:	
  1897                           
  1898                           ;newmain.c: 271:         itoa(buff,data,10);
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _send_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1902  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0DC4  085D               	movf	send_int@data+1,w
  1905  0DC5  00D6               	movwf	itoa@val+1
  1906  0DC6  085C               	movf	send_int@data,w
  1907  0DC7  00D5               	movwf	itoa@val
  1908  0DC8  300A               	movlw	10
  1909  0DC9  00D7               	movwf	itoa@base
  1910  0DCA  3000               	movlw	0
  1911  0DCB  00D8               	movwf	itoa@base+1
  1912  0DCC  30AA               	movlw	(low (_buff| 0))& (0+255)
  1913  0DCD  120A  158A  25FB  120A  158A  	fcall	_itoa
  1914                           
  1915                           ;newmain.c: 272:         send_string(buff);
  1916  0DD2  30AA               	movlw	(low (_buff| 0))& (0+255)
  1917  0DD3  00F7               	movwf	send_string@s
  1918  0DD4  3000               	movlw	0
  1919  0DD5  00F8               	movwf	send_string@s+1
  1920  0DD6  120A  158A  2649   	fcall	_send_string
  1921  0DD9  0008               	return
  1922  0DDA                     __end_of_send_int:	
  1923                           
  1924                           	psect	text2
  1925  0E49                     __ptext2:	
  1926 ;; *************** function _send_string *****************
  1927 ;; Defined at:
  1928 ;;		line 263 in file "newmain.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  s               2    7[COMMON] PTR const unsigned char 
  1931 ;;		 -> STR_2(4), STR_1(7), buff(8), 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  i               2    0[BANK0 ] unsigned int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         2       0       0       0       0
  1944 ;;      Locals:         0       2       0       0       0
  1945 ;;      Temps:          0       0       0       0       0
  1946 ;;      Totals:         2       2       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    3
  1950 ;; This function calls:
  1951 ;;		_lcd_data
  1952 ;; This function is called by:
  1953 ;;		_send_int
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _send_string
  1960  0E49                     _send_string:	
  1961                           
  1962                           ;newmain.c: 263: void send_string(const char *s);newmain.c: 264: {;newmain.c: 265:      
      +                           unsigned int i=0;
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1966  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0E4B  01C9               	clrf	send_string@i
  1969  0E4C  01CA               	clrf	send_string@i+1
  1970  0E4D                     l2021:	
  1971                           ;newmain.c: 266:       for(;s[i]!=0;i++) lcd_data(s[i]);
  1972                           
  1973  0E4D  0849               	movf	send_string@i,w
  1974  0E4E  0777               	addwf	send_string@s,w
  1975  0E4F  0084               	movwf	4
  1976  0E50  0878               	movf	send_string@s+1,w
  1977  0E51  1803               	skipnc
  1978  0E52  0A78               	incf	send_string@s+1,w
  1979  0E53  00FF               	movwf	127
  1980  0E54  120A  158A  2000  120A  158A  	fcall	stringtab
  1981  0E59  3A00               	xorlw	0
  1982  0E5A  1903               	btfsc	3,2
  1983  0E5B  0008               	return
  1984  0E5C  0849               	movf	send_string@i,w
  1985  0E5D  0777               	addwf	send_string@s,w
  1986  0E5E  0084               	movwf	4
  1987  0E5F  0878               	movf	send_string@s+1,w
  1988  0E60  1803               	skipnc
  1989  0E61  0A78               	incf	send_string@s+1,w
  1990  0E62  00FF               	movwf	127
  1991  0E63  120A  158A  2000  120A  158A  	fcall	stringtab
  1992  0E68  120A  118A  27DF  120A  158A  	fcall	_lcd_data
  1993  0E6D  3001               	movlw	1
  1994  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0E70  07C9               	addwf	send_string@i,f
  1997  0E71  1803               	skipnc
  1998  0E72  0ACA               	incf	send_string@i+1,f
  1999  0E73  3000               	movlw	0
  2000  0E74  07CA               	addwf	send_string@i+1,f
  2001  0E75  2E4D               	goto	l2021
  2002  0E76                     __end_of_send_string:	
  2003                           
  2004                           	psect	text3
  2005  07DF                     __ptext3:	
  2006 ;; *************** function _lcd_data *****************
  2007 ;; Defined at:
  2008 ;;		line 188 in file "newmain.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  data            1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  data            1    6[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0
  2024 ;;      Temps:          1       0       0       0       0
  2025 ;;      Totals:         2       0       0       0       0
  2026 ;;Total ram usage:        2 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    2
  2029 ;; This function calls:
  2030 ;;		_data_write
  2031 ;; This function is called by:
  2032 ;;		_send_string
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _lcd_data
  2038  07DF                     _lcd_data:	
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2042                           ;lcd_data@data stored from wreg
  2043  07DF  00F6               	movwf	lcd_data@data
  2044                           
  2045                           ;newmain.c: 188: void lcd_data( unsigned char data);newmain.c: 189: {;newmain.c: 190:   
      +                            RC7=1;
  2046  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2047  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2048  07E2  1787               	bsf	7,7	;volatile
  2049                           
  2050                           ;newmain.c: 191:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2051  07E3  30F9               	movlw	249
  2052  07E4  00F5               	movwf	??_lcd_data
  2053  07E5                     u2277:	
  2054  07E5  0BF5               	decfsz	??_lcd_data,f
  2055  07E6  2FE5               	goto	u2277
  2056  07E7  2FE8               	nop2
  2057                           
  2058                           ;newmain.c: 192:     data_write(data>>4);
  2059  07E8  0876               	movf	lcd_data@data,w
  2060  07E9  00F5               	movwf	??_lcd_data
  2061  07EA  3004               	movlw	4
  2062  07EB                     u1905:	
  2063  07EB  1003               	clrc
  2064  07EC  0CF5               	rrf	??_lcd_data,f
  2065  07ED  3EFF               	addlw	-1
  2066  07EE  1D03               	skipz
  2067  07EF  2FEB               	goto	u1905
  2068  07F0  0875               	movf	??_lcd_data,w
  2069  07F1  120A  158A  261D  120A  118A  	fcall	_data_write
  2070                           
  2071                           ;newmain.c: 193:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2072  07F6  30F9               	movlw	249
  2073  07F7  00F5               	movwf	??_lcd_data
  2074  07F8                     u2287:	
  2075  07F8  0BF5               	decfsz	??_lcd_data,f
  2076  07F9  2FF8               	goto	u2287
  2077  07FA  2FFB               	nop2
  2078                           
  2079                           ;newmain.c: 194:     data_write(data);
  2080  07FB  0876               	movf	lcd_data@data,w
  2081  07FC  120A  158A  261D   	fcall	_data_write
  2082  07FF  0008               	return
  2083  0800                     __end_of_lcd_data:	
  2084                           
  2085                           	psect	text4
  2086  0DFB                     __ptext4:	
  2087 ;; *************** function _itoa *****************
  2088 ;; Defined at:
  2089 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  buf             1    wreg     PTR unsigned char 
  2092 ;;		 -> buff(8), 
  2093 ;;  val             2   12[BANK0 ] int 
  2094 ;;  base            2   14[BANK0 ] int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  buf             1   18[BANK0 ] PTR unsigned char 
  2097 ;;		 -> buff(8), 
  2098 ;;  cp              1    0        PTR unsigned char 
  2099 ;;		 -> buff(8), 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      PTR unsigned char 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         0       4       0       0       0
  2110 ;;      Locals:         0       2       0       0       0
  2111 ;;      Temps:          0       1       0       0       0
  2112 ;;      Totals:         0       7       0       0       0
  2113 ;;Total ram usage:        7 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    3
  2116 ;; This function calls:
  2117 ;;		_utoa
  2118 ;; This function is called by:
  2119 ;;		_send_int
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _itoa
  2125  0DFB                     _itoa:	
  2126                           
  2127                           ;incstack = 0
  2128                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2129                           ;itoa@buf stored from wreg
  2130  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0DFD  00DB               	movwf	itoa@buf
  2133  0DFE  1FD6               	btfss	itoa@val+1,7
  2134  0DFF  2E10               	goto	l2033
  2135  0E00  302D               	movlw	45
  2136  0E01  00D9               	movwf	??_itoa
  2137  0E02  085B               	movf	itoa@buf,w
  2138  0E03  0084               	movwf	4
  2139  0E04  0859               	movf	??_itoa,w
  2140  0E05  1383               	bcf	3,7	;select IRP bank0
  2141  0E06  0080               	movwf	0
  2142  0E07  3001               	movlw	1
  2143  0E08  00D9               	movwf	??_itoa
  2144  0E09  0859               	movf	??_itoa,w
  2145  0E0A  07DB               	addwf	itoa@buf,f
  2146  0E0B  09D5               	comf	itoa@val,f
  2147  0E0C  09D6               	comf	itoa@val+1,f
  2148  0E0D  0AD5               	incf	itoa@val,f
  2149  0E0E  1903               	skipnz
  2150  0E0F  0AD6               	incf	itoa@val+1,f
  2151  0E10                     l2033:	
  2152  0E10  0856               	movf	itoa@val+1,w
  2153  0E11  00CD               	movwf	utoa@val+1
  2154  0E12  0855               	movf	itoa@val,w
  2155  0E13  00CC               	movwf	utoa@val
  2156  0E14  0858               	movf	itoa@base+1,w
  2157  0E15  00CF               	movwf	utoa@base+1
  2158  0E16  0857               	movf	itoa@base,w
  2159  0E17  00CE               	movwf	utoa@base
  2160  0E18  085B               	movf	itoa@buf,w
  2161  0E19  120A  158A  2794   	fcall	_utoa
  2162  0E1C  0008               	return
  2163  0E1D                     __end_of_itoa:	
  2164                           
  2165                           	psect	text5
  2166  0F94                     __ptext5:	
  2167 ;; *************** function _utoa *****************
  2168 ;; Defined at:
  2169 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\itoa.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  buf             1    wreg     PTR unsigned char 
  2172 ;;		 -> buff(8), 
  2173 ;;  val             2    3[BANK0 ] unsigned int 
  2174 ;;  base            2    5[BANK0 ] int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  2177 ;;		 -> buff(8), 
  2178 ;;  v               2    8[BANK0 ] unsigned int 
  2179 ;;  c               1   10[BANK0 ] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      PTR unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       4       0       0       0
  2190 ;;      Locals:         0       4       0       0       0
  2191 ;;      Temps:          0       1       0       0       0
  2192 ;;      Totals:         0       9       0       0       0
  2193 ;;Total ram usage:        9 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    2
  2196 ;; This function calls:
  2197 ;;		___lwdiv
  2198 ;;		___lwmod
  2199 ;; This function is called by:
  2200 ;;		_itoa
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _utoa
  2206  0F94                     _utoa:	
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2210                           ;utoa@buf stored from wreg
  2211  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0F96  00D4               	movwf	utoa@buf
  2214  0F97  084D               	movf	utoa@val+1,w
  2215  0F98  00D2               	movwf	utoa@v+1
  2216  0F99  084C               	movf	utoa@val,w
  2217  0F9A  00D1               	movwf	utoa@v
  2218  0F9B                     l1937:	
  2219  0F9B  084F               	movf	utoa@base+1,w
  2220  0F9C  00F4               	movwf	___lwdiv@divisor+1
  2221  0F9D  084E               	movf	utoa@base,w
  2222  0F9E  00F3               	movwf	___lwdiv@divisor
  2223  0F9F  0852               	movf	utoa@v+1,w
  2224  0FA0  00F6               	movwf	___lwdiv@dividend+1
  2225  0FA1  0851               	movf	utoa@v,w
  2226  0FA2  00F5               	movwf	___lwdiv@dividend
  2227  0FA3  120A  158A  2715  120A  158A  	fcall	___lwdiv
  2228  0FA8  0874               	movf	?___lwdiv+1,w
  2229  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0FAB  00D2               	movwf	utoa@v+1
  2232  0FAC  0873               	movf	?___lwdiv,w
  2233  0FAD  00D1               	movwf	utoa@v
  2234  0FAE  3001               	movlw	1
  2235  0FAF  00D0               	movwf	??_utoa
  2236  0FB0  0850               	movf	??_utoa,w
  2237  0FB1  07D4               	addwf	utoa@buf,f
  2238  0FB2  0851               	movf	utoa@v,w
  2239  0FB3  0452               	iorwf	utoa@v+1,w
  2240  0FB4  1D03               	btfss	3,2
  2241  0FB5  2F9B               	goto	l1937
  2242  0FB6  0854               	movf	utoa@buf,w
  2243  0FB7  0084               	movwf	4
  2244  0FB8  1383               	bcf	3,7	;select IRP bank0
  2245  0FB9  0180               	clrf	0
  2246  0FBA  3001               	movlw	1
  2247  0FBB  02D4               	subwf	utoa@buf,f
  2248  0FBC                     l1947:	
  2249  0FBC  084F               	movf	utoa@base+1,w
  2250  0FBD  00F4               	movwf	___lwmod@divisor+1
  2251  0FBE  084E               	movf	utoa@base,w
  2252  0FBF  00F3               	movwf	___lwmod@divisor
  2253  0FC0  084D               	movf	utoa@val+1,w
  2254  0FC1  00F6               	movwf	___lwmod@dividend+1
  2255  0FC2  084C               	movf	utoa@val,w
  2256  0FC3  00F5               	movwf	___lwmod@dividend
  2257  0FC4  120A  158A  2676  120A  158A  	fcall	___lwmod
  2258  0FC9  0873               	movf	?___lwmod,w
  2259  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0FCC  00D0               	movwf	??_utoa
  2262  0FCD  0850               	movf	??_utoa,w
  2263  0FCE  00D3               	movwf	utoa@c
  2264  0FCF  084F               	movf	utoa@base+1,w
  2265  0FD0  00F4               	movwf	___lwdiv@divisor+1
  2266  0FD1  084E               	movf	utoa@base,w
  2267  0FD2  00F3               	movwf	___lwdiv@divisor
  2268  0FD3  084D               	movf	utoa@val+1,w
  2269  0FD4  00F6               	movwf	___lwdiv@dividend+1
  2270  0FD5  084C               	movf	utoa@val,w
  2271  0FD6  00F5               	movwf	___lwdiv@dividend
  2272  0FD7  120A  158A  2715  120A  158A  	fcall	___lwdiv
  2273  0FDC  0874               	movf	?___lwdiv+1,w
  2274  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0FDF  00CD               	movwf	utoa@val+1
  2277  0FE0  0873               	movf	?___lwdiv,w
  2278  0FE1  00CC               	movwf	utoa@val
  2279  0FE2  300A               	movlw	10
  2280  0FE3  0253               	subwf	utoa@c,w
  2281  0FE4  1C03               	skipc
  2282  0FE5  2FEA               	goto	l801
  2283  0FE6  3007               	movlw	7
  2284  0FE7  00D0               	movwf	??_utoa
  2285  0FE8  0850               	movf	??_utoa,w
  2286  0FE9  07D3               	addwf	utoa@c,f
  2287  0FEA                     l801:	
  2288  0FEA  3030               	movlw	48
  2289  0FEB  00D0               	movwf	??_utoa
  2290  0FEC  0850               	movf	??_utoa,w
  2291  0FED  07D3               	addwf	utoa@c,f
  2292  0FEE  0853               	movf	utoa@c,w
  2293  0FEF  00D0               	movwf	??_utoa
  2294  0FF0  0854               	movf	utoa@buf,w
  2295  0FF1  0084               	movwf	4
  2296  0FF2  0850               	movf	??_utoa,w
  2297  0FF3  1383               	bcf	3,7	;select IRP bank0
  2298  0FF4  0080               	movwf	0
  2299  0FF5  3001               	movlw	1
  2300  0FF6  02D4               	subwf	utoa@buf,f
  2301  0FF7  084C               	movf	utoa@val,w
  2302  0FF8  044D               	iorwf	utoa@val+1,w
  2303  0FF9  1D03               	btfss	3,2
  2304  0FFA  2FBC               	goto	l1947
  2305                           
  2306                           ;	Return value of _utoa is never used
  2307  0FFB  3001               	movlw	1
  2308  0FFC  00D0               	movwf	??_utoa
  2309  0FFD  0850               	movf	??_utoa,w
  2310  0FFE  07D4               	addwf	utoa@buf,f
  2311  0FFF  0008               	return
  2312  1000                     __end_of_utoa:	
  2313                           
  2314                           	psect	text6
  2315  0E76                     __ptext6:	
  2316 ;; *************** function ___lwmod *****************
  2317 ;; Defined at:
  2318 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  divisor         2    3[COMMON] unsigned int 
  2321 ;;  dividend        2    5[COMMON] unsigned int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  counter         1    8[COMMON] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2    3[COMMON] unsigned int 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         4       0       0       0       0
  2334 ;;      Locals:         1       0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0
  2336 ;;      Totals:         6       0       0       0       0
  2337 ;;Total ram usage:        6 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_utoa
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function ___lwmod
  2349  0E76                     ___lwmod:	
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2353  0E76  0873               	movf	___lwmod@divisor,w
  2354  0E77  0474               	iorwf	___lwmod@divisor+1,w
  2355  0E78  1903               	btfsc	3,2
  2356  0E79  2EA3               	goto	l1435
  2357  0E7A  01F8               	clrf	___lwmod@counter
  2358  0E7B  0AF8               	incf	___lwmod@counter,f
  2359  0E7C                     l1425:	
  2360  0E7C  1BF4               	btfsc	___lwmod@divisor+1,7
  2361  0E7D  2E8A               	goto	l1427
  2362  0E7E  3001               	movlw	1
  2363  0E7F                     u1025:	
  2364  0E7F  1003               	clrc
  2365  0E80  0DF3               	rlf	___lwmod@divisor,f
  2366  0E81  0DF4               	rlf	___lwmod@divisor+1,f
  2367  0E82  3EFF               	addlw	-1
  2368  0E83  1D03               	skipz
  2369  0E84  2E7F               	goto	u1025
  2370  0E85  3001               	movlw	1
  2371  0E86  00F7               	movwf	??___lwmod
  2372  0E87  0877               	movf	??___lwmod,w
  2373  0E88  07F8               	addwf	___lwmod@counter,f
  2374  0E89  2E7C               	goto	l1425
  2375  0E8A                     l1427:	
  2376  0E8A  0874               	movf	___lwmod@divisor+1,w
  2377  0E8B  0276               	subwf	___lwmod@dividend+1,w
  2378  0E8C  1D03               	skipz
  2379  0E8D  2E90               	goto	u1045
  2380  0E8E  0873               	movf	___lwmod@divisor,w
  2381  0E8F  0275               	subwf	___lwmod@dividend,w
  2382  0E90                     u1045:	
  2383  0E90  1C03               	skipc
  2384  0E91  2E98               	goto	l1431
  2385  0E92  0873               	movf	___lwmod@divisor,w
  2386  0E93  02F5               	subwf	___lwmod@dividend,f
  2387  0E94  0874               	movf	___lwmod@divisor+1,w
  2388  0E95  1C03               	skipc
  2389  0E96  03F6               	decf	___lwmod@dividend+1,f
  2390  0E97  02F6               	subwf	___lwmod@dividend+1,f
  2391  0E98                     l1431:	
  2392  0E98  3001               	movlw	1
  2393  0E99                     u1055:	
  2394  0E99  1003               	clrc
  2395  0E9A  0CF4               	rrf	___lwmod@divisor+1,f
  2396  0E9B  0CF3               	rrf	___lwmod@divisor,f
  2397  0E9C  3EFF               	addlw	-1
  2398  0E9D  1D03               	skipz
  2399  0E9E  2E99               	goto	u1055
  2400  0E9F  3001               	movlw	1
  2401  0EA0  02F8               	subwf	___lwmod@counter,f
  2402  0EA1  1D03               	btfss	3,2
  2403  0EA2  2E8A               	goto	l1427
  2404  0EA3                     l1435:	
  2405  0EA3  0876               	movf	___lwmod@dividend+1,w
  2406  0EA4  00F4               	movwf	?___lwmod+1
  2407  0EA5  0875               	movf	___lwmod@dividend,w
  2408  0EA6  00F3               	movwf	?___lwmod
  2409  0EA7  0008               	return
  2410  0EA8                     __end_of___lwmod:	
  2411                           
  2412                           	psect	text7
  2413  0F15                     __ptext7:	
  2414 ;; *************** function ___lwdiv *****************
  2415 ;; Defined at:
  2416 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  divisor         2    3[COMMON] unsigned int 
  2419 ;;  dividend        2    5[COMMON] unsigned int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  quotient        2    1[BANK0 ] unsigned int 
  2422 ;;  counter         1    0[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  2    3[COMMON] unsigned int 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         4       0       0       0       0
  2433 ;;      Locals:         0       3       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         5       3       0       0       0
  2436 ;;Total ram usage:        8 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_utoa
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function ___lwdiv
  2448  0F15                     ___lwdiv:	
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2452  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0F17  01CA               	clrf	___lwdiv@quotient
  2455  0F18  01CB               	clrf	___lwdiv@quotient+1
  2456  0F19  0873               	movf	___lwdiv@divisor,w
  2457  0F1A  0474               	iorwf	___lwdiv@divisor+1,w
  2458  0F1B  1903               	btfsc	3,2
  2459  0F1C  2F4E               	goto	l1923
  2460  0F1D  01C9               	clrf	___lwdiv@counter
  2461  0F1E  0AC9               	incf	___lwdiv@counter,f
  2462  0F1F                     l1911:	
  2463  0F1F  1BF4               	btfsc	___lwdiv@divisor+1,7
  2464  0F20  2F2D               	goto	l1913
  2465  0F21  3001               	movlw	1
  2466  0F22                     u1845:	
  2467  0F22  1003               	clrc
  2468  0F23  0DF3               	rlf	___lwdiv@divisor,f
  2469  0F24  0DF4               	rlf	___lwdiv@divisor+1,f
  2470  0F25  3EFF               	addlw	-1
  2471  0F26  1D03               	skipz
  2472  0F27  2F22               	goto	u1845
  2473  0F28  3001               	movlw	1
  2474  0F29  00F7               	movwf	??___lwdiv
  2475  0F2A  0877               	movf	??___lwdiv,w
  2476  0F2B  07C9               	addwf	___lwdiv@counter,f
  2477  0F2C  2F1F               	goto	l1911
  2478  0F2D                     l1913:	
  2479  0F2D  3001               	movlw	1
  2480  0F2E                     u1865:	
  2481  0F2E  1003               	clrc
  2482  0F2F  0DCA               	rlf	___lwdiv@quotient,f
  2483  0F30  0DCB               	rlf	___lwdiv@quotient+1,f
  2484  0F31  3EFF               	addlw	-1
  2485  0F32  1D03               	skipz
  2486  0F33  2F2E               	goto	u1865
  2487  0F34  0874               	movf	___lwdiv@divisor+1,w
  2488  0F35  0276               	subwf	___lwdiv@dividend+1,w
  2489  0F36  1D03               	skipz
  2490  0F37  2F3A               	goto	u1875
  2491  0F38  0873               	movf	___lwdiv@divisor,w
  2492  0F39  0275               	subwf	___lwdiv@dividend,w
  2493  0F3A                     u1875:	
  2494  0F3A  1C03               	skipc
  2495  0F3B  2F43               	goto	l1919
  2496  0F3C  0873               	movf	___lwdiv@divisor,w
  2497  0F3D  02F5               	subwf	___lwdiv@dividend,f
  2498  0F3E  0874               	movf	___lwdiv@divisor+1,w
  2499  0F3F  1C03               	skipc
  2500  0F40  03F6               	decf	___lwdiv@dividend+1,f
  2501  0F41  02F6               	subwf	___lwdiv@dividend+1,f
  2502  0F42  144A               	bsf	___lwdiv@quotient,0
  2503  0F43                     l1919:	
  2504  0F43  3001               	movlw	1
  2505  0F44                     u1885:	
  2506  0F44  1003               	clrc
  2507  0F45  0CF4               	rrf	___lwdiv@divisor+1,f
  2508  0F46  0CF3               	rrf	___lwdiv@divisor,f
  2509  0F47  3EFF               	addlw	-1
  2510  0F48  1D03               	skipz
  2511  0F49  2F44               	goto	u1885
  2512  0F4A  3001               	movlw	1
  2513  0F4B  02C9               	subwf	___lwdiv@counter,f
  2514  0F4C  1D03               	btfss	3,2
  2515  0F4D  2F2D               	goto	l1913
  2516  0F4E                     l1923:	
  2517  0F4E  084B               	movf	___lwdiv@quotient+1,w
  2518  0F4F  00F4               	movwf	?___lwdiv+1
  2519  0F50  084A               	movf	___lwdiv@quotient,w
  2520  0F51  00F3               	movwf	?___lwdiv
  2521  0F52  0008               	return
  2522  0F53                     __end_of___lwdiv:	
  2523                           
  2524                           	psect	text8
  2525  06FE                     __ptext8:	
  2526 ;; *************** function _lcd_init *****************
  2527 ;; Defined at:
  2528 ;;		line 208 in file "newmain.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0
  2544 ;;      Temps:          2       0       0       0       0
  2545 ;;      Totals:         2       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    3
  2549 ;; This function calls:
  2550 ;;		_data_write
  2551 ;;		_lcd_cmd
  2552 ;; This function is called by:
  2553 ;;		_main
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _lcd_init
  2559  06FE                     _lcd_init:	
  2560                           
  2561                           ;newmain.c: 210:     TRISB1=0;
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2565  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  2566  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0700  1086               	bcf	6,1	;volatile
  2568                           
  2569                           ;newmain.c: 211:     TRISB2=0;
  2570  0701  1106               	bcf	6,2	;volatile
  2571                           
  2572                           ;newmain.c: 212:     TRISB3=0;
  2573  0702  1186               	bcf	6,3	;volatile
  2574                           
  2575                           ;newmain.c: 213:     TRISB4=0;
  2576  0703  1206               	bcf	6,4	;volatile
  2577                           
  2578                           ;newmain.c: 214:     TRISB5=0;
  2579  0704  1286               	bcf	6,5	;volatile
  2580                           
  2581                           ;newmain.c: 215:     TRISC7=0;
  2582  0705  1387               	bcf	7,7	;volatile
  2583                           
  2584                           ;newmain.c: 216:     ANS8=0;
  2585  0706  1683               	bsf	3,5	;RP0=1, select bank3
  2586  0707  1703               	bsf	3,6	;RP1=1, select bank3
  2587  0708  1009               	bcf	9,0	;volatile
  2588                           
  2589                           ;newmain.c: 217:     ANS9=0;
  2590  0709  1089               	bcf	9,1	;volatile
  2591                           
  2592                           ;newmain.c: 218:     ANS10=0;
  2593  070A  1109               	bcf	9,2	;volatile
  2594                           
  2595                           ;newmain.c: 219:     ANS12=0;
  2596  070B  1209               	bcf	9,4	;volatile
  2597                           
  2598                           ;newmain.c: 220:     ANS13=0;
  2599  070C  1289               	bcf	9,5	;volatile
  2600                           
  2601                           ;newmain.c: 221:     ANS11=0;
  2602  070D  1189               	bcf	9,3	;volatile
  2603                           
  2604                           ;newmain.c: 222:     RB5=0;
  2605  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2606  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0710  1286               	bcf	6,5	;volatile
  2608                           
  2609                           ;newmain.c: 223:     RB4=0;
  2610  0711  1206               	bcf	6,4	;volatile
  2611                           
  2612                           ;newmain.c: 224:     RB3=0;
  2613  0712  1186               	bcf	6,3	;volatile
  2614                           
  2615                           ;newmain.c: 225:     RB2=0;
  2616  0713  1106               	bcf	6,2	;volatile
  2617                           
  2618                           ;newmain.c: 226:     RB1=0;
  2619  0714  1086               	bcf	6,1	;volatile
  2620                           
  2621                           ;newmain.c: 227:     RC7=0;
  2622  0715  1387               	bcf	7,7	;volatile
  2623                           
  2624                           ;newmain.c: 230:     _delay((unsigned long)((30000)*(20000000/4000000.0)));
  2625  0716  30C3               	movlw	195
  2626  0717  00F8               	movwf	??_lcd_init+1
  2627  0718  30CD               	movlw	205
  2628  0719  00F7               	movwf	??_lcd_init
  2629  071A                     u2297:	
  2630  071A  0BF7               	decfsz	??_lcd_init,f
  2631  071B  2F1A               	goto	u2297
  2632  071C  0BF8               	decfsz	??_lcd_init+1,f
  2633  071D  2F1A               	goto	u2297
  2634                           
  2635                           ;newmain.c: 232:     data_write(0x03);
  2636  071E  3003               	movlw	3
  2637  071F  120A  158A  261D  120A  118A  	fcall	_data_write
  2638                           
  2639                           ;newmain.c: 233:     _delay((unsigned long)((7000)*(20000000/4000000.0)));
  2640  0724  302E               	movlw	46
  2641  0725  00F8               	movwf	??_lcd_init+1
  2642  0726  3073               	movlw	115
  2643  0727  00F7               	movwf	??_lcd_init
  2644  0728                     u2307:	
  2645  0728  0BF7               	decfsz	??_lcd_init,f
  2646  0729  2F28               	goto	u2307
  2647  072A  0BF8               	decfsz	??_lcd_init+1,f
  2648  072B  2F28               	goto	u2307
  2649                           
  2650                           ;newmain.c: 235:     data_write(0x03);
  2651  072C  3003               	movlw	3
  2652  072D  120A  158A  261D  120A  118A  	fcall	_data_write
  2653                           
  2654                           ;newmain.c: 237:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2655  0732  3004               	movlw	4
  2656  0733  00F8               	movwf	??_lcd_init+1
  2657  0734  303D               	movlw	61
  2658  0735  00F7               	movwf	??_lcd_init
  2659  0736                     u2317:	
  2660  0736  0BF7               	decfsz	??_lcd_init,f
  2661  0737  2F36               	goto	u2317
  2662  0738  0BF8               	decfsz	??_lcd_init+1,f
  2663  0739  2F36               	goto	u2317
  2664  073A  2F3B               	nop2
  2665                           
  2666                           ;newmain.c: 239:     data_write(0x03);
  2667  073B  3003               	movlw	3
  2668  073C  120A  158A  261D  120A  118A  	fcall	_data_write
  2669                           
  2670                           ;newmain.c: 240:     _delay((unsigned long)((850)*(20000000/4000000.0)));
  2671  0741  3006               	movlw	6
  2672  0742  00F8               	movwf	??_lcd_init+1
  2673  0743  3083               	movlw	131
  2674  0744  00F7               	movwf	??_lcd_init
  2675  0745                     u2327:	
  2676  0745  0BF7               	decfsz	??_lcd_init,f
  2677  0746  2F45               	goto	u2327
  2678  0747  0BF8               	decfsz	??_lcd_init+1,f
  2679  0748  2F45               	goto	u2327
  2680  0749  2F4A               	nop2
  2681                           
  2682                           ;newmain.c: 242:     data_write(0x02);
  2683  074A  3002               	movlw	2
  2684  074B  120A  158A  261D  120A  118A  	fcall	_data_write
  2685                           
  2686                           ;newmain.c: 243:     _delay((unsigned long)((400)*(20000000/4000000.0)));
  2687  0750  3003               	movlw	3
  2688  0751  00F8               	movwf	??_lcd_init+1
  2689  0752  3097               	movlw	151
  2690  0753  00F7               	movwf	??_lcd_init
  2691  0754                     u2337:	
  2692  0754  0BF7               	decfsz	??_lcd_init,f
  2693  0755  2F54               	goto	u2337
  2694  0756  0BF8               	decfsz	??_lcd_init+1,f
  2695  0757  2F54               	goto	u2337
  2696  0758  2F59               	nop2
  2697                           
  2698                           ;newmain.c: 245:     lcd_cmd(0x28);
  2699  0759  3028               	movlw	40
  2700  075A  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  2701                           
  2702                           ;newmain.c: 246:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  2703  075F  30D6               	movlw	214
  2704  0760  00F7               	movwf	??_lcd_init
  2705  0761                     u2347:	
  2706  0761  2F62               	nop2
  2707  0762  2F63               	nop2
  2708  0763  0BF7               	decfsz	??_lcd_init,f
  2709  0764  2F61               	goto	u2347
  2710  0765  0000               	nop
  2711                           
  2712                           ;newmain.c: 247:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  2713  0766  30D6               	movlw	214
  2714  0767  00F7               	movwf	??_lcd_init
  2715  0768                     u2357:	
  2716  0768  2F69               	nop2
  2717  0769  2F6A               	nop2
  2718  076A  0BF7               	decfsz	??_lcd_init,f
  2719  076B  2F68               	goto	u2357
  2720  076C  0000               	nop
  2721                           
  2722                           ;newmain.c: 248:     lcd_cmd(0x0E);
  2723  076D  300E               	movlw	14
  2724  076E  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  2725                           
  2726                           ;newmain.c: 249:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  2727  0773  30D6               	movlw	214
  2728  0774  00F7               	movwf	??_lcd_init
  2729  0775                     u2367:	
  2730  0775  2F76               	nop2
  2731  0776  2F77               	nop2
  2732  0777  0BF7               	decfsz	??_lcd_init,f
  2733  0778  2F75               	goto	u2367
  2734  0779  0000               	nop
  2735                           
  2736                           ;newmain.c: 250:     lcd_cmd(0x06);
  2737  077A  3006               	movlw	6
  2738  077B  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  2739                           
  2740                           ;newmain.c: 251:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  2741  0780  30D6               	movlw	214
  2742  0781  00F7               	movwf	??_lcd_init
  2743  0782                     u2377:	
  2744  0782  2F83               	nop2
  2745  0783  2F84               	nop2
  2746  0784  0BF7               	decfsz	??_lcd_init,f
  2747  0785  2F82               	goto	u2377
  2748  0786  0000               	nop
  2749                           
  2750                           ;newmain.c: 252:     lcd_cmd(0x80);
  2751  0787  3080               	movlw	128
  2752  0788  120A  158A  25DA  120A  118A  	fcall	_lcd_cmd
  2753                           
  2754                           ;newmain.c: 253:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  2755  078D  30D6               	movlw	214
  2756  078E  00F7               	movwf	??_lcd_init
  2757  078F                     u2387:	
  2758  078F  2F90               	nop2
  2759  0790  2F91               	nop2
  2760  0791  0BF7               	decfsz	??_lcd_init,f
  2761  0792  2F8F               	goto	u2387
  2762  0793  0000               	nop
  2763  0794  0008               	return
  2764  0795                     __end_of_lcd_init:	
  2765                           
  2766                           	psect	text9
  2767  0DB2                     __ptext9:	
  2768 ;; *************** function _lcd_clear *****************
  2769 ;; Defined at:
  2770 ;;		line 257 in file "newmain.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          2       0       0       0       0
  2787 ;;      Totals:         2       0       0       0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    3
  2791 ;; This function calls:
  2792 ;;		_lcd_cmd
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _lcd_clear
  2800  0DB2                     _lcd_clear:	
  2801                           
  2802                           ;newmain.c: 258:      lcd_cmd(0x01);
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2806  0DB2  3001               	movlw	1
  2807  0DB3  120A  158A  25DA  120A  158A  	fcall	_lcd_cmd
  2808                           
  2809                           ;newmain.c: 259:      _delay((unsigned long)((2000)*(20000000/4000000.0)));
  2810  0DB8  300D               	movlw	13
  2811  0DB9  00F8               	movwf	??_lcd_clear+1
  2812  0DBA  30FB               	movlw	251
  2813  0DBB  00F7               	movwf	??_lcd_clear
  2814  0DBC                     u2397:	
  2815  0DBC  0BF7               	decfsz	??_lcd_clear,f
  2816  0DBD  2DBC               	goto	u2397
  2817  0DBE  0BF8               	decfsz	??_lcd_clear+1,f
  2818  0DBF  2DBC               	goto	u2397
  2819  0DC0  2DC1               	nop2
  2820  0DC1  0008               	return
  2821  0DC2                     __end_of_lcd_clear:	
  2822                           
  2823                           	psect	text10
  2824  0DDA                     __ptext10:	
  2825 ;; *************** function _lcd_cmd *****************
  2826 ;; Defined at:
  2827 ;;		line 198 in file "newmain.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  data            1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  data            1    6[COMMON] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         1       0       0       0       0
  2843 ;;      Temps:          1       0       0       0       0
  2844 ;;      Totals:         2       0       0       0       0
  2845 ;;Total ram usage:        2 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		_data_write
  2850 ;; This function is called by:
  2851 ;;		_lcd_init
  2852 ;;		_lcd_clear
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _lcd_cmd
  2859  0DDA                     _lcd_cmd:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2863                           ;lcd_cmd@data stored from wreg
  2864  0DDA  00F6               	movwf	lcd_cmd@data
  2865                           
  2866                           ;newmain.c: 198: void lcd_cmd(unsigned char data);newmain.c: 199: {;newmain.c: 200:     
      +                          RC7=0;
  2867  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0DDD  1387               	bcf	7,7	;volatile
  2870                           
  2871                           ;newmain.c: 201:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2872  0DDE  30F9               	movlw	249
  2873  0DDF  00F5               	movwf	??_lcd_cmd
  2874  0DE0                     u2407:	
  2875  0DE0  0BF5               	decfsz	??_lcd_cmd,f
  2876  0DE1  2DE0               	goto	u2407
  2877  0DE2  2DE3               	nop2
  2878                           
  2879                           ;newmain.c: 202:     data_write(data>>4);
  2880  0DE3  0876               	movf	lcd_cmd@data,w
  2881  0DE4  00F5               	movwf	??_lcd_cmd
  2882  0DE5  3004               	movlw	4
  2883  0DE6                     u2005:	
  2884  0DE6  1003               	clrc
  2885  0DE7  0CF5               	rrf	??_lcd_cmd,f
  2886  0DE8  3EFF               	addlw	-1
  2887  0DE9  1D03               	skipz
  2888  0DEA  2DE6               	goto	u2005
  2889  0DEB  0875               	movf	??_lcd_cmd,w
  2890  0DEC  120A  158A  261D  120A  158A  	fcall	_data_write
  2891                           
  2892                           ;newmain.c: 203:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2893  0DF1  30F9               	movlw	249
  2894  0DF2  00F5               	movwf	??_lcd_cmd
  2895  0DF3                     u2417:	
  2896  0DF3  0BF5               	decfsz	??_lcd_cmd,f
  2897  0DF4  2DF3               	goto	u2417
  2898  0DF5  2DF6               	nop2
  2899                           
  2900                           ;newmain.c: 204:     data_write(data);
  2901  0DF6  0876               	movf	lcd_cmd@data,w
  2902  0DF7  120A  158A  261D   	fcall	_data_write
  2903  0DFA  0008               	return
  2904  0DFB                     __end_of_lcd_cmd:	
  2905                           
  2906                           	psect	text11
  2907  0E1D                     __ptext11:	
  2908 ;; *************** function _data_write *****************
  2909 ;; Defined at:
  2910 ;;		line 171 in file "newmain.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  data            1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  data            1    4[COMMON] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       0       0       0       0
  2925 ;;      Locals:         1       0       0       0       0
  2926 ;;      Temps:          1       0       0       0       0
  2927 ;;      Totals:         2       0       0       0       0
  2928 ;;Total ram usage:        2 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_lcd_data
  2935 ;;		_lcd_cmd
  2936 ;;		_lcd_init
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _data_write
  2942  0E1D                     _data_write:	
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _data_write: [wreg]
  2946                           ;data_write@data stored from wreg
  2947  0E1D  00F4               	movwf	data_write@data
  2948                           
  2949                           ;newmain.c: 171: void data_write(unsigned char data);newmain.c: 172: {;newmain.c: 173:  
      +                             if (data & 0b1000) RB5=1;
  2950  0E1E  1DF4               	btfss	data_write@data,3
  2951  0E1F  2E24               	goto	l158
  2952  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0E22  1686               	bsf	6,5	;volatile
  2955  0E23  2E27               	goto	l159
  2956  0E24                     l158:	
  2957                           ;newmain.c: 174:     else RB5=0;
  2958                           
  2959  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0E26  1286               	bcf	6,5	;volatile
  2962  0E27                     l159:	
  2963                           
  2964                           ;newmain.c: 175:     if (data & 0b0100) RB4=1;
  2965  0E27  1D74               	btfss	data_write@data,2
  2966  0E28  2E2B               	goto	l160
  2967  0E29  1606               	bsf	6,4	;volatile
  2968  0E2A  2E2C               	goto	l161
  2969  0E2B                     l160:	
  2970                           ;newmain.c: 176:     else RB4=0;
  2971                           
  2972  0E2B  1206               	bcf	6,4	;volatile
  2973  0E2C                     l161:	
  2974                           
  2975                           ;newmain.c: 177:     if (data & 0b0010) RB3=1;
  2976  0E2C  1CF4               	btfss	data_write@data,1
  2977  0E2D  2E30               	goto	l162
  2978  0E2E  1586               	bsf	6,3	;volatile
  2979  0E2F  2E31               	goto	l163
  2980  0E30                     l162:	
  2981                           ;newmain.c: 178:     else RB3=0;
  2982                           
  2983  0E30  1186               	bcf	6,3	;volatile
  2984  0E31                     l163:	
  2985                           
  2986                           ;newmain.c: 179:     if (data & 0b0001) RB2=1;
  2987  0E31  1C74               	btfss	data_write@data,0
  2988  0E32  2E35               	goto	l164
  2989  0E33  1506               	bsf	6,2	;volatile
  2990  0E34  2E36               	goto	l165
  2991  0E35                     l164:	
  2992                           ;newmain.c: 180:     else RB2=0;
  2993                           
  2994  0E35  1106               	bcf	6,2	;volatile
  2995  0E36                     l165:	
  2996                           
  2997                           ;newmain.c: 181:     RB1=1;
  2998  0E36  1486               	bsf	6,1	;volatile
  2999                           
  3000                           ;newmain.c: 182:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  3001  0E37  30C7               	movlw	199
  3002  0E38  00F3               	movwf	??_data_write
  3003  0E39                     u2427:	
  3004  0E39  2E3A               	nop2
  3005  0E3A  0BF3               	decfsz	??_data_write,f
  3006  0E3B  2E39               	goto	u2427
  3007  0E3C  2E3D               	nop2
  3008  0E3D  2E3E               	nop2
  3009                           
  3010                           ;newmain.c: 183:     RB1=0;
  3011  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0E40  1086               	bcf	6,1	;volatile
  3014                           
  3015                           ;newmain.c: 184:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  3016  0E41  30C7               	movlw	199
  3017  0E42  00F3               	movwf	??_data_write
  3018  0E43                     u2437:	
  3019  0E43  2E44               	nop2
  3020  0E44  0BF3               	decfsz	??_data_write,f
  3021  0E45  2E43               	goto	u2437
  3022  0E46  2E47               	nop2
  3023  0E47  2E48               	nop2
  3024  0E48  0008               	return
  3025  0E49                     __end_of_data_write:	
  3026                           
  3027                           	psect	text12
  3028  0F53                     __ptext12:	
  3029 ;; *************** function ___lmul *****************
  3030 ;; Defined at:
  3031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3034 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  product         4    4[COMMON] unsigned long 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  4    0[BANK0 ] unsigned long 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         0       8       0       0       0
  3047 ;;      Locals:         4       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0
  3049 ;;      Totals:         5       8       0       0       0
  3050 ;;Total ram usage:       13 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function ___lmul
  3062  0F53                     ___lmul:	
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3066  0F53  3000               	movlw	0
  3067  0F54  00F7               	movwf	___lmul@product+3
  3068  0F55  3000               	movlw	0
  3069  0F56  00F6               	movwf	___lmul@product+2
  3070  0F57  3000               	movlw	0
  3071  0F58  00F5               	movwf	___lmul@product+1
  3072  0F59  3000               	movlw	0
  3073  0F5A  00F4               	movwf	___lmul@product
  3074  0F5B                     l2077:	
  3075  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0F5D  1C49               	btfss	___lmul@multiplier,0
  3078  0F5E  2F73               	goto	l2081
  3079  0F5F  084D               	movf	___lmul@multiplicand,w
  3080  0F60  07F4               	addwf	___lmul@product,f
  3081  0F61  084E               	movf	___lmul@multiplicand+1,w
  3082  0F62  1103               	clrz
  3083  0F63  1803               	skipnc
  3084  0F64  3E01               	addlw	1
  3085  0F65  1D03               	btfss	3,2
  3086  0F66  07F5               	addwf	___lmul@product+1,f
  3087  0F67  084F               	movf	___lmul@multiplicand+2,w
  3088  0F68  1103               	clrz
  3089  0F69  1803               	skipnc
  3090  0F6A  3E01               	addlw	1
  3091  0F6B  1D03               	btfss	3,2
  3092  0F6C  07F6               	addwf	___lmul@product+2,f
  3093  0F6D  0850               	movf	___lmul@multiplicand+3,w
  3094  0F6E  1103               	clrz
  3095  0F6F  1803               	skipnc
  3096  0F70  3E01               	addlw	1
  3097  0F71  1D03               	btfss	3,2
  3098  0F72  07F7               	addwf	___lmul@product+3,f
  3099  0F73                     l2081:	
  3100  0F73  3001               	movlw	1
  3101  0F74  00F3               	movwf	??___lmul
  3102  0F75                     u2055:	
  3103  0F75  1003               	clrc
  3104  0F76  0DCD               	rlf	___lmul@multiplicand,f
  3105  0F77  0DCE               	rlf	___lmul@multiplicand+1,f
  3106  0F78  0DCF               	rlf	___lmul@multiplicand+2,f
  3107  0F79  0DD0               	rlf	___lmul@multiplicand+3,f
  3108  0F7A  0BF3               	decfsz	??___lmul,f
  3109  0F7B  2F75               	goto	u2055
  3110  0F7C  3001               	movlw	1
  3111  0F7D                     u2065:	
  3112  0F7D  1003               	clrc
  3113  0F7E  0CCC               	rrf	___lmul@multiplier+3,f
  3114  0F7F  0CCB               	rrf	___lmul@multiplier+2,f
  3115  0F80  0CCA               	rrf	___lmul@multiplier+1,f
  3116  0F81  0CC9               	rrf	___lmul@multiplier,f
  3117  0F82  3EFF               	addlw	-1
  3118  0F83  1D03               	skipz
  3119  0F84  2F7D               	goto	u2065
  3120  0F85  084C               	movf	___lmul@multiplier+3,w
  3121  0F86  044B               	iorwf	___lmul@multiplier+2,w
  3122  0F87  044A               	iorwf	___lmul@multiplier+1,w
  3123  0F88  0449               	iorwf	___lmul@multiplier,w
  3124  0F89  1D03               	skipz
  3125  0F8A  2F5B               	goto	l2077
  3126  0F8B  0877               	movf	___lmul@product+3,w
  3127  0F8C  00CC               	movwf	?___lmul+3
  3128  0F8D  0876               	movf	___lmul@product+2,w
  3129  0F8E  00CB               	movwf	?___lmul+2
  3130  0F8F  0875               	movf	___lmul@product+1,w
  3131  0F90  00CA               	movwf	?___lmul+1
  3132  0F91  0874               	movf	___lmul@product,w
  3133  0F92  00C9               	movwf	?___lmul
  3134  0F93  0008               	return
  3135  0F94                     __end_of___lmul:	
  3136                           
  3137                           	psect	text13
  3138  0795                     __ptext13:	
  3139 ;; *************** function _DDS_init *****************
  3140 ;; Defined at:
  3141 ;;		line 158 in file "newmain.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, pclath, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0
  3158 ;;      Totals:         0       0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    3
  3162 ;; This function calls:
  3163 ;;		_freq_write
  3164 ;;		_phase_write
  3165 ;;		_spi_write
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _DDS_init
  3173  0795                     _DDS_init:	
  3174                           
  3175                           ;newmain.c: 160:     spi_write(RESET);
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _DDS_init: [wreg+status,2+status,0+pclath+cstack]
  3179  0795  1683               	bsf	3,5	;RP0=1, select bank1
  3180  0796  1303               	bcf	3,6	;RP1=0, select bank1
  3181  0797  084F               	movf	(_RESET+1)^(0+128),w
  3182  0798  00F4               	movwf	spi_write@data+1
  3183  0799  084E               	movf	_RESET^(0+128),w
  3184  079A  00F3               	movwf	spi_write@data
  3185  079B  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3186                           
  3187                           ;newmain.c: 161:     spi_write(SYNCSRC);
  3188  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3189  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3190  07A2  0847               	movf	(_SYNCSRC+1)^(0+128),w
  3191  07A3  00F4               	movwf	spi_write@data+1
  3192  07A4  0846               	movf	_SYNCSRC^(0+128),w
  3193  07A5  00F3               	movwf	spi_write@data
  3194  07A6  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3195                           
  3196                           ;newmain.c: 162:     freq_write(1747640,0);
  3197  07AB  3000               	movlw	0
  3198  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3199  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3200  07AE  00CC               	movwf	freq_write@input+3
  3201  07AF  301A               	movlw	26
  3202  07B0  00CB               	movwf	freq_write@input+2
  3203  07B1  30AA               	movlw	170
  3204  07B2  00CA               	movwf	freq_write@input+1
  3205  07B3  30B8               	movlw	184
  3206  07B4  00C9               	movwf	freq_write@input
  3207  07B5  01CD               	clrf	freq_write@reg
  3208  07B6  120A  118A  265F  120A  118A  	fcall	_freq_write
  3209                           
  3210                           ;newmain.c: 163:     phase_write(0);
  3211  07BB  3000               	movlw	0
  3212  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  3213  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  3214  07BE  00CC               	movwf	phase_write@input+3
  3215  07BF  3000               	movlw	0
  3216  07C0  00CB               	movwf	phase_write@input+2
  3217  07C1  3000               	movlw	0
  3218  07C2  00CA               	movwf	phase_write@input+1
  3219  07C3  3000               	movlw	0
  3220  07C4  00C9               	movwf	phase_write@input
  3221  07C5  120A  158A  26DC  120A  118A  	fcall	_phase_write
  3222                           
  3223                           ;newmain.c: 164:     spi_write(SET_0);
  3224  07CA  1683               	bsf	3,5	;RP0=1, select bank1
  3225  07CB  1303               	bcf	3,6	;RP1=0, select bank1
  3226  07CC  084D               	movf	(_SET_0+1)^(0+128),w
  3227  07CD  00F4               	movwf	spi_write@data+1
  3228  07CE  084C               	movf	_SET_0^(0+128),w
  3229  07CF  00F3               	movwf	spi_write@data
  3230  07D0  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3231                           
  3232                           ;newmain.c: 165:     spi_write(UNRESET);
  3233  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  3234  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  3235  07D7  0849               	movf	(_UNRESET+1)^(0+128),w
  3236  07D8  00F4               	movwf	spi_write@data+1
  3237  07D9  0848               	movf	_UNRESET^(0+128),w
  3238  07DA  00F3               	movwf	spi_write@data
  3239  07DB  120A  158A  26A8   	fcall	_spi_write
  3240  07DE  0008               	return
  3241  07DF                     __end_of_DDS_init:	
  3242                           
  3243                           	psect	text14
  3244  0EDC                     __ptext14:	
  3245 ;; *************** function _phase_write *****************
  3246 ;; Defined at:
  3247 ;;		line 141 in file "newmain.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  input           4    0[BANK0 ] unsigned long 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       4       0       0       0
  3262 ;;      Locals:         0       0       0       0       0
  3263 ;;      Temps:          0       4       0       0       0
  3264 ;;      Totals:         0       8       0       0       0
  3265 ;;Total ram usage:        8 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    2
  3268 ;; This function calls:
  3269 ;;		_spi_write
  3270 ;; This function is called by:
  3271 ;;		_DDS_init
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _phase_write
  3277  0EDC                     _phase_write:	
  3278                           
  3279                           ;newmain.c: 141: void phase_write(uint32_t input);newmain.c: 142: {;newmain.c: 143:     
      +                          freqLSB = input &~0xFF00;
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in _phase_write: [wreg+status,2+status,0+pclath+cstack]
  3283  0EDC  30FF               	movlw	255
  3284  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0EDF  0549               	andwf	phase_write@input,w
  3287  0EE0  00B8               	movwf	_freqLSB
  3288  0EE1  3000               	movlw	0
  3289  0EE2  054A               	andwf	phase_write@input+1,w
  3290  0EE3  00B9               	movwf	_freqLSB+1
  3291                           
  3292                           ;newmain.c: 145:     freqMSB = input>>8;
  3293  0EE4  0849               	movf	phase_write@input,w
  3294  0EE5  00CD               	movwf	??_phase_write
  3295  0EE6  084A               	movf	phase_write@input+1,w
  3296  0EE7  00CE               	movwf	??_phase_write+1
  3297  0EE8  084B               	movf	phase_write@input+2,w
  3298  0EE9  00CF               	movwf	??_phase_write+2
  3299  0EEA  084C               	movf	phase_write@input+3,w
  3300  0EEB  00D0               	movwf	??_phase_write+3
  3301  0EEC  3008               	movlw	8
  3302  0EED                     u1995:	
  3303  0EED  1003               	clrc
  3304  0EEE  0CD0               	rrf	??_phase_write+3,f
  3305  0EEF  0CCF               	rrf	??_phase_write+2,f
  3306  0EF0  0CCE               	rrf	??_phase_write+1,f
  3307  0EF1  0CCD               	rrf	??_phase_write,f
  3308  0EF2  3EFF               	addlw	-1
  3309  0EF3  1D03               	skipz
  3310  0EF4  2EED               	goto	u1995
  3311  0EF5  084E               	movf	??_phase_write+1,w
  3312  0EF6  00FA               	movwf	_freqMSB+1
  3313  0EF7  084D               	movf	??_phase_write,w
  3314  0EF8  00F9               	movwf	_freqMSB
  3315                           
  3316                           ;newmain.c: 146:     freqMSB &=~0xFF00;
  3317  0EF9  30FF               	movlw	255
  3318  0EFA  05F9               	andwf	_freqMSB,f
  3319  0EFB  3000               	movlw	0
  3320  0EFC  05FA               	andwf	_freqMSB+1,f
  3321                           
  3322                           ;newmain.c: 149:     freqLSB |=0x0800;
  3323  0EFD  15B9               	bsf	_freqLSB+1,3
  3324                           
  3325                           ;newmain.c: 150:     freqMSB |=0x0900;
  3326  0EFE  3000               	movlw	0
  3327  0EFF  04F9               	iorwf	_freqMSB,f
  3328  0F00  3009               	movlw	9
  3329  0F01  04FA               	iorwf	_freqMSB+1,f
  3330                           
  3331                           ;newmain.c: 153:     spi_write(freqMSB);
  3332  0F02  087A               	movf	_freqMSB+1,w
  3333  0F03  00F4               	movwf	spi_write@data+1
  3334  0F04  0879               	movf	_freqMSB,w
  3335  0F05  00F3               	movwf	spi_write@data
  3336  0F06  120A  158A  26A8  120A  158A  	fcall	_spi_write
  3337                           
  3338                           ;newmain.c: 154:     spi_write(freqLSB);
  3339  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0F0D  0839               	movf	_freqLSB+1,w
  3342  0F0E  00F4               	movwf	spi_write@data+1
  3343  0F0F  0838               	movf	_freqLSB,w
  3344  0F10  00F3               	movwf	spi_write@data
  3345  0F11  120A  158A  26A8   	fcall	_spi_write
  3346  0F14  0008               	return
  3347  0F15                     __end_of_phase_write:	
  3348                           
  3349                           	psect	text15
  3350  065F                     __ptext15:	
  3351 ;; *************** function _freq_write *****************
  3352 ;; Defined at:
  3353 ;;		line 98 in file "newmain.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  input           4    0[BANK0 ] unsigned long 
  3356 ;;  reg             1    4[BANK0 ] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       5       0       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       4       0       0       0
  3371 ;;      Totals:         0       9       0       0       0
  3372 ;;Total ram usage:        9 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    2
  3375 ;; This function calls:
  3376 ;;		_spi_write
  3377 ;; This function is called by:
  3378 ;;		_DDS_init
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _freq_write
  3385  065F                     _freq_write:	
  3386                           
  3387                           ;newmain.c: 98: void freq_write(uint32_t input,char reg);newmain.c: 99: {;newmain.c: 103
      +                          :     freqLLSB = input &~0xFF00;
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _freq_write: [wreg+status,2+status,0+pclath+cstack]
  3391  065F  30FF               	movlw	255
  3392  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0662  0549               	andwf	freq_write@input,w
  3395  0663  00BE               	movwf	_freqLLSB
  3396  0664  3000               	movlw	0
  3397  0665  054A               	andwf	freq_write@input+1,w
  3398  0666  00BF               	movwf	_freqLLSB+1
  3399                           
  3400                           ;newmain.c: 105:     freqHLSB = input>>8;
  3401  0667  0849               	movf	freq_write@input,w
  3402  0668  00CE               	movwf	??_freq_write
  3403  0669  084A               	movf	freq_write@input+1,w
  3404  066A  00CF               	movwf	??_freq_write+1
  3405  066B  084B               	movf	freq_write@input+2,w
  3406  066C  00D0               	movwf	??_freq_write+2
  3407  066D  084C               	movf	freq_write@input+3,w
  3408  066E  00D1               	movwf	??_freq_write+3
  3409  066F  3008               	movlw	8
  3410  0670                     u1945:	
  3411  0670  1003               	clrc
  3412  0671  0CD1               	rrf	??_freq_write+3,f
  3413  0672  0CD0               	rrf	??_freq_write+2,f
  3414  0673  0CCF               	rrf	??_freq_write+1,f
  3415  0674  0CCE               	rrf	??_freq_write,f
  3416  0675  3EFF               	addlw	-1
  3417  0676  1D03               	skipz
  3418  0677  2E70               	goto	u1945
  3419  0678  084F               	movf	??_freq_write+1,w
  3420  0679  00BB               	movwf	_freqHLSB+1
  3421  067A  084E               	movf	??_freq_write,w
  3422  067B  00BA               	movwf	_freqHLSB
  3423                           
  3424                           ;newmain.c: 106:     freqHLSB &=~0xFF00;
  3425  067C  30FF               	movlw	255
  3426  067D  05BA               	andwf	_freqHLSB,f
  3427  067E  3000               	movlw	0
  3428  067F  05BB               	andwf	_freqHLSB+1,f
  3429                           
  3430                           ;newmain.c: 107:     freqLMSB = input>>16;
  3431  0680  0849               	movf	freq_write@input,w
  3432  0681  00CE               	movwf	??_freq_write
  3433  0682  084A               	movf	freq_write@input+1,w
  3434  0683  00CF               	movwf	??_freq_write+1
  3435  0684  084B               	movf	freq_write@input+2,w
  3436  0685  00D0               	movwf	??_freq_write+2
  3437  0686  084C               	movf	freq_write@input+3,w
  3438  0687  00D1               	movwf	??_freq_write+3
  3439  0688  3010               	movlw	16
  3440  0689                     u1955:	
  3441  0689  1003               	clrc
  3442  068A  0CD1               	rrf	??_freq_write+3,f
  3443  068B  0CD0               	rrf	??_freq_write+2,f
  3444  068C  0CCF               	rrf	??_freq_write+1,f
  3445  068D  0CCE               	rrf	??_freq_write,f
  3446  068E  3EFF               	addlw	-1
  3447  068F  1D03               	skipz
  3448  0690  2E89               	goto	u1955
  3449  0691  084F               	movf	??_freq_write+1,w
  3450  0692  00C1               	movwf	_freqLMSB+1
  3451  0693  084E               	movf	??_freq_write,w
  3452  0694  00C0               	movwf	_freqLMSB
  3453                           
  3454                           ;newmain.c: 108:     freqLMSB &=~0xFF00;
  3455  0695  30FF               	movlw	255
  3456  0696  05C0               	andwf	_freqLMSB,f
  3457  0697  3000               	movlw	0
  3458  0698  05C1               	andwf	_freqLMSB+1,f
  3459                           
  3460                           ;newmain.c: 109:     freqHMSB = input>>24;
  3461  0699  0849               	movf	freq_write@input,w
  3462  069A  00CE               	movwf	??_freq_write
  3463  069B  084A               	movf	freq_write@input+1,w
  3464  069C  00CF               	movwf	??_freq_write+1
  3465  069D  084B               	movf	freq_write@input+2,w
  3466  069E  00D0               	movwf	??_freq_write+2
  3467  069F  084C               	movf	freq_write@input+3,w
  3468  06A0  00D1               	movwf	??_freq_write+3
  3469  06A1  3018               	movlw	24
  3470  06A2                     u1965:	
  3471  06A2  1003               	clrc
  3472  06A3  0CD1               	rrf	??_freq_write+3,f
  3473  06A4  0CD0               	rrf	??_freq_write+2,f
  3474  06A5  0CCF               	rrf	??_freq_write+1,f
  3475  06A6  0CCE               	rrf	??_freq_write,f
  3476  06A7  3EFF               	addlw	-1
  3477  06A8  1D03               	skipz
  3478  06A9  2EA2               	goto	u1965
  3479  06AA  084F               	movf	??_freq_write+1,w
  3480  06AB  00BD               	movwf	_freqHMSB+1
  3481  06AC  084E               	movf	??_freq_write,w
  3482  06AD  00BC               	movwf	_freqHMSB
  3483                           
  3484                           ;newmain.c: 110:     freqHMSB &=~0xFF00;
  3485  06AE  30FF               	movlw	255
  3486  06AF  05BC               	andwf	_freqHMSB,f
  3487  06B0  3000               	movlw	0
  3488  06B1  05BD               	andwf	_freqHMSB+1,f
  3489                           
  3490                           ;newmain.c: 112:     if (reg==0){
  3491  06B2  084D               	movf	freq_write@reg,w
  3492  06B3  1D03               	btfss	3,2
  3493  06B4  2EC2               	goto	l1981
  3494                           
  3495                           ;newmain.c: 114:     freqLLSB|=0x2000;
  3496  06B5  16BF               	bsf	_freqLLSB+1,5
  3497                           
  3498                           ;newmain.c: 115:     freqHLSB|=0x2100;
  3499  06B6  3000               	movlw	0
  3500  06B7  04BA               	iorwf	_freqHLSB,f
  3501  06B8  3021               	movlw	33
  3502  06B9  04BB               	iorwf	_freqHLSB+1,f
  3503                           
  3504                           ;newmain.c: 116:     freqLMSB|=0x2200;
  3505  06BA  3000               	movlw	0
  3506  06BB  04C0               	iorwf	_freqLMSB,f
  3507  06BC  3022               	movlw	34
  3508  06BD  04C1               	iorwf	_freqLMSB+1,f
  3509                           
  3510                           ;newmain.c: 117:     freqHMSB|=0x2300;
  3511  06BE  3000               	movlw	0
  3512  06BF  04BC               	iorwf	_freqHMSB,f
  3513  06C0  3023               	movlw	35
  3514  06C1  2ED4               	goto	L1
  3515  06C2                     l1981:	
  3516                           ;newmain.c: 119:     }
  3517                           
  3518  06C2  034D               	decf	freq_write@reg,w
  3519  06C3  1D03               	btfss	3,2
  3520  06C4  2ED5               	goto	l1985
  3521                           
  3522                           ;newmain.c: 121:     {;newmain.c: 123:     freqLLSB|=0x2400;
  3523  06C5  3000               	movlw	0
  3524  06C6  04BE               	iorwf	_freqLLSB,f
  3525  06C7  3024               	movlw	36
  3526  06C8  04BF               	iorwf	_freqLLSB+1,f
  3527                           
  3528                           ;newmain.c: 124:     freqHLSB|=0x2500;
  3529  06C9  3000               	movlw	0
  3530  06CA  04BA               	iorwf	_freqHLSB,f
  3531  06CB  3025               	movlw	37
  3532  06CC  04BB               	iorwf	_freqHLSB+1,f
  3533                           
  3534                           ;newmain.c: 125:     freqLMSB|=0x2600;
  3535  06CD  3000               	movlw	0
  3536  06CE  04C0               	iorwf	_freqLMSB,f
  3537  06CF  3026               	movlw	38
  3538  06D0  04C1               	iorwf	_freqLMSB+1,f
  3539                           
  3540                           ;newmain.c: 126:     freqHMSB|=0x2700;
  3541  06D1  3000               	movlw	0
  3542  06D2  04BC               	iorwf	_freqHMSB,f
  3543  06D3  3027               	movlw	39
  3544  06D4                     L1:	
  3545  06D4  04BD               	iorwf	_freqHMSB+1,f
  3546  06D5                     l1985:	
  3547                           
  3548                           ;newmain.c: 130:     spi_write(freqLLSB);
  3549  06D5  083F               	movf	_freqLLSB+1,w
  3550  06D6  00F4               	movwf	spi_write@data+1
  3551  06D7  083E               	movf	_freqLLSB,w
  3552  06D8  00F3               	movwf	spi_write@data
  3553  06D9  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3554                           
  3555                           ;newmain.c: 131:     spi_write(freqHLSB);
  3556  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3557  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3558  06E0  083B               	movf	_freqHLSB+1,w
  3559  06E1  00F4               	movwf	spi_write@data+1
  3560  06E2  083A               	movf	_freqHLSB,w
  3561  06E3  00F3               	movwf	spi_write@data
  3562  06E4  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3563                           
  3564                           ;newmain.c: 132:     spi_write(freqLMSB);
  3565  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3566  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3567  06EB  0841               	movf	_freqLMSB+1,w
  3568  06EC  00F4               	movwf	spi_write@data+1
  3569  06ED  0840               	movf	_freqLMSB,w
  3570  06EE  00F3               	movwf	spi_write@data
  3571  06EF  120A  158A  26A8  120A  118A  	fcall	_spi_write
  3572                           
  3573                           ;newmain.c: 133:     spi_write(freqHMSB);
  3574  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3575  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3576  06F6  083D               	movf	_freqHMSB+1,w
  3577  06F7  00F4               	movwf	spi_write@data+1
  3578  06F8  083C               	movf	_freqHMSB,w
  3579  06F9  00F3               	movwf	spi_write@data
  3580  06FA  120A  158A  26A8   	fcall	_spi_write
  3581  06FD  0008               	return
  3582  06FE                     __end_of_freq_write:	
  3583                           
  3584                           	psect	text16
  3585  0EA8                     __ptext16:	
  3586 ;; *************** function _spi_write *****************
  3587 ;; Defined at:
  3588 ;;		line 76 in file "newmain.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  data            2    3[COMMON] unsigned int 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  i               1    6[COMMON] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         2       0       0       0       0
  3603 ;;      Locals:         1       0       0       0       0
  3604 ;;      Temps:          1       0       0       0       0
  3605 ;;      Totals:         4       0       0       0       0
  3606 ;;Total ram usage:        4 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_freq_write
  3613 ;;		_phase_write
  3614 ;;		_DDS_init
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _spi_write
  3621  0EA8                     _spi_write:	
  3622                           
  3623                           ;newmain.c: 76: void spi_write(unsigned int data);newmain.c: 77: { RC4=0;
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _spi_write: [wreg+status,2+status,0]
  3627  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0EAA  1207               	bcf	7,4	;volatile
  3630                           
  3631                           ;newmain.c: 78: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3632  0EAB  2EAC               	nop2	;2 cycle nop
  3633  0EAC  2EAD               	nop2	;2 cycle nop
  3634  0EAD  0000               	nop
  3635                           
  3636                           ;newmain.c: 79:     for(char i=0; i<16; i++)
  3637  0EAE  01F6               	clrf	spi_write@i
  3638  0EAF                     l139:	
  3639                           
  3640                           ;newmain.c: 80:  {;newmain.c: 81:         if (data&0x8000) RC5=1;
  3641  0EAF  1FF4               	btfss	spi_write@data+1,7
  3642  0EB0  2EB5               	goto	l141
  3643  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0EB3  1687               	bsf	7,5	;volatile
  3646  0EB4  2EB8               	goto	l142
  3647  0EB5                     l141:	
  3648                           ;newmain.c: 82:         else RC5=0;
  3649                           
  3650  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0EB7  1287               	bcf	7,5	;volatile
  3653  0EB8                     l142:	
  3654                           
  3655                           ;newmain.c: 83:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  3656  0EB8  2EB9               	nop2	;2 cycle nop
  3657  0EB9  2EBA               	nop2	;2 cycle nop
  3658  0EBA  0000               	nop
  3659                           
  3660                           ;newmain.c: 84:        RC6=0;
  3661  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0EBD  1307               	bcf	7,6	;volatile
  3664                           
  3665                           ;newmain.c: 85:        _delay((unsigned long)((1)*(20000000/4000000.0)));
  3666  0EBE  2EBF               	nop2	;2 cycle nop
  3667  0EBF  2EC0               	nop2	;2 cycle nop
  3668  0EC0  0000               	nop
  3669                           
  3670                           ;newmain.c: 86:        RC6=1;
  3671  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0EC3  1707               	bsf	7,6	;volatile
  3674                           
  3675                           ;newmain.c: 87:        data=data<<1;
  3676  0EC4  1003               	clrc
  3677  0EC5  0D73               	rlf	spi_write@data,w
  3678  0EC6  00F3               	movwf	spi_write@data
  3679  0EC7  0D74               	rlf	spi_write@data+1,w
  3680  0EC8  00F4               	movwf	spi_write@data+1
  3681                           
  3682                           ;newmain.c: 88:  }
  3683  0EC9  3001               	movlw	1
  3684  0ECA  00F5               	movwf	??_spi_write
  3685  0ECB  0875               	movf	??_spi_write,w
  3686  0ECC  07F6               	addwf	spi_write@i,f
  3687  0ECD  3010               	movlw	16
  3688  0ECE  0276               	subwf	spi_write@i,w
  3689  0ECF  1C03               	skipc
  3690  0ED0  2EAF               	goto	l139
  3691                           
  3692                           ;newmain.c: 89:     RC5=0;
  3693  0ED1  1287               	bcf	7,5	;volatile
  3694                           
  3695                           ;newmain.c: 90:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3696  0ED2  2ED3               	nop2	;2 cycle nop
  3697  0ED3  2ED4               	nop2	;2 cycle nop
  3698  0ED4  0000               	nop
  3699                           
  3700                           ;newmain.c: 91:      RC4=1;
  3701  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0ED7  1607               	bsf	7,4	;volatile
  3704                           
  3705                           ;newmain.c: 92:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3706  0ED8  2ED9               	nop2	;2 cycle nop
  3707  0ED9  2EDA               	nop2	;2 cycle nop
  3708  0EDA  0000               	nop
  3709  0EDB  0008               	return
  3710  0EDC                     __end_of_spi_write:	
  3711                           
  3712                           	psect	text17
  3713  046A                     __ptext17:	
  3714 ;; *************** function _ISR *****************
  3715 ;; Defined at:
  3716 ;;		line 276 in file "newmain.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0
  3732 ;;      Temps:          3       0       0       0       0
  3733 ;;      Totals:         3       0       0       0       0
  3734 ;;Total ram usage:        3 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		Interrupt level 1
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _ISR
  3745  046A                     _ISR:	
  3746                           
  3747                           ;newmain.c: 277:     if (INTF==1){
  3748  046A  1C8B               	btfss	11,1	;volatile
  3749  046B  2E58               	goto	i1l236
  3750                           
  3751                           ;newmain.c: 279:             if (RC3==1){
  3752  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3753  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3754  046E  1D87               	btfss	7,3	;volatile
  3755  046F  2D90               	goto	i1l1665
  3756                           
  3757                           ;newmain.c: 280:                 if (val0<5){
  3758  0470  1BE1               	btfsc	_val0+3,7
  3759  0471  2C81               	goto	i1l1623
  3760  0472  0861               	movf	_val0+3,w
  3761  0473  1D03               	btfss	3,2
  3762  0474  2E52               	goto	i1l212
  3763  0475  0860               	movf	_val0+2,w
  3764  0476  1D03               	btfss	3,2
  3765  0477  2E52               	goto	i1l212
  3766  0478  085F               	movf	_val0+1,w
  3767  0479  1D03               	btfss	3,2
  3768  047A  2E52               	goto	i1l212
  3769  047B  3005               	movlw	5
  3770  047C  025E               	subwf	_val0,w
  3771  047D  1D03               	skipz
  3772  047E  2C7F               	goto	u129_23
  3773  047F                     u129_23:	
  3774  047F  1803               	btfsc	3,0
  3775  0480  2E52               	goto	i1l212
  3776  0481                     i1l1623:	
  3777                           
  3778                           ;newmain.c: 281:                                 if (pos==5)val4++;
  3779  0481  3005               	movlw	5
  3780  0482  0620               	xorwf	_pos,w
  3781  0483  0421               	iorwf	_pos+1,w
  3782  0484  0422               	iorwf	_pos+2,w
  3783  0485  0423               	iorwf	_pos+3,w
  3784  0486  1D03               	btfss	3,2
  3785  0487  2C96               	goto	i1l1627
  3786  0488  3001               	movlw	1
  3787  0489  07A4               	addwf	_val4,f
  3788  048A  3000               	movlw	0
  3789  048B  1803               	skipnc
  3790  048C  3001               	movlw	1
  3791  048D  07A5               	addwf	_val4+1,f
  3792  048E  3000               	movlw	0
  3793  048F  1803               	skipnc
  3794  0490  3001               	movlw	1
  3795  0491  07A6               	addwf	_val4+2,f
  3796  0492  3000               	movlw	0
  3797  0493  1803               	skipnc
  3798  0494  3001               	movlw	1
  3799  0495  07A7               	addwf	_val4+3,f
  3800  0496                     i1l1627:	
  3801                           
  3802                           ;newmain.c: 282:                                 if((pos==4)||(val4>9))val3++;
  3803  0496  3004               	movlw	4
  3804  0497  0620               	xorwf	_pos,w
  3805  0498  0421               	iorwf	_pos+1,w
  3806  0499  0422               	iorwf	_pos+2,w
  3807  049A  0423               	iorwf	_pos+3,w
  3808  049B  1903               	btfsc	3,2
  3809  049C  2CAE               	goto	i1l1631
  3810  049D  1BA7               	btfsc	_val4+3,7
  3811  049E  2CBC               	goto	i1l1633
  3812  049F  0827               	movf	_val4+3,w
  3813  04A0  1D03               	btfss	3,2
  3814  04A1  2CAE               	goto	i1l1631
  3815  04A2  0826               	movf	_val4+2,w
  3816  04A3  1D03               	btfss	3,2
  3817  04A4  2CAE               	goto	i1l1631
  3818  04A5  0825               	movf	_val4+1,w
  3819  04A6  1D03               	btfss	3,2
  3820  04A7  2CAE               	goto	i1l1631
  3821  04A8  300A               	movlw	10
  3822  04A9  0224               	subwf	_val4,w
  3823  04AA  1D03               	skipz
  3824  04AB  2CAC               	goto	u132_23
  3825  04AC                     u132_23:	
  3826  04AC  1C03               	btfss	3,0
  3827  04AD  2CBC               	goto	i1l1633
  3828  04AE                     i1l1631:	
  3829  04AE  3001               	movlw	1
  3830  04AF  07A8               	addwf	_val3,f
  3831  04B0  3000               	movlw	0
  3832  04B1  1803               	skipnc
  3833  04B2  3001               	movlw	1
  3834  04B3  07A9               	addwf	_val3+1,f
  3835  04B4  3000               	movlw	0
  3836  04B5  1803               	skipnc
  3837  04B6  3001               	movlw	1
  3838  04B7  07AA               	addwf	_val3+2,f
  3839  04B8  3000               	movlw	0
  3840  04B9  1803               	skipnc
  3841  04BA  3001               	movlw	1
  3842  04BB  07AB               	addwf	_val3+3,f
  3843  04BC                     i1l1633:	
  3844                           
  3845                           ;newmain.c: 283:                                 if ((pos==3)||(val3>9))val2++;
  3846  04BC  3003               	movlw	3
  3847  04BD  0620               	xorwf	_pos,w
  3848  04BE  0421               	iorwf	_pos+1,w
  3849  04BF  0422               	iorwf	_pos+2,w
  3850  04C0  0423               	iorwf	_pos+3,w
  3851  04C1  1903               	btfsc	3,2
  3852  04C2  2CD4               	goto	i1l1637
  3853  04C3  1BAB               	btfsc	_val3+3,7
  3854  04C4  2CE2               	goto	i1l1639
  3855  04C5  082B               	movf	_val3+3,w
  3856  04C6  1D03               	btfss	3,2
  3857  04C7  2CD4               	goto	i1l1637
  3858  04C8  082A               	movf	_val3+2,w
  3859  04C9  1D03               	btfss	3,2
  3860  04CA  2CD4               	goto	i1l1637
  3861  04CB  0829               	movf	_val3+1,w
  3862  04CC  1D03               	btfss	3,2
  3863  04CD  2CD4               	goto	i1l1637
  3864  04CE  300A               	movlw	10
  3865  04CF  0228               	subwf	_val3,w
  3866  04D0  1D03               	skipz
  3867  04D1  2CD2               	goto	u134_23
  3868  04D2                     u134_23:	
  3869  04D2  1C03               	btfss	3,0
  3870  04D3  2CE2               	goto	i1l1639
  3871  04D4                     i1l1637:	
  3872  04D4  3001               	movlw	1
  3873  04D5  07AC               	addwf	_val2,f
  3874  04D6  3000               	movlw	0
  3875  04D7  1803               	skipnc
  3876  04D8  3001               	movlw	1
  3877  04D9  07AD               	addwf	_val2+1,f
  3878  04DA  3000               	movlw	0
  3879  04DB  1803               	skipnc
  3880  04DC  3001               	movlw	1
  3881  04DD  07AE               	addwf	_val2+2,f
  3882  04DE  3000               	movlw	0
  3883  04DF  1803               	skipnc
  3884  04E0  3001               	movlw	1
  3885  04E1  07AF               	addwf	_val2+3,f
  3886  04E2                     i1l1639:	
  3887                           
  3888                           ;newmain.c: 284:                                 if((pos==1)||(val2>9))val1++;
  3889  04E2  0320               	decf	_pos,w
  3890  04E3  0421               	iorwf	_pos+1,w
  3891  04E4  0422               	iorwf	_pos+2,w
  3892  04E5  0423               	iorwf	_pos+3,w
  3893  04E6  1903               	btfsc	3,2
  3894  04E7  2CF9               	goto	i1l1643
  3895  04E8  1BAF               	btfsc	_val2+3,7
  3896  04E9  2D07               	goto	i1l202
  3897  04EA  082F               	movf	_val2+3,w
  3898  04EB  1D03               	btfss	3,2
  3899  04EC  2CF9               	goto	i1l1643
  3900  04ED  082E               	movf	_val2+2,w
  3901  04EE  1D03               	btfss	3,2
  3902  04EF  2CF9               	goto	i1l1643
  3903  04F0  082D               	movf	_val2+1,w
  3904  04F1  1D03               	btfss	3,2
  3905  04F2  2CF9               	goto	i1l1643
  3906  04F3  300A               	movlw	10
  3907  04F4  022C               	subwf	_val2,w
  3908  04F5  1D03               	skipz
  3909  04F6  2CF7               	goto	u136_23
  3910  04F7                     u136_23:	
  3911  04F7  1C03               	btfss	3,0
  3912  04F8  2D07               	goto	i1l202
  3913  04F9                     i1l1643:	
  3914  04F9  3001               	movlw	1
  3915  04FA  07B0               	addwf	_val1,f
  3916  04FB  3000               	movlw	0
  3917  04FC  1803               	skipnc
  3918  04FD  3001               	movlw	1
  3919  04FE  07B1               	addwf	_val1+1,f
  3920  04FF  3000               	movlw	0
  3921  0500  1803               	skipnc
  3922  0501  3001               	movlw	1
  3923  0502  07B2               	addwf	_val1+2,f
  3924  0503  3000               	movlw	0
  3925  0504  1803               	skipnc
  3926  0505  3001               	movlw	1
  3927  0506  07B3               	addwf	_val1+3,f
  3928  0507                     i1l202:	
  3929                           
  3930                           ;newmain.c: 285:                                 if ((pos==0)||(val1>9)) val0++;
  3931  0507  0823               	movf	_pos+3,w
  3932  0508  0422               	iorwf	_pos+2,w
  3933  0509  0421               	iorwf	_pos+1,w
  3934  050A  0420               	iorwf	_pos,w
  3935  050B  1903               	skipnz
  3936  050C  2D1E               	goto	i1l1647
  3937  050D  1BB3               	btfsc	_val1+3,7
  3938  050E  2D2C               	goto	i1l1649
  3939  050F  0833               	movf	_val1+3,w
  3940  0510  1D03               	btfss	3,2
  3941  0511  2D1E               	goto	i1l1647
  3942  0512  0832               	movf	_val1+2,w
  3943  0513  1D03               	btfss	3,2
  3944  0514  2D1E               	goto	i1l1647
  3945  0515  0831               	movf	_val1+1,w
  3946  0516  1D03               	btfss	3,2
  3947  0517  2D1E               	goto	i1l1647
  3948  0518  300A               	movlw	10
  3949  0519  0230               	subwf	_val1,w
  3950  051A  1D03               	skipz
  3951  051B  2D1C               	goto	u138_23
  3952  051C                     u138_23:	
  3953  051C  1C03               	btfss	3,0
  3954  051D  2D2C               	goto	i1l1649
  3955  051E                     i1l1647:	
  3956  051E  3001               	movlw	1
  3957  051F  07DE               	addwf	_val0,f
  3958  0520  3000               	movlw	0
  3959  0521  1803               	skipnc
  3960  0522  3001               	movlw	1
  3961  0523  07DF               	addwf	_val0+1,f
  3962  0524  3000               	movlw	0
  3963  0525  1803               	skipnc
  3964  0526  3001               	movlw	1
  3965  0527  07E0               	addwf	_val0+2,f
  3966  0528  3000               	movlw	0
  3967  0529  1803               	skipnc
  3968  052A  3001               	movlw	1
  3969  052B  07E1               	addwf	_val0+3,f
  3970  052C                     i1l1649:	
  3971                           
  3972                           ;newmain.c: 287:                                 if(val1>9)val1=0;
  3973  052C  1BB3               	btfsc	_val1+3,7
  3974  052D  2D45               	goto	i1l1653
  3975  052E  0833               	movf	_val1+3,w
  3976  052F  1D03               	btfss	3,2
  3977  0530  2D3D               	goto	i1l1651
  3978  0531  0832               	movf	_val1+2,w
  3979  0532  1D03               	btfss	3,2
  3980  0533  2D3D               	goto	i1l1651
  3981  0534  0831               	movf	_val1+1,w
  3982  0535  1D03               	btfss	3,2
  3983  0536  2D3D               	goto	i1l1651
  3984  0537  300A               	movlw	10
  3985  0538  0230               	subwf	_val1,w
  3986  0539  1D03               	skipz
  3987  053A  2D3B               	goto	u139_23
  3988  053B                     u139_23:	
  3989  053B  1C03               	btfss	3,0
  3990  053C  2D45               	goto	i1l1653
  3991  053D                     i1l1651:	
  3992  053D  3000               	movlw	0
  3993  053E  00B3               	movwf	_val1+3
  3994  053F  3000               	movlw	0
  3995  0540  00B2               	movwf	_val1+2
  3996  0541  3000               	movlw	0
  3997  0542  00B1               	movwf	_val1+1
  3998  0543  3000               	movlw	0
  3999  0544  00B0               	movwf	_val1
  4000  0545                     i1l1653:	
  4001                           
  4002                           ;newmain.c: 288:                                 if(val2>9)val2=0;
  4003  0545  1BAF               	btfsc	_val2+3,7
  4004  0546  2D5E               	goto	i1l1657
  4005  0547  082F               	movf	_val2+3,w
  4006  0548  1D03               	btfss	3,2
  4007  0549  2D56               	goto	i1l1655
  4008  054A  082E               	movf	_val2+2,w
  4009  054B  1D03               	btfss	3,2
  4010  054C  2D56               	goto	i1l1655
  4011  054D  082D               	movf	_val2+1,w
  4012  054E  1D03               	btfss	3,2
  4013  054F  2D56               	goto	i1l1655
  4014  0550  300A               	movlw	10
  4015  0551  022C               	subwf	_val2,w
  4016  0552  1D03               	skipz
  4017  0553  2D54               	goto	u140_23
  4018  0554                     u140_23:	
  4019  0554  1C03               	btfss	3,0
  4020  0555  2D5E               	goto	i1l1657
  4021  0556                     i1l1655:	
  4022  0556  3000               	movlw	0
  4023  0557  00AF               	movwf	_val2+3
  4024  0558  3000               	movlw	0
  4025  0559  00AE               	movwf	_val2+2
  4026  055A  3000               	movlw	0
  4027  055B  00AD               	movwf	_val2+1
  4028  055C  3000               	movlw	0
  4029  055D  00AC               	movwf	_val2
  4030  055E                     i1l1657:	
  4031                           
  4032                           ;newmain.c: 289:                                 if(val3>9)val3=0;
  4033  055E  1BAB               	btfsc	_val3+3,7
  4034  055F  2D77               	goto	i1l1661
  4035  0560  082B               	movf	_val3+3,w
  4036  0561  1D03               	btfss	3,2
  4037  0562  2D6F               	goto	i1l1659
  4038  0563  082A               	movf	_val3+2,w
  4039  0564  1D03               	btfss	3,2
  4040  0565  2D6F               	goto	i1l1659
  4041  0566  0829               	movf	_val3+1,w
  4042  0567  1D03               	btfss	3,2
  4043  0568  2D6F               	goto	i1l1659
  4044  0569  300A               	movlw	10
  4045  056A  0228               	subwf	_val3,w
  4046  056B  1D03               	skipz
  4047  056C  2D6D               	goto	u141_23
  4048  056D                     u141_23:	
  4049  056D  1C03               	btfss	3,0
  4050  056E  2D77               	goto	i1l1661
  4051  056F                     i1l1659:	
  4052  056F  3000               	movlw	0
  4053  0570  00AB               	movwf	_val3+3
  4054  0571  3000               	movlw	0
  4055  0572  00AA               	movwf	_val3+2
  4056  0573  3000               	movlw	0
  4057  0574  00A9               	movwf	_val3+1
  4058  0575  3000               	movlw	0
  4059  0576  00A8               	movwf	_val3
  4060  0577                     i1l1661:	
  4061                           
  4062                           ;newmain.c: 290:                                 if(val4>9)val4=0;
  4063  0577  1BA7               	btfsc	_val4+3,7
  4064  0578  2E52               	goto	i1l212
  4065  0579  0827               	movf	_val4+3,w
  4066  057A  1D03               	btfss	3,2
  4067  057B  2D88               	goto	i1l1663
  4068  057C  0826               	movf	_val4+2,w
  4069  057D  1D03               	btfss	3,2
  4070  057E  2D88               	goto	i1l1663
  4071  057F  0825               	movf	_val4+1,w
  4072  0580  1D03               	btfss	3,2
  4073  0581  2D88               	goto	i1l1663
  4074  0582  300A               	movlw	10
  4075  0583  0224               	subwf	_val4,w
  4076  0584  1D03               	skipz
  4077  0585  2D86               	goto	u142_23
  4078  0586                     u142_23:	
  4079  0586  1C03               	btfss	3,0
  4080  0587  2E52               	goto	i1l212
  4081  0588                     i1l1663:	
  4082  0588  3000               	movlw	0
  4083  0589  00A7               	movwf	_val4+3
  4084  058A  3000               	movlw	0
  4085  058B  00A6               	movwf	_val4+2
  4086  058C  3000               	movlw	0
  4087  058D  00A5               	movwf	_val4+1
  4088  058E  3000               	movlw	0
  4089  058F  2E51               	goto	L2
  4090  0590                     i1l1665:	
  4091                           
  4092                           ;newmain.c: 295:                                 if (pos==5)val4--;
  4093  0590  3005               	movlw	5
  4094  0591  0620               	xorwf	_pos,w
  4095  0592  0421               	iorwf	_pos+1,w
  4096  0593  0422               	iorwf	_pos+2,w
  4097  0594  0423               	iorwf	_pos+3,w
  4098  0595  1D03               	btfss	3,2
  4099  0596  2DA2               	goto	i1l1669
  4100  0597  30FF               	movlw	255
  4101  0598  07A4               	addwf	_val4,f
  4102  0599  30FF               	movlw	255
  4103  059A  1C03               	skipc
  4104  059B  07A5               	addwf	_val4+1,f
  4105  059C  30FF               	movlw	255
  4106  059D  1C03               	skipc
  4107  059E  07A6               	addwf	_val4+2,f
  4108  059F  30FF               	movlw	255
  4109  05A0  1C03               	skipc
  4110  05A1  07A7               	addwf	_val4+3,f
  4111  05A2                     i1l1669:	
  4112                           
  4113                           ;newmain.c: 296:                                 if((pos==4)||(val4<0))val3--;
  4114  05A2  3004               	movlw	4
  4115  05A3  0620               	xorwf	_pos,w
  4116  05A4  0421               	iorwf	_pos+1,w
  4117  05A5  0422               	iorwf	_pos+2,w
  4118  05A6  0423               	iorwf	_pos+3,w
  4119  05A7  1903               	btfsc	3,2
  4120  05A8  2DAB               	goto	i1l1673
  4121  05A9  1FA7               	btfss	_val4+3,7
  4122  05AA  2DB6               	goto	i1l1675
  4123  05AB                     i1l1673:	
  4124  05AB  30FF               	movlw	255
  4125  05AC  07A8               	addwf	_val3,f
  4126  05AD  30FF               	movlw	255
  4127  05AE  1C03               	skipc
  4128  05AF  07A9               	addwf	_val3+1,f
  4129  05B0  30FF               	movlw	255
  4130  05B1  1C03               	skipc
  4131  05B2  07AA               	addwf	_val3+2,f
  4132  05B3  30FF               	movlw	255
  4133  05B4  1C03               	skipc
  4134  05B5  07AB               	addwf	_val3+3,f
  4135  05B6                     i1l1675:	
  4136                           
  4137                           ;newmain.c: 297:                                 if ((pos==3)||(val3<0))val2--;
  4138  05B6  3003               	movlw	3
  4139  05B7  0620               	xorwf	_pos,w
  4140  05B8  0421               	iorwf	_pos+1,w
  4141  05B9  0422               	iorwf	_pos+2,w
  4142  05BA  0423               	iorwf	_pos+3,w
  4143  05BB  1903               	btfsc	3,2
  4144  05BC  2DBF               	goto	i1l1679
  4145  05BD  1FAB               	btfss	_val3+3,7
  4146  05BE  2DCA               	goto	i1l1681
  4147  05BF                     i1l1679:	
  4148  05BF  30FF               	movlw	255
  4149  05C0  07AC               	addwf	_val2,f
  4150  05C1  30FF               	movlw	255
  4151  05C2  1C03               	skipc
  4152  05C3  07AD               	addwf	_val2+1,f
  4153  05C4  30FF               	movlw	255
  4154  05C5  1C03               	skipc
  4155  05C6  07AE               	addwf	_val2+2,f
  4156  05C7  30FF               	movlw	255
  4157  05C8  1C03               	skipc
  4158  05C9  07AF               	addwf	_val2+3,f
  4159  05CA                     i1l1681:	
  4160                           
  4161                           ;newmain.c: 298:                                 if((pos==1)||(val2<0))val1--;
  4162  05CA  0320               	decf	_pos,w
  4163  05CB  0421               	iorwf	_pos+1,w
  4164  05CC  0422               	iorwf	_pos+2,w
  4165  05CD  0423               	iorwf	_pos+3,w
  4166  05CE  1903               	btfsc	3,2
  4167  05CF  2DD2               	goto	i1l1685
  4168  05D0  1FAF               	btfss	_val2+3,7
  4169  05D1  2DDD               	goto	i1l220
  4170  05D2                     i1l1685:	
  4171  05D2  30FF               	movlw	255
  4172  05D3  07B0               	addwf	_val1,f
  4173  05D4  30FF               	movlw	255
  4174  05D5  1C03               	skipc
  4175  05D6  07B1               	addwf	_val1+1,f
  4176  05D7  30FF               	movlw	255
  4177  05D8  1C03               	skipc
  4178  05D9  07B2               	addwf	_val1+2,f
  4179  05DA  30FF               	movlw	255
  4180  05DB  1C03               	skipc
  4181  05DC  07B3               	addwf	_val1+3,f
  4182  05DD                     i1l220:	
  4183                           
  4184                           ;newmain.c: 299:                                 if ((pos==0)||(val1<0)) val0--;
  4185  05DD  0823               	movf	_pos+3,w
  4186  05DE  0422               	iorwf	_pos+2,w
  4187  05DF  0421               	iorwf	_pos+1,w
  4188  05E0  0420               	iorwf	_pos,w
  4189  05E1  1903               	skipnz
  4190  05E2  2DE5               	goto	i1l1689
  4191  05E3  1FB3               	btfss	_val1+3,7
  4192  05E4  2DF0               	goto	i1l1691
  4193  05E5                     i1l1689:	
  4194  05E5  30FF               	movlw	255
  4195  05E6  07DE               	addwf	_val0,f
  4196  05E7  30FF               	movlw	255
  4197  05E8  1C03               	skipc
  4198  05E9  07DF               	addwf	_val0+1,f
  4199  05EA  30FF               	movlw	255
  4200  05EB  1C03               	skipc
  4201  05EC  07E0               	addwf	_val0+2,f
  4202  05ED  30FF               	movlw	255
  4203  05EE  1C03               	skipc
  4204  05EF  07E1               	addwf	_val0+3,f
  4205  05F0                     i1l1691:	
  4206                           
  4207                           ;newmain.c: 301:                                 if(val0<1)
  4208  05F0  1BE1               	btfsc	_val0+3,7
  4209  05F1  2E01               	goto	i1l1693
  4210  05F2  0861               	movf	_val0+3,w
  4211  05F3  1D03               	btfss	3,2
  4212  05F4  2E2A               	goto	i1l226
  4213  05F5  0860               	movf	_val0+2,w
  4214  05F6  1D03               	btfss	3,2
  4215  05F7  2E2A               	goto	i1l226
  4216  05F8  085F               	movf	_val0+1,w
  4217  05F9  1D03               	btfss	3,2
  4218  05FA  2E2A               	goto	i1l226
  4219  05FB  3001               	movlw	1
  4220  05FC  025E               	subwf	_val0,w
  4221  05FD  1D03               	skipz
  4222  05FE  2DFF               	goto	u152_23
  4223  05FF                     u152_23:	
  4224  05FF  1803               	btfsc	3,0
  4225  0600  2E2A               	goto	i1l226
  4226  0601                     i1l1693:	
  4227                           
  4228                           ;newmain.c: 302:                                 {val0=1;
  4229  0601  3000               	movlw	0
  4230  0602  00E1               	movwf	_val0+3
  4231  0603  3000               	movlw	0
  4232  0604  00E0               	movwf	_val0+2
  4233  0605  3000               	movlw	0
  4234  0606  00DF               	movwf	_val0+1
  4235  0607  3001               	movlw	1
  4236  0608  00DE               	movwf	_val0
  4237                           
  4238                           ;newmain.c: 303:                                 if(val1<0){val1=0;}
  4239  0609  1FB3               	btfss	_val1+3,7
  4240  060A  2E13               	goto	i1l1699
  4241  060B  3000               	movlw	0
  4242  060C  00B3               	movwf	_val1+3
  4243  060D  3000               	movlw	0
  4244  060E  00B2               	movwf	_val1+2
  4245  060F  3000               	movlw	0
  4246  0610  00B1               	movwf	_val1+1
  4247  0611  3000               	movlw	0
  4248  0612  00B0               	movwf	_val1
  4249  0613                     i1l1699:	
  4250                           
  4251                           ;newmain.c: 304:                                 {;newmain.c: 305:                      
      +                                     if(val2<0){val2=0;}
  4252  0613  1FAF               	btfss	_val2+3,7
  4253  0614  2E1D               	goto	i1l1703
  4254  0615  3000               	movlw	0
  4255  0616  00AF               	movwf	_val2+3
  4256  0617  3000               	movlw	0
  4257  0618  00AE               	movwf	_val2+2
  4258  0619  3000               	movlw	0
  4259  061A  00AD               	movwf	_val2+1
  4260  061B  3000               	movlw	0
  4261  061C  00AC               	movwf	_val2
  4262  061D                     i1l1703:	
  4263                           
  4264                           ;newmain.c: 307:                                 {if(val3<0){val3=0;}
  4265  061D  1FAB               	btfss	_val3+3,7
  4266  061E  2E27               	goto	i1l1707
  4267  061F  3000               	movlw	0
  4268  0620  00AB               	movwf	_val3+3
  4269  0621  3000               	movlw	0
  4270  0622  00AA               	movwf	_val3+2
  4271  0623  3000               	movlw	0
  4272  0624  00A9               	movwf	_val3+1
  4273  0625  3000               	movlw	0
  4274  0626  00A8               	movwf	_val3
  4275  0627                     i1l1707:	
  4276                           
  4277                           ;newmain.c: 308:                                 {if(val4<0){val4=0;}
  4278  0627  1BA7               	btfsc	_val4+3,7
  4279  0628  2D88               	goto	i1l1663
  4280  0629  2E52               	goto	i1l212
  4281  062A                     i1l226:	
  4282                           ;newmain.c: 310:                                 else{
  4283                           
  4284                           
  4285                           ;newmain.c: 311:                                 if(val1<0)val1=9;
  4286  062A  1FB3               	btfss	_val1+3,7
  4287  062B  2E34               	goto	i1l1713
  4288  062C  3000               	movlw	0
  4289  062D  00B3               	movwf	_val1+3
  4290  062E  3000               	movlw	0
  4291  062F  00B2               	movwf	_val1+2
  4292  0630  3000               	movlw	0
  4293  0631  00B1               	movwf	_val1+1
  4294  0632  3009               	movlw	9
  4295  0633  00B0               	movwf	_val1
  4296  0634                     i1l1713:	
  4297                           
  4298                           ;newmain.c: 312:                                 if(val2<0)val2=9;
  4299  0634  1FAF               	btfss	_val2+3,7
  4300  0635  2E3E               	goto	i1l1717
  4301  0636  3000               	movlw	0
  4302  0637  00AF               	movwf	_val2+3
  4303  0638  3000               	movlw	0
  4304  0639  00AE               	movwf	_val2+2
  4305  063A  3000               	movlw	0
  4306  063B  00AD               	movwf	_val2+1
  4307  063C  3009               	movlw	9
  4308  063D  00AC               	movwf	_val2
  4309  063E                     i1l1717:	
  4310                           
  4311                           ;newmain.c: 313:                                 if(val3<0)val3=9;
  4312  063E  1FAB               	btfss	_val3+3,7
  4313  063F  2E48               	goto	i1l1721
  4314  0640  3000               	movlw	0
  4315  0641  00AB               	movwf	_val3+3
  4316  0642  3000               	movlw	0
  4317  0643  00AA               	movwf	_val3+2
  4318  0644  3000               	movlw	0
  4319  0645  00A9               	movwf	_val3+1
  4320  0646  3009               	movlw	9
  4321  0647  00A8               	movwf	_val3
  4322  0648                     i1l1721:	
  4323                           
  4324                           ;newmain.c: 314:                                 if(val4<0)val4=9;
  4325  0648  1FA7               	btfss	_val4+3,7
  4326  0649  2E52               	goto	i1l212
  4327  064A  3000               	movlw	0
  4328  064B  00A7               	movwf	_val4+3
  4329  064C  3000               	movlw	0
  4330  064D  00A6               	movwf	_val4+2
  4331  064E  3000               	movlw	0
  4332  064F  00A5               	movwf	_val4+1
  4333  0650  3009               	movlw	9
  4334  0651                     L2:	
  4335  0651  00A4               	movwf	_val4
  4336  0652                     i1l212:	
  4337                           ;newmain.c: 317:                              }
  4338                           
  4339                           
  4340                           ;newmain.c: 320:         _delay((unsigned long)((150)*(20000000/4000000.0)));
  4341  0652  30F9               	movlw	249
  4342  0653  00F0               	movwf	??_ISR
  4343  0654                     u244_27:	
  4344  0654  0BF0               	decfsz	??_ISR,f
  4345  0655  2E54               	goto	u244_27
  4346  0656  2E57               	nop2
  4347                           
  4348                           ;newmain.c: 322:         INTF = 0;
  4349  0657  108B               	bcf	11,1	;volatile
  4350  0658                     i1l236:	
  4351  0658  0872               	movf	??_ISR+2,w
  4352  0659  008A               	movwf	10
  4353  065A  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  4354  065B  0083               	movwf	3
  4355  065C  0EFE               	swapf	126,f
  4356  065D  0E7E               	swapf	126,w
  4357  065E  0009               	retfie
  4358  065F                     __end_of_ISR:	
  4359  007E                     btemp	set	126	;btemp
  4360  007E                     wtemp0	set	126
  4361                           
  4362                           	psect	intentry
  4363  0004                     __pintentry:	
  4364                           ;incstack = 0
  4365                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4366                           
  4367  0004                     interrupt_function:	
  4368  007E                     saved_w	set	btemp
  4369  0004  00FE               	movwf	btemp
  4370  0005  0E03               	swapf	3,w
  4371  0006  00F1               	movwf	??_ISR+1
  4372  0007  080A               	movf	10,w
  4373  0008  00F2               	movwf	??_ISR+2
  4374  0009  120A  118A  2C6A   	ljmp	_ISR


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         61
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     21      66
    BANK1            80     16      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    send_string@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[4]), STR_1(CODE[7]), buff(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_clear
    _main->_lcd_init
    _main->_send_string
    _send_int->_send_string
    _send_string->_lcd_data
    _lcd_data->_data_write
    _utoa->___lwmod
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_data_write
    _DDS_init->_spi_write
    _phase_write->_spi_write
    _freq_write->_spi_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_int
    _send_int->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _DDS_init->_freq_write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   12007
                                              0 BANK1     16    16      0
                           _DDS_init
                             ___lmul
                         _freq_write
                          _lcd_clear
                            _lcd_cmd
                           _lcd_init
                           _send_int
                        _send_string
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _send_int                                             2     0      2    3084
                                             19 BANK0      2     0      2
                               _itoa
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          4     2      2     586
                                              7 COMMON     2     0      2
                                              0 BANK0      2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0     186
                                              5 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2017
                                             12 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1568
                                              3 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     310
                                              7 COMMON     2     2      0
                         _data_write
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     186
                                              7 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     186
                                              5 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (3) _data_write                                           2     2      0     124
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8    1036
                                              3 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _DDS_init                                             0     0      0    3887
                         _freq_write
                        _phase_write
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _phase_write                                          8     4      4    1155
                                              0 BANK0      8     4      4
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _freq_write                                           9     4      5    1729
                                              0 BANK0      9     4      5
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            4     2      2    1003
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DDS_init
     _freq_write
       _spi_write
     _phase_write
       _spi_write
     _spi_write
   ___lmul
   _freq_write
     _spi_write
   _lcd_clear
     _lcd_cmd
       _data_write
   _lcd_cmd
     _data_write
   _lcd_init
     _data_write
     _lcd_cmd
       _data_write
   _send_int
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _send_string
       _lcd_data
         _data_write
   _send_string
     _lcd_data
       _data_write
   _spi_write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     10      30       7       60.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Aug 29 15:01:14 2019

            lcd_cmd@data 0076                        pc 0002             lcd_data@data 0076  
            __CFG_CP$OFF 0000                       fsr 0004                      l141 0EB5  
                    l142 0EB8                      l160 0E2B                      l161 0E2C  
                    l162 0E30                      l139 0EAF                      l163 0E31  
                    l164 0E35                      l165 0E36                      l158 0E24  
                    l159 0E27                      l801 0FEA                      _GIE 005F  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      _RC2 003A                      _RB5 0035  
                    _RC3 003B                      _RC4 003C                      _RC5 003D  
                    _RC6 003E                      _RC7 003F             __CFG_CPD$OFF 0000  
                    _ISR 046A                      _pos 0020                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     l2021 0E4D                     l2033 0E10  
                   l2211 03CF                     l2213 03E5                     l1431 0E98  
                   l2207 03B1                     l2081 0F73                     l1425 0E7C  
                   l2233 0434                     l1427 0E8A                     l1435 0EA3  
                   l2243 045F                     l2147 00B4                     l2077 0F5B  
                   l2229 0428                     l2157 0101                     l2247 0467  
                   l2167 014D                     l2177 0199                     l2187 01E5  
                   l2197 0231                     l1911 0F1F                     l1913 0F2D  
                   l1923 0F4E                     l1919 0F43                     l1937 0F9B  
                   l1947 0FBC                     l1981 06C2                     l1985 06D5  
                   STR_1 0810                     STR_2 0817                     _ANS8 0C48  
                   _ANS9 0C49                     u1025 0E7F                     u2005 0DE6  
                   u1045 0E90                     u1055 0E99                     u2105 0176  
                   u2130 0310                     u2131 0313                     u2115 01C2  
                   u2140 032C                     u2132 031A                     u2141 032D  
                   u2133 031D                     u2125 020E                     u2150 033E  
                   u2142 0332                     u2055 0F75                     u2151 033F  
                   u2143 0333                     u2160 0350                     u2152 0344  
                   u2065 0F7D                     u2161 0351                     u2153 0345  
                   u2162 0356                     u2307 0728                     u2163 0357  
                   u2317 0736                     u2085 00DE                     u2407 0DE0  
                   u2327 0745                     u2175 038F                     u2095 012A  
                   u2417 0DF3                     u2337 0754                     u2427 0E39  
                   u2347 0761                     u2267 03EE                     u2437 0E43  
                   u2357 0768                     u2277 07E5                     u2367 0775  
                   u2287 07F8                     u2377 0782                     u2297 071A  
                   u1905 07EB                     u2387 078F                     u2397 0DBC  
                   u1845 0F22                     u1945 0670                     u1865 0F2E  
                   u1955 0689                     u1875 0F3A                     _PEIE 005E  
                   u1965 06A2                     u1885 0F44                     _INTE 005C  
                   _INTF 0059                     u1995 0EED             __CFG_WRT$OFF 0000  
                   _buff 00AA                     _main 0024                     _freq 0034  
                   _val0 005E                     _val1 0030                     _val2 002C  
                   _val3 0028                     _val4 0024                     _itoa 0DFB  
                   _temp 00A0                     btemp 007E                     _utoa 0F94  
          __CFG_BOREN$ON 0000                     start 000C            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_ISR 0070         __end_of_DDS_init 07DF  
                  ?_main 0070                    ?_itoa 0055                    _ANS10 0C4A  
                  _ANS11 0C4B                    _ANS12 0C4C                    _ANS13 0C4D  
          __CFG_WDTE$OFF 0000                    ?_utoa 004C          __end_of___lwdiv 0F53  
                  i1l202 0507                    i1l220 05DD                    i1l212 0652  
                  i1l226 062A                    i1l236 0658          __end_of___lwmod 0EA8  
                  _PHASE 00A8                    _RESET 00CE                    _SET_0 00CC  
                  _SET_1 00CA      ___lmul@multiplicand 004D           __CFG_FCMEN$OFF 0000  
        __end_of_lcd_cmd 0DFB                    _temp1 00A6                    _temp2 00A4  
                  pclath 000A                    utoa@c 0053                    utoa@v 0051  
                  status 0003                    wtemp0 007E             ?_phase_write 0049  
        __initialization 000F             __end_of_main 046A             __end_of_itoa 0E1D  
           __end_of_utoa 1000                   ??_main 00B2                   ??_itoa 0059  
                 ??_utoa 0050                   i1l1703 061D                   i1l1631 04AE  
                 i1l1623 0481                   i1l1721 0648                   i1l1713 0634  
                 i1l1633 04BC                   i1l1707 0627                   i1l1651 053D  
                 i1l1643 04F9                   i1l1627 0496                   i1l1717 063E  
                 i1l1661 0577                   i1l1653 0545                   i1l1637 04D4  
                 i1l1663 0588                   i1l1655 0556                   i1l1647 051E  
                 i1l1639 04E2                   i1l1681 05CA                   i1l1673 05AB  
                 i1l1657 055E                   i1l1649 052C                   i1l1665 0590  
                 i1l1691 05F0                   i1l1675 05B6                   i1l1659 056F  
                 i1l1693 0601                   i1l1685 05D2                   i1l1669 05A2  
                 i1l1679 05BF                   i1l1689 05E5                   i1l1699 0613  
                 u140_23 0554                   u132_23 04AC                   u141_23 056D  
                 u142_23 0586                   u134_23 04D2                   _INTEDG 040E  
                 u152_23 05FF                   u136_23 04F7                   u129_23 047F  
                 u138_23 051C                   u139_23 053B                   u244_27 0654  
           ?_send_string 0077                   _F_FREQ 0043                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB2 0432                   _TRISB3 0433  
                 _TRISC1 0439                   _TRISB4 0434                   _TRISC2 043A  
                 _TRISB5 0435                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _TRISC6 043E                   _TRISC7 043F  
         __CFG_PWRTE$OFF 0000         __end_of_lcd_data 0800         __end_of_lcd_init 0795  
                 ___lmul 0F53                ??___lwdiv 0077                ??___lwmod 0077  
              ??_lcd_cmd 0075         __end_of_send_int 0DDA                   saved_w 007E  
              ?_DDS_init 0070  __end_of__initialization 0020            spi_write@data 0073  
         __pcstackCOMMON 0070       __size_of_lcd_clear 0010               __pbssBANK0 0020  
             __pbssBANK1 00A0               ??_DDS_init 0077               _data_write 0E1D  
             __pmaintext 0024                  ?___lmul 0049     __size_of_phase_write 0039  
             __pintentry 0004           ___lmul@product 0074       __size_of_spi_write 0034  
              ?_lcd_data 0070                  _UNRESET 00C8                ?_lcd_init 0070  
                _SYNCSRC 00C6               __stringtab 0800     __size_of_send_string 002D  
              ?_send_int 005C               _freq_write 065F        __end_of_lcd_clear 0DC2  
        __size_of___lmul 0041                  ___lwdiv 0F15                  ___lwmod 0E76  
                __ptext1 0DC2                  __ptext2 0E49                  __ptext3 07DF  
                __ptext4 0DFB                  __ptext5 0F94               _cursor_dir 0042  
                __ptext6 0E76                  __ptext7 0F15                  __ptext8 06FE  
                __ptext9 0DB2                  _lcd_cmd 0DDA                  _freqLSB 0038  
                _freqMSB 0079             __size_of_ISR 01F5         phase_write@input 0049  
             ??_lcd_data 0075                  clrloop0 0DAB               ??_lcd_init 0077  
   end_of_initialization 0020                  itoa@buf 005B                  itoa@val 0055  
            ?_data_write 0070               ??_send_int 0079        __end_of_spi_write 0EDC  
                utoa@buf 0054                  utoa@val 004C        __size_of_DDS_init 004A  
            ?_freq_write 0049          freq_write@input 0049           __end_of___lmul 0F94  
    __size_of_data_write 002C      start_initialization 000F              __end_of_ISR 065F  
               ??___lmul 0073              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0049            __pcstackBANK1 00B2            freq_write@reg 004D  
    __size_of_freq_write 009F        __size_of_lcd_data 0021        __size_of_lcd_init 0097  
              __pnvBANK0 005E                __pnvBANK1 00C2            ??_phase_write 004D  
       ___lwdiv@dividend 0075        __size_of_send_int 0018                 ?___lwdiv 0073  
               ?___lwmod 0073                _lcd_clear 0DB2                __pstrings 0800  
               ?_lcd_cmd 0070                _last_freq 00C2                _last_val0 0048  
              _last_val1 0047                _last_val2 0046                _last_val3 0045  
              _last_val4 0044         ___lwdiv@quotient 004A            ??_send_string 0079  
               _DDS_init 0795        interrupt_function 0004             ??_data_write 0073  
              clear_ram0 0DAA      __end_of_phase_write 0F15               ?_lcd_clear 0070  
              _spi_write 0EA8              __stringbase 080F             send_int@data 005C  
     __end_of_data_write 0E49        ___lmul@multiplier 0049               spi_write@i 0076  
           ??_freq_write 004E             send_string@i 0049             send_string@s 0077  
    __end_of_send_string 0E76         __size_of___lwdiv 003E         __size_of___lwmod 0032  
             ?_spi_write 0073       __end_of__stringtab 0810         __size_of_lcd_cmd 0021  
        ___lwdiv@divisor 0073          ___lwdiv@counter 0049                 __ptext10 0DDA  
               __ptext11 0E1D                 __ptext12 0F53                 __ptext13 0795  
               __ptext14 0EDC                 __ptext15 065F                 __ptext16 0EA8  
               __ptext17 046A        __CFG_BOR4V$BOR40V 0000       __end_of_freq_write 06FE  
               _lcd_data 07DF                 _lcd_init 06FE                 _freqHLSB 003A  
               _freqHMSB 003C                 _freqLLSB 003E                 _freqLMSB 0040  
          __size_of_main 0446            __size_of_itoa 0022            __size_of_utoa 006C  
               _send_int 0DC2              _phase_write 0EDC              ??_lcd_clear 0077  
         data_write@data 0074                 itoa@base 0057                 intlevel1 0000  
            _send_string 0E49         ___lwmod@dividend 0075                stringcode 080A  
            ??_spi_write 0075                 utoa@base 004E          ___lwmod@divisor 0073  
        ___lwmod@counter 0078                 stringdir 080A                 stringtab 0800  
