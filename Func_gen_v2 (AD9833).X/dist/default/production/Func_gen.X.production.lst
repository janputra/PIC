

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 07 11:06:59 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16LF872 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   104                           PCLATH equ 0Ah ;# 
   105  000A                     # 362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   106                           INTCON equ 0Bh ;# 
   107  000B                     # 440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   108                           PIR1 equ 0Ch ;# 
   109  000C                     # 485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   110                           PIR2 equ 0Dh ;# 
   111  000D                     # 512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   112                           TMR1 equ 0Eh ;# 
   113  000E                     # 519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   114                           TMR1L equ 0Eh ;# 
   115  000E                     # 526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   116                           TMR1H equ 0Fh ;# 
   117  000F                     # 533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   118                           T1CON equ 010h ;# 
   119  0010                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   120                           TMR2 equ 011h ;# 
   121  0011                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   122                           T2CON equ 012h ;# 
   123  0012                     # 688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   124                           SSPBUF equ 013h ;# 
   125  0013                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   126                           SSPCON equ 014h ;# 
   127  0014                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   128                           CCPR1 equ 015h ;# 
   129  0015                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   130                           CCPR1L equ 015h ;# 
   131  0015                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   132                           CCPR1H equ 016h ;# 
   133  0016                     # 786 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   134                           CCP1CON equ 017h ;# 
   135  0017                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   136                           ADRESH equ 01Eh ;# 
   137  001E                     # 851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   138                           ADCON0 equ 01Fh ;# 
   139  001F                     # 947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   140                           OPTION_REG equ 081h ;# 
   141  0081                     # 1017 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   142                           TRISA equ 085h ;# 
   143  0085                     # 1067 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   144                           TRISB equ 086h ;# 
   145  0086                     # 1129 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   146                           TRISC equ 087h ;# 
   147  0087                     # 1191 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   148                           PIE1 equ 08Ch ;# 
   149  008C                     # 1236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   150                           PIE2 equ 08Dh ;# 
   151  008D                     # 1263 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   152                           PCON equ 08Eh ;# 
   153  008E                     # 1297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   154                           SSPCON2 equ 091h ;# 
   155  0091                     # 1359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   156                           PR2 equ 092h ;# 
   157  0092                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   158                           SSPADD equ 093h ;# 
   159  0093                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   160                           SSPSTAT equ 094h ;# 
   161  0094                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   162                           ADRESL equ 09Eh ;# 
   163  009E                     # 1549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   164                           ADCON1 equ 09Fh ;# 
   165  009F                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   166                           EEDATA equ 010Ch ;# 
   167  010C                     # 1609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   168                           EEADR equ 010Dh ;# 
   169  010D                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   170                           EEDATH equ 010Eh ;# 
   171  010E                     # 1623 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   172                           EEADRH equ 010Fh ;# 
   173  010F                     # 1630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   174                           EECON1 equ 018Ch ;# 
   175  018C                     # 1675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   176                           EECON2 equ 018Dh ;# 
   177  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   178                           INDF equ 00h ;# 
   179  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   180                           TMR0 equ 01h ;# 
   181  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   182                           PCL equ 02h ;# 
   183  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   184                           STATUS equ 03h ;# 
   185  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   186                           FSR equ 04h ;# 
   187  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   188                           PORTA equ 05h ;# 
   189  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   190                           PORTB equ 06h ;# 
   191  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   192                           PORTC equ 07h ;# 
   193  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   194                           PCLATH equ 0Ah ;# 
   195  000A                     # 362 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   196                           INTCON equ 0Bh ;# 
   197  000B                     # 440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   198                           PIR1 equ 0Ch ;# 
   199  000C                     # 485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   200                           PIR2 equ 0Dh ;# 
   201  000D                     # 512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   202                           TMR1 equ 0Eh ;# 
   203  000E                     # 519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   204                           TMR1L equ 0Eh ;# 
   205  000E                     # 526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   206                           TMR1H equ 0Fh ;# 
   207  000F                     # 533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   208                           T1CON equ 010h ;# 
   209  0010                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   210                           TMR2 equ 011h ;# 
   211  0011                     # 617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   212                           T2CON equ 012h ;# 
   213  0012                     # 688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   214                           SSPBUF equ 013h ;# 
   215  0013                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   216                           SSPCON equ 014h ;# 
   217  0014                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   218                           CCPR1 equ 015h ;# 
   219  0015                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   220                           CCPR1L equ 015h ;# 
   221  0015                     # 779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   222                           CCPR1H equ 016h ;# 
   223  0016                     # 786 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   224                           CCP1CON equ 017h ;# 
   225  0017                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   226                           ADRESH equ 01Eh ;# 
   227  001E                     # 851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   228                           ADCON0 equ 01Fh ;# 
   229  001F                     # 947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   230                           OPTION_REG equ 081h ;# 
   231  0081                     # 1017 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   232                           TRISA equ 085h ;# 
   233  0085                     # 1067 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   234                           TRISB equ 086h ;# 
   235  0086                     # 1129 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   236                           TRISC equ 087h ;# 
   237  0087                     # 1191 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   238                           PIE1 equ 08Ch ;# 
   239  008C                     # 1236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   240                           PIE2 equ 08Dh ;# 
   241  008D                     # 1263 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   242                           PCON equ 08Eh ;# 
   243  008E                     # 1297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   244                           SSPCON2 equ 091h ;# 
   245  0091                     # 1359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   246                           PR2 equ 092h ;# 
   247  0092                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   248                           SSPADD equ 093h ;# 
   249  0093                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   250                           SSPSTAT equ 094h ;# 
   251  0094                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   252                           ADRESL equ 09Eh ;# 
   253  009E                     # 1549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   254                           ADCON1 equ 09Fh ;# 
   255  009F                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   256                           EEDATA equ 010Ch ;# 
   257  010C                     # 1609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   258                           EEADR equ 010Dh ;# 
   259  010D                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   260                           EEDATH equ 010Eh ;# 
   261  010E                     # 1623 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   262                           EEADRH equ 010Fh ;# 
   263  010F                     # 1630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   264                           EECON1 equ 018Ch ;# 
   265  018C                     # 1675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16lf872.h"
   266                           EECON2 equ 018Dh ;# 
   267  018D                     	FNCALL	_main,_DDS
   268                           	FNCALL	_main,_DDS_init
   269                           	FNCALL	_main,___lmul
   270                           	FNCALL	_main,___wmul
   271                           	FNCALL	_main,_lcd_clear
   272                           	FNCALL	_main,_lcd_cmd
   273                           	FNCALL	_main,_lcd_init
   274                           	FNCALL	_main,_send_int
   275                           	FNCALL	_main,_send_string
   276                           	FNCALL	_main,_spi_write
   277                           	FNCALL	_send_int,_itoa
   278                           	FNCALL	_send_int,_send_string
   279                           	FNCALL	_send_string,_lcd_data
   280                           	FNCALL	_lcd_data,_data_write
   281                           	FNCALL	_itoa,_utoa
   282                           	FNCALL	_utoa,___lwdiv
   283                           	FNCALL	_utoa,___lwmod
   284                           	FNCALL	_lcd_init,_data_write
   285                           	FNCALL	_lcd_init,_lcd_cmd
   286                           	FNCALL	_lcd_clear,_lcd_cmd
   287                           	FNCALL	_lcd_cmd,_data_write
   288                           	FNCALL	_DDS_init,_DDS
   289                           	FNCALL	_DDS_init,_spi_write
   290                           	FNCALL	_DDS,_spi_write
   291                           	FNROOT	_main
   292                           	FNCALL	intlevel1,_ISR
   293                           	global	intlevel1
   294                           	FNROOT	intlevel1
   295                           	global	_val1
   296                           	global	_freq
   297                           	global	_freqLSB
   298                           	global	_freqMSB
   299                           	global	_cursor_dir
   300                           	global	_F_FREQ
   301                           	global	_last_val4
   302                           	global	_last_val3
   303                           	global	_last_val2
   304                           	global	_last_val1
   305                           	global	_last_val0
   306                           	global	_pos
   307                           	global	_val4
   308                           	global	_val3
   309                           	global	_val2
   310                           	global	_buff
   311                           	global	_val0
   312                           psect	nvBANK0,class=BANK0,space=1,noexec
   313                           global __pnvBANK0
   314                           __pnvBANK0:
   315  005D                     _val0:
   316  005D                            ds      4
   317  005D                     
   318                           	global	_last_freq
   319                           _last_freq:
   320  0061                            ds      4
   321  0061                     
   322                           	global	_PHASE
   323                           _PHASE:
   324  0065                            ds      2
   325  0065                     
   326                           	global	_SET_1
   327                           _SET_1:
   328  0067                            ds      2
   329  0067                     
   330                           	global	_SET_0
   331                           _SET_0:
   332  0069                            ds      2
   333  0069                     
   334                           	global	_RESET
   335                           _RESET:
   336  006B                            ds      2
   337  006B                     
   338                           	global	_PORTB
   339                           _PORTB	set	0x6
   340  0006                     	global	_RC3
   341                           _RC3	set	0x3B
   342  003B                     	global	_INTE
   343                           _INTE	set	0x5C
   344  005C                     	global	_PEIE
   345                           _PEIE	set	0x5E
   346  005E                     	global	_GIE
   347                           _GIE	set	0x5F
   348  005F                     	global	_RC2
   349                           _RC2	set	0x3A
   350  003A                     	global	_INTF
   351                           _INTF	set	0x59
   352  0059                     	global	_RB2
   353                           _RB2	set	0x32
   354  0032                     	global	_RB3
   355                           _RB3	set	0x33
   356  0033                     	global	_RB4
   357                           _RB4	set	0x34
   358  0034                     	global	_RB5
   359                           _RB5	set	0x35
   360  0035                     	global	_RC7
   361                           _RC7	set	0x3F
   362  003F                     	global	_RB1
   363                           _RB1	set	0x31
   364  0031                     	global	_RC6
   365                           _RC6	set	0x3E
   366  003E                     	global	_RC5
   367                           _RC5	set	0x3D
   368  003D                     	global	_RC4
   369                           _RC4	set	0x3C
   370  003C                     	global	_INTEDG
   371                           _INTEDG	set	0x40E
   372  040E                     	global	_TRISC2
   373                           _TRISC2	set	0x43A
   374  043A                     	global	_TRISB0
   375                           _TRISB0	set	0x430
   376  0430                     	global	_TRISC1
   377                           _TRISC1	set	0x439
   378  0439                     	global	_TRISC3
   379                           _TRISC3	set	0x43B
   380  043B                     	global	_TRISC4
   381                           _TRISC4	set	0x43C
   382  043C                     	global	_TRISC5
   383                           _TRISC5	set	0x43D
   384  043D                     	global	_TRISC6
   385                           _TRISC6	set	0x43E
   386  043E                     	global	_TRISC7
   387                           _TRISC7	set	0x43F
   388  043F                     	global	_TRISB5
   389                           _TRISB5	set	0x435
   390  0435                     	global	_TRISB4
   391                           _TRISB4	set	0x434
   392  0434                     	global	_TRISB3
   393                           _TRISB3	set	0x433
   394  0433                     	global	_TRISB2
   395                           _TRISB2	set	0x432
   396  0432                     	global	_TRISB1
   397                           _TRISB1	set	0x431
   398  0431                     psect	strings,class=STRING,delta=2,noexec
   399                           global __pstrings
   400                           __pstrings:
   401  0700                     stringtab:
   402  0700                     	global    __stringtab
   403                           __stringtab:
   404  0700                     ;	String table - string pointers are 1 byte each
   405                           	btfsc	(btemp+1),7
   406  0700  1BFF               	ljmp	stringcode
   407  0701  2F0A               	bcf	status,7
   408  0702  1383               	btfsc	(btemp+1),0
   409  0703  187F               	bsf	status,7
   410  0704  1783               	movf	indf,w
   411  0705  0800               	incf fsr
   412  0706  0A84               skipnz
   413  0707  1903               incf btemp+1
   414  0708  0AFF               	return
   415  0709  0008               stringcode:stringdir:
   416  070A                     movlw high(stringdir)
      + 070A                     stringdir:	
   417  070A  3007               movwf pclath
   418  070B  008A               movf fsr,w
   419  070C  0804               incf fsr
   420  070D  0A84               	addwf pc
   421  070E  0782               	global __stringbase
   422                           __stringbase:
   423  070F                     	retlw	0
   424  070F  3400               psect	strings
   425                           	global    __end_of__stringtab
   426                           __end_of__stringtab:
   427  0710                     	
   428                           STR_1:	
   429  0710                     	retlw	50	;'2'
   430  0710  3432               	retlw	48	;'0'
   431  0711  3430               	retlw	46	;'.'
   432  0712  342E               	retlw	48	;'0'
   433  0713  3430               	retlw	48	;'0'
   434  0714  3430               	retlw	48	;'0'
   435  0715  3430               	retlw	0
   436  0716  3400               psect	strings
   437                           	
   438                           STR_2:	
   439  0717                     	retlw	75	;'K'
   440  0717  344B               	retlw	72	;'H'
   441  0718  3448               	retlw	122	;'z'
   442  0719  347A               	retlw	0
   443  071A  3400               psect	strings
   444                           ; #config settings
   445                           global __CFG_FOSC$HS
   446                           __CFG_FOSC$HS equ 0x0
   447  0000                     global __CFG_WDTE$OFF
   448                           __CFG_WDTE$OFF equ 0x0
   449  0000                     global __CFG_PWRTE$OFF
   450                           __CFG_PWRTE$OFF equ 0x0
   451  0000                     global __CFG_CP$OFF
   452                           __CFG_CP$OFF equ 0x0
   453  0000                     global __CFG_BOREN$ON
   454                           __CFG_BOREN$ON equ 0x0
   455  0000                     global __CFG_LVP$OFF
   456                           __CFG_LVP$OFF equ 0x0
   457  0000                     global __CFG_CPD$OFF
   458                           __CFG_CPD$OFF equ 0x0
   459  0000                     global __CFG_WRT$ALL
   460                           __CFG_WRT$ALL equ 0x0
   461  0000                     	file	"C:\Users\LENOVO\AppData\Local\Temp\sg40."
   462                           	line	#
   463                           psect cinit,class=CODE,delta=2
   464                           global start_initialization
   465                           start_initialization:
   466  000B                     
   467                           global __initialization
   468                           __initialization:
   469  000B                     psect	bssBANK0,class=BANK0,space=1,noexec
   470                           global __pbssBANK0
   471                           __pbssBANK0:
   472  0042                     _val1:
   473  0042                            ds      4
   474  0042                     
   475                           _freq:
   476  0046                            ds      4
   477  0046                     
   478                           _temp:
   479  004A                            ds      4
   480  004A                     
   481                           _freqLSB:
   482  004E                            ds      2
   483  004E                     
   484                           _freqMSB:
   485  0050                            ds      2
   486  0050                     
   487                           _cursor_dir:
   488  0052                            ds      1
   489  0052                     
   490                           _F_FREQ:
   491  0053                            ds      1
   492  0053                     
   493                           _last_val4:
   494  0054                            ds      1
   495  0054                     
   496                           _last_val3:
   497  0055                            ds      1
   498  0055                     
   499                           _last_val2:
   500  0056                            ds      1
   501  0056                     
   502                           _last_val1:
   503  0057                            ds      1
   504  0057                     
   505                           _last_val0:
   506  0058                            ds      1
   507  0058                     
   508                           _pos:
   509  0059                            ds      1
   510  0059                     
   511                           _val4:
   512  005A                            ds      1
   513  005A                     
   514                           _val3:
   515  005B                            ds      1
   516  005B                     
   517                           _val2:
   518  005C                            ds      1
   519  005C                     
   520                           psect	bssBANK1,class=BANK1,space=1,noexec
   521                           global __pbssBANK1
   522                           __pbssBANK1:
   523  00A0                     _buff:
   524  00A0                            ds      8
   525  00A0                     
   526                           	file	"C:\Users\LENOVO\AppData\Local\Temp\sg40."
   527                           	line	#
   528                           psect clrtext,class=CODE,delta=2
   529                           global clear_ram0
   530                           ;	Called with FSR containing the base address, and
   531                           ;	W with the last address+1
   532                           clear_ram0:
   533  076F                     	clrwdt			;clear the watchdog before getting into this loop
   534  076F  0064               clrloop0:
   535  0770                     	clrf	indf		;clear RAM location pointed to by FSR
   536  0770  0180               	incf	fsr,f		;increment pointer
   537  0771  0A84               	xorwf	fsr,w		;XOR with final address
   538  0772  0604               	btfsc	status,2	;have we reached the end yet?
   539  0773  1903               	retlw	0		;all done for this memory range, return
   540  0774  3400               	xorwf	fsr,w		;XOR again to restore value
   541  0775  0604               	goto	clrloop0		;do the next byte
   542  0776  2F70               
   543                           ; Clear objects allocated to BANK0
   544                           psect cinit,class=CODE,delta=2,merge=1
   545                           	bcf	status, 7	;select IRP bank0
   546  000B  1383               	movlw	low(__pbssBANK0)
   547  000C  3042               	movwf	fsr
   548  000D  0084               	movlw	low((__pbssBANK0)+01Bh)
   549  000E  305D               	fcall	clear_ram0
   550  000F  276F               ; Clear objects allocated to BANK1
   551                           psect cinit,class=CODE,delta=2,merge=1
   552                           	movlw	low(__pbssBANK1)
   553  0010  30A0               	movwf	fsr
   554  0011  0084               	movlw	low((__pbssBANK1)+08h)
   555  0012  30A8               	fcall	clear_ram0
   556  0013  276F               psect cinit,class=CODE,delta=2,merge=1
   557                           global end_of_initialization,__end_of__initialization
   558                           
   559                           ;End of C runtime variable initialization code
   560                           
   561                           end_of_initialization:
   562  0014                     __end_of__initialization:
   563  0014                     clrf status
   564  0014  0183               ljmp _main	;jump to C main() function
   565  0015  2816               psect	cstackCOMMON,class=COMMON,space=1,noexec
   566                           global __pcstackCOMMON
   567                           __pcstackCOMMON:
   568  0070                     ?_DDS_init:	; 1 bytes @ 0x0
   569  0070                     ?_data_write:	; 1 bytes @ 0x0
   570  0070                     ?_lcd_data:	; 1 bytes @ 0x0
   571  0070                     ?_lcd_cmd:	; 1 bytes @ 0x0
   572  0070                     ?_lcd_init:	; 1 bytes @ 0x0
   573  0070                     ?_lcd_clear:	; 1 bytes @ 0x0
   574  0070                     ?_ISR:	; 1 bytes @ 0x0
   575  0070                     ??_ISR:	; 1 bytes @ 0x0
   576  0070                     ?_main:	; 1 bytes @ 0x0
   577  0070                     	ds	3
   578  0070                     ?_spi_write:	; 1 bytes @ 0x3
   579  0073                     ??_data_write:	; 1 bytes @ 0x3
   580  0073                     	global	?___wmul
   581                           ?___wmul:	; 2 bytes @ 0x3
   582  0073                     	global	?___lwdiv
   583                           ?___lwdiv:	; 2 bytes @ 0x3
   584  0073                     	global	?___lwmod
   585                           ?___lwmod:	; 2 bytes @ 0x3
   586  0073                     	global	?___lmul
   587                           ?___lmul:	; 4 bytes @ 0x3
   588  0073                     	global	spi_write@data
   589                           spi_write@data:	; 2 bytes @ 0x3
   590  0073                     	global	___wmul@multiplier
   591                           ___wmul@multiplier:	; 2 bytes @ 0x3
   592  0073                     	global	___lwdiv@divisor
   593                           ___lwdiv@divisor:	; 2 bytes @ 0x3
   594  0073                     	global	___lwmod@divisor
   595                           ___lwmod@divisor:	; 2 bytes @ 0x3
   596  0073                     	global	___lmul@multiplier
   597                           ___lmul@multiplier:	; 4 bytes @ 0x3
   598  0073                     	ds	1
   599  0073                     	global	data_write@data
   600                           data_write@data:	; 1 bytes @ 0x4
   601  0074                     	ds	1
   602  0074                     ??_spi_write:	; 1 bytes @ 0x5
   603  0075                     ??_lcd_data:	; 1 bytes @ 0x5
   604  0075                     ??_lcd_cmd:	; 1 bytes @ 0x5
   605  0075                     	global	___wmul@multiplicand
   606                           ___wmul@multiplicand:	; 2 bytes @ 0x5
   607  0075                     	global	___lwdiv@dividend
   608                           ___lwdiv@dividend:	; 2 bytes @ 0x5
   609  0075                     	global	___lwmod@dividend
   610                           ___lwmod@dividend:	; 2 bytes @ 0x5
   611  0075                     	ds	1
   612  0075                     	global	spi_write@i
   613                           spi_write@i:	; 1 bytes @ 0x6
   614  0076                     	global	lcd_data@data
   615                           lcd_data@data:	; 1 bytes @ 0x6
   616  0076                     	global	lcd_cmd@data
   617                           lcd_cmd@data:	; 1 bytes @ 0x6
   618  0076                     	ds	1
   619  0076                     ??_DDS:	; 1 bytes @ 0x7
   620  0077                     ??_lcd_init:	; 1 bytes @ 0x7
   621  0077                     ??_lcd_clear:	; 1 bytes @ 0x7
   622  0077                     ?_send_string:	; 1 bytes @ 0x7
   623  0077                     ??___wmul:	; 1 bytes @ 0x7
   624  0077                     ??___lwdiv:	; 1 bytes @ 0x7
   625  0077                     ??___lwmod:	; 1 bytes @ 0x7
   626  0077                     	global	send_string@s
   627                           send_string@s:	; 2 bytes @ 0x7
   628  0077                     	global	___wmul@product
   629                           ___wmul@product:	; 2 bytes @ 0x7
   630  0077                     	global	___lmul@multiplicand
   631                           ___lmul@multiplicand:	; 4 bytes @ 0x7
   632  0077                     	ds	1
   633  0077                     	global	___lwmod@counter
   634                           ___lwmod@counter:	; 1 bytes @ 0x8
   635  0078                     	global	___lwdiv@quotient
   636                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   637  0078                     	ds	1
   638  0078                     ??_send_string:	; 1 bytes @ 0x9
   639  0079                     	global	send_string@i
   640                           send_string@i:	; 2 bytes @ 0x9
   641  0079                     	ds	1
   642  0079                     	global	___lwdiv@counter
   643                           ___lwdiv@counter:	; 1 bytes @ 0xA
   644  007A                     	ds	1
   645  007A                     ??_DDS_init:	; 1 bytes @ 0xB
   646  007B                     ??_send_int:	; 1 bytes @ 0xB
   647  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
   648                           global __pcstackBANK0
   649                           __pcstackBANK0:
   650  0020                     ?_utoa:	; 1 bytes @ 0x0
   651  0020                     ?_DDS:	; 1 bytes @ 0x0
   652  0020                     ??___lmul:	; 1 bytes @ 0x0
   653  0020                     	global	utoa@val
   654                           utoa@val:	; 2 bytes @ 0x0
   655  0020                     	global	DDS@input
   656                           DDS@input:	; 4 bytes @ 0x0
   657  0020                     	ds	1
   658  0020                     	global	___lmul@product
   659                           ___lmul@product:	; 4 bytes @ 0x1
   660  0021                     	ds	1
   661  0021                     	global	utoa@base
   662                           utoa@base:	; 2 bytes @ 0x2
   663  0022                     	ds	2
   664  0022                     ??_utoa:	; 1 bytes @ 0x4
   665  0024                     	global	DDS@reg
   666                           DDS@reg:	; 1 bytes @ 0x4
   667  0024                     	ds	1
   668  0024                     	global	utoa@v
   669                           utoa@v:	; 2 bytes @ 0x5
   670  0025                     	ds	2
   671  0025                     	global	utoa@c
   672                           utoa@c:	; 1 bytes @ 0x7
   673  0027                     	ds	1
   674  0027                     	global	utoa@buf
   675                           utoa@buf:	; 1 bytes @ 0x8
   676  0028                     	ds	1
   677  0028                     ?_itoa:	; 1 bytes @ 0x9
   678  0029                     	global	itoa@val
   679                           itoa@val:	; 2 bytes @ 0x9
   680  0029                     	ds	2
   681  0029                     	global	itoa@base
   682                           itoa@base:	; 2 bytes @ 0xB
   683  002B                     	ds	2
   684  002B                     ??_itoa:	; 1 bytes @ 0xD
   685  002D                     	ds	1
   686  002D                     	global	itoa@cp
   687                           itoa@cp:	; 1 bytes @ 0xE
   688  002E                     	ds	1
   689  002E                     	global	itoa@buf
   690                           itoa@buf:	; 1 bytes @ 0xF
   691  002F                     	ds	1
   692  002F                     ?_send_int:	; 1 bytes @ 0x10
   693  0030                     	global	send_int@data
   694                           send_int@data:	; 2 bytes @ 0x10
   695  0030                     	ds	2
   696  0030                     ??_main:	; 1 bytes @ 0x12
   697  0032                     	ds	16
   698  0032                     ;!
   699                           ;!Data Sizes:
   700                           ;!    Strings     11
   701                           ;!    Constant    0
   702                           ;!    Data        0
   703                           ;!    BSS         35
   704                           ;!    Persistent  16
   705                           ;!    Stack       0
   706                           ;!
   707                           ;!Auto Spaces:
   708                           ;!    Space          Size  Autos    Used
   709                           ;!    COMMON           14     11      11
   710                           ;!    BANK0            80     34      77
   711                           ;!    BANK1            32      0       8
   712                           
   713                           ;!
   714                           ;!Pointer List with Targets:
   715                           ;!
   716                           ;!    utoa@buf	PTR unsigned char  size(1) Largest target is 8
   717                           ;!		 -> buff(BANK1[8]), 
   718                           ;!
   719                           ;!    sp__utoa	PTR unsigned char  size(1) Largest target is 8
   720                           ;!		 -> buff(BANK1[8]), 
   721                           ;!
   722                           ;!    itoa@buf	PTR unsigned char  size(1) Largest target is 8
   723                           ;!		 -> buff(BANK1[8]), 
   724                           ;!
   725                           ;!    itoa@cp	PTR unsigned char  size(1) Largest target is 8
   726                           ;!		 -> buff(BANK1[8]), 
   727                           ;!
   728                           ;!    sp__itoa	PTR unsigned char  size(1) Largest target is 8
   729                           ;!		 -> buff(BANK1[8]), 
   730                           ;!
   731                           ;!    send_string@s	PTR const unsigned char  size(2) Largest target is 8
   732                           ;!		 -> STR_2(CODE[4]), STR_1(CODE[7]), buff(BANK1[8]), 
   733                           ;!
   734                           
   735                           
   736                           ;!
   737                           ;!Critical Paths under _main in COMMON
   738                           ;!
   739                           ;!    _main->_DDS
   740                           ;!    _main->___lmul
   741                           ;!    _main->_send_string
   742                           ;!    _send_int->_send_string
   743                           ;!    _send_string->_lcd_data
   744                           ;!    _lcd_data->_data_write
   745                           ;!    _utoa->___lwdiv
   746                           ;!    _lcd_init->_lcd_cmd
   747                           ;!    _lcd_clear->_lcd_cmd
   748                           ;!    _lcd_cmd->_data_write
   749                           ;!    _DDS_init->_DDS
   750                           ;!    _DDS->_spi_write
   751                           ;!
   752                           ;!Critical Paths under _ISR in COMMON
   753                           ;!
   754                           ;!    None.
   755                           ;!
   756                           ;!Critical Paths under _main in BANK0
   757                           ;!
   758                           ;!    _main->_send_int
   759                           ;!    _send_int->_itoa
   760                           ;!    _itoa->_utoa
   761                           ;!    _DDS_init->_DDS
   762                           ;!
   763                           ;!Critical Paths under _ISR in BANK0
   764                           ;!
   765                           ;!    None.
   766                           ;!
   767                           ;!Critical Paths under _main in BANK1
   768                           ;!
   769                           ;!    None.
   770                           ;!
   771                           ;!Critical Paths under _ISR in BANK1
   772                           ;!
   773                           ;!    None.
   774                           
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 16, incstack = 0, save=0
   777 ;;
   778                           
   779                           ;!
   780                           ;!Call Graph Tables:
   781                           ;!
   782                           ;! ---------------------------------------------------------------------------------
   783                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   784                           ;! ---------------------------------------------------------------------------------
   785                           ;! (0) _main                                                16    16      0    7526
   786                           ;!                                             18 BANK0     16    16      0
   787                           ;!                                _DDS
   788                           ;!                           _DDS_init
   789                           ;!                             ___lmul
   790                           ;!                             ___wmul
   791                           ;!                          _lcd_clear
   792                           ;!                            _lcd_cmd
   793                           ;!                           _lcd_init
   794                           ;!                           _send_int
   795                           ;!                        _send_string
   796                           ;!                          _spi_write
   797                           ;! ---------------------------------------------------------------------------------
   798                           ;! (1) _send_int                                             2     0      2    2398
   799                           ;!                                             16 BANK0      2     0      2
   800                           ;!                               _itoa
   801                           ;!                        _send_string
   802                           ;! ---------------------------------------------------------------------------------
   803                           ;! (1) _send_string                                          4     2      2     384
   804                           ;!                                              7 COMMON     4     2      2
   805                           ;!                           _lcd_data
   806                           ;! ---------------------------------------------------------------------------------
   807                           ;! (2) _lcd_data                                             2     2      0      66
   808                           ;!                                              5 COMMON     2     2      0
   809                           ;!                         _data_write
   810                           ;! ---------------------------------------------------------------------------------
   811                           ;! (2) _itoa                                                 7     3      4    1612
   812                           ;!                                              9 BANK0      7     3      4
   813                           ;!                               _utoa
   814                           ;! ---------------------------------------------------------------------------------
   815                           ;! (3) _utoa                                                 9     5      4    1264
   816                           ;!                                              0 BANK0      9     5      4
   817                           ;!                            ___lwdiv
   818                           ;!                            ___lwmod
   819                           ;! ---------------------------------------------------------------------------------
   820                           ;! (4) ___lwmod                                              6     2      4     311
   821                           ;!                                              3 COMMON     6     2      4
   822                           ;! ---------------------------------------------------------------------------------
   823                           ;! (4) ___lwdiv                                              8     4      4     466
   824                           ;!                                              3 COMMON     8     4      4
   825                           ;! ---------------------------------------------------------------------------------
   826                           ;! (1) _lcd_init                                             2     2      0      88
   827                           ;!                                              7 COMMON     2     2      0
   828                           ;!                         _data_write
   829                           ;!                            _lcd_cmd
   830                           ;! ---------------------------------------------------------------------------------
   831                           ;! (1) _lcd_clear                                            2     2      0      66
   832                           ;!                                              7 COMMON     2     2      0
   833                           ;!                            _lcd_cmd
   834                           ;! ---------------------------------------------------------------------------------
   835                           ;! (2) _lcd_cmd                                              2     2      0      66
   836                           ;!                                              5 COMMON     2     2      0
   837                           ;!                         _data_write
   838                           ;! ---------------------------------------------------------------------------------
   839                           ;! (3) _data_write                                           2     2      0      22
   840                           ;!                                              3 COMMON     2     2      0
   841                           ;! ---------------------------------------------------------------------------------
   842                           ;! (1) ___wmul                                               6     2      4     548
   843                           ;!                                              3 COMMON     6     2      4
   844                           ;! ---------------------------------------------------------------------------------
   845                           ;! (1) ___lmul                                              13     5      8     396
   846                           ;!                                              3 COMMON     8     0      8
   847                           ;!                                              0 BANK0      5     5      0
   848                           ;! ---------------------------------------------------------------------------------
   849                           ;! (1) _DDS_init                                             0     0      0    1790
   850                           ;!                                _DDS
   851                           ;!                          _spi_write
   852                           ;! ---------------------------------------------------------------------------------
   853                           ;! (2) _DDS                                                  9     4      5    1167
   854                           ;!                                              7 COMMON     4     4      0
   855                           ;!                                              0 BANK0      5     0      5
   856                           ;!                          _spi_write
   857                           ;! ---------------------------------------------------------------------------------
   858                           ;! (1) _spi_write                                            4     2      2     623
   859                           ;!                                              3 COMMON     4     2      2
   860                           ;! ---------------------------------------------------------------------------------
   861                           ;! Estimated maximum stack depth 4
   862                           ;! ---------------------------------------------------------------------------------
   863                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   864                           ;! ---------------------------------------------------------------------------------
   865                           ;! (5) _ISR                                                  3     3      0       0
   866                           ;!                                              0 COMMON     3     3      0
   867                           ;! ---------------------------------------------------------------------------------
   868                           ;! Estimated maximum stack depth 5
   869                           ;! ---------------------------------------------------------------------------------
   870                           ;!
   871                           ;! Call Graph Graphs:
   872                           ;!
   873                           ;! _main (ROOT)
   874                           ;!   _DDS
   875                           ;!     _spi_write
   876                           ;!   _DDS_init
   877                           ;!     _DDS
   878                           ;!       _spi_write
   879                           ;!     _spi_write
   880                           ;!   ___lmul
   881                           ;!   ___wmul
   882                           ;!   _lcd_clear
   883                           ;!     _lcd_cmd
   884                           ;!       _data_write
   885                           ;!   _lcd_cmd
   886                           ;!     _data_write
   887                           ;!   _lcd_init
   888                           ;!     _data_write
   889                           ;!     _lcd_cmd
   890                           ;!       _data_write
   891                           ;!   _send_int
   892                           ;!     _itoa
   893                           ;!       _utoa
   894                           ;!         ___lwdiv
   895                           ;!         ___lwmod
   896                           ;!     _send_string
   897                           ;!       _lcd_data
   898                           ;!         _data_write
   899                           ;!   _send_string
   900                           ;!     _lcd_data
   901                           ;!       _data_write
   902                           ;!   _spi_write
   903                           ;!
   904                           ;! _ISR (ROOT)
   905                           ;!
   906                           
   907                           ;! Address spaces:
   908                           
   909                           ;!Name               Size   Autos  Total    Cost      Usage
   910                           ;!BITCOMMON            E      0       0       0        0.0%
   911                           ;!EEDATA              40      0       0       0        0.0%
   912                           ;!NULL                 0      0       0       0        0.0%
   913                           ;!CODE                 0      0       0       0        0.0%
   914                           ;!COMMON               E      B       B       1       78.6%
   915                           ;!BITSFR0              0      0       0       1        0.0%
   916                           ;!SFR0                 0      0       0       1        0.0%
   917                           ;!BITSFR1              0      0       0       2        0.0%
   918                           ;!SFR1                 0      0       0       2        0.0%
   919                           ;!STACK                0      0       0       2        0.0%
   920                           ;!ABS                  0      0      60       3        0.0%
   921                           ;!BITBANK0            50      0       0       4        0.0%
   922                           ;!BITSFR3              0      0       0       4        0.0%
   923                           ;!SFR3                 0      0       0       4        0.0%
   924                           ;!BANK0               50     22      4D       5       96.3%
   925                           ;!BITSFR2              0      0       0       5        0.0%
   926                           ;!SFR2                 0      0       0       5        0.0%
   927                           ;!BITBANK1            20      0       0       6        0.0%
   928                           ;!BANK1               20      0       8       7       25.0%
   929                           ;!DATA                 0      0      60       8        0.0%
   930                           
   931                           	global	_main
   932                           
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 256 in file "newmain.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B00/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1
   949 ;;      Params:         0       0       0
   950 ;;      Locals:         0       0       0
   951 ;;      Temps:          0      16       0
   952 ;;      Totals:         0      16       0
   953 ;;Total ram usage:       16 bytes
   954 ;; Hardware stack levels required when called:    5
   955 ;; This function calls:
   956 ;;		_DDS
   957 ;;		_DDS_init
   958 ;;		___lmul
   959 ;;		___wmul
   960 ;;		_lcd_clear
   961 ;;		_lcd_cmd
   962 ;;		_lcd_init
   963 ;;		_send_int
   964 ;;		_send_string
   965 ;;		_spi_write
   966 ;; This function is called by:
   967 ;;		Startup code after reset
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   971                           	file	"newmain.c"
   972                           	line	256
   973                           global __pmaintext
   974                           __pmaintext:	;psect for function _main
   975  0016                     psect	maintext
   976                           	file	"newmain.c"
   977                           	line	256
   978                           	global	__size_of_main
   979                           	__size_of_main	equ	__end_of_main-_main
   980  0265                     	
   981                           _main:	
   982  0016                     ;incstack = 0
   983                           	opt	stack 3
   984                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   985                           	line	259
   986                           	
   987                           l1609:	
   988  0016                     ;newmain.c: 259:     RESET=0x2100;
   989                           	movlw	0
   990  0016  3000               	bcf	status, 5	;RP0=0, select bank0
   991  0017  1283               	bcf	status, 6	;RP1=0, select bank0
   992  0018  1303               	movwf	(_RESET)
   993  0019  00EB               	movlw	021h
   994  001A  3021               	movwf	((_RESET))+1
   995  001B  00EC               	line	260
   996                           ;newmain.c: 260:     SET_0=0x2000;
   997                           	movlw	0
   998  001C  3000               	movwf	(_SET_0)
   999  001D  00E9               	movlw	020h
  1000  001E  3020               	movwf	((_SET_0))+1
  1001  001F  00EA               	line	261
  1002                           ;newmain.c: 261:     SET_1=0x2800;
  1003                           	movlw	0
  1004  0020  3000               	movwf	(_SET_1)
  1005  0021  00E7               	movlw	028h
  1006  0022  3028               	movwf	((_SET_1))+1
  1007  0023  00E8               	line	262
  1008                           ;newmain.c: 262:     PHASE=0xC000;
  1009                           	movlw	0
  1010  0024  3000               	movwf	(_PHASE)
  1011  0025  00E5               	movlw	0C0h
  1012  0026  30C0               	movwf	((_PHASE))+1
  1013  0027  00E6               	line	263
  1014                           	
  1015                           l1611:	
  1016  0028                     ;newmain.c: 263:     TRISC6 = 0;
  1017                           	bsf	status, 5	;RP0=1, select bank1
  1018  0028  1683               	bcf	status, 6	;RP1=0, select bank1
  1019  0029  1303               	bcf	(1086/8)^080h,(1086)&7	;volatile
  1020  002A  1307               	line	264
  1021                           	
  1022                           l1613:	
  1023  002B                     ;newmain.c: 264:     TRISC5 = 0;
  1024                           	bcf	(1085/8)^080h,(1085)&7	;volatile
  1025  002B  1287               	line	265
  1026                           	
  1027                           l1615:	
  1028  002C                     ;newmain.c: 265:     TRISC4 = 0;
  1029                           	bcf	(1084/8)^080h,(1084)&7	;volatile
  1030  002C  1207               	line	266
  1031                           	
  1032                           l1617:	
  1033  002D                     ;newmain.c: 266:     F_FREQ=0;
  1034                           	bcf	status, 5	;RP0=0, select bank0
  1035  002D  1283               	bcf	status, 6	;RP1=0, select bank0
  1036  002E  1303               	clrf	(_F_FREQ)
  1037  002F  01D3               	line	267
  1038                           	
  1039                           l1619:	
  1040  0030                     ;newmain.c: 267:     RC4 = 1;
  1041                           	bsf	(60/8),(60)&7	;volatile
  1042  0030  1607               	line	268
  1043                           	
  1044                           l1621:	
  1045  0031                     ;newmain.c: 268:     RC6 = 1;
  1046                           	bsf	(62/8),(62)&7	;volatile
  1047  0031  1707               	line	271
  1048                           	
  1049                           l1623:	
  1050  0032                     ;newmain.c: 271:     TRISC3=1;
  1051                           	bsf	status, 5	;RP0=1, select bank1
  1052  0032  1683               	bcf	status, 6	;RP1=0, select bank1
  1053  0033  1303               	bsf	(1083/8)^080h,(1083)&7	;volatile
  1054  0034  1587               	line	272
  1055                           	
  1056                           l1625:	
  1057  0035                     ;newmain.c: 272:     TRISC1=0;
  1058                           	bcf	(1081/8)^080h,(1081)&7	;volatile
  1059  0035  1087               	line	273
  1060                           	
  1061                           l1627:	
  1062  0036                     ;newmain.c: 273:     TRISB0=1;
  1063                           	bsf	(1072/8)^080h,(1072)&7	;volatile
  1064  0036  1406               	line	274
  1065                           	
  1066                           l1629:	
  1067  0037                     ;newmain.c: 274:     TRISC2=1;
  1068                           	bsf	(1082/8)^080h,(1082)&7	;volatile
  1069  0037  1507               	line	275
  1070                           	
  1071                           l1631:	
  1072  0038                     ;newmain.c: 275:     pos=0;
  1073                           	bcf	status, 5	;RP0=0, select bank0
  1074  0038  1283               	bcf	status, 6	;RP1=0, select bank0
  1075  0039  1303               	clrf	(_pos)
  1076  003A  01D9               	line	276
  1077                           ;newmain.c: 276:     last_freq=335572;
  1078                           	movlw	0
  1079  003B  3000               	movwf	(_last_freq+3)
  1080  003C  00E4               	movlw	05h
  1081  003D  3005               	movwf	(_last_freq+2)
  1082  003E  00E3               	movlw	01Eh
  1083  003F  301E               	movwf	(_last_freq+1)
  1084  0040  00E2               	movlw	0D4h
  1085  0041  30D4               	movwf	(_last_freq)
  1086  0042  00E1               
  1087                           	line	278
  1088                           ;newmain.c: 278:     val0=2;
  1089                           	movlw	0
  1090  0043  3000               	movwf	(_val0+3)
  1091  0044  00E0               	movlw	0
  1092  0045  3000               	movwf	(_val0+2)
  1093  0046  00DF               	movlw	0
  1094  0047  3000               	movwf	(_val0+1)
  1095  0048  00DE               	movlw	02h
  1096  0049  3002               	movwf	(_val0)
  1097  004A  00DD               
  1098                           	line	279
  1099                           ;newmain.c: 279:     val1=0;
  1100                           	movlw	high highword(0)
  1101  004B  3000               	movwf	(_val1+3)
  1102  004C  00C5               	movlw	low highword(0)
  1103  004D  3000               	movwf	(_val1+2)
  1104  004E  00C4               	movlw	high(0)
  1105  004F  3000               	movwf	(_val1+1)
  1106  0050  00C3               	movlw	low(0)
  1107  0051  3000               	movwf	(_val1)
  1108  0052  00C2               
  1109                           	line	280
  1110                           	
  1111                           l1633:	
  1112  0053                     ;newmain.c: 280:     val2=0;
  1113                           	clrf	(_val2)
  1114  0053  01DC               	line	281
  1115                           	
  1116                           l1635:	
  1117  0054                     ;newmain.c: 281:     val3=0;
  1118                           	clrf	(_val3)
  1119  0054  01DB               	line	282
  1120                           	
  1121                           l1637:	
  1122  0055                     ;newmain.c: 282:     val4=0;
  1123                           	clrf	(_val4)
  1124  0055  01DA               	line	283
  1125                           	
  1126                           l1639:	
  1127  0056                     ;newmain.c: 283:     lcd_init();
  1128                           	fcall	_lcd_init
  1129  0056  2408               	line	285
  1130                           	
  1131                           l1641:	
  1132  0057                     ;newmain.c: 285:     INTEDG =0;
  1133                           	bsf	status, 5	;RP0=1, select bank1
  1134  0057  1683               	bcf	status, 6	;RP1=0, select bank1
  1135  0058  1303               	bcf	(1038/8)^080h,(1038)&7	;volatile
  1136  0059  1301               	line	286
  1137                           	
  1138                           l1643:	
  1139  005A                     ;newmain.c: 286:     GIE =1;
  1140                           	bsf	(95/8),(95)&7	;volatile
  1141  005A  178B               	line	287
  1142                           	
  1143                           l1645:	
  1144  005B                     ;newmain.c: 287:     PEIE =1;
  1145                           	bsf	(94/8),(94)&7	;volatile
  1146  005B  170B               	line	288
  1147                           	
  1148                           l1647:	
  1149  005C                     ;newmain.c: 288:     INTF =0;
  1150                           	bcf	(89/8),(89)&7	;volatile
  1151  005C  108B               	line	289
  1152                           	
  1153                           l1649:	
  1154  005D                     ;newmain.c: 289:     INTE =1;
  1155                           	bsf	(92/8),(92)&7	;volatile
  1156  005D  160B               	line	291
  1157                           	
  1158                           l1651:	
  1159  005E                     ;newmain.c: 291:     lcd_clear();
  1160                           	fcall	_lcd_clear
  1161  005E  2763               	line	292
  1162                           	
  1163                           l1653:	
  1164  005F                     ;newmain.c: 292:     send_string("20.000");
  1165                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1166  005F  3001               	movwf	(send_string@s)
  1167  0060  00F7               	movlw	80h
  1168  0061  3080               	movwf	(send_string@s+1)
  1169  0062  00F8               	fcall	_send_string
  1170  0063  268B               	line	293
  1171                           	
  1172                           l1655:	
  1173  0064                     ;newmain.c: 293:     lcd_cmd(0xC5);
  1174                           	movlw	low(0C5h)
  1175  0064  30C5               	fcall	_lcd_cmd
  1176  0065  2736               	line	294
  1177                           	
  1178                           l1657:	
  1179  0066                     ;newmain.c: 294:     send_string("KHz");
  1180                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1181  0066  3008               	movwf	(send_string@s)
  1182  0067  00F7               	movlw	80h
  1183  0068  3080               	movwf	(send_string@s+1)
  1184  0069  00F8               	fcall	_send_string
  1185  006A  268B               	line	295
  1186                           	
  1187                           l1659:	
  1188  006B                     ;newmain.c: 295:     DDS_init();
  1189                           	fcall	_DDS_init
  1190  006B  26B1               	goto	l1661
  1191  006C  286D               	line	297
  1192                           ;newmain.c: 297:       while(1)
  1193                           	
  1194                           l204:	
  1195  006D                     	line	300
  1196                           	
  1197                           l1661:	
  1198  006D                     ;newmain.c: 298:       {;newmain.c: 300:           if (val0!=last_val0){
  1199                           	bcf	status, 5	;RP0=0, select bank0
  1200  006D  1283               	bcf	status, 6	;RP1=0, select bank0
  1201  006E  1303               	movf	(_last_val0),w
  1202  006F  0858               	movwf	(??_main+0)+0
  1203  0070  00B2               	movlw	0
  1204  0071  3000               	btfsc	(??_main+0)+0,7
  1205  0072  1BB2               	movlw	255
  1206  0073  30FF               	movwf	((??_main+0)+0+1)
  1207  0074  00B3               	movwf	((??_main+0)+0+2)
  1208  0075  00B4               	movwf	((??_main+0)+0+3)
  1209  0076  00B5               	movf	(_val0+3),w
  1210  0077  0860               	xorwf	3+(??_main+0)+0,w
  1211  0078  0635               	skipz
  1212  0079  1D03               	goto	u1595
  1213  007A  2885               	movf	(_val0+2),w
  1214  007B  085F               	xorwf	2+(??_main+0)+0,w
  1215  007C  0634               	skipz
  1216  007D  1D03               	goto	u1595
  1217  007E  2885               	movf	(_val0+1),w
  1218  007F  085E               	xorwf	1+(??_main+0)+0,w
  1219  0080  0633               	skipz
  1220  0081  1D03               	goto	u1595
  1221  0082  2885               	movf	(_val0),w
  1222  0083  085D               	xorwf	0+(??_main+0)+0,w
  1223  0084  0632               u1595:
  1224  0085                     	skipnz
  1225  0085  1903               	goto	u1591
  1226  0086  2888               	goto	u1590
  1227  0087  2889               u1591:
  1228  0088                     	goto	l1671
  1229  0088  289B               u1590:
  1230  0089                     	line	301
  1231                           	
  1232                           l1663:	
  1233  0089                     ;newmain.c: 301:              lcd_cmd(0x80);
  1234                           	movlw	low(080h)
  1235  0089  3080               	fcall	_lcd_cmd
  1236  008A  2736               	line	302
  1237                           	
  1238                           l1665:	
  1239  008B                     ;newmain.c: 302:              send_int(val0);
  1240                           	bcf	status, 5	;RP0=0, select bank0
  1241  008B  1283               	bcf	status, 6	;RP1=0, select bank0
  1242  008C  1303               	movf	(_val0+1),w
  1243  008D  085E               	movwf	(send_int@data+1)
  1244  008E  00B1               	movf	(_val0),w
  1245  008F  085D               	movwf	(send_int@data)
  1246  0090  00B0               	fcall	_send_int
  1247  0091  2751               	line	303
  1248                           	
  1249                           l1667:	
  1250  0092                     ;newmain.c: 303:              lcd_cmd(0x10);
  1251                           	movlw	low(010h)
  1252  0092  3010               	fcall	_lcd_cmd
  1253  0093  2736               	line	304
  1254                           	
  1255                           l1669:	
  1256  0094                     ;newmain.c: 304:           last_val0=val0;
  1257                           	bcf	status, 5	;RP0=0, select bank0
  1258  0094  1283               	bcf	status, 6	;RP1=0, select bank0
  1259  0095  1303               	movf	(_val0),w
  1260  0096  085D               	movwf	(??_main+0)+0
  1261  0097  00B2               	movf	(??_main+0)+0,w
  1262  0098  0832               	movwf	(_last_val0)
  1263  0099  00D8               	goto	l1671
  1264  009A  289B               	line	305
  1265                           ;newmain.c: 305:           }
  1266                           	
  1267                           l205:	
  1268  009B                     	line	307
  1269                           	
  1270                           l1671:	
  1271  009B                     ;newmain.c: 307:             if (val1!=last_val1){
  1272                           	movf	(_last_val1),w
  1273  009B  0857               	movwf	(??_main+0)+0
  1274  009C  00B2               	movlw	0
  1275  009D  3000               	btfsc	(??_main+0)+0,7
  1276  009E  1BB2               	movlw	255
  1277  009F  30FF               	movwf	((??_main+0)+0+1)
  1278  00A0  00B3               	movwf	((??_main+0)+0+2)
  1279  00A1  00B4               	movwf	((??_main+0)+0+3)
  1280  00A2  00B5               	movf	(_val1+3),w
  1281  00A3  0845               	xorwf	3+(??_main+0)+0,w
  1282  00A4  0635               	skipz
  1283  00A5  1D03               	goto	u1605
  1284  00A6  28B1               	movf	(_val1+2),w
  1285  00A7  0844               	xorwf	2+(??_main+0)+0,w
  1286  00A8  0634               	skipz
  1287  00A9  1D03               	goto	u1605
  1288  00AA  28B1               	movf	(_val1+1),w
  1289  00AB  0843               	xorwf	1+(??_main+0)+0,w
  1290  00AC  0633               	skipz
  1291  00AD  1D03               	goto	u1605
  1292  00AE  28B1               	movf	(_val1),w
  1293  00AF  0842               	xorwf	0+(??_main+0)+0,w
  1294  00B0  0632               u1605:
  1295  00B1                     	skipnz
  1296  00B1  1903               	goto	u1601
  1297  00B2  28B4               	goto	u1600
  1298  00B3  28B5               u1601:
  1299  00B4                     	goto	l1681
  1300  00B4  28C7               u1600:
  1301  00B5                     	line	308
  1302                           	
  1303                           l1673:	
  1304  00B5                     ;newmain.c: 308:              lcd_cmd(0x81);
  1305                           	movlw	low(081h)
  1306  00B5  3081               	fcall	_lcd_cmd
  1307  00B6  2736               	line	309
  1308                           	
  1309                           l1675:	
  1310  00B7                     ;newmain.c: 309:              send_int(val1);
  1311                           	bcf	status, 5	;RP0=0, select bank0
  1312  00B7  1283               	bcf	status, 6	;RP1=0, select bank0
  1313  00B8  1303               	movf	(_val1+1),w
  1314  00B9  0843               	movwf	(send_int@data+1)
  1315  00BA  00B1               	movf	(_val1),w
  1316  00BB  0842               	movwf	(send_int@data)
  1317  00BC  00B0               	fcall	_send_int
  1318  00BD  2751               	line	310
  1319                           	
  1320                           l1677:	
  1321  00BE                     ;newmain.c: 310:              lcd_cmd(0x10);
  1322                           	movlw	low(010h)
  1323  00BE  3010               	fcall	_lcd_cmd
  1324  00BF  2736               	line	311
  1325                           	
  1326                           l1679:	
  1327  00C0                     ;newmain.c: 311:           last_val1=val1;
  1328                           	bcf	status, 5	;RP0=0, select bank0
  1329  00C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1330  00C1  1303               	movf	(_val1),w
  1331  00C2  0842               	movwf	(??_main+0)+0
  1332  00C3  00B2               	movf	(??_main+0)+0,w
  1333  00C4  0832               	movwf	(_last_val1)
  1334  00C5  00D7               	goto	l1681
  1335  00C6  28C7               	line	312
  1336                           ;newmain.c: 312:           }
  1337                           	
  1338                           l206:	
  1339  00C7                     	line	314
  1340                           	
  1341                           l1681:	
  1342  00C7                     ;newmain.c: 314:             if (val2!=last_val2){
  1343                           	movf	(_val2),w
  1344  00C7  085C               	xorwf	(_last_val2),w
  1345  00C8  0656               	skipnz
  1346  00C9  1903               	goto	u1611
  1347  00CA  28CC               	goto	u1610
  1348  00CB  28CD               u1611:
  1349  00CC                     	goto	l1691
  1350  00CC  28E0               u1610:
  1351  00CD                     	line	315
  1352                           	
  1353                           l1683:	
  1354  00CD                     ;newmain.c: 315:              lcd_cmd(0x83);
  1355                           	movlw	low(083h)
  1356  00CD  3083               	fcall	_lcd_cmd
  1357  00CE  2736               	line	316
  1358                           	
  1359                           l1685:	
  1360  00CF                     ;newmain.c: 316:              send_int(val2);
  1361                           	bcf	status, 5	;RP0=0, select bank0
  1362  00CF  1283               	bcf	status, 6	;RP1=0, select bank0
  1363  00D0  1303               	movf	(_val2),w
  1364  00D1  085C               	movwf	(send_int@data)
  1365  00D2  00B0               	clrf	(send_int@data+1)
  1366  00D3  01B1               	btfsc	(send_int@data),7
  1367  00D4  1BB0               	decf	(send_int@data+1),f
  1368  00D5  03B1               	fcall	_send_int
  1369  00D6  2751               	line	317
  1370                           	
  1371                           l1687:	
  1372  00D7                     ;newmain.c: 317:              lcd_cmd(0x10);
  1373                           	movlw	low(010h)
  1374  00D7  3010               	fcall	_lcd_cmd
  1375  00D8  2736               	line	318
  1376                           	
  1377                           l1689:	
  1378  00D9                     ;newmain.c: 318:           last_val2=val2;
  1379                           	bcf	status, 5	;RP0=0, select bank0
  1380  00D9  1283               	bcf	status, 6	;RP1=0, select bank0
  1381  00DA  1303               	movf	(_val2),w
  1382  00DB  085C               	movwf	(??_main+0)+0
  1383  00DC  00B2               	movf	(??_main+0)+0,w
  1384  00DD  0832               	movwf	(_last_val2)
  1385  00DE  00D6               	goto	l1691
  1386  00DF  28E0               	line	319
  1387                           ;newmain.c: 319:           }
  1388                           	
  1389                           l207:	
  1390  00E0                     	line	321
  1391                           	
  1392                           l1691:	
  1393  00E0                     ;newmain.c: 321:             if (val3!=last_val3){
  1394                           	movf	(_val3),w
  1395  00E0  085B               	xorwf	(_last_val3),w
  1396  00E1  0655               	skipnz
  1397  00E2  1903               	goto	u1621
  1398  00E3  28E5               	goto	u1620
  1399  00E4  28E6               u1621:
  1400  00E5                     	goto	l1701
  1401  00E5  28F9               u1620:
  1402  00E6                     	line	322
  1403                           	
  1404                           l1693:	
  1405  00E6                     ;newmain.c: 322:              lcd_cmd(0x84);
  1406                           	movlw	low(084h)
  1407  00E6  3084               	fcall	_lcd_cmd
  1408  00E7  2736               	line	323
  1409                           	
  1410                           l1695:	
  1411  00E8                     ;newmain.c: 323:              send_int(val3);
  1412                           	bcf	status, 5	;RP0=0, select bank0
  1413  00E8  1283               	bcf	status, 6	;RP1=0, select bank0
  1414  00E9  1303               	movf	(_val3),w
  1415  00EA  085B               	movwf	(send_int@data)
  1416  00EB  00B0               	clrf	(send_int@data+1)
  1417  00EC  01B1               	btfsc	(send_int@data),7
  1418  00ED  1BB0               	decf	(send_int@data+1),f
  1419  00EE  03B1               	fcall	_send_int
  1420  00EF  2751               	line	324
  1421                           	
  1422                           l1697:	
  1423  00F0                     ;newmain.c: 324:              lcd_cmd(0x10);
  1424                           	movlw	low(010h)
  1425  00F0  3010               	fcall	_lcd_cmd
  1426  00F1  2736               	line	325
  1427                           	
  1428                           l1699:	
  1429  00F2                     ;newmain.c: 325:           last_val3=val3;
  1430                           	bcf	status, 5	;RP0=0, select bank0
  1431  00F2  1283               	bcf	status, 6	;RP1=0, select bank0
  1432  00F3  1303               	movf	(_val3),w
  1433  00F4  085B               	movwf	(??_main+0)+0
  1434  00F5  00B2               	movf	(??_main+0)+0,w
  1435  00F6  0832               	movwf	(_last_val3)
  1436  00F7  00D5               	goto	l1701
  1437  00F8  28F9               	line	326
  1438                           ;newmain.c: 326:           }
  1439                           	
  1440                           l208:	
  1441  00F9                     	line	328
  1442                           	
  1443                           l1701:	
  1444  00F9                     ;newmain.c: 328:             if (val4!=last_val4){
  1445                           	movf	(_val4),w
  1446  00F9  085A               	xorwf	(_last_val4),w
  1447  00FA  0654               	skipnz
  1448  00FB  1903               	goto	u1631
  1449  00FC  28FE               	goto	u1630
  1450  00FD  28FF               u1631:
  1451  00FE                     	goto	l1711
  1452  00FE  2912               u1630:
  1453  00FF                     	line	329
  1454                           	
  1455                           l1703:	
  1456  00FF                     ;newmain.c: 329:              lcd_cmd(0x85);
  1457                           	movlw	low(085h)
  1458  00FF  3085               	fcall	_lcd_cmd
  1459  0100  2736               	line	330
  1460                           	
  1461                           l1705:	
  1462  0101                     ;newmain.c: 330:              send_int(val4);
  1463                           	bcf	status, 5	;RP0=0, select bank0
  1464  0101  1283               	bcf	status, 6	;RP1=0, select bank0
  1465  0102  1303               	movf	(_val4),w
  1466  0103  085A               	movwf	(send_int@data)
  1467  0104  00B0               	clrf	(send_int@data+1)
  1468  0105  01B1               	btfsc	(send_int@data),7
  1469  0106  1BB0               	decf	(send_int@data+1),f
  1470  0107  03B1               	fcall	_send_int
  1471  0108  2751               	line	331
  1472                           	
  1473                           l1707:	
  1474  0109                     ;newmain.c: 331:              lcd_cmd(0x10);
  1475                           	movlw	low(010h)
  1476  0109  3010               	fcall	_lcd_cmd
  1477  010A  2736               	line	332
  1478                           	
  1479                           l1709:	
  1480  010B                     ;newmain.c: 332:           last_val4=val4;
  1481                           	bcf	status, 5	;RP0=0, select bank0
  1482  010B  1283               	bcf	status, 6	;RP1=0, select bank0
  1483  010C  1303               	movf	(_val4),w
  1484  010D  085A               	movwf	(??_main+0)+0
  1485  010E  00B2               	movf	(??_main+0)+0,w
  1486  010F  0832               	movwf	(_last_val4)
  1487  0110  00D4               	goto	l1711
  1488  0111  2912               	line	333
  1489                           ;newmain.c: 333:           }
  1490                           	
  1491                           l209:	
  1492  0112                     	line	335
  1493                           	
  1494                           l1711:	
  1495  0112                     ;newmain.c: 335:          freq=(val0*167786)+(val1*16779)+(val2*1678)+(val3*168)+val4*17
                                 ;
  1496                           	movf	(_val4),w
  1497  0112  085A               	movwf	(___wmul@multiplier)
  1498  0113  00F3               	clrf	(___wmul@multiplier+1)
  1499  0114  01F4               	btfsc	(___wmul@multiplier),7
  1500  0115  1BF3               	decf	(___wmul@multiplier+1),f
  1501  0116  03F4               	movlw	011h
  1502  0117  3011               	movwf	(___wmul@multiplicand)
  1503  0118  00F5               	movlw	0
  1504  0119  3000               	movwf	((___wmul@multiplicand))+1
  1505  011A  00F6               	fcall	___wmul
  1506  011B  2663               	movf	(0+(?___wmul)),w
  1507  011C  0873               	bcf	status, 5	;RP0=0, select bank0
  1508  011D  1283               	bcf	status, 6	;RP1=0, select bank0
  1509  011E  1303               	movwf	((??_main+0)+0)
  1510  011F  00B2               	movf	(1+(?___wmul)),w
  1511  0120  0874               	movwf	((??_main+0)+0+1)
  1512  0121  00B3               	movlw	0
  1513  0122  3000               	btfsc	((??_main+0)+0+1),7
  1514  0123  1BB3               	movlw	255
  1515  0124  30FF               	movwf	((??_main+0)+0+2)
  1516  0125  00B4               	movwf	((??_main+0)+0+3)
  1517  0126  00B5               	movf	(_val3),w
  1518  0127  085B               	movwf	(___wmul@multiplier)
  1519  0128  00F3               	clrf	(___wmul@multiplier+1)
  1520  0129  01F4               	btfsc	(___wmul@multiplier),7
  1521  012A  1BF3               	decf	(___wmul@multiplier+1),f
  1522  012B  03F4               	movlw	0A8h
  1523  012C  30A8               	movwf	(___wmul@multiplicand)
  1524  012D  00F5               	movlw	0
  1525  012E  3000               	movwf	((___wmul@multiplicand))+1
  1526  012F  00F6               	fcall	___wmul
  1527  0130  2663               	movf	(0+(?___wmul)),w
  1528  0131  0873               	bcf	status, 5	;RP0=0, select bank0
  1529  0132  1283               	bcf	status, 6	;RP1=0, select bank0
  1530  0133  1303               	movwf	((??_main+4)+0)
  1531  0134  00B6               	movf	(1+(?___wmul)),w
  1532  0135  0874               	movwf	((??_main+4)+0+1)
  1533  0136  00B7               	movlw	0
  1534  0137  3000               	btfsc	((??_main+4)+0+1),7
  1535  0138  1BB7               	movlw	255
  1536  0139  30FF               	movwf	((??_main+4)+0+2)
  1537  013A  00B8               	movwf	((??_main+4)+0+3)
  1538  013B  00B9               	movf	(_val2),w
  1539  013C  085C               	movwf	(___wmul@multiplier)
  1540  013D  00F3               	clrf	(___wmul@multiplier+1)
  1541  013E  01F4               	btfsc	(___wmul@multiplier),7
  1542  013F  1BF3               	decf	(___wmul@multiplier+1),f
  1543  0140  03F4               	movlw	08Eh
  1544  0141  308E               	movwf	(___wmul@multiplicand)
  1545  0142  00F5               	movlw	06h
  1546  0143  3006               	movwf	((___wmul@multiplicand))+1
  1547  0144  00F6               	fcall	___wmul
  1548  0145  2663               	movf	(0+(?___wmul)),w
  1549  0146  0873               	bcf	status, 5	;RP0=0, select bank0
  1550  0147  1283               	bcf	status, 6	;RP1=0, select bank0
  1551  0148  1303               	movwf	((??_main+8)+0)
  1552  0149  00BA               	movf	(1+(?___wmul)),w
  1553  014A  0874               	movwf	((??_main+8)+0+1)
  1554  014B  00BB               	movlw	0
  1555  014C  3000               	btfsc	((??_main+8)+0+1),7
  1556  014D  1BBB               	movlw	255
  1557  014E  30FF               	movwf	((??_main+8)+0+2)
  1558  014F  00BC               	movwf	((??_main+8)+0+3)
  1559  0150  00BD               	movf	(_val1+3),w
  1560  0151  0845               	movwf	(___lmul@multiplier+3)
  1561  0152  00F6               	movf	(_val1+2),w
  1562  0153  0844               	movwf	(___lmul@multiplier+2)
  1563  0154  00F5               	movf	(_val1+1),w
  1564  0155  0843               	movwf	(___lmul@multiplier+1)
  1565  0156  00F4               	movf	(_val1),w
  1566  0157  0842               	movwf	(___lmul@multiplier)
  1567  0158  00F3               
  1568                           	movlw	0
  1569  0159  3000               	movwf	(___lmul@multiplicand+3)
  1570  015A  00FA               	movlw	0
  1571  015B  3000               	movwf	(___lmul@multiplicand+2)
  1572  015C  00F9               	movlw	041h
  1573  015D  3041               	movwf	(___lmul@multiplicand+1)
  1574  015E  00F8               	movlw	08Bh
  1575  015F  308B               	movwf	(___lmul@multiplicand)
  1576  0160  00F7               
  1577                           	fcall	___lmul
  1578  0161  24E2               	movf	(0+?___lmul),w
  1579  0162  0873               	bcf	status, 5	;RP0=0, select bank0
  1580  0163  1283               	bcf	status, 6	;RP1=0, select bank0
  1581  0164  1303               	movwf	(??_main+12)+0
  1582  0165  00BE               	movf	(1+?___lmul),w
  1583  0166  0874               	movwf	((??_main+12)+0+1)
  1584  0167  00BF               	movf	(2+?___lmul),w
  1585  0168  0875               	movwf	((??_main+12)+0+2)
  1586  0169  00C0               	movf	(3+?___lmul),w
  1587  016A  0876               	movwf	((??_main+12)+0+3)
  1588  016B  00C1               	movf	(_val0+3),w
  1589  016C  0860               	movwf	(___lmul@multiplier+3)
  1590  016D  00F6               	movf	(_val0+2),w
  1591  016E  085F               	movwf	(___lmul@multiplier+2)
  1592  016F  00F5               	movf	(_val0+1),w
  1593  0170  085E               	movwf	(___lmul@multiplier+1)
  1594  0171  00F4               	movf	(_val0),w
  1595  0172  085D               	movwf	(___lmul@multiplier)
  1596  0173  00F3               
  1597                           	movlw	0
  1598  0174  3000               	movwf	(___lmul@multiplicand+3)
  1599  0175  00FA               	movlw	02h
  1600  0176  3002               	movwf	(___lmul@multiplicand+2)
  1601  0177  00F9               	movlw	08Fh
  1602  0178  308F               	movwf	(___lmul@multiplicand+1)
  1603  0179  00F8               	movlw	06Ah
  1604  017A  306A               	movwf	(___lmul@multiplicand)
  1605  017B  00F7               
  1606                           	fcall	___lmul
  1607  017C  24E2               	movf	(0+(?___lmul)),w
  1608  017D  0873               	bcf	status, 5	;RP0=0, select bank0
  1609  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  1610  017F  1303               	addwf	(??_main+12)+0,f
  1611  0180  07BE               	movf	(1+(?___lmul)),w
  1612  0181  0874               	skipnc
  1613  0182  1803               	incfsz	(1+(?___lmul)),w
  1614  0183  0F74               	goto	u1640
  1615  0184  2986               	goto	u1641
  1616  0185  2987               u1640:
  1617  0186                     	addwf	(??_main+12)+1,f
  1618  0186  07BF               u1641:
  1619  0187                     	movf	(2+(?___lmul)),w
  1620  0187  0875               	skipnc
  1621  0188  1803               	incfsz	(2+(?___lmul)),w
  1622  0189  0F75               	goto	u1642
  1623  018A  298C               	goto	u1643
  1624  018B  298D               u1642:
  1625  018C                     	addwf	(??_main+12)+2,f
  1626  018C  07C0               u1643:
  1627  018D                     	movf	(3+(?___lmul)),w
  1628  018D  0876               	skipnc
  1629  018E  1803               	incf	(3+(?___lmul)),w
  1630  018F  0A76               	addwf	(??_main+12)+3,f
  1631  0190  07C1               	movf	0+(??_main+12)+0,w
  1632  0191  083E               	addwf	(??_main+8)+0,f
  1633  0192  07BA               	movf	1+(??_main+12)+0,w
  1634  0193  083F               	skipnc
  1635  0194  1803               	incfsz	1+(??_main+12)+0,w
  1636  0195  0F3F               	goto	u1650
  1637  0196  2998               	goto	u1651
  1638  0197  2999               u1650:
  1639  0198                     	addwf	(??_main+8)+1,f
  1640  0198  07BB               u1651:
  1641  0199                     	movf	2+(??_main+12)+0,w
  1642  0199  0840               	skipnc
  1643  019A  1803               	incfsz	2+(??_main+12)+0,w
  1644  019B  0F40               	goto	u1652
  1645  019C  299E               	goto	u1653
  1646  019D  299F               u1652:
  1647  019E                     	addwf	(??_main+8)+2,f
  1648  019E  07BC               u1653:
  1649  019F                     	movf	3+(??_main+12)+0,w
  1650  019F  0841               	skipnc
  1651  01A0  1803               	incf	3+(??_main+12)+0,w
  1652  01A1  0A41               	addwf	(??_main+8)+3,f
  1653  01A2  07BD               	movf	0+(??_main+8)+0,w
  1654  01A3  083A               	addwf	(??_main+4)+0,f
  1655  01A4  07B6               	movf	1+(??_main+8)+0,w
  1656  01A5  083B               	skipnc
  1657  01A6  1803               	incfsz	1+(??_main+8)+0,w
  1658  01A7  0F3B               	goto	u1660
  1659  01A8  29AA               	goto	u1661
  1660  01A9  29AB               u1660:
  1661  01AA                     	addwf	(??_main+4)+1,f
  1662  01AA  07B7               u1661:
  1663  01AB                     	movf	2+(??_main+8)+0,w
  1664  01AB  083C               	skipnc
  1665  01AC  1803               	incfsz	2+(??_main+8)+0,w
  1666  01AD  0F3C               	goto	u1662
  1667  01AE  29B0               	goto	u1663
  1668  01AF  29B1               u1662:
  1669  01B0                     	addwf	(??_main+4)+2,f
  1670  01B0  07B8               u1663:
  1671  01B1                     	movf	3+(??_main+8)+0,w
  1672  01B1  083D               	skipnc
  1673  01B2  1803               	incf	3+(??_main+8)+0,w
  1674  01B3  0A3D               	addwf	(??_main+4)+3,f
  1675  01B4  07B9               	movf	0+(??_main+4)+0,w
  1676  01B5  0836               	addwf	(??_main+0)+0,f
  1677  01B6  07B2               	movf	1+(??_main+4)+0,w
  1678  01B7  0837               	skipnc
  1679  01B8  1803               	incfsz	1+(??_main+4)+0,w
  1680  01B9  0F37               	goto	u1670
  1681  01BA  29BC               	goto	u1671
  1682  01BB  29BD               u1670:
  1683  01BC                     	addwf	(??_main+0)+1,f
  1684  01BC  07B3               u1671:
  1685  01BD                     	movf	2+(??_main+4)+0,w
  1686  01BD  0838               	skipnc
  1687  01BE  1803               	incfsz	2+(??_main+4)+0,w
  1688  01BF  0F38               	goto	u1672
  1689  01C0  29C2               	goto	u1673
  1690  01C1  29C3               u1672:
  1691  01C2                     	addwf	(??_main+0)+2,f
  1692  01C2  07B4               u1673:
  1693  01C3                     	movf	3+(??_main+4)+0,w
  1694  01C3  0839               	skipnc
  1695  01C4  1803               	incf	3+(??_main+4)+0,w
  1696  01C5  0A39               	addwf	(??_main+0)+3,f
  1697  01C6  07B5               	movf	3+(??_main+0)+0,w
  1698  01C7  0835               	movwf	(_freq+3)
  1699  01C8  00C9               	movf	2+(??_main+0)+0,w
  1700  01C9  0834               	movwf	(_freq+2)
  1701  01CA  00C8               	movf	1+(??_main+0)+0,w
  1702  01CB  0833               	movwf	(_freq+1)
  1703  01CC  00C7               	movf	0+(??_main+0)+0,w
  1704  01CD  0832               	movwf	(_freq)
  1705  01CE  00C6               
  1706                           	line	337
  1707                           	
  1708                           l1713:	
  1709  01CF                     ;newmain.c: 337:           if (freq!=last_freq)
  1710                           	movf	(_last_freq+3),w
  1711  01CF  0864               	xorwf	(_freq+3),w
  1712  01D0  0649               	skipz
  1713  01D1  1D03               	goto	u1685
  1714  01D2  29DD               	movf	(_last_freq+2),w
  1715  01D3  0863               	xorwf	(_freq+2),w
  1716  01D4  0648               	skipz
  1717  01D5  1D03               	goto	u1685
  1718  01D6  29DD               	movf	(_last_freq+1),w
  1719  01D7  0862               	xorwf	(_freq+1),w
  1720  01D8  0647               	skipz
  1721  01D9  1D03               	goto	u1685
  1722  01DA  29DD               	movf	(_last_freq),w
  1723  01DB  0861               	xorwf	(_freq),w
  1724  01DC  0646               u1685:
  1725  01DD                     	skipnz
  1726  01DD  1903               	goto	u1681
  1727  01DE  29E0               	goto	u1680
  1728  01DF  29E1               u1681:
  1729  01E0                     	goto	l1727
  1730  01E0  2A1B               u1680:
  1731  01E1                     	line	339
  1732                           	
  1733                           l1715:	
  1734  01E1                     ;newmain.c: 338:           {;newmain.c: 339:               if (F_FREQ==1)
  1735                           		decf	((_F_FREQ)),w
  1736  01E1  0353               	btfss	status,2
  1737  01E2  1D03               	goto	u1691
  1738  01E3  29E5               	goto	u1690
  1739  01E4  29E6               u1691:
  1740  01E5                     	goto	l1721
  1741  01E5  29FB               u1690:
  1742  01E6                     	line	341
  1743                           	
  1744                           l1717:	
  1745  01E6                     ;newmain.c: 340:               {;newmain.c: 341:               DDS(freq,0);
  1746                           	movf	(_freq+3),w
  1747  01E6  0849               	movwf	(DDS@input+3)
  1748  01E7  00A3               	movf	(_freq+2),w
  1749  01E8  0848               	movwf	(DDS@input+2)
  1750  01E9  00A2               	movf	(_freq+1),w
  1751  01EA  0847               	movwf	(DDS@input+1)
  1752  01EB  00A1               	movf	(_freq),w
  1753  01EC  0846               	movwf	(DDS@input)
  1754  01ED  00A0               
  1755                           	clrf	(DDS@reg)
  1756  01EE  01A4               	fcall	_DDS
  1757  01EF  25FC               	line	342
  1758                           ;newmain.c: 342:               spi_write(SET_0);
  1759                           	bcf	status, 5	;RP0=0, select bank0
  1760  01F0  1283               	bcf	status, 6	;RP1=0, select bank0
  1761  01F1  1303               	movf	(_SET_0+1),w
  1762  01F2  086A               	movwf	(spi_write@data+1)
  1763  01F3  00F4               	movf	(_SET_0),w
  1764  01F4  0869               	movwf	(spi_write@data)
  1765  01F5  00F3               	fcall	_spi_write
  1766  01F6  2579               	line	343
  1767                           	
  1768                           l1719:	
  1769  01F7                     ;newmain.c: 343:               F_FREQ=0;
  1770                           	bcf	status, 5	;RP0=0, select bank0
  1771  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  1772  01F8  1303               	clrf	(_F_FREQ)
  1773  01F9  01D3               	line	344
  1774                           ;newmain.c: 344:               }
  1775                           	goto	l1725
  1776  01FA  2A12               	line	345
  1777                           ;newmain.c: 345:               else
  1778                           	
  1779                           l211:	
  1780  01FB                     	line	347
  1781                           	
  1782                           l1721:	
  1783  01FB                     ;newmain.c: 346:               {;newmain.c: 347:               DDS(freq,1);
  1784                           	movf	(_freq+3),w
  1785  01FB  0849               	movwf	(DDS@input+3)
  1786  01FC  00A3               	movf	(_freq+2),w
  1787  01FD  0848               	movwf	(DDS@input+2)
  1788  01FE  00A2               	movf	(_freq+1),w
  1789  01FF  0847               	movwf	(DDS@input+1)
  1790  0200  00A1               	movf	(_freq),w
  1791  0201  0846               	movwf	(DDS@input)
  1792  0202  00A0               
  1793                           	clrf	(DDS@reg)
  1794  0203  01A4               	incf	(DDS@reg),f
  1795  0204  0AA4               	fcall	_DDS
  1796  0205  25FC               	line	348
  1797                           ;newmain.c: 348:               spi_write(SET_1);
  1798                           	bcf	status, 5	;RP0=0, select bank0
  1799  0206  1283               	bcf	status, 6	;RP1=0, select bank0
  1800  0207  1303               	movf	(_SET_1+1),w
  1801  0208  0868               	movwf	(spi_write@data+1)
  1802  0209  00F4               	movf	(_SET_1),w
  1803  020A  0867               	movwf	(spi_write@data)
  1804  020B  00F3               	fcall	_spi_write
  1805  020C  2579               	line	349
  1806                           	
  1807                           l1723:	
  1808  020D                     ;newmain.c: 349:               F_FREQ=1;
  1809                           	bcf	status, 5	;RP0=0, select bank0
  1810  020D  1283               	bcf	status, 6	;RP1=0, select bank0
  1811  020E  1303               	clrf	(_F_FREQ)
  1812  020F  01D3               	incf	(_F_FREQ),f
  1813  0210  0AD3               	goto	l1725
  1814  0211  2A12               	line	350
  1815                           ;newmain.c: 350:               }
  1816                           	
  1817                           l212:	
  1818  0212                     	line	351
  1819                           	
  1820                           l1725:	
  1821  0212                     ;newmain.c: 351:               last_freq=freq;
  1822                           	movf	(_freq+3),w
  1823  0212  0849               	movwf	(_last_freq+3)
  1824  0213  00E4               	movf	(_freq+2),w
  1825  0214  0848               	movwf	(_last_freq+2)
  1826  0215  00E3               	movf	(_freq+1),w
  1827  0216  0847               	movwf	(_last_freq+1)
  1828  0217  00E2               	movf	(_freq),w
  1829  0218  0846               	movwf	(_last_freq)
  1830  0219  00E1               
  1831                           	goto	l1727
  1832  021A  2A1B               	line	352
  1833                           ;newmain.c: 352:           }
  1834                           	
  1835                           l210:	
  1836  021B                     	line	355
  1837                           	
  1838                           l1727:	
  1839  021B                     ;newmain.c: 355:           if (RC3==0)
  1840                           	btfsc	(59/8),(59)&7	;volatile
  1841  021B  1987               	goto	u1701
  1842  021C  2A1E               	goto	u1700
  1843  021D  2A1F               u1701:
  1844  021E                     	goto	l1661
  1845  021E  286D               u1700:
  1846  021F                     	line	357
  1847                           	
  1848                           l1729:	
  1849  021F                     ;newmain.c: 356:           {;newmain.c: 357:               _delay((unsigned long)((20000
                                 )*(20000000/4000000.0)));
  1850                           	opt asmopt_push
  1851                           opt asmopt_off
  1852                           movlw	130
  1853  021F  3082               	bcf	status, 5	;RP0=0, select bank0
  1854  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  1855  0221  1303               movwf	((??_main+0)+0+1),f
  1856  0222  00B3               	movlw	221
  1857  0223  30DD               movwf	((??_main+0)+0),f
  1858  0224  00B2               	u1777:
  1859  0225                     decfsz	((??_main+0)+0),f
  1860  0225  0BB2               	goto	u1777
  1861  0226  2A25               	decfsz	((??_main+0)+0+1),f
  1862  0227  0BB3               	goto	u1777
  1863  0228  2A25               	nop
  1864  0229  0000               opt asmopt_pop
  1865                           
  1866                           	line	358
  1867                           	
  1868                           l1731:	
  1869  022A                     ;newmain.c: 358:               if (cursor_dir==0)
  1870                           	bcf	status, 5	;RP0=0, select bank0
  1871  022A  1283               	bcf	status, 6	;RP1=0, select bank0
  1872  022B  1303               	movf	((_cursor_dir)),w
  1873  022C  0852               	btfss	status,2
  1874  022D  1D03               	goto	u1711
  1875  022E  2A30               	goto	u1710
  1876  022F  2A31               u1711:
  1877  0230                     	goto	l1747
  1878  0230  2A52               u1710:
  1879  0231                     	line	360
  1880                           	
  1881                           l1733:	
  1882  0231                     ;newmain.c: 359:             {;newmain.c: 360:               lcd_cmd(0x14);
  1883                           	movlw	low(014h)
  1884  0231  3014               	fcall	_lcd_cmd
  1885  0232  2736               	line	361
  1886                           	
  1887                           l1735:	
  1888  0233                     ;newmain.c: 361:               pos++;
  1889                           	movlw	low(01h)
  1890  0233  3001               	bcf	status, 5	;RP0=0, select bank0
  1891  0234  1283               	bcf	status, 6	;RP1=0, select bank0
  1892  0235  1303               	movwf	(??_main+0)+0
  1893  0236  00B2               	movf	(??_main+0)+0,w
  1894  0237  0832               	addwf	(_pos),f
  1895  0238  07D9               	line	362
  1896                           	
  1897                           l1737:	
  1898  0239                     ;newmain.c: 362:               if (pos==2)
  1899                           		movlw	2
  1900  0239  3002               	xorwf	((_pos)),w
  1901  023A  0659               	btfss	status,2
  1902  023B  1D03               	goto	u1721
  1903  023C  2A3E               	goto	u1720
  1904  023D  2A3F               u1721:
  1905  023E                     	goto	l1743
  1906  023E  2A46               u1720:
  1907  023F                     	line	364
  1908                           	
  1909                           l1739:	
  1910  023F                     ;newmain.c: 363:               {;newmain.c: 364:                   pos++;
  1911                           	movlw	low(01h)
  1912  023F  3001               	movwf	(??_main+0)+0
  1913  0240  00B2               	movf	(??_main+0)+0,w
  1914  0241  0832               	addwf	(_pos),f
  1915  0242  07D9               	line	365
  1916                           	
  1917                           l1741:	
  1918  0243                     ;newmain.c: 365:                   lcd_cmd(0x14);
  1919                           	movlw	low(014h)
  1920  0243  3014               	fcall	_lcd_cmd
  1921  0244  2736               	goto	l1743
  1922  0245  2A46               	line	366
  1923                           ;newmain.c: 366:               }
  1924                           	
  1925                           l215:	
  1926  0246                     	line	367
  1927                           	
  1928                           l1743:	
  1929  0246                     ;newmain.c: 367:               if (pos==5)
  1930                           		movlw	5
  1931  0246  3005               	bcf	status, 5	;RP0=0, select bank0
  1932  0247  1283               	bcf	status, 6	;RP1=0, select bank0
  1933  0248  1303               	xorwf	((_pos)),w
  1934  0249  0659               	btfss	status,2
  1935  024A  1D03               	goto	u1731
  1936  024B  2A4D               	goto	u1730
  1937  024C  2A4E               u1731:
  1938  024D                     	goto	l1761
  1939  024D  2A72               u1730:
  1940  024E                     	line	369
  1941                           	
  1942                           l1745:	
  1943  024E                     ;newmain.c: 368:               {;newmain.c: 369:                   cursor_dir=1;
  1944                           	clrf	(_cursor_dir)
  1945  024E  01D2               	incf	(_cursor_dir),f
  1946  024F  0AD2               	goto	l1761
  1947  0250  2A72               	line	370
  1948                           ;newmain.c: 370:               }
  1949                           	
  1950                           l216:	
  1951  0251                     	line	371
  1952                           ;newmain.c: 371:             }
  1953                           	goto	l1761
  1954  0251  2A72               	line	372
  1955                           ;newmain.c: 372:               else
  1956                           	
  1957                           l214:	
  1958  0252                     	line	374
  1959                           	
  1960                           l1747:	
  1961  0252                     ;newmain.c: 373:             {;newmain.c: 374:                   lcd_cmd(0x10);
  1962                           	movlw	low(010h)
  1963  0252  3010               	fcall	_lcd_cmd
  1964  0253  2736               	line	375
  1965                           	
  1966                           l1749:	
  1967  0254                     ;newmain.c: 375:                   pos--;
  1968                           	movlw	low(-1)
  1969  0254  30FF               	bcf	status, 5	;RP0=0, select bank0
  1970  0255  1283               	bcf	status, 6	;RP1=0, select bank0
  1971  0256  1303               	movwf	(??_main+0)+0
  1972  0257  00B2               	movf	(??_main+0)+0,w
  1973  0258  0832               	addwf	(_pos),f
  1974  0259  07D9               	line	376
  1975                           	
  1976                           l1751:	
  1977  025A                     ;newmain.c: 376:                   if(pos==2)
  1978                           		movlw	2
  1979  025A  3002               	xorwf	((_pos)),w
  1980  025B  0659               	btfss	status,2
  1981  025C  1D03               	goto	u1741
  1982  025D  2A5F               	goto	u1740
  1983  025E  2A60               u1741:
  1984  025F                     	goto	l1757
  1985  025F  2A67               u1740:
  1986  0260                     	line	378
  1987                           	
  1988                           l1753:	
  1989  0260                     ;newmain.c: 377:                   {;newmain.c: 378:                       pos--;
  1990                           	movlw	low(-1)
  1991  0260  30FF               	movwf	(??_main+0)+0
  1992  0261  00B2               	movf	(??_main+0)+0,w
  1993  0262  0832               	addwf	(_pos),f
  1994  0263  07D9               	line	379
  1995                           	
  1996                           l1755:	
  1997  0264                     ;newmain.c: 379:                       lcd_cmd(0x10);
  1998                           	movlw	low(010h)
  1999  0264  3010               	fcall	_lcd_cmd
  2000  0265  2736               	goto	l1757
  2001  0266  2A67               	line	380
  2002                           ;newmain.c: 380:                   }
  2003                           	
  2004                           l218:	
  2005  0267                     	line	381
  2006                           	
  2007                           l1757:	
  2008  0267                     ;newmain.c: 381:                   if (pos==0)
  2009                           	bcf	status, 5	;RP0=0, select bank0
  2010  0267  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  0268  1303               	movf	((_pos)),w
  2012  0269  0859               	btfss	status,2
  2013  026A  1D03               	goto	u1751
  2014  026B  2A6D               	goto	u1750
  2015  026C  2A6E               u1751:
  2016  026D                     	goto	l1761
  2017  026D  2A72               u1750:
  2018  026E                     	line	383
  2019                           	
  2020                           l1759:	
  2021  026E                     ;newmain.c: 382:                   {;newmain.c: 383:                       cursor_dir=0;
                                 
  2022                           	clrf	(_cursor_dir)
  2023  026E  01D2               	goto	l1761
  2024  026F  2A72               	line	384
  2025                           ;newmain.c: 384:                   }
  2026                           	
  2027                           l219:	
  2028  0270                     	goto	l1761
  2029  0270  2A72               	line	385
  2030                           ;newmain.c: 385:             }
  2031                           	
  2032                           l217:	
  2033  0271                     	goto	l1761
  2034  0271  2A72               	line	386
  2035                           ;newmain.c: 386:               do{}
  2036                           	
  2037                           l220:	
  2038  0272                     	
  2039                           l1761:	
  2040  0272                     	btfss	(59/8),(59)&7	;volatile
  2041  0272  1D87               	goto	u1761
  2042  0273  2A75               	goto	u1760
  2043  0274  2A76               u1761:
  2044  0275                     	goto	l1761
  2045  0275  2A72               u1760:
  2046  0276                     	goto	l1661
  2047  0276  286D               	
  2048                           l221:	
  2049  0277                     	goto	l1661
  2050  0277  286D               	line	388
  2051                           ;newmain.c: 388:           }
  2052                           	
  2053                           l213:	
  2054  0278                     	goto	l1661
  2055  0278  286D               	line	389
  2056                           ;newmain.c: 389:       }
  2057                           	
  2058                           l222:	
  2059  0279                     	goto	l1661
  2060  0279  286D               	
  2061                           l223:	
  2062  027A                     	line	390
  2063                           	
  2064                           l224:	
  2065  027A                     	global	start
  2066                           	ljmp	start
  2067  027A  280A               	opt stack 0
  2068                           GLOBAL	__end_of_main
  2069                           	__end_of_main:
  2070  027B                     	signat	_main,89
  2071                           	global	_send_int
  2072                           
  2073 ;; *************** function _send_int *****************
  2074 ;; Defined at:
  2075 ;;		line 200 in file "newmain.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  data            2   16[BANK0 ] int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1
  2089 ;;      Params:         0       2       0
  2090 ;;      Locals:         0       0       0
  2091 ;;      Temps:          0       0       0
  2092 ;;      Totals:         0       2       0
  2093 ;;Total ram usage:        2 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    4
  2096 ;; This function calls:
  2097 ;;		_itoa
  2098 ;;		_send_string
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2104                           	line	200
  2105                           global __ptext1
  2106                           __ptext1:	;psect for function _send_int
  2107  0751                     psect	text1
  2108                           	file	"newmain.c"
  2109                           	line	200
  2110                           	global	__size_of_send_int
  2111                           	__size_of_send_int	equ	__end_of_send_int-_send_int
  2112  0012                     	
  2113                           _send_int:	
  2114  0751                     ;incstack = 0
  2115                           	opt	stack 3
  2116                           ; Regs used in _send_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2117                           	line	201
  2118                           	
  2119                           l1477:	
  2120  0751                     ;newmain.c: 201:         itoa(buff,data,10);
  2121                           	bcf	status, 5	;RP0=0, select bank0
  2122  0751  1283               	bcf	status, 6	;RP1=0, select bank0
  2123  0752  1303               	movf	(send_int@data+1),w
  2124  0753  0831               	movwf	(itoa@val+1)
  2125  0754  00AA               	movf	(send_int@data),w
  2126  0755  0830               	movwf	(itoa@val)
  2127  0756  00A9               	movlw	0Ah
  2128  0757  300A               	movwf	(itoa@base)
  2129  0758  00AB               	movlw	0
  2130  0759  3000               	movwf	((itoa@base))+1
  2131  075A  00AC               	movlw	(low(_buff|((0x0)<<8)))&0ffh
  2132  075B  30A0               	fcall	_itoa
  2133  075C  263B               	line	202
  2134                           	
  2135                           l1479:	
  2136  075D                     ;newmain.c: 202:         send_string(buff);
  2137                           	movlw	(low(_buff|((0x0)<<8))&0ffh)
  2138  075D  30A0               	movwf	(send_string@s)
  2139  075E  00F7               	movlw	(0x0)
  2140  075F  3000               	movwf	(send_string@s+1)
  2141  0760  00F8               	fcall	_send_string
  2142  0761  268B               	line	203
  2143                           	
  2144                           l150:	
  2145  0762                     	return
  2146  0762  0008               	opt stack 0
  2147                           GLOBAL	__end_of_send_int
  2148                           	__end_of_send_int:
  2149  0763                     	signat	_send_int,4217
  2150                           	global	_send_string
  2151                           
  2152 ;; *************** function _send_string *****************
  2153 ;; Defined at:
  2154 ;;		line 193 in file "newmain.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  s               2    7[COMMON] PTR const unsigned char 
  2157 ;;		 -> STR_2(4), STR_1(7), buff(8), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  i               2    9[COMMON] unsigned int 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1
  2169 ;;      Params:         2       0       0
  2170 ;;      Locals:         2       0       0
  2171 ;;      Temps:          0       0       0
  2172 ;;      Totals:         4       0       0
  2173 ;;Total ram usage:        4 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    3
  2176 ;; This function calls:
  2177 ;;		_lcd_data
  2178 ;; This function is called by:
  2179 ;;		_send_int
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2184                           	line	193
  2185                           global __ptext2
  2186                           __ptext2:	;psect for function _send_string
  2187  068B                     psect	text2
  2188                           	file	"newmain.c"
  2189                           	line	193
  2190                           	global	__size_of_send_string
  2191                           	__size_of_send_string	equ	__end_of_send_string-_send_string
  2192  0026                     	
  2193                           _send_string:	
  2194  068B                     ;incstack = 0
  2195                           	opt	stack 4
  2196                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2197                           	line	195
  2198                           	
  2199                           l1421:	
  2200  068B                     ;newmain.c: 193: void send_string(const char *s);newmain.c: 194: {;newmain.c: 195:      
                                  unsigned int i=0;
  2201                           	clrf	(send_string@i)
  2202  068B  01F9               	clrf	(send_string@i+1)
  2203  068C  01FA               	line	196
  2204                           ;newmain.c: 196:       for(;s[i]!=0;i++) lcd_data(s[i]);
  2205                           	goto	l1427
  2206  068D  2EA0               	
  2207                           l145:	
  2208  068E                     	
  2209                           l1423:	
  2210  068E                     	movf	(send_string@i),w
  2211  068E  0879               	addwf	(send_string@s),w
  2212  068F  0777               	movwf	fsr0
  2213  0690  0084               	movf	(send_string@s+1),w
  2214  0691  0878               	skipnc
  2215  0692  1803               	incf	(send_string@s+1),w
  2216  0693  0A78               	bcf	status, 5	;RP0=0, select bank0
  2217  0694  1283               	bcf	status, 6	;RP1=0, select bank0
  2218  0695  1303               	movwf	btemp+1
  2219  0696  00FF               	fcall	stringtab
  2220  0697  2700               	fcall	_lcd_data
  2221  0698  271B               	
  2222                           l1425:	
  2223  0699                     	movlw	01h
  2224  0699  3001               	addwf	(send_string@i),f
  2225  069A  07F9               	skipnc
  2226  069B  1803               	incf	(send_string@i+1),f
  2227  069C  0AFA               	movlw	0
  2228  069D  3000               	addwf	(send_string@i+1),f
  2229  069E  07FA               	goto	l1427
  2230  069F  2EA0               	
  2231                           l144:	
  2232  06A0                     	
  2233                           l1427:	
  2234  06A0                     	movf	(send_string@i),w
  2235  06A0  0879               	addwf	(send_string@s),w
  2236  06A1  0777               	movwf	fsr0
  2237  06A2  0084               	movf	(send_string@s+1),w
  2238  06A3  0878               	skipnc
  2239  06A4  1803               	incf	(send_string@s+1),w
  2240  06A5  0A78               	bcf	status, 5	;RP0=0, select bank0
  2241  06A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2242  06A7  1303               	movwf	btemp+1
  2243  06A8  00FF               	fcall	stringtab
  2244  06A9  2700               	xorlw	0
  2245  06AA  3A00               	skipz
  2246  06AB  1D03               	goto	u1141
  2247  06AC  2EAE               	goto	u1140
  2248  06AD  2EAF               u1141:
  2249  06AE                     	goto	l1423
  2250  06AE  2E8E               u1140:
  2251  06AF                     	goto	l147
  2252  06AF  2EB0               	
  2253                           l146:	
  2254  06B0                     	line	197
  2255                           	
  2256                           l147:	
  2257  06B0                     	return
  2258  06B0  0008               	opt stack 0
  2259                           GLOBAL	__end_of_send_string
  2260                           	__end_of_send_string:
  2261  06B1                     	signat	_send_string,4217
  2262                           	global	_lcd_data
  2263                           
  2264 ;; *************** function _lcd_data *****************
  2265 ;; Defined at:
  2266 ;;		line 125 in file "newmain.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  data            1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  data            1    6[COMMON] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1
  2280 ;;      Params:         0       0       0
  2281 ;;      Locals:         1       0       0
  2282 ;;      Temps:          1       0       0
  2283 ;;      Totals:         2       0       0
  2284 ;;Total ram usage:        2 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    2
  2287 ;; This function calls:
  2288 ;;		_data_write
  2289 ;; This function is called by:
  2290 ;;		_send_string
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2294                           	line	125
  2295                           global __ptext3
  2296                           __ptext3:	;psect for function _lcd_data
  2297  071B                     psect	text3
  2298                           	file	"newmain.c"
  2299                           	line	125
  2300                           	global	__size_of_lcd_data
  2301                           	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  2302  001B                     	
  2303                           _lcd_data:	
  2304  071B                     ;incstack = 0
  2305                           	opt	stack 4
  2306                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2307                           ;lcd_data@data stored from wreg
  2308                           	movwf	(lcd_data@data)
  2309  071B  00F6               	line	127
  2310                           	
  2311                           l1361:	
  2312  071C                     ;newmain.c: 125: void lcd_data( unsigned char data);newmain.c: 126: {;newmain.c: 127:   
                                   RC7=1;
  2313                           	bcf	status, 5	;RP0=0, select bank0
  2314  071C  1283               	bcf	status, 6	;RP1=0, select bank0
  2315  071D  1303               	bsf	(63/8),(63)&7	;volatile
  2316  071E  1787               	line	128
  2317                           	
  2318                           l1363:	
  2319  071F                     ;newmain.c: 128:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2320                           	opt asmopt_push
  2321                           opt asmopt_off
  2322                           	movlw	249
  2323  071F  30F9               movwf	((??_lcd_data+0)+0),f
  2324  0720  00F5               	u1787:
  2325  0721                     decfsz	(??_lcd_data+0)+0,f
  2326  0721  0BF5               	goto	u1787
  2327  0722  2F21               	nop2
  2328  0723  2F24               opt asmopt_pop
  2329                           
  2330                           	line	129
  2331                           	
  2332                           l1365:	
  2333  0724                     ;newmain.c: 129:     data_write(data>>4);
  2334                           	movf	(lcd_data@data),w
  2335  0724  0876               	movwf	(??_lcd_data+0)+0
  2336  0725  00F5               	movlw	04h
  2337  0726  3004               u1065:
  2338  0727                     	clrc
  2339  0727  1003               	rrf	(??_lcd_data+0)+0,f
  2340  0728  0CF5               	addlw	-1
  2341  0729  3EFF               	skipz
  2342  072A  1D03               	goto	u1065
  2343  072B  2F27               	movf	0+(??_lcd_data+0)+0,w
  2344  072C  0875               	fcall	_data_write
  2345  072D  26D3               	line	130
  2346                           	
  2347                           l1367:	
  2348  072E                     ;newmain.c: 130:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  2349                           	opt asmopt_push
  2350                           opt asmopt_off
  2351                           	movlw	249
  2352  072E  30F9               movwf	((??_lcd_data+0)+0),f
  2353  072F  00F5               	u1797:
  2354  0730                     decfsz	(??_lcd_data+0)+0,f
  2355  0730  0BF5               	goto	u1797
  2356  0731  2F30               	nop2
  2357  0732  2F33               opt asmopt_pop
  2358                           
  2359                           	line	131
  2360                           ;newmain.c: 131:     data_write(data);
  2361                           	movf	(lcd_data@data),w
  2362  0733  0876               	fcall	_data_write
  2363  0734  26D3               	line	132
  2364                           	
  2365                           l132:	
  2366  0735                     	return
  2367  0735  0008               	opt stack 0
  2368                           GLOBAL	__end_of_lcd_data
  2369                           	__end_of_lcd_data:
  2370  0736                     	signat	_lcd_data,4217
  2371                           	global	_itoa
  2372                           
  2373 ;; *************** function _itoa *****************
  2374 ;; Defined at:
  2375 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  buf             1    wreg     PTR unsigned char 
  2378 ;;		 -> buff(8), 
  2379 ;;  val             2    9[BANK0 ] int 
  2380 ;;  base            2   11[BANK0 ] int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  2383 ;;		 -> buff(8), 
  2384 ;;  cp              1   14[BANK0 ] PTR unsigned char 
  2385 ;;		 -> buff(8), 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      PTR unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1
  2395 ;;      Params:         0       4       0
  2396 ;;      Locals:         0       2       0
  2397 ;;      Temps:          0       1       0
  2398 ;;      Totals:         0       7       0
  2399 ;;Total ram usage:        7 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		_utoa
  2404 ;; This function is called by:
  2405 ;;		_send_int
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           psect	text4,local,class=CODE,delta=2,merge=1,group=2
  2409                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2410                           	line	4
  2411                           global __ptext4
  2412                           __ptext4:	;psect for function _itoa
  2413  063B                     psect	text4
  2414                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2415                           	line	4
  2416                           	global	__size_of_itoa
  2417                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  2418  0028                     	
  2419                           _itoa:	
  2420  063B                     ;incstack = 0
  2421                           	opt	stack 3
  2422                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2423                           ;itoa@buf stored from wreg
  2424                           	bcf	status, 5	;RP0=0, select bank0
  2425  063B  1283               	bcf	status, 6	;RP1=0, select bank0
  2426  063C  1303               	movwf	(itoa@buf)
  2427  063D  00AF               	line	6
  2428                           	
  2429                           l1429:	
  2430  063E                     	movf	(itoa@buf),w
  2431  063E  082F               	movwf	(??_itoa+0)+0
  2432  063F  00AD               	movf	(??_itoa+0)+0,w
  2433  0640  082D               	movwf	(itoa@cp)
  2434  0641  00AE               	line	8
  2435                           	
  2436                           l1431:	
  2437  0642                     	btfss	(itoa@val+1),7
  2438  0642  1FAA               	goto	u1151
  2439  0643  2E45               	goto	u1150
  2440  0644  2E46               u1151:
  2441  0645                     	goto	l1439
  2442  0645  2E57               u1150:
  2443  0646                     	line	9
  2444                           	
  2445                           l1433:	
  2446  0646                     	movlw	low(02Dh)
  2447  0646  302D               	movwf	(??_itoa+0)+0
  2448  0647  00AD               	movf	(itoa@buf),w
  2449  0648  082F               	movwf	fsr0
  2450  0649  0084               	movf	(??_itoa+0)+0,w
  2451  064A  082D               	bcf	status, 7	;select IRP bank0
  2452  064B  1383               	movwf	indf
  2453  064C  0080               	
  2454                           l1435:	
  2455  064D                     	movlw	low(01h)
  2456  064D  3001               	movwf	(??_itoa+0)+0
  2457  064E  00AD               	movf	(??_itoa+0)+0,w
  2458  064F  082D               	addwf	(itoa@buf),f
  2459  0650  07AF               	line	10
  2460                           	
  2461                           l1437:	
  2462  0651                     	comf	(itoa@val),f
  2463  0651  09A9               	comf	(itoa@val+1),f
  2464  0652  09AA               	incf	(itoa@val),f
  2465  0653  0AA9               	skipnz
  2466  0654  1903               	incf	(itoa@val+1),f
  2467  0655  0AAA               	goto	l1439
  2468  0656  2E57               	line	11
  2469                           	
  2470                           l738:	
  2471  0657                     	line	12
  2472                           	
  2473                           l1439:	
  2474  0657                     	movf	(itoa@val+1),w
  2475  0657  082A               	movwf	(utoa@val+1)
  2476  0658  00A1               	movf	(itoa@val),w
  2477  0659  0829               	movwf	(utoa@val)
  2478  065A  00A0               	movf	(itoa@base+1),w
  2479  065B  082C               	movwf	(utoa@base+1)
  2480  065C  00A3               	movf	(itoa@base),w
  2481  065D  082B               	movwf	(utoa@base)
  2482  065E  00A2               	movf	(itoa@buf),w
  2483  065F  082F               	fcall	_utoa
  2484  0660  2477               	goto	l739
  2485  0661  2E62               	line	13
  2486                           	
  2487                           l1441:	
  2488  0662                     	line	14
  2489                           ;	Return value of _itoa is never used
  2490                           	
  2491                           l739:	
  2492  0662                     	return
  2493  0662  0008               	opt stack 0
  2494                           GLOBAL	__end_of_itoa
  2495                           	__end_of_itoa:
  2496  0663                     	signat	_itoa,12409
  2497                           	global	_utoa
  2498                           
  2499 ;; *************** function _utoa *****************
  2500 ;; Defined at:
  2501 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  buf             1    wreg     PTR unsigned char 
  2504 ;;		 -> buff(8), 
  2505 ;;  val             2    0[BANK0 ] unsigned int 
  2506 ;;  base            2    2[BANK0 ] int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  2509 ;;		 -> buff(8), 
  2510 ;;  v               2    5[BANK0 ] unsigned int 
  2511 ;;  c               1    7[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      PTR unsigned char 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1
  2521 ;;      Params:         0       4       0
  2522 ;;      Locals:         0       4       0
  2523 ;;      Temps:          0       1       0
  2524 ;;      Totals:         0       9       0
  2525 ;;Total ram usage:        9 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    2
  2528 ;; This function calls:
  2529 ;;		___lwdiv
  2530 ;;		___lwmod
  2531 ;; This function is called by:
  2532 ;;		_itoa
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           psect	text5,local,class=CODE,delta=2,merge=1,group=2
  2536                           	line	17
  2537                           global __ptext5
  2538                           __ptext5:	;psect for function _utoa
  2539  0477                     psect	text5
  2540                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
  2541                           	line	17
  2542                           	global	__size_of_utoa
  2543                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2544  006B                     	
  2545                           _utoa:	
  2546  0477                     ;incstack = 0
  2547                           	opt	stack 3
  2548                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2549                           ;utoa@buf stored from wreg
  2550                           	bcf	status, 5	;RP0=0, select bank0
  2551  0477  1283               	bcf	status, 6	;RP1=0, select bank0
  2552  0478  1303               	movwf	(utoa@buf)
  2553  0479  00A8               	line	22
  2554                           	
  2555                           l1369:	
  2556  047A                     	movf	(utoa@val+1),w
  2557  047A  0821               	movwf	(utoa@v+1)
  2558  047B  00A6               	movf	(utoa@val),w
  2559  047C  0820               	movwf	(utoa@v)
  2560  047D  00A5               	goto	l1371
  2561  047E  2C7F               	line	23
  2562                           	
  2563                           l742:	
  2564  047F                     	line	24
  2565                           	
  2566                           l1371:	
  2567  047F                     	movf	(utoa@base+1),w
  2568  047F  0823               	movwf	(___lwdiv@divisor+1)
  2569  0480  00F4               	movf	(utoa@base),w
  2570  0481  0822               	movwf	(___lwdiv@divisor)
  2571  0482  00F3               	movf	(utoa@v+1),w
  2572  0483  0826               	movwf	(___lwdiv@dividend+1)
  2573  0484  00F6               	movf	(utoa@v),w
  2574  0485  0825               	movwf	(___lwdiv@dividend)
  2575  0486  00F5               	fcall	___lwdiv
  2576  0487  252E               	movf	(1+(?___lwdiv)),w
  2577  0488  0874               	bcf	status, 5	;RP0=0, select bank0
  2578  0489  1283               	bcf	status, 6	;RP1=0, select bank0
  2579  048A  1303               	movwf	(utoa@v+1)
  2580  048B  00A6               	movf	(0+(?___lwdiv)),w
  2581  048C  0873               	movwf	(utoa@v)
  2582  048D  00A5               	line	25
  2583                           	
  2584                           l1373:	
  2585  048E                     	movlw	low(01h)
  2586  048E  3001               	movwf	(??_utoa+0)+0
  2587  048F  00A4               	movf	(??_utoa+0)+0,w
  2588  0490  0824               	addwf	(utoa@buf),f
  2589  0491  07A8               	line	26
  2590                           	
  2591                           l1375:	
  2592  0492                     	movf	((utoa@v)),w
  2593  0492  0825               iorwf	((utoa@v+1)),w
  2594  0493  0426               	btfss	status,2
  2595  0494  1D03               	goto	u1071
  2596  0495  2C97               	goto	u1070
  2597  0496  2C98               u1071:
  2598  0497                     	goto	l1371
  2599  0497  2C7F               u1070:
  2600  0498                     	goto	l1377
  2601  0498  2C99               	
  2602                           l743:	
  2603  0499                     	line	27
  2604                           	
  2605                           l1377:	
  2606  0499                     	movf	(utoa@buf),w
  2607  0499  0828               	movwf	fsr0
  2608  049A  0084               	bcf	status, 7	;select IRP bank0
  2609  049B  1383               	clrf	indf
  2610  049C  0180               	
  2611                           l1379:	
  2612  049D                     	movlw	01h
  2613  049D  3001               	subwf	(utoa@buf),f
  2614  049E  02A8               	goto	l1381
  2615  049F  2CA0               	line	28
  2616                           	
  2617                           l744:	
  2618  04A0                     	line	29
  2619                           	
  2620                           l1381:	
  2621  04A0                     	movf	(utoa@base+1),w
  2622  04A0  0823               	movwf	(___lwmod@divisor+1)
  2623  04A1  00F4               	movf	(utoa@base),w
  2624  04A2  0822               	movwf	(___lwmod@divisor)
  2625  04A3  00F3               	movf	(utoa@val+1),w
  2626  04A4  0821               	movwf	(___lwmod@dividend+1)
  2627  04A5  00F6               	movf	(utoa@val),w
  2628  04A6  0820               	movwf	(___lwmod@dividend)
  2629  04A7  00F5               	fcall	___lwmod
  2630  04A8  25BB               	movf	(0+(?___lwmod)),w
  2631  04A9  0873               	bcf	status, 5	;RP0=0, select bank0
  2632  04AA  1283               	bcf	status, 6	;RP1=0, select bank0
  2633  04AB  1303               	movwf	(??_utoa+0)+0
  2634  04AC  00A4               	movf	(??_utoa+0)+0,w
  2635  04AD  0824               	movwf	(utoa@c)
  2636  04AE  00A7               	line	30
  2637                           	
  2638                           l1383:	
  2639  04AF                     	movf	(utoa@base+1),w
  2640  04AF  0823               	movwf	(___lwdiv@divisor+1)
  2641  04B0  00F4               	movf	(utoa@base),w
  2642  04B1  0822               	movwf	(___lwdiv@divisor)
  2643  04B2  00F3               	movf	(utoa@val+1),w
  2644  04B3  0821               	movwf	(___lwdiv@dividend+1)
  2645  04B4  00F6               	movf	(utoa@val),w
  2646  04B5  0820               	movwf	(___lwdiv@dividend)
  2647  04B6  00F5               	fcall	___lwdiv
  2648  04B7  252E               	movf	(1+(?___lwdiv)),w
  2649  04B8  0874               	bcf	status, 5	;RP0=0, select bank0
  2650  04B9  1283               	bcf	status, 6	;RP1=0, select bank0
  2651  04BA  1303               	movwf	(utoa@val+1)
  2652  04BB  00A1               	movf	(0+(?___lwdiv)),w
  2653  04BC  0873               	movwf	(utoa@val)
  2654  04BD  00A0               	line	31
  2655                           	
  2656                           l1385:	
  2657  04BE                     	movlw	low(0Ah)
  2658  04BE  300A               	subwf	(utoa@c),w
  2659  04BF  0227               	skipc
  2660  04C0  1C03               	goto	u1081
  2661  04C1  2CC3               	goto	u1080
  2662  04C2  2CC4               u1081:
  2663  04C3                     	goto	l745
  2664  04C3  2CC8               u1080:
  2665  04C4                     	line	32
  2666                           	
  2667                           l1387:	
  2668  04C4                     	movlw	low(07h)
  2669  04C4  3007               	movwf	(??_utoa+0)+0
  2670  04C5  00A4               	movf	(??_utoa+0)+0,w
  2671  04C6  0824               	addwf	(utoa@c),f
  2672  04C7  07A7               	
  2673                           l745:	
  2674  04C8                     	line	33
  2675                           	movlw	low(030h)
  2676  04C8  3030               	movwf	(??_utoa+0)+0
  2677  04C9  00A4               	movf	(??_utoa+0)+0,w
  2678  04CA  0824               	addwf	(utoa@c),f
  2679  04CB  07A7               	line	34
  2680                           	
  2681                           l1389:	
  2682  04CC                     	movf	(utoa@c),w
  2683  04CC  0827               	movwf	(??_utoa+0)+0
  2684  04CD  00A4               	movf	(utoa@buf),w
  2685  04CE  0828               	movwf	fsr0
  2686  04CF  0084               	movf	(??_utoa+0)+0,w
  2687  04D0  0824               	bcf	status, 7	;select IRP bank0
  2688  04D1  1383               	movwf	indf
  2689  04D2  0080               	
  2690                           l1391:	
  2691  04D3                     	movlw	01h
  2692  04D3  3001               	subwf	(utoa@buf),f
  2693  04D4  02A8               	line	35
  2694                           	
  2695                           l1393:	
  2696  04D5                     	movf	((utoa@val)),w
  2697  04D5  0820               iorwf	((utoa@val+1)),w
  2698  04D6  0421               	btfss	status,2
  2699  04D7  1D03               	goto	u1091
  2700  04D8  2CDA               	goto	u1090
  2701  04D9  2CDB               u1091:
  2702  04DA                     	goto	l1381
  2703  04DA  2CA0               u1090:
  2704  04DB                     	goto	l1395
  2705  04DB  2CDC               	
  2706                           l746:	
  2707  04DC                     	line	36
  2708                           	
  2709                           l1395:	
  2710  04DC                     ;	Return value of _utoa is never used
  2711                           	movlw	low(01h)
  2712  04DC  3001               	movwf	(??_utoa+0)+0
  2713  04DD  00A4               	movf	(??_utoa+0)+0,w
  2714  04DE  0824               	addwf	(utoa@buf),f
  2715  04DF  07A8               	goto	l747
  2716  04E0  2CE1               	
  2717                           l1397:	
  2718  04E1                     	line	37
  2719                           	
  2720                           l747:	
  2721  04E1                     	return
  2722  04E1  0008               	opt stack 0
  2723                           GLOBAL	__end_of_utoa
  2724                           	__end_of_utoa:
  2725  04E2                     	signat	_utoa,12409
  2726                           	global	___lwmod
  2727                           
  2728 ;; *************** function ___lwmod *****************
  2729 ;; Defined at:
  2730 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  divisor         2    3[COMMON] unsigned int 
  2733 ;;  dividend        2    5[COMMON] unsigned int 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  counter         1    8[COMMON] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  2    3[COMMON] unsigned int 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1
  2745 ;;      Params:         4       0       0
  2746 ;;      Locals:         1       0       0
  2747 ;;      Temps:          1       0       0
  2748 ;;      Totals:         6       0       0
  2749 ;;Total ram usage:        6 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_utoa
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2759                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2760                           	line	5
  2761                           global __ptext6
  2762                           __ptext6:	;psect for function ___lwmod
  2763  05BB                     psect	text6
  2764                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2765                           	line	5
  2766                           	global	__size_of___lwmod
  2767                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2768  0041                     	
  2769                           ___lwmod:	
  2770  05BB                     ;incstack = 0
  2771                           	opt	stack 3
  2772                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2773                           	line	12
  2774                           	
  2775                           l1323:	
  2776  05BB                     	movf	((___lwmod@divisor)),w
  2777  05BB  0873               iorwf	((___lwmod@divisor+1)),w
  2778  05BC  0474               	btfsc	status,2
  2779  05BD  1903               	goto	u971
  2780  05BE  2DC0               	goto	u970
  2781  05BF  2DC1               u971:
  2782  05C0                     	goto	l1341
  2783  05C0  2DF6               u970:
  2784  05C1                     	line	13
  2785                           	
  2786                           l1325:	
  2787  05C1                     	clrf	(___lwmod@counter)
  2788  05C1  01F8               	incf	(___lwmod@counter),f
  2789  05C2  0AF8               	line	14
  2790                           	goto	l1331
  2791  05C3  2DD0               	
  2792                           l587:	
  2793  05C4                     	line	15
  2794                           	
  2795                           l1327:	
  2796  05C4                     	movlw	01h
  2797  05C4  3001               	
  2798                           u985:
  2799  05C5                     	clrc
  2800  05C5  1003               	rlf	(___lwmod@divisor),f
  2801  05C6  0DF3               	rlf	(___lwmod@divisor+1),f
  2802  05C7  0DF4               	addlw	-1
  2803  05C8  3EFF               	skipz
  2804  05C9  1D03               	goto	u985
  2805  05CA  2DC5               	line	16
  2806                           	
  2807                           l1329:	
  2808  05CB                     	movlw	low(01h)
  2809  05CB  3001               	movwf	(??___lwmod+0)+0
  2810  05CC  00F7               	movf	(??___lwmod+0)+0,w
  2811  05CD  0877               	addwf	(___lwmod@counter),f
  2812  05CE  07F8               	goto	l1331
  2813  05CF  2DD0               	line	17
  2814                           	
  2815                           l586:	
  2816  05D0                     	line	14
  2817                           	
  2818                           l1331:	
  2819  05D0                     	btfss	(___lwmod@divisor+1),(15)&7
  2820  05D0  1FF4               	goto	u991
  2821  05D1  2DD3               	goto	u990
  2822  05D2  2DD4               u991:
  2823  05D3                     	goto	l1327
  2824  05D3  2DC4               u990:
  2825  05D4                     	goto	l1333
  2826  05D4  2DD6               	
  2827                           l588:	
  2828  05D5                     	goto	l1333
  2829  05D5  2DD6               	line	18
  2830                           	
  2831                           l589:	
  2832  05D6                     	line	19
  2833                           	
  2834                           l1333:	
  2835  05D6                     	movf	(___lwmod@divisor+1),w
  2836  05D6  0874               	subwf	(___lwmod@dividend+1),w
  2837  05D7  0276               	skipz
  2838  05D8  1D03               	goto	u1005
  2839  05D9  2DDC               	movf	(___lwmod@divisor),w
  2840  05DA  0873               	subwf	(___lwmod@dividend),w
  2841  05DB  0275               u1005:
  2842  05DC                     	skipc
  2843  05DC  1C03               	goto	u1001
  2844  05DD  2DDF               	goto	u1000
  2845  05DE  2DE0               u1001:
  2846  05DF                     	goto	l1337
  2847  05DF  2DE7               u1000:
  2848  05E0                     	line	20
  2849                           	
  2850                           l1335:	
  2851  05E0                     	movf	(___lwmod@divisor),w
  2852  05E0  0873               	subwf	(___lwmod@dividend),f
  2853  05E1  02F5               	movf	(___lwmod@divisor+1),w
  2854  05E2  0874               	skipc
  2855  05E3  1C03               	decf	(___lwmod@dividend+1),f
  2856  05E4  03F6               	subwf	(___lwmod@dividend+1),f
  2857  05E5  02F6               	goto	l1337
  2858  05E6  2DE7               	
  2859                           l590:	
  2860  05E7                     	line	21
  2861                           	
  2862                           l1337:	
  2863  05E7                     	movlw	01h
  2864  05E7  3001               	
  2865                           u1015:
  2866  05E8                     	clrc
  2867  05E8  1003               	rrf	(___lwmod@divisor+1),f
  2868  05E9  0CF4               	rrf	(___lwmod@divisor),f
  2869  05EA  0CF3               	addlw	-1
  2870  05EB  3EFF               	skipz
  2871  05EC  1D03               	goto	u1015
  2872  05ED  2DE8               	line	22
  2873                           	
  2874                           l1339:	
  2875  05EE                     	movlw	01h
  2876  05EE  3001               	subwf	(___lwmod@counter),f
  2877  05EF  02F8               	btfss	status,2
  2878  05F0  1D03               	goto	u1021
  2879  05F1  2DF3               	goto	u1020
  2880  05F2  2DF4               u1021:
  2881  05F3                     	goto	l1333
  2882  05F3  2DD6               u1020:
  2883  05F4                     	goto	l1341
  2884  05F4  2DF6               	
  2885                           l591:	
  2886  05F5                     	goto	l1341
  2887  05F5  2DF6               	line	23
  2888                           	
  2889                           l585:	
  2890  05F6                     	line	24
  2891                           	
  2892                           l1341:	
  2893  05F6                     	movf	(___lwmod@dividend+1),w
  2894  05F6  0876               	movwf	(?___lwmod+1)
  2895  05F7  00F4               	movf	(___lwmod@dividend),w
  2896  05F8  0875               	movwf	(?___lwmod)
  2897  05F9  00F3               	goto	l592
  2898  05FA  2DFB               	
  2899                           l1343:	
  2900  05FB                     	line	25
  2901                           	
  2902                           l592:	
  2903  05FB                     	return
  2904  05FB  0008               	opt stack 0
  2905                           GLOBAL	__end_of___lwmod
  2906                           	__end_of___lwmod:
  2907  05FC                     	signat	___lwmod,8314
  2908                           	global	___lwdiv
  2909                           
  2910 ;; *************** function ___lwdiv *****************
  2911 ;; Defined at:
  2912 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  divisor         2    3[COMMON] unsigned int 
  2915 ;;  dividend        2    5[COMMON] unsigned int 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  quotient        2    8[COMMON] unsigned int 
  2918 ;;  counter         1   10[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2    3[COMMON] unsigned int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1
  2928 ;;      Params:         4       0       0
  2929 ;;      Locals:         3       0       0
  2930 ;;      Temps:          1       0       0
  2931 ;;      Totals:         8       0       0
  2932 ;;Total ram usage:        8 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_utoa
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  2942                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2943                           	line	5
  2944                           global __ptext7
  2945                           __ptext7:	;psect for function ___lwdiv
  2946  052E                     psect	text7
  2947                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2948                           	line	5
  2949                           	global	__size_of___lwdiv
  2950                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2951  004B                     	
  2952                           ___lwdiv:	
  2953  052E                     ;incstack = 0
  2954                           	opt	stack 3
  2955                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2956                           	line	13
  2957                           	
  2958                           l1297:	
  2959  052E                     	clrf	(___lwdiv@quotient)
  2960  052E  01F8               	clrf	(___lwdiv@quotient+1)
  2961  052F  01F9               	line	14
  2962                           	
  2963                           l1299:	
  2964  0530                     	movf	((___lwdiv@divisor)),w
  2965  0530  0873               iorwf	((___lwdiv@divisor+1)),w
  2966  0531  0474               	btfsc	status,2
  2967  0532  1903               	goto	u901
  2968  0533  2D35               	goto	u900
  2969  0534  2D36               u901:
  2970  0535                     	goto	l1319
  2971  0535  2D73               u900:
  2972  0536                     	line	15
  2973                           	
  2974                           l1301:	
  2975  0536                     	clrf	(___lwdiv@counter)
  2976  0536  01FA               	incf	(___lwdiv@counter),f
  2977  0537  0AFA               	line	16
  2978                           	goto	l1307
  2979  0538  2D45               	
  2980                           l577:	
  2981  0539                     	line	17
  2982                           	
  2983                           l1303:	
  2984  0539                     	movlw	01h
  2985  0539  3001               	
  2986                           u915:
  2987  053A                     	clrc
  2988  053A  1003               	rlf	(___lwdiv@divisor),f
  2989  053B  0DF3               	rlf	(___lwdiv@divisor+1),f
  2990  053C  0DF4               	addlw	-1
  2991  053D  3EFF               	skipz
  2992  053E  1D03               	goto	u915
  2993  053F  2D3A               	line	18
  2994                           	
  2995                           l1305:	
  2996  0540                     	movlw	low(01h)
  2997  0540  3001               	movwf	(??___lwdiv+0)+0
  2998  0541  00F7               	movf	(??___lwdiv+0)+0,w
  2999  0542  0877               	addwf	(___lwdiv@counter),f
  3000  0543  07FA               	goto	l1307
  3001  0544  2D45               	line	19
  3002                           	
  3003                           l576:	
  3004  0545                     	line	16
  3005                           	
  3006                           l1307:	
  3007  0545                     	btfss	(___lwdiv@divisor+1),(15)&7
  3008  0545  1FF4               	goto	u921
  3009  0546  2D48               	goto	u920
  3010  0547  2D49               u921:
  3011  0548                     	goto	l1303
  3012  0548  2D39               u920:
  3013  0549                     	goto	l1309
  3014  0549  2D4B               	
  3015                           l578:	
  3016  054A                     	goto	l1309
  3017  054A  2D4B               	line	20
  3018                           	
  3019                           l579:	
  3020  054B                     	line	21
  3021                           	
  3022                           l1309:	
  3023  054B                     	movlw	01h
  3024  054B  3001               	
  3025                           u935:
  3026  054C                     	clrc
  3027  054C  1003               	rlf	(___lwdiv@quotient),f
  3028  054D  0DF8               	rlf	(___lwdiv@quotient+1),f
  3029  054E  0DF9               	addlw	-1
  3030  054F  3EFF               	skipz
  3031  0550  1D03               	goto	u935
  3032  0551  2D4C               	line	22
  3033                           	movf	(___lwdiv@divisor+1),w
  3034  0552  0874               	subwf	(___lwdiv@dividend+1),w
  3035  0553  0276               	skipz
  3036  0554  1D03               	goto	u945
  3037  0555  2D58               	movf	(___lwdiv@divisor),w
  3038  0556  0873               	subwf	(___lwdiv@dividend),w
  3039  0557  0275               u945:
  3040  0558                     	skipc
  3041  0558  1C03               	goto	u941
  3042  0559  2D5B               	goto	u940
  3043  055A  2D5C               u941:
  3044  055B                     	goto	l1315
  3045  055B  2D64               u940:
  3046  055C                     	line	23
  3047                           	
  3048                           l1311:	
  3049  055C                     	movf	(___lwdiv@divisor),w
  3050  055C  0873               	subwf	(___lwdiv@dividend),f
  3051  055D  02F5               	movf	(___lwdiv@divisor+1),w
  3052  055E  0874               	skipc
  3053  055F  1C03               	decf	(___lwdiv@dividend+1),f
  3054  0560  03F6               	subwf	(___lwdiv@dividend+1),f
  3055  0561  02F6               	line	24
  3056                           	
  3057                           l1313:	
  3058  0562                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3059  0562  1478               	goto	l1315
  3060  0563  2D64               	line	25
  3061                           	
  3062                           l580:	
  3063  0564                     	line	26
  3064                           	
  3065                           l1315:	
  3066  0564                     	movlw	01h
  3067  0564  3001               	
  3068                           u955:
  3069  0565                     	clrc
  3070  0565  1003               	rrf	(___lwdiv@divisor+1),f
  3071  0566  0CF4               	rrf	(___lwdiv@divisor),f
  3072  0567  0CF3               	addlw	-1
  3073  0568  3EFF               	skipz
  3074  0569  1D03               	goto	u955
  3075  056A  2D65               	line	27
  3076                           	
  3077                           l1317:	
  3078  056B                     	movlw	01h
  3079  056B  3001               	subwf	(___lwdiv@counter),f
  3080  056C  02FA               	btfss	status,2
  3081  056D  1D03               	goto	u961
  3082  056E  2D70               	goto	u960
  3083  056F  2D71               u961:
  3084  0570                     	goto	l1309
  3085  0570  2D4B               u960:
  3086  0571                     	goto	l1319
  3087  0571  2D73               	
  3088                           l581:	
  3089  0572                     	goto	l1319
  3090  0572  2D73               	line	28
  3091                           	
  3092                           l575:	
  3093  0573                     	line	29
  3094                           	
  3095                           l1319:	
  3096  0573                     	movf	(___lwdiv@quotient+1),w
  3097  0573  0879               	movwf	(?___lwdiv+1)
  3098  0574  00F4               	movf	(___lwdiv@quotient),w
  3099  0575  0878               	movwf	(?___lwdiv)
  3100  0576  00F3               	goto	l582
  3101  0577  2D78               	
  3102                           l1321:	
  3103  0578                     	line	30
  3104                           	
  3105                           l582:	
  3106  0578                     	return
  3107  0578  0008               	opt stack 0
  3108                           GLOBAL	__end_of___lwdiv
  3109                           	__end_of___lwdiv:
  3110  0579                     	signat	___lwdiv,8314
  3111                           	global	_lcd_init
  3112                           
  3113 ;; *************** function _lcd_init *****************
  3114 ;; Defined at:
  3115 ;;		line 145 in file "newmain.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1
  3129 ;;      Params:         0       0       0
  3130 ;;      Locals:         0       0       0
  3131 ;;      Temps:          2       0       0
  3132 ;;      Totals:         2       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_data_write
  3138 ;;		_lcd_cmd
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3144                           	file	"newmain.c"
  3145                           	line	145
  3146                           global __ptext8
  3147                           __ptext8:	;psect for function _lcd_init
  3148  0408                     psect	text8
  3149                           	file	"newmain.c"
  3150                           	line	145
  3151                           	global	__size_of_lcd_init
  3152                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3153  006F                     	
  3154                           _lcd_init:	
  3155  0408                     ;incstack = 0
  3156                           	opt	stack 4
  3157                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3158                           	line	147
  3159                           	
  3160                           l1445:	
  3161  0408                     ;newmain.c: 147:     TRISB1=0;
  3162                           	bsf	status, 5	;RP0=1, select bank1
  3163  0408  1683               	bcf	status, 6	;RP1=0, select bank1
  3164  0409  1303               	bcf	(1073/8)^080h,(1073)&7	;volatile
  3165  040A  1086               	line	148
  3166                           ;newmain.c: 148:     TRISB2=0;
  3167                           	bcf	(1074/8)^080h,(1074)&7	;volatile
  3168  040B  1106               	line	149
  3169                           ;newmain.c: 149:     TRISB3=0;
  3170                           	bcf	(1075/8)^080h,(1075)&7	;volatile
  3171  040C  1186               	line	150
  3172                           ;newmain.c: 150:     TRISB4=0;
  3173                           	bcf	(1076/8)^080h,(1076)&7	;volatile
  3174  040D  1206               	line	151
  3175                           ;newmain.c: 151:     TRISB5=0;
  3176                           	bcf	(1077/8)^080h,(1077)&7	;volatile
  3177  040E  1286               	line	152
  3178                           ;newmain.c: 152:     TRISC7=0;
  3179                           	bcf	(1087/8)^080h,(1087)&7	;volatile
  3180  040F  1387               	line	153
  3181                           ;newmain.c: 153:     RB5=0;
  3182                           	bcf	status, 5	;RP0=0, select bank0
  3183  0410  1283               	bcf	status, 6	;RP1=0, select bank0
  3184  0411  1303               	bcf	(53/8),(53)&7	;volatile
  3185  0412  1286               	line	154
  3186                           ;newmain.c: 154:     RB4=0;
  3187                           	bcf	(52/8),(52)&7	;volatile
  3188  0413  1206               	line	155
  3189                           ;newmain.c: 155:     RB3=0;
  3190                           	bcf	(51/8),(51)&7	;volatile
  3191  0414  1186               	line	156
  3192                           ;newmain.c: 156:     RB2=0;
  3193                           	bcf	(50/8),(50)&7	;volatile
  3194  0415  1106               	line	157
  3195                           ;newmain.c: 157:     RB1=0;
  3196                           	bcf	(49/8),(49)&7	;volatile
  3197  0416  1086               	line	158
  3198                           ;newmain.c: 158:     RC7=0;
  3199                           	bcf	(63/8),(63)&7	;volatile
  3200  0417  1387               	line	160
  3201                           	
  3202                           l1447:	
  3203  0418                     ;newmain.c: 160:     _delay((unsigned long)((30000)*(20000000/4000000.0)));
  3204                           	opt asmopt_push
  3205                           opt asmopt_off
  3206                           movlw	195
  3207  0418  30C3               movwf	((??_lcd_init+0)+0+1),f
  3208  0419  00F8               	movlw	205
  3209  041A  30CD               movwf	((??_lcd_init+0)+0),f
  3210  041B  00F7               	u1807:
  3211  041C                     decfsz	((??_lcd_init+0)+0),f
  3212  041C  0BF7               	goto	u1807
  3213  041D  2C1C               	decfsz	((??_lcd_init+0)+0+1),f
  3214  041E  0BF8               	goto	u1807
  3215  041F  2C1C               opt asmopt_pop
  3216                           
  3217                           	line	162
  3218                           	
  3219                           l1449:	
  3220  0420                     ;newmain.c: 162:     data_write(0x03);
  3221                           	movlw	low(03h)
  3222  0420  3003               	fcall	_data_write
  3223  0421  26D3               	line	163
  3224                           	
  3225                           l1451:	
  3226  0422                     ;newmain.c: 163:     _delay((unsigned long)((7000)*(20000000/4000000.0)));
  3227                           	opt asmopt_push
  3228                           opt asmopt_off
  3229                           movlw	46
  3230  0422  302E               movwf	((??_lcd_init+0)+0+1),f
  3231  0423  00F8               	movlw	115
  3232  0424  3073               movwf	((??_lcd_init+0)+0),f
  3233  0425  00F7               	u1817:
  3234  0426                     decfsz	((??_lcd_init+0)+0),f
  3235  0426  0BF7               	goto	u1817
  3236  0427  2C26               	decfsz	((??_lcd_init+0)+0+1),f
  3237  0428  0BF8               	goto	u1817
  3238  0429  2C26               opt asmopt_pop
  3239                           
  3240                           	line	165
  3241                           ;newmain.c: 165:     data_write(0x03);
  3242                           	movlw	low(03h)
  3243  042A  3003               	fcall	_data_write
  3244  042B  26D3               	line	167
  3245                           	
  3246                           l1453:	
  3247  042C                     ;newmain.c: 167:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3248                           	opt asmopt_push
  3249                           opt asmopt_off
  3250                           movlw	4
  3251  042C  3004               movwf	((??_lcd_init+0)+0+1),f
  3252  042D  00F8               	movlw	61
  3253  042E  303D               movwf	((??_lcd_init+0)+0),f
  3254  042F  00F7               	u1827:
  3255  0430                     decfsz	((??_lcd_init+0)+0),f
  3256  0430  0BF7               	goto	u1827
  3257  0431  2C30               	decfsz	((??_lcd_init+0)+0+1),f
  3258  0432  0BF8               	goto	u1827
  3259  0433  2C30               	nop2
  3260  0434  2C35               opt asmopt_pop
  3261                           
  3262                           	line	169
  3263                           	
  3264                           l1455:	
  3265  0435                     ;newmain.c: 169:     data_write(0x03);
  3266                           	movlw	low(03h)
  3267  0435  3003               	fcall	_data_write
  3268  0436  26D3               	line	170
  3269                           ;newmain.c: 170:     _delay((unsigned long)((850)*(20000000/4000000.0)));
  3270                           	opt asmopt_push
  3271                           opt asmopt_off
  3272                           movlw	6
  3273  0437  3006               movwf	((??_lcd_init+0)+0+1),f
  3274  0438  00F8               	movlw	131
  3275  0439  3083               movwf	((??_lcd_init+0)+0),f
  3276  043A  00F7               	u1837:
  3277  043B                     decfsz	((??_lcd_init+0)+0),f
  3278  043B  0BF7               	goto	u1837
  3279  043C  2C3B               	decfsz	((??_lcd_init+0)+0+1),f
  3280  043D  0BF8               	goto	u1837
  3281  043E  2C3B               	nop2
  3282  043F  2C40               opt asmopt_pop
  3283                           
  3284                           	line	172
  3285                           	
  3286                           l1457:	
  3287  0440                     ;newmain.c: 172:     data_write(0x02);
  3288                           	movlw	low(02h)
  3289  0440  3002               	fcall	_data_write
  3290  0441  26D3               	line	173
  3291                           	
  3292                           l1459:	
  3293  0442                     ;newmain.c: 173:     _delay((unsigned long)((400)*(20000000/4000000.0)));
  3294                           	opt asmopt_push
  3295                           opt asmopt_off
  3296                           movlw	3
  3297  0442  3003               movwf	((??_lcd_init+0)+0+1),f
  3298  0443  00F8               	movlw	151
  3299  0444  3097               movwf	((??_lcd_init+0)+0),f
  3300  0445  00F7               	u1847:
  3301  0446                     decfsz	((??_lcd_init+0)+0),f
  3302  0446  0BF7               	goto	u1847
  3303  0447  2C46               	decfsz	((??_lcd_init+0)+0+1),f
  3304  0448  0BF8               	goto	u1847
  3305  0449  2C46               	nop2
  3306  044A  2C4B               opt asmopt_pop
  3307                           
  3308                           	line	175
  3309                           ;newmain.c: 175:     lcd_cmd(0x28);
  3310                           	movlw	low(028h)
  3311  044B  3028               	fcall	_lcd_cmd
  3312  044C  2736               	line	176
  3313                           	
  3314                           l1461:	
  3315  044D                     ;newmain.c: 176:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  3316                           	opt asmopt_push
  3317                           opt asmopt_off
  3318                           	movlw	214
  3319  044D  30D6               movwf	((??_lcd_init+0)+0),f
  3320  044E  00F7               	u1857:
  3321  044F                     	nop2
  3322  044F  2C50               	nop2
  3323  0450  2C51               decfsz	(??_lcd_init+0)+0,f
  3324  0451  0BF7               	goto	u1857
  3325  0452  2C4F               	nop
  3326  0453  0000               opt asmopt_pop
  3327                           
  3328                           	line	177
  3329                           	
  3330                           l1463:	
  3331  0454                     ;newmain.c: 177:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  3332                           	opt asmopt_push
  3333                           opt asmopt_off
  3334                           	movlw	214
  3335  0454  30D6               movwf	((??_lcd_init+0)+0),f
  3336  0455  00F7               	u1867:
  3337  0456                     	nop2
  3338  0456  2C57               	nop2
  3339  0457  2C58               decfsz	(??_lcd_init+0)+0,f
  3340  0458  0BF7               	goto	u1867
  3341  0459  2C56               	nop
  3342  045A  0000               opt asmopt_pop
  3343                           
  3344                           	line	178
  3345                           ;newmain.c: 178:     lcd_cmd(0x0E);
  3346                           	movlw	low(0Eh)
  3347  045B  300E               	fcall	_lcd_cmd
  3348  045C  2736               	line	179
  3349                           	
  3350                           l1465:	
  3351  045D                     ;newmain.c: 179:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  3352                           	opt asmopt_push
  3353                           opt asmopt_off
  3354                           	movlw	214
  3355  045D  30D6               movwf	((??_lcd_init+0)+0),f
  3356  045E  00F7               	u1877:
  3357  045F                     	nop2
  3358  045F  2C60               	nop2
  3359  0460  2C61               decfsz	(??_lcd_init+0)+0,f
  3360  0461  0BF7               	goto	u1877
  3361  0462  2C5F               	nop
  3362  0463  0000               opt asmopt_pop
  3363                           
  3364                           	line	180
  3365                           	
  3366                           l1467:	
  3367  0464                     ;newmain.c: 180:     lcd_cmd(0x06);
  3368                           	movlw	low(06h)
  3369  0464  3006               	fcall	_lcd_cmd
  3370  0465  2736               	line	181
  3371                           ;newmain.c: 181:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  3372                           	opt asmopt_push
  3373                           opt asmopt_off
  3374                           	movlw	214
  3375  0466  30D6               movwf	((??_lcd_init+0)+0),f
  3376  0467  00F7               	u1887:
  3377  0468                     	nop2
  3378  0468  2C69               	nop2
  3379  0469  2C6A               decfsz	(??_lcd_init+0)+0,f
  3380  046A  0BF7               	goto	u1887
  3381  046B  2C68               	nop
  3382  046C  0000               opt asmopt_pop
  3383                           
  3384                           	line	182
  3385                           	
  3386                           l1469:	
  3387  046D                     ;newmain.c: 182:     lcd_cmd(0x80);
  3388                           	movlw	low(080h)
  3389  046D  3080               	fcall	_lcd_cmd
  3390  046E  2736               	line	183
  3391                           	
  3392                           l1471:	
  3393  046F                     ;newmain.c: 183:     _delay((unsigned long)((300)*(20000000/4000000.0)));
  3394                           	opt asmopt_push
  3395                           opt asmopt_off
  3396                           	movlw	214
  3397  046F  30D6               movwf	((??_lcd_init+0)+0),f
  3398  0470  00F7               	u1897:
  3399  0471                     	nop2
  3400  0471  2C72               	nop2
  3401  0472  2C73               decfsz	(??_lcd_init+0)+0,f
  3402  0473  0BF7               	goto	u1897
  3403  0474  2C71               	nop
  3404  0475  0000               opt asmopt_pop
  3405                           
  3406                           	line	184
  3407                           	
  3408                           l138:	
  3409  0476                     	return
  3410  0476  0008               	opt stack 0
  3411                           GLOBAL	__end_of_lcd_init
  3412                           	__end_of_lcd_init:
  3413  0477                     	signat	_lcd_init,89
  3414                           	global	_lcd_clear
  3415                           
  3416 ;; *************** function _lcd_clear *****************
  3417 ;; Defined at:
  3418 ;;		line 187 in file "newmain.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1
  3432 ;;      Params:         0       0       0
  3433 ;;      Locals:         0       0       0
  3434 ;;      Temps:          2       0       0
  3435 ;;      Totals:         2       0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    3
  3439 ;; This function calls:
  3440 ;;		_lcd_cmd
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3446                           	line	187
  3447                           global __ptext9
  3448                           __ptext9:	;psect for function _lcd_clear
  3449  0763                     psect	text9
  3450                           	file	"newmain.c"
  3451                           	line	187
  3452                           	global	__size_of_lcd_clear
  3453                           	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  3454  000C                     	
  3455                           _lcd_clear:	
  3456  0763                     ;incstack = 0
  3457                           	opt	stack 4
  3458                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  3459                           	line	188
  3460                           	
  3461                           l1473:	
  3462  0763                     ;newmain.c: 188:      lcd_cmd(0x01);
  3463                           	movlw	low(01h)
  3464  0763  3001               	fcall	_lcd_cmd
  3465  0764  2736               	line	189
  3466                           	
  3467                           l1475:	
  3468  0765                     ;newmain.c: 189:      _delay((unsigned long)((2000)*(20000000/4000000.0)));
  3469                           	opt asmopt_push
  3470                           opt asmopt_off
  3471                           movlw	13
  3472  0765  300D               movwf	((??_lcd_clear+0)+0+1),f
  3473  0766  00F8               	movlw	251
  3474  0767  30FB               movwf	((??_lcd_clear+0)+0),f
  3475  0768  00F7               	u1907:
  3476  0769                     decfsz	((??_lcd_clear+0)+0),f
  3477  0769  0BF7               	goto	u1907
  3478  076A  2F69               	decfsz	((??_lcd_clear+0)+0+1),f
  3479  076B  0BF8               	goto	u1907
  3480  076C  2F69               	nop2
  3481  076D  2F6E               opt asmopt_pop
  3482                           
  3483                           	line	190
  3484                           	
  3485                           l141:	
  3486  076E                     	return
  3487  076E  0008               	opt stack 0
  3488                           GLOBAL	__end_of_lcd_clear
  3489                           	__end_of_lcd_clear:
  3490  076F                     	signat	_lcd_clear,89
  3491                           	global	_lcd_cmd
  3492                           
  3493 ;; *************** function _lcd_cmd *****************
  3494 ;; Defined at:
  3495 ;;		line 135 in file "newmain.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  data            1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  data            1    6[COMMON] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1
  3509 ;;      Params:         0       0       0
  3510 ;;      Locals:         1       0       0
  3511 ;;      Temps:          1       0       0
  3512 ;;      Totals:         2       0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    2
  3516 ;; This function calls:
  3517 ;;		_data_write
  3518 ;; This function is called by:
  3519 ;;		_lcd_init
  3520 ;;		_lcd_clear
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3525                           	line	135
  3526                           global __ptext10
  3527                           __ptext10:	;psect for function _lcd_cmd
  3528  0736                     psect	text10
  3529                           	file	"newmain.c"
  3530                           	line	135
  3531                           	global	__size_of_lcd_cmd
  3532                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  3533  001B                     	
  3534                           _lcd_cmd:	
  3535  0736                     ;incstack = 0
  3536                           	opt	stack 4
  3537                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3538                           ;lcd_cmd@data stored from wreg
  3539                           	movwf	(lcd_cmd@data)
  3540  0736  00F6               	line	137
  3541                           	
  3542                           l1413:	
  3543  0737                     ;newmain.c: 135: void lcd_cmd(unsigned char data);newmain.c: 136: {;newmain.c: 137:     
                                 RC7=0;
  3544                           	bcf	status, 5	;RP0=0, select bank0
  3545  0737  1283               	bcf	status, 6	;RP1=0, select bank0
  3546  0738  1303               	bcf	(63/8),(63)&7	;volatile
  3547  0739  1387               	line	138
  3548                           	
  3549                           l1415:	
  3550  073A                     ;newmain.c: 138:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  3551                           	opt asmopt_push
  3552                           opt asmopt_off
  3553                           	movlw	249
  3554  073A  30F9               movwf	((??_lcd_cmd+0)+0),f
  3555  073B  00F5               	u1917:
  3556  073C                     decfsz	(??_lcd_cmd+0)+0,f
  3557  073C  0BF5               	goto	u1917
  3558  073D  2F3C               	nop2
  3559  073E  2F3F               opt asmopt_pop
  3560                           
  3561                           	line	139
  3562                           	
  3563                           l1417:	
  3564  073F                     ;newmain.c: 139:     data_write(data>>4);
  3565                           	movf	(lcd_cmd@data),w
  3566  073F  0876               	movwf	(??_lcd_cmd+0)+0
  3567  0740  00F5               	movlw	04h
  3568  0741  3004               u1135:
  3569  0742                     	clrc
  3570  0742  1003               	rrf	(??_lcd_cmd+0)+0,f
  3571  0743  0CF5               	addlw	-1
  3572  0744  3EFF               	skipz
  3573  0745  1D03               	goto	u1135
  3574  0746  2F42               	movf	0+(??_lcd_cmd+0)+0,w
  3575  0747  0875               	fcall	_data_write
  3576  0748  26D3               	line	140
  3577                           	
  3578                           l1419:	
  3579  0749                     ;newmain.c: 140:     _delay((unsigned long)((150)*(20000000/4000000.0)));
  3580                           	opt asmopt_push
  3581                           opt asmopt_off
  3582                           	movlw	249
  3583  0749  30F9               movwf	((??_lcd_cmd+0)+0),f
  3584  074A  00F5               	u1927:
  3585  074B                     decfsz	(??_lcd_cmd+0)+0,f
  3586  074B  0BF5               	goto	u1927
  3587  074C  2F4B               	nop2
  3588  074D  2F4E               opt asmopt_pop
  3589                           
  3590                           	line	141
  3591                           ;newmain.c: 141:     data_write(data);
  3592                           	movf	(lcd_cmd@data),w
  3593  074E  0876               	fcall	_data_write
  3594  074F  26D3               	line	142
  3595                           	
  3596                           l135:	
  3597  0750                     	return
  3598  0750  0008               	opt stack 0
  3599                           GLOBAL	__end_of_lcd_cmd
  3600                           	__end_of_lcd_cmd:
  3601  0751                     	signat	_lcd_cmd,4217
  3602                           	global	_data_write
  3603                           
  3604 ;; *************** function _data_write *****************
  3605 ;; Defined at:
  3606 ;;		line 115 in file "newmain.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  data            1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  data            1    4[COMMON] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1
  3620 ;;      Params:         0       0       0
  3621 ;;      Locals:         1       0       0
  3622 ;;      Temps:          1       0       0
  3623 ;;      Totals:         2       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_lcd_data
  3631 ;;		_lcd_cmd
  3632 ;;		_lcd_init
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3636                           	line	115
  3637                           global __ptext11
  3638                           __ptext11:	;psect for function _data_write
  3639  06D3                     psect	text11
  3640                           	file	"newmain.c"
  3641                           	line	115
  3642                           	global	__size_of_data_write
  3643                           	__size_of_data_write	equ	__end_of_data_write-_data_write
  3644  0021                     	
  3645                           _data_write:	
  3646  06D3                     ;incstack = 0
  3647                           	opt	stack 4
  3648                           ; Regs used in _data_write: [wreg+status,2+status,0]
  3649                           ;data_write@data stored from wreg
  3650                           	movwf	(data_write@data)
  3651  06D3  00F4               	line	117
  3652                           	
  3653                           l1287:	
  3654  06D4                     ;newmain.c: 115: void data_write(unsigned char data);newmain.c: 116: {;newmain.c: 117:  
                                    PORTB=(data<<2);
  3655                           	movf	(data_write@data),w
  3656  06D4  0874               	movwf	(??_data_write+0)+0
  3657  06D5  00F3               	movlw	(02h)-1
  3658  06D6  3001               u895:
  3659  06D7                     	clrc
  3660  06D7  1003               	rlf	(??_data_write+0)+0,f
  3661  06D8  0DF3               	addlw	-1
  3662  06D9  3EFF               	skipz
  3663  06DA  1D03               	goto	u895
  3664  06DB  2ED7               	clrc
  3665  06DC  1003               	rlf	(??_data_write+0)+0,w
  3666  06DD  0D73               	bcf	status, 5	;RP0=0, select bank0
  3667  06DE  1283               	bcf	status, 6	;RP1=0, select bank0
  3668  06DF  1303               	movwf	(6)	;volatile
  3669  06E0  0086               	line	118
  3670                           	
  3671                           l1289:	
  3672  06E1                     ;newmain.c: 118:     RB1=1;
  3673                           	bsf	(49/8),(49)&7	;volatile
  3674  06E1  1486               	line	119
  3675                           	
  3676                           l1291:	
  3677  06E2                     ;newmain.c: 119:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  3678                           	opt asmopt_push
  3679                           opt asmopt_off
  3680                           	movlw	199
  3681  06E2  30C7               movwf	((??_data_write+0)+0),f
  3682  06E3  00F3               	u1937:
  3683  06E4                     	nop2
  3684  06E4  2EE5               decfsz	(??_data_write+0)+0,f
  3685  06E5  0BF3               	goto	u1937
  3686  06E6  2EE4               	nop2
  3687  06E7  2EE8               	nop2
  3688  06E8  2EE9               opt asmopt_pop
  3689                           
  3690                           	line	120
  3691                           	
  3692                           l1293:	
  3693  06E9                     ;newmain.c: 120:     RB1=0;
  3694                           	bcf	status, 5	;RP0=0, select bank0
  3695  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3696  06EA  1303               	bcf	(49/8),(49)&7	;volatile
  3697  06EB  1086               	line	121
  3698                           	
  3699                           l1295:	
  3700  06EC                     ;newmain.c: 121:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  3701                           	opt asmopt_push
  3702                           opt asmopt_off
  3703                           	movlw	199
  3704  06EC  30C7               movwf	((??_data_write+0)+0),f
  3705  06ED  00F3               	u1947:
  3706  06EE                     	nop2
  3707  06EE  2EEF               decfsz	(??_data_write+0)+0,f
  3708  06EF  0BF3               	goto	u1947
  3709  06F0  2EEE               	nop2
  3710  06F1  2EF2               	nop2
  3711  06F2  2EF3               opt asmopt_pop
  3712                           
  3713                           	line	122
  3714                           	
  3715                           l129:	
  3716  06F3                     	return
  3717  06F3  0008               	opt stack 0
  3718                           GLOBAL	__end_of_data_write
  3719                           	__end_of_data_write:
  3720  06F4                     	signat	_data_write,4217
  3721                           	global	___wmul
  3722                           
  3723 ;; *************** function ___wmul *****************
  3724 ;; Defined at:
  3725 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  multiplier      2    3[COMMON] unsigned int 
  3728 ;;  multiplicand    2    5[COMMON] unsigned int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  product         2    7[COMMON] unsigned int 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  2    3[COMMON] unsigned int 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1
  3740 ;;      Params:         4       0       0
  3741 ;;      Locals:         2       0       0
  3742 ;;      Temps:          0       0       0
  3743 ;;      Totals:         6       0       0
  3744 ;;Total ram usage:        6 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    1
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  3754                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3755                           	line	15
  3756                           global __ptext12
  3757                           __ptext12:	;psect for function ___wmul
  3758  0663                     psect	text12
  3759                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3760                           	line	15
  3761                           	global	__size_of___wmul
  3762                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3763  0028                     	
  3764                           ___wmul:	
  3765  0663                     ;incstack = 0
  3766                           	opt	stack 6
  3767                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3768                           	line	43
  3769                           	
  3770                           l1481:	
  3771  0663                     	clrf	(___wmul@product)
  3772  0663  01F7               	clrf	(___wmul@product+1)
  3773  0664  01F8               	goto	l1483
  3774  0665  2E66               	line	44
  3775                           	
  3776                           l309:	
  3777  0666                     	line	45
  3778                           	
  3779                           l1483:	
  3780  0666                     	btfss	(___wmul@multiplier),(0)&7
  3781  0666  1C73               	goto	u1161
  3782  0667  2E69               	goto	u1160
  3783  0668  2E6A               u1161:
  3784  0669                     	goto	l310
  3785  0669  2E70               u1160:
  3786  066A                     	line	46
  3787                           	
  3788                           l1485:	
  3789  066A                     	movf	(___wmul@multiplicand),w
  3790  066A  0875               	addwf	(___wmul@product),f
  3791  066B  07F7               	skipnc
  3792  066C  1803               	incf	(___wmul@product+1),f
  3793  066D  0AF8               	movf	(___wmul@multiplicand+1),w
  3794  066E  0876               	addwf	(___wmul@product+1),f
  3795  066F  07F8               	
  3796                           l310:	
  3797  0670                     	line	47
  3798                           	movlw	01h
  3799  0670  3001               	
  3800                           u1175:
  3801  0671                     	clrc
  3802  0671  1003               	rlf	(___wmul@multiplicand),f
  3803  0672  0DF5               	rlf	(___wmul@multiplicand+1),f
  3804  0673  0DF6               	addlw	-1
  3805  0674  3EFF               	skipz
  3806  0675  1D03               	goto	u1175
  3807  0676  2E71               	line	48
  3808                           	
  3809                           l1487:	
  3810  0677                     	movlw	01h
  3811  0677  3001               	
  3812                           u1185:
  3813  0678                     	clrc
  3814  0678  1003               	rrf	(___wmul@multiplier+1),f
  3815  0679  0CF4               	rrf	(___wmul@multiplier),f
  3816  067A  0CF3               	addlw	-1
  3817  067B  3EFF               	skipz
  3818  067C  1D03               	goto	u1185
  3819  067D  2E78               	line	49
  3820                           	
  3821                           l1489:	
  3822  067E                     	movf	((___wmul@multiplier)),w
  3823  067E  0873               iorwf	((___wmul@multiplier+1)),w
  3824  067F  0474               	btfss	status,2
  3825  0680  1D03               	goto	u1191
  3826  0681  2E83               	goto	u1190
  3827  0682  2E84               u1191:
  3828  0683                     	goto	l1483
  3829  0683  2E66               u1190:
  3830  0684                     	goto	l1491
  3831  0684  2E85               	
  3832                           l311:	
  3833  0685                     	line	52
  3834                           	
  3835                           l1491:	
  3836  0685                     	movf	(___wmul@product+1),w
  3837  0685  0878               	movwf	(?___wmul+1)
  3838  0686  00F4               	movf	(___wmul@product),w
  3839  0687  0877               	movwf	(?___wmul)
  3840  0688  00F3               	goto	l312
  3841  0689  2E8A               	
  3842                           l1493:	
  3843  068A                     	line	53
  3844                           	
  3845                           l312:	
  3846  068A                     	return
  3847  068A  0008               	opt stack 0
  3848                           GLOBAL	__end_of___wmul
  3849                           	__end_of___wmul:
  3850  068B                     	signat	___wmul,8314
  3851                           	global	___lmul
  3852                           
  3853 ;; *************** function ___lmul *****************
  3854 ;; Defined at:
  3855 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  multiplier      4    3[COMMON] unsigned long 
  3858 ;;  multiplicand    4    7[COMMON] unsigned long 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  product         4    1[BANK0 ] unsigned long 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  4    3[COMMON] unsigned long 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1
  3870 ;;      Params:         8       0       0
  3871 ;;      Locals:         0       4       0
  3872 ;;      Temps:          0       1       0
  3873 ;;      Totals:         8       5       0
  3874 ;;Total ram usage:       13 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  3884                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3885                           	line	15
  3886                           global __ptext13
  3887                           __ptext13:	;psect for function ___lmul
  3888  04E2                     psect	text13
  3889                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3890                           	line	15
  3891                           	global	__size_of___lmul
  3892                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3893  004C                     	
  3894                           ___lmul:	
  3895  04E2                     ;incstack = 0
  3896                           	opt	stack 6
  3897                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3898                           	line	119
  3899                           	
  3900                           l1495:	
  3901  04E2                     	movlw	high highword(0)
  3902  04E2  3000               	bcf	status, 5	;RP0=0, select bank0
  3903  04E3  1283               	bcf	status, 6	;RP1=0, select bank0
  3904  04E4  1303               	movwf	(___lmul@product+3)
  3905  04E5  00A4               	movlw	low highword(0)
  3906  04E6  3000               	movwf	(___lmul@product+2)
  3907  04E7  00A3               	movlw	high(0)
  3908  04E8  3000               	movwf	(___lmul@product+1)
  3909  04E9  00A2               	movlw	low(0)
  3910  04EA  3000               	movwf	(___lmul@product)
  3911  04EB  00A1               
  3912                           	goto	l1497
  3913  04EC  2CED               	line	120
  3914                           	
  3915                           l321:	
  3916  04ED                     	line	121
  3917                           	
  3918                           l1497:	
  3919  04ED                     	btfss	(___lmul@multiplier),(0)&7
  3920  04ED  1C73               	goto	u1201
  3921  04EE  2CF0               	goto	u1200
  3922  04EF  2CF1               u1201:
  3923  04F0                     	goto	l1501
  3924  04F0  2D09               u1200:
  3925  04F1                     	line	122
  3926                           	
  3927                           l1499:	
  3928  04F1                     	movf	(___lmul@multiplicand),w
  3929  04F1  0877               	addwf	(___lmul@product),f
  3930  04F2  07A1               	movf	(___lmul@multiplicand+1),w
  3931  04F3  0878               	clrz
  3932  04F4  1103               	skipnc
  3933  04F5  1803               	addlw	1
  3934  04F6  3E01               	skipnz
  3935  04F7  1903               	goto	u1211
  3936  04F8  2CFA               	addwf	(___lmul@product+1),f
  3937  04F9  07A2               u1211:
  3938  04FA                     	movf	(___lmul@multiplicand+2),w
  3939  04FA  0879               	clrz
  3940  04FB  1103               	skipnc
  3941  04FC  1803               	addlw	1
  3942  04FD  3E01               	skipnz
  3943  04FE  1903               	goto	u1212
  3944  04FF  2D01               	addwf	(___lmul@product+2),f
  3945  0500  07A3               u1212:
  3946  0501                     	movf	(___lmul@multiplicand+3),w
  3947  0501  087A               	clrz
  3948  0502  1103               	skipnc
  3949  0503  1803               	addlw	1
  3950  0504  3E01               	skipnz
  3951  0505  1903               	goto	u1213
  3952  0506  2D08               	addwf	(___lmul@product+3),f
  3953  0507  07A4               u1213:
  3954  0508                     
  3955                           	goto	l1501
  3956  0508  2D09               	
  3957                           l322:	
  3958  0509                     	line	123
  3959                           	
  3960                           l1501:	
  3961  0509                     	movlw	01h
  3962  0509  3001               	movwf	(??___lmul+0)+0
  3963  050A  00A0               u1225:
  3964  050B                     	clrc
  3965  050B  1003               	rlf	(___lmul@multiplicand),f
  3966  050C  0DF7               	rlf	(___lmul@multiplicand+1),f
  3967  050D  0DF8               	rlf	(___lmul@multiplicand+2),f
  3968  050E  0DF9               	rlf	(___lmul@multiplicand+3),f
  3969  050F  0DFA               	decfsz	(??___lmul+0)+0
  3970  0510  0BA0               	goto	u1225
  3971  0511  2D0B               	line	124
  3972                           	
  3973                           l1503:	
  3974  0512                     	movlw	01h
  3975  0512  3001               u1235:
  3976  0513                     	clrc
  3977  0513  1003               	rrf	(___lmul@multiplier+3),f
  3978  0514  0CF6               	rrf	(___lmul@multiplier+2),f
  3979  0515  0CF5               	rrf	(___lmul@multiplier+1),f
  3980  0516  0CF4               	rrf	(___lmul@multiplier),f
  3981  0517  0CF3               	addlw	-1
  3982  0518  3EFF               	skipz
  3983  0519  1D03               	goto	u1235
  3984  051A  2D13               
  3985                           	line	125
  3986                           	movf	(___lmul@multiplier+3),w
  3987  051B  0876               	iorwf	(___lmul@multiplier+2),w
  3988  051C  0475               	iorwf	(___lmul@multiplier+1),w
  3989  051D  0474               	iorwf	(___lmul@multiplier),w
  3990  051E  0473               	skipz
  3991  051F  1D03               	goto	u1241
  3992  0520  2D22               	goto	u1240
  3993  0521  2D23               u1241:
  3994  0522                     	goto	l1497
  3995  0522  2CED               u1240:
  3996  0523                     	goto	l1505
  3997  0523  2D24               	
  3998                           l323:	
  3999  0524                     	line	128
  4000                           	
  4001                           l1505:	
  4002  0524                     	movf	(___lmul@product+3),w
  4003  0524  0824               	movwf	(?___lmul+3)
  4004  0525  00F6               	movf	(___lmul@product+2),w
  4005  0526  0823               	movwf	(?___lmul+2)
  4006  0527  00F5               	movf	(___lmul@product+1),w
  4007  0528  0822               	movwf	(?___lmul+1)
  4008  0529  00F4               	movf	(___lmul@product),w
  4009  052A  0821               	movwf	(?___lmul)
  4010  052B  00F3               
  4011                           	goto	l324
  4012  052C  2D2D               	
  4013                           l1507:	
  4014  052D                     	line	129
  4015                           	
  4016                           l324:	
  4017  052D                     	return
  4018  052D  0008               	opt stack 0
  4019                           GLOBAL	__end_of___lmul
  4020                           	__end_of___lmul:
  4021  052E                     	signat	___lmul,8316
  4022                           	global	_DDS_init
  4023                           
  4024 ;; *************** function _DDS_init *****************
  4025 ;; Defined at:
  4026 ;;		line 106 in file "newmain.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1
  4040 ;;      Params:         0       0       0
  4041 ;;      Locals:         0       0       0
  4042 ;;      Temps:          0       0       0
  4043 ;;      Totals:         0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    3
  4047 ;; This function calls:
  4048 ;;		_DDS
  4049 ;;		_spi_write
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4055                           	file	"newmain.c"
  4056                           	line	106
  4057                           global __ptext14
  4058                           __ptext14:	;psect for function _DDS_init
  4059  06B1                     psect	text14
  4060                           	file	"newmain.c"
  4061                           	line	106
  4062                           	global	__size_of_DDS_init
  4063                           	__size_of_DDS_init	equ	__end_of_DDS_init-_DDS_init
  4064  0022                     	
  4065                           _DDS_init:	
  4066  06B1                     ;incstack = 0
  4067                           	opt	stack 4
  4068                           ; Regs used in _DDS_init: [wreg+status,2+status,0+pclath+cstack]
  4069                           	line	108
  4070                           	
  4071                           l1443:	
  4072  06B1                     ;newmain.c: 108:     spi_write(RESET);
  4073                           	bcf	status, 5	;RP0=0, select bank0
  4074  06B1  1283               	bcf	status, 6	;RP1=0, select bank0
  4075  06B2  1303               	movf	(_RESET+1),w
  4076  06B3  086C               	movwf	(spi_write@data+1)
  4077  06B4  00F4               	movf	(_RESET),w
  4078  06B5  086B               	movwf	(spi_write@data)
  4079  06B6  00F3               	fcall	_spi_write
  4080  06B7  2579               	line	109
  4081                           ;newmain.c: 109:     DDS(335572,0);
  4082                           	movlw	0
  4083  06B8  3000               	bcf	status, 5	;RP0=0, select bank0
  4084  06B9  1283               	bcf	status, 6	;RP1=0, select bank0
  4085  06BA  1303               	movwf	(DDS@input+3)
  4086  06BB  00A3               	movlw	05h
  4087  06BC  3005               	movwf	(DDS@input+2)
  4088  06BD  00A2               	movlw	01Eh
  4089  06BE  301E               	movwf	(DDS@input+1)
  4090  06BF  00A1               	movlw	0D4h
  4091  06C0  30D4               	movwf	(DDS@input)
  4092  06C1  00A0               
  4093                           	clrf	(DDS@reg)
  4094  06C2  01A4               	fcall	_DDS
  4095  06C3  25FC               	line	110
  4096                           ;newmain.c: 110:     spi_write(PHASE);
  4097                           	bcf	status, 5	;RP0=0, select bank0
  4098  06C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4099  06C5  1303               	movf	(_PHASE+1),w
  4100  06C6  0866               	movwf	(spi_write@data+1)
  4101  06C7  00F4               	movf	(_PHASE),w
  4102  06C8  0865               	movwf	(spi_write@data)
  4103  06C9  00F3               	fcall	_spi_write
  4104  06CA  2579               	line	111
  4105                           ;newmain.c: 111:     spi_write(SET_0);
  4106                           	bcf	status, 5	;RP0=0, select bank0
  4107  06CB  1283               	bcf	status, 6	;RP1=0, select bank0
  4108  06CC  1303               	movf	(_SET_0+1),w
  4109  06CD  086A               	movwf	(spi_write@data+1)
  4110  06CE  00F4               	movf	(_SET_0),w
  4111  06CF  0869               	movwf	(spi_write@data)
  4112  06D0  00F3               	fcall	_spi_write
  4113  06D1  2579               	line	112
  4114                           	
  4115                           l126:	
  4116  06D2                     	return
  4117  06D2  0008               	opt stack 0
  4118                           GLOBAL	__end_of_DDS_init
  4119                           	__end_of_DDS_init:
  4120  06D3                     	signat	_DDS_init,89
  4121                           	global	_DDS
  4122                           
  4123 ;; *************** function _DDS *****************
  4124 ;; Defined at:
  4125 ;;		line 85 in file "newmain.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  input           4    0[BANK0 ] unsigned long 
  4128 ;;  reg             1    4[BANK0 ] unsigned char 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1
  4140 ;;      Params:         0       5       0
  4141 ;;      Locals:         0       0       0
  4142 ;;      Temps:          4       0       0
  4143 ;;      Totals:         4       5       0
  4144 ;;Total ram usage:        9 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		_spi_write
  4149 ;; This function is called by:
  4150 ;;		_DDS_init
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4155                           	line	85
  4156                           global __ptext15
  4157                           __ptext15:	;psect for function _DDS
  4158  05FC                     psect	text15
  4159                           	file	"newmain.c"
  4160                           	line	85
  4161                           	global	__size_of_DDS
  4162                           	__size_of_DDS	equ	__end_of_DDS-_DDS
  4163  003F                     	
  4164                           _DDS:	
  4165  05FC                     ;incstack = 0
  4166                           	opt	stack 4
  4167                           ; Regs used in _DDS: [wreg+status,2+status,0+pclath+cstack]
  4168                           	line	87
  4169                           	
  4170                           l1399:	
  4171  05FC                     ;newmain.c: 85: void DDS(uint32_t input,char reg);newmain.c: 86: {;newmain.c: 87:     fr
                                 eqLSB = input &~0xC000;
  4172                           	movlw	0FFh
  4173  05FC  30FF               	bcf	status, 5	;RP0=0, select bank0
  4174  05FD  1283               	bcf	status, 6	;RP1=0, select bank0
  4175  05FE  1303               	andwf	(DDS@input),w
  4176  05FF  0520               	movwf	(_freqLSB)
  4177  0600  00CE               	movlw	03Fh
  4178  0601  303F               	andwf	(DDS@input+1),w
  4179  0602  0521               	movwf	1+(_freqLSB)
  4180  0603  00CF               	line	89
  4181                           	
  4182                           l1401:	
  4183  0604                     ;newmain.c: 89:     freqMSB = input>>14;
  4184                           	movf	(DDS@input),w
  4185  0604  0820               	movwf	(??_DDS+0)+0
  4186  0605  00F7               	movf	(DDS@input+1),w
  4187  0606  0821               	movwf	((??_DDS+0)+0+1)
  4188  0607  00F8               	movf	(DDS@input+2),w
  4189  0608  0822               	movwf	((??_DDS+0)+0+2)
  4190  0609  00F9               	movf	(DDS@input+3),w
  4191  060A  0823               	movwf	((??_DDS+0)+0+3)
  4192  060B  00FA               	movlw	0Eh
  4193  060C  300E               u1105:
  4194  060D                     	clrc
  4195  060D  1003               	rrf	(??_DDS+0)+3,f
  4196  060E  0CFA               	rrf	(??_DDS+0)+2,f
  4197  060F  0CF9               	rrf	(??_DDS+0)+1,f
  4198  0610  0CF8               	rrf	(??_DDS+0)+0,f
  4199  0611  0CF7               u1100:
  4200  0612                     	addlw	-1
  4201  0612  3EFF               	skipz
  4202  0613  1D03               	goto	u1105
  4203  0614  2E0D               	movf	1+(??_DDS+0)+0,w
  4204  0615  0878               	movwf	(_freqMSB+1)
  4205  0616  00D1               	movf	0+(??_DDS+0)+0,w
  4206  0617  0877               	movwf	(_freqMSB)
  4207  0618  00D0               	line	90
  4208                           	
  4209                           l1403:	
  4210  0619                     ;newmain.c: 90:     freqMSB &=~0xC000;
  4211                           	movlw	0FFh
  4212  0619  30FF               	andwf	(_freqMSB),f
  4213  061A  05D0               	movlw	03Fh
  4214  061B  303F               	andwf	(_freqMSB+1),f
  4215  061C  05D1               	line	92
  4216                           ;newmain.c: 92:     if (reg==0){
  4217                           	movf	((DDS@reg)),w
  4218  061D  0824               	btfss	status,2
  4219  061E  1D03               	goto	u1111
  4220  061F  2E21               	goto	u1110
  4221  0620  2E22               u1111:
  4222  0621                     	goto	l1407
  4223  0621  2E25               u1110:
  4224  0622                     	line	93
  4225                           	
  4226                           l1405:	
  4227  0622                     ;newmain.c: 93:     freqLSB |=0x4000;
  4228                           	bsf	(_freqLSB)+(14/8),(14)&7
  4229  0622  174F               	line	94
  4230                           ;newmain.c: 94:     freqMSB |=0x4000;
  4231                           	bsf	(_freqMSB)+(14/8),(14)&7
  4232  0623  1751               	line	95
  4233                           ;newmain.c: 95:     }
  4234                           	goto	l1411
  4235  0624  2E2E               	line	96
  4236                           ;newmain.c: 96:     else if(reg==1)
  4237                           	
  4238                           l120:	
  4239  0625                     	
  4240                           l1407:	
  4241  0625                     		decf	((DDS@reg)),w
  4242  0625  0324               	btfss	status,2
  4243  0626  1D03               	goto	u1121
  4244  0627  2E29               	goto	u1120
  4245  0628  2E2A               u1121:
  4246  0629                     	goto	l1411
  4247  0629  2E2E               u1120:
  4248  062A                     	line	98
  4249                           	
  4250                           l1409:	
  4251  062A                     ;newmain.c: 97:     {;newmain.c: 98:     freqLSB |=0x8000;
  4252                           	bsf	(_freqLSB)+(15/8),(15)&7
  4253  062A  17CF               	line	99
  4254                           ;newmain.c: 99:     freqMSB |=0x8000;
  4255                           	bsf	(_freqMSB)+(15/8),(15)&7
  4256  062B  17D1               	goto	l1411
  4257  062C  2E2E               	line	100
  4258                           ;newmain.c: 100:     }
  4259                           	
  4260                           l122:	
  4261  062D                     	goto	l1411
  4262  062D  2E2E               	
  4263                           l121:	
  4264  062E                     	line	102
  4265                           	
  4266                           l1411:	
  4267  062E                     ;newmain.c: 102:     spi_write(freqLSB);
  4268                           	movf	(_freqLSB+1),w
  4269  062E  084F               	movwf	(spi_write@data+1)
  4270  062F  00F4               	movf	(_freqLSB),w
  4271  0630  084E               	movwf	(spi_write@data)
  4272  0631  00F3               	fcall	_spi_write
  4273  0632  2579               	line	103
  4274                           ;newmain.c: 103:     spi_write(freqMSB);
  4275                           	bcf	status, 5	;RP0=0, select bank0
  4276  0633  1283               	bcf	status, 6	;RP1=0, select bank0
  4277  0634  1303               	movf	(_freqMSB+1),w
  4278  0635  0851               	movwf	(spi_write@data+1)
  4279  0636  00F4               	movf	(_freqMSB),w
  4280  0637  0850               	movwf	(spi_write@data)
  4281  0638  00F3               	fcall	_spi_write
  4282  0639  2579               	line	104
  4283                           	
  4284                           l123:	
  4285  063A                     	return
  4286  063A  0008               	opt stack 0
  4287                           GLOBAL	__end_of_DDS
  4288                           	__end_of_DDS:
  4289  063B                     	signat	_DDS,8313
  4290                           	global	_spi_write
  4291                           
  4292 ;; *************** function _spi_write *****************
  4293 ;; Defined at:
  4294 ;;		line 63 in file "newmain.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  data            2    3[COMMON] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  i               1    6[COMMON] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1
  4308 ;;      Params:         2       0       0
  4309 ;;      Locals:         1       0       0
  4310 ;;      Temps:          1       0       0
  4311 ;;      Totals:         4       0       0
  4312 ;;Total ram usage:        4 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_DDS
  4319 ;;		_DDS_init
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4324                           	line	63
  4325                           global __ptext16
  4326                           __ptext16:	;psect for function _spi_write
  4327  0579                     psect	text16
  4328                           	file	"newmain.c"
  4329                           	line	63
  4330                           	global	__size_of_spi_write
  4331                           	__size_of_spi_write	equ	__end_of_spi_write-_spi_write
  4332  0042                     	
  4333                           _spi_write:	
  4334  0579                     ;incstack = 0
  4335                           	opt	stack 6
  4336                           ; Regs used in _spi_write: [wreg+status,2+status,0]
  4337                           	line	64
  4338                           	
  4339                           l1345:	
  4340  0579                     ;newmain.c: 63: void spi_write(unsigned int data);newmain.c: 64: { RC4=0;
  4341                           	bcf	status, 5	;RP0=0, select bank0
  4342  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  4343  057A  1303               	bcf	(60/8),(60)&7	;volatile
  4344  057B  1207               	line	65
  4345                           ;newmain.c: 65: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4346                           		opt asmopt_push
  4347                           	opt asmopt_off
  4348                           	nop2	;2 cycle nop
  4349  057C  2D7D               	nop2	;2 cycle nop
  4350  057D  2D7E               	nop
  4351  057E  0000               	opt asmopt_pop
  4352                           
  4353                           	line	66
  4354                           	
  4355                           l1347:	
  4356  057F                     ;newmain.c: 66:     for(char i=0; i<16; i++)
  4357                           	clrf	(spi_write@i)
  4358  057F  01F6               	
  4359                           l1349:	
  4360  0580                     	movlw	low(010h)
  4361  0580  3010               	subwf	(spi_write@i),w
  4362  0581  0276               	skipc
  4363  0582  1C03               	goto	u1031
  4364  0583  2D85               	goto	u1030
  4365  0584  2D86               u1031:
  4366  0585                     	goto	l113
  4367  0585  2D88               u1030:
  4368  0586                     	goto	l114
  4369  0586  2DAE               	
  4370                           l1351:	
  4371  0587                     	goto	l114
  4372  0587  2DAE               	
  4373                           l113:	
  4374  0588                     	line	68
  4375                           ;newmain.c: 67:  {;newmain.c: 68:         if (data&0x8000) RC5=1;
  4376                           	btfss	(spi_write@data+1),(15)&7
  4377  0588  1FF4               	goto	u1041
  4378  0589  2D8B               	goto	u1040
  4379  058A  2D8C               u1041:
  4380  058B                     	goto	l115
  4381  058B  2D90               u1040:
  4382  058C                     	
  4383                           l1353:	
  4384  058C                     	bcf	status, 5	;RP0=0, select bank0
  4385  058C  1283               	bcf	status, 6	;RP1=0, select bank0
  4386  058D  1303               	bsf	(61/8),(61)&7	;volatile
  4387  058E  1687               	goto	l116
  4388  058F  2D93               	line	69
  4389                           ;newmain.c: 69:         else RC5=0;
  4390                           	
  4391                           l115:	
  4392  0590                     	bcf	status, 5	;RP0=0, select bank0
  4393  0590  1283               	bcf	status, 6	;RP1=0, select bank0
  4394  0591  1303               	bcf	(61/8),(61)&7	;volatile
  4395  0592  1287               	
  4396                           l116:	
  4397  0593                     	line	70
  4398                           ;newmain.c: 70:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  4399                           		opt asmopt_push
  4400                           	opt asmopt_off
  4401                           	nop2	;2 cycle nop
  4402  0593  2D94               	nop2	;2 cycle nop
  4403  0594  2D95               	nop
  4404  0595  0000               	opt asmopt_pop
  4405                           
  4406                           	line	71
  4407                           ;newmain.c: 71:        RC6=0;
  4408                           	bcf	status, 5	;RP0=0, select bank0
  4409  0596  1283               	bcf	status, 6	;RP1=0, select bank0
  4410  0597  1303               	bcf	(62/8),(62)&7	;volatile
  4411  0598  1307               	line	72
  4412                           ;newmain.c: 72:        _delay((unsigned long)((1)*(20000000/4000000.0)));
  4413                           		opt asmopt_push
  4414                           	opt asmopt_off
  4415                           	nop2	;2 cycle nop
  4416  0599  2D9A               	nop2	;2 cycle nop
  4417  059A  2D9B               	nop
  4418  059B  0000               	opt asmopt_pop
  4419                           
  4420                           	line	73
  4421                           ;newmain.c: 73:        RC6=1;
  4422                           	bcf	status, 5	;RP0=0, select bank0
  4423  059C  1283               	bcf	status, 6	;RP1=0, select bank0
  4424  059D  1303               	bsf	(62/8),(62)&7	;volatile
  4425  059E  1707               	line	74
  4426                           	
  4427                           l1355:	
  4428  059F                     ;newmain.c: 74:        data=data<<1;
  4429                           	clrc
  4430  059F  1003               	rlf	(spi_write@data),w
  4431  05A0  0D73               	movwf	(spi_write@data)
  4432  05A1  00F3               	rlf	(spi_write@data+1),w
  4433  05A2  0D74               	movwf	1+(spi_write@data)
  4434  05A3  00F4               	line	75
  4435                           	
  4436                           l1357:	
  4437  05A4                     ;newmain.c: 75:  }
  4438                           	movlw	low(01h)
  4439  05A4  3001               	movwf	(??_spi_write+0)+0
  4440  05A5  00F5               	movf	(??_spi_write+0)+0,w
  4441  05A6  0875               	addwf	(spi_write@i),f
  4442  05A7  07F6               	
  4443                           l1359:	
  4444  05A8                     	movlw	low(010h)
  4445  05A8  3010               	subwf	(spi_write@i),w
  4446  05A9  0276               	skipc
  4447  05AA  1C03               	goto	u1051
  4448  05AB  2DAD               	goto	u1050
  4449  05AC  2DAE               u1051:
  4450  05AD                     	goto	l113
  4451  05AD  2D88               u1050:
  4452  05AE                     	
  4453                           l114:	
  4454  05AE                     	line	76
  4455                           ;newmain.c: 76:     RC5=0;
  4456                           	bcf	status, 5	;RP0=0, select bank0
  4457  05AE  1283               	bcf	status, 6	;RP1=0, select bank0
  4458  05AF  1303               	bcf	(61/8),(61)&7	;volatile
  4459  05B0  1287               	line	77
  4460                           ;newmain.c: 77:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4461                           		opt asmopt_push
  4462                           	opt asmopt_off
  4463                           	nop2	;2 cycle nop
  4464  05B1  2DB2               	nop2	;2 cycle nop
  4465  05B2  2DB3               	nop
  4466  05B3  0000               	opt asmopt_pop
  4467                           
  4468                           	line	78
  4469                           ;newmain.c: 78:      RC4=1;
  4470                           	bcf	status, 5	;RP0=0, select bank0
  4471  05B4  1283               	bcf	status, 6	;RP1=0, select bank0
  4472  05B5  1303               	bsf	(60/8),(60)&7	;volatile
  4473  05B6  1607               	line	79
  4474                           ;newmain.c: 79:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4475                           		opt asmopt_push
  4476                           	opt asmopt_off
  4477                           	nop2	;2 cycle nop
  4478  05B7  2DB8               	nop2	;2 cycle nop
  4479  05B8  2DB9               	nop
  4480  05B9  0000               	opt asmopt_pop
  4481                           
  4482                           	line	80
  4483                           	
  4484                           l117:	
  4485  05BA                     	return
  4486  05BA  0008               	opt stack 0
  4487                           GLOBAL	__end_of_spi_write
  4488                           	__end_of_spi_write:
  4489  05BB                     	signat	_spi_write,4217
  4490                           	global	_ISR
  4491                           
  4492 ;; *************** function _ISR *****************
  4493 ;; Defined at:
  4494 ;;		line 206 in file "newmain.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1
  4508 ;;      Params:         0       0       0
  4509 ;;      Locals:         0       0       0
  4510 ;;      Temps:          3       0       0
  4511 ;;      Totals:         3       0       0
  4512 ;;Total ram usage:        3 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		Interrupt level 1
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4521                           	line	206
  4522                           global __ptext17
  4523                           __ptext17:	;psect for function _ISR
  4524  027B                     psect	text17
  4525                           	file	"newmain.c"
  4526                           	line	206
  4527                           	global	__size_of_ISR
  4528                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  4529  018D                     	
  4530                           _ISR:	
  4531  027B                     ;incstack = 0
  4532                           	opt	stack 3
  4533                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4534                           psect	intentry,class=CODE,delta=2
  4535                           global __pintentry
  4536                           __pintentry:
  4537  0004                     global interrupt_function
  4538                           interrupt_function:
  4539  0004                     	global saved_w
  4540                           	saved_w	set	btemp+0
  4541  007E                     	movwf	saved_w
  4542  0004  00FE               	swapf	status,w
  4543  0005  0E03               	movwf	(??_ISR+1)
  4544  0006  00F1               	movf	pclath,w
  4545  0007  080A               	movwf	(??_ISR+2)
  4546  0008  00F2               	ljmp	_ISR
  4547  0009  2A7B               psect	text17
  4548                           	line	207
  4549                           	
  4550                           i1l1509:	
  4551  027B                     ;newmain.c: 207:     if (INTF==1){
  4552                           	btfss	(89/8),(89)&7	;volatile
  4553  027B  1C8B               	goto	u125_21
  4554  027C  2A7E               	goto	u125_20
  4555  027D  2A7F               u125_21:
  4556  027E                     	goto	i1l199
  4557  027E  2C01               u125_20:
  4558  027F                     	line	209
  4559                           	
  4560                           i1l1511:	
  4561  027F                     ;newmain.c: 209:             if (RC2==1){
  4562                           	bcf	status, 5	;RP0=0, select bank0
  4563  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  4564  0280  1303               	btfss	(58/8),(58)&7	;volatile
  4565  0281  1D07               	goto	u126_21
  4566  0282  2A84               	goto	u126_20
  4567  0283  2A85               u126_21:
  4568  0284                     	goto	i1l1551
  4569  0284  2B42               u126_20:
  4570  0285                     	line	210
  4571                           	
  4572                           i1l1513:	
  4573  0285                     ;newmain.c: 210:                 if (val0<5){
  4574                           	btfsc	(_val0+3),7
  4575  0285  1BE0               	goto	u127_20
  4576  0286  2A98               	movf	(_val0+3),w
  4577  0287  0860               	btfss	status,2
  4578  0288  1D03               	goto	u127_21
  4579  0289  2A97               	movf	(_val0+2),w
  4580  028A  085F               	btfss	status,2
  4581  028B  1D03               	goto	u127_21
  4582  028C  2A97               	movf	(_val0+1),w
  4583  028D  085E               	btfss	status,2
  4584  028E  1D03               	goto	u127_21
  4585  028F  2A97               	movlw	5
  4586  0290  3005               	subwf	(_val0),w
  4587  0291  025D               	skipz
  4588  0292  1D03               	goto	u127_23
  4589  0293  2A94               u127_23:
  4590  0294                     	btfsc	status,0
  4591  0294  1803               	goto	u127_21
  4592  0295  2A97               	goto	u127_20
  4593  0296  2A98               
  4594                           u127_21:
  4595  0297                     	goto	i1l175
  4596  0297  2BFA               u127_20:
  4597  0298                     	line	211
  4598                           	
  4599                           i1l1515:	
  4600  0298                     ;newmain.c: 211:                                 if (pos==5)val4++;
  4601                           		movlw	5
  4602  0298  3005               	xorwf	((_pos)),w
  4603  0299  0659               	btfss	status,2
  4604  029A  1D03               	goto	u128_21
  4605  029B  2A9D               	goto	u128_20
  4606  029C  2A9E               u128_21:
  4607  029D                     	goto	i1l158
  4608  029D  2AA2               u128_20:
  4609  029E                     	
  4610                           i1l1517:	
  4611  029E                     	movlw	low(01h)
  4612  029E  3001               	movwf	(??_ISR+0)+0
  4613  029F  00F0               	movf	(??_ISR+0)+0,w
  4614  02A0  0870               	addwf	(_val4),f
  4615  02A1  07DA               	
  4616                           i1l158:	
  4617  02A2                     	line	212
  4618                           ;newmain.c: 212:                                 if((pos==4)||(val4>9))val3++;
  4619                           		movlw	4
  4620  02A2  3004               	xorwf	((_pos)),w
  4621  02A3  0659               	btfsc	status,2
  4622  02A4  1903               	goto	u129_21
  4623  02A5  2AA7               	goto	u129_20
  4624  02A6  2AA8               u129_21:
  4625  02A7                     	goto	i1l1521
  4626  02A7  2AB0               u129_20:
  4627  02A8                     	
  4628                           i1l1519:	
  4629  02A8                     	movf	(_val4),w
  4630  02A8  085A               	xorlw	80h
  4631  02A9  3A80               	addlw	-((0Ah)^80h)
  4632  02AA  3E76               	skipc
  4633  02AB  1C03               	goto	u130_21
  4634  02AC  2AAE               	goto	u130_20
  4635  02AD  2AAF               u130_21:
  4636  02AE                     	goto	i1l159
  4637  02AE  2AB4               u130_20:
  4638  02AF                     	goto	i1l1521
  4639  02AF  2AB0               	
  4640                           i1l161:	
  4641  02B0                     	
  4642                           i1l1521:	
  4643  02B0                     	movlw	low(01h)
  4644  02B0  3001               	movwf	(??_ISR+0)+0
  4645  02B1  00F0               	movf	(??_ISR+0)+0,w
  4646  02B2  0870               	addwf	(_val3),f
  4647  02B3  07DB               	
  4648                           i1l159:	
  4649  02B4                     	line	213
  4650                           ;newmain.c: 213:                                 if ((pos==3)||(val3>9))val2++;
  4651                           		movlw	3
  4652  02B4  3003               	xorwf	((_pos)),w
  4653  02B5  0659               	btfsc	status,2
  4654  02B6  1903               	goto	u131_21
  4655  02B7  2AB9               	goto	u131_20
  4656  02B8  2ABA               u131_21:
  4657  02B9                     	goto	i1l1525
  4658  02B9  2AC2               u131_20:
  4659  02BA                     	
  4660                           i1l1523:	
  4661  02BA                     	movf	(_val3),w
  4662  02BA  085B               	xorlw	80h
  4663  02BB  3A80               	addlw	-((0Ah)^80h)
  4664  02BC  3E76               	skipc
  4665  02BD  1C03               	goto	u132_21
  4666  02BE  2AC0               	goto	u132_20
  4667  02BF  2AC1               u132_21:
  4668  02C0                     	goto	i1l162
  4669  02C0  2AC6               u132_20:
  4670  02C1                     	goto	i1l1525
  4671  02C1  2AC2               	
  4672                           i1l164:	
  4673  02C2                     	
  4674                           i1l1525:	
  4675  02C2                     	movlw	low(01h)
  4676  02C2  3001               	movwf	(??_ISR+0)+0
  4677  02C3  00F0               	movf	(??_ISR+0)+0,w
  4678  02C4  0870               	addwf	(_val2),f
  4679  02C5  07DC               	
  4680                           i1l162:	
  4681  02C6                     	line	214
  4682                           ;newmain.c: 214:                                 if((pos==1)||(val2>9))val1++;
  4683                           		decf	((_pos)),w
  4684  02C6  0359               	btfsc	status,2
  4685  02C7  1903               	goto	u133_21
  4686  02C8  2ACA               	goto	u133_20
  4687  02C9  2ACB               u133_21:
  4688  02CA                     	goto	i1l1529
  4689  02CA  2AD3               u133_20:
  4690  02CB                     	
  4691                           i1l1527:	
  4692  02CB                     	movf	(_val2),w
  4693  02CB  085C               	xorlw	80h
  4694  02CC  3A80               	addlw	-((0Ah)^80h)
  4695  02CD  3E76               	skipc
  4696  02CE  1C03               	goto	u134_21
  4697  02CF  2AD1               	goto	u134_20
  4698  02D0  2AD2               u134_21:
  4699  02D1                     	goto	i1l1531
  4700  02D1  2AE2               u134_20:
  4701  02D2                     	goto	i1l1529
  4702  02D2  2AD3               	
  4703                           i1l167:	
  4704  02D3                     	
  4705                           i1l1529:	
  4706  02D3                     	movlw	01h
  4707  02D3  3001               	addwf	(_val1),f
  4708  02D4  07C2               	movlw	0
  4709  02D5  3000               	skipnc
  4710  02D6  1803               movlw 1
  4711  02D7  3001               	addwf	(_val1+1),f
  4712  02D8  07C3               	movlw	0
  4713  02D9  3000               	skipnc
  4714  02DA  1803               movlw 1
  4715  02DB  3001               	addwf	(_val1+2),f
  4716  02DC  07C4               	movlw	0
  4717  02DD  3000               	skipnc
  4718  02DE  1803               movlw 1
  4719  02DF  3001               	addwf	(_val1+3),f
  4720  02E0  07C5               	goto	i1l1531
  4721  02E1  2AE2               	
  4722                           i1l165:	
  4723  02E2                     	line	215
  4724                           	
  4725                           i1l1531:	
  4726  02E2                     ;newmain.c: 215:                                 if ((pos==0)||(val1>9)) val0++;
  4727                           	movf	((_pos)),w
  4728  02E2  0859               	btfsc	status,2
  4729  02E3  1903               	goto	u135_21
  4730  02E4  2AE6               	goto	u135_20
  4731  02E5  2AE7               u135_21:
  4732  02E6                     	goto	i1l1535
  4733  02E6  2AFB               u135_20:
  4734  02E7                     	
  4735                           i1l1533:	
  4736  02E7                     	btfsc	(_val1+3),7
  4737  02E7  1BC5               	goto	u136_21
  4738  02E8  2AF9               	movf	(_val1+3),w
  4739  02E9  0845               	btfss	status,2
  4740  02EA  1D03               	goto	u136_20
  4741  02EB  2AFA               	movf	(_val1+2),w
  4742  02EC  0844               	btfss	status,2
  4743  02ED  1D03               	goto	u136_20
  4744  02EE  2AFA               	movf	(_val1+1),w
  4745  02EF  0843               	btfss	status,2
  4746  02F0  1D03               	goto	u136_20
  4747  02F1  2AFA               	movlw	10
  4748  02F2  300A               	subwf	(_val1),w
  4749  02F3  0242               	skipz
  4750  02F4  1D03               	goto	u136_23
  4751  02F5  2AF6               u136_23:
  4752  02F6                     	btfss	status,0
  4753  02F6  1C03               	goto	u136_21
  4754  02F7  2AF9               	goto	u136_20
  4755  02F8  2AFA               
  4756                           u136_21:
  4757  02F9                     	goto	i1l1537
  4758  02F9  2B0A               u136_20:
  4759  02FA                     	goto	i1l1535
  4760  02FA  2AFB               	
  4761                           i1l170:	
  4762  02FB                     	
  4763                           i1l1535:	
  4764  02FB                     	movlw	01h
  4765  02FB  3001               	addwf	(_val0),f
  4766  02FC  07DD               	movlw	0
  4767  02FD  3000               	skipnc
  4768  02FE  1803               movlw 1
  4769  02FF  3001               	addwf	(_val0+1),f
  4770  0300  07DE               	movlw	0
  4771  0301  3000               	skipnc
  4772  0302  1803               movlw 1
  4773  0303  3001               	addwf	(_val0+2),f
  4774  0304  07DF               	movlw	0
  4775  0305  3000               	skipnc
  4776  0306  1803               movlw 1
  4777  0307  3001               	addwf	(_val0+3),f
  4778  0308  07E0               	goto	i1l1537
  4779  0309  2B0A               	
  4780                           i1l168:	
  4781  030A                     	line	217
  4782                           	
  4783                           i1l1537:	
  4784  030A                     ;newmain.c: 217:                                 if(val1>9)val1=0;
  4785                           	btfsc	(_val1+3),7
  4786  030A  1BC5               	goto	u137_21
  4787  030B  2B1C               	movf	(_val1+3),w
  4788  030C  0845               	btfss	status,2
  4789  030D  1D03               	goto	u137_20
  4790  030E  2B1D               	movf	(_val1+2),w
  4791  030F  0844               	btfss	status,2
  4792  0310  1D03               	goto	u137_20
  4793  0311  2B1D               	movf	(_val1+1),w
  4794  0312  0843               	btfss	status,2
  4795  0313  1D03               	goto	u137_20
  4796  0314  2B1D               	movlw	10
  4797  0315  300A               	subwf	(_val1),w
  4798  0316  0242               	skipz
  4799  0317  1D03               	goto	u137_23
  4800  0318  2B19               u137_23:
  4801  0319                     	btfss	status,0
  4802  0319  1C03               	goto	u137_21
  4803  031A  2B1C               	goto	u137_20
  4804  031B  2B1D               
  4805                           u137_21:
  4806  031C                     	goto	i1l171
  4807  031C  2B25               u137_20:
  4808  031D                     	
  4809                           i1l1539:	
  4810  031D                     	movlw	high highword(0)
  4811  031D  3000               	movwf	(_val1+3)
  4812  031E  00C5               	movlw	low highword(0)
  4813  031F  3000               	movwf	(_val1+2)
  4814  0320  00C4               	movlw	high(0)
  4815  0321  3000               	movwf	(_val1+1)
  4816  0322  00C3               	movlw	low(0)
  4817  0323  3000               	movwf	(_val1)
  4818  0324  00C2               
  4819                           	
  4820                           i1l171:	
  4821  0325                     	line	218
  4822                           ;newmain.c: 218:                                 if(val2>9)val2=0;
  4823                           	movf	(_val2),w
  4824  0325  085C               	xorlw	80h
  4825  0326  3A80               	addlw	-((0Ah)^80h)
  4826  0327  3E76               	skipc
  4827  0328  1C03               	goto	u138_21
  4828  0329  2B2B               	goto	u138_20
  4829  032A  2B2C               u138_21:
  4830  032B                     	goto	i1l1543
  4831  032B  2B2E               u138_20:
  4832  032C                     	
  4833                           i1l1541:	
  4834  032C                     	clrf	(_val2)
  4835  032C  01DC               	goto	i1l1543
  4836  032D  2B2E               	
  4837                           i1l172:	
  4838  032E                     	line	219
  4839                           	
  4840                           i1l1543:	
  4841  032E                     ;newmain.c: 219:                                 if(val3>9)val3=0;
  4842                           	movf	(_val3),w
  4843  032E  085B               	xorlw	80h
  4844  032F  3A80               	addlw	-((0Ah)^80h)
  4845  0330  3E76               	skipc
  4846  0331  1C03               	goto	u139_21
  4847  0332  2B34               	goto	u139_20
  4848  0333  2B35               u139_21:
  4849  0334                     	goto	i1l1547
  4850  0334  2B37               u139_20:
  4851  0335                     	
  4852                           i1l1545:	
  4853  0335                     	clrf	(_val3)
  4854  0335  01DB               	goto	i1l1547
  4855  0336  2B37               	
  4856                           i1l173:	
  4857  0337                     	line	220
  4858                           	
  4859                           i1l1547:	
  4860  0337                     ;newmain.c: 220:                                 if(val4>9)val4=0;
  4861                           	movf	(_val4),w
  4862  0337  085A               	xorlw	80h
  4863  0338  3A80               	addlw	-((0Ah)^80h)
  4864  0339  3E76               	skipc
  4865  033A  1C03               	goto	u140_21
  4866  033B  2B3D               	goto	u140_20
  4867  033C  2B3E               u140_21:
  4868  033D                     	goto	i1l175
  4869  033D  2BFA               u140_20:
  4870  033E                     	
  4871                           i1l1549:	
  4872  033E                     	clrf	(_val4)
  4873  033E  01DA               	goto	i1l175
  4874  033F  2BFA               	
  4875                           i1l174:	
  4876  0340                     	goto	i1l175
  4877  0340  2BFA               	line	222
  4878                           ;newmain.c: 222:             }
  4879                           	
  4880                           i1l157:	
  4881  0341                     	line	223
  4882                           ;newmain.c: 223:                             }
  4883                           	goto	i1l175
  4884  0341  2BFA               	line	224
  4885                           ;newmain.c: 224:                             else {
  4886                           	
  4887                           i1l156:	
  4888  0342                     	line	225
  4889                           	
  4890                           i1l1551:	
  4891  0342                     ;newmain.c: 225:                                 if (pos==5)val4--;
  4892                           		movlw	5
  4893  0342  3005               	xorwf	((_pos)),w
  4894  0343  0659               	btfss	status,2
  4895  0344  1D03               	goto	u141_21
  4896  0345  2B47               	goto	u141_20
  4897  0346  2B48               u141_21:
  4898  0347                     	goto	i1l176
  4899  0347  2B4C               u141_20:
  4900  0348                     	
  4901                           i1l1553:	
  4902  0348                     	movlw	low(-1)
  4903  0348  30FF               	movwf	(??_ISR+0)+0
  4904  0349  00F0               	movf	(??_ISR+0)+0,w
  4905  034A  0870               	addwf	(_val4),f
  4906  034B  07DA               	
  4907                           i1l176:	
  4908  034C                     	line	226
  4909                           ;newmain.c: 226:                                 if((pos==4)||(val4<0))val3--;
  4910                           		movlw	4
  4911  034C  3004               	xorwf	((_pos)),w
  4912  034D  0659               	btfsc	status,2
  4913  034E  1903               	goto	u142_21
  4914  034F  2B51               	goto	u142_20
  4915  0350  2B52               u142_21:
  4916  0351                     	goto	i1l1557
  4917  0351  2B57               u142_20:
  4918  0352                     	
  4919                           i1l1555:	
  4920  0352                     	btfss	(_val4),7
  4921  0352  1FDA               	goto	u143_21
  4922  0353  2B55               	goto	u143_20
  4923  0354  2B56               u143_21:
  4924  0355                     	goto	i1l177
  4925  0355  2B5B               u143_20:
  4926  0356                     	goto	i1l1557
  4927  0356  2B57               	
  4928                           i1l179:	
  4929  0357                     	
  4930                           i1l1557:	
  4931  0357                     	movlw	low(-1)
  4932  0357  30FF               	movwf	(??_ISR+0)+0
  4933  0358  00F0               	movf	(??_ISR+0)+0,w
  4934  0359  0870               	addwf	(_val3),f
  4935  035A  07DB               	
  4936                           i1l177:	
  4937  035B                     	line	227
  4938                           ;newmain.c: 227:                                 if ((pos==3)||(val3<0))val2--;
  4939                           		movlw	3
  4940  035B  3003               	xorwf	((_pos)),w
  4941  035C  0659               	btfsc	status,2
  4942  035D  1903               	goto	u144_21
  4943  035E  2B60               	goto	u144_20
  4944  035F  2B61               u144_21:
  4945  0360                     	goto	i1l1561
  4946  0360  2B66               u144_20:
  4947  0361                     	
  4948                           i1l1559:	
  4949  0361                     	btfss	(_val3),7
  4950  0361  1FDB               	goto	u145_21
  4951  0362  2B64               	goto	u145_20
  4952  0363  2B65               u145_21:
  4953  0364                     	goto	i1l180
  4954  0364  2B6A               u145_20:
  4955  0365                     	goto	i1l1561
  4956  0365  2B66               	
  4957                           i1l182:	
  4958  0366                     	
  4959                           i1l1561:	
  4960  0366                     	movlw	low(-1)
  4961  0366  30FF               	movwf	(??_ISR+0)+0
  4962  0367  00F0               	movf	(??_ISR+0)+0,w
  4963  0368  0870               	addwf	(_val2),f
  4964  0369  07DC               	
  4965                           i1l180:	
  4966  036A                     	line	228
  4967                           ;newmain.c: 228:                                 if((pos==1)||(val2<0))val1--;
  4968                           		decf	((_pos)),w
  4969  036A  0359               	btfsc	status,2
  4970  036B  1903               	goto	u146_21
  4971  036C  2B6E               	goto	u146_20
  4972  036D  2B6F               u146_21:
  4973  036E                     	goto	i1l1565
  4974  036E  2B74               u146_20:
  4975  036F                     	
  4976                           i1l1563:	
  4977  036F                     	btfss	(_val2),7
  4978  036F  1FDC               	goto	u147_21
  4979  0370  2B72               	goto	u147_20
  4980  0371  2B73               u147_21:
  4981  0372                     	goto	i1l1567
  4982  0372  2B80               u147_20:
  4983  0373                     	goto	i1l1565
  4984  0373  2B74               	
  4985                           i1l185:	
  4986  0374                     	
  4987                           i1l1565:	
  4988  0374                     	movlw	0FFh
  4989  0374  30FF               	addwf	(_val1),f
  4990  0375  07C2               	movlw	0FFh
  4991  0376  30FF               	skipc
  4992  0377  1C03               	addwf	(_val1+1),f
  4993  0378  07C3               	movlw	0FFh
  4994  0379  30FF               	skipc
  4995  037A  1C03               	addwf	(_val1+2),f
  4996  037B  07C4               	movlw	0FFh
  4997  037C  30FF               	skipc
  4998  037D  1C03               	addwf	(_val1+3),f
  4999  037E  07C5               	goto	i1l1567
  5000  037F  2B80               	
  5001                           i1l183:	
  5002  0380                     	line	229
  5003                           	
  5004                           i1l1567:	
  5005  0380                     ;newmain.c: 229:                                 if ((pos==0)||(val1<0)) val0--;
  5006                           	movf	((_pos)),w
  5007  0380  0859               	btfsc	status,2
  5008  0381  1903               	goto	u148_21
  5009  0382  2B84               	goto	u148_20
  5010  0383  2B85               u148_21:
  5011  0384                     	goto	i1l1571
  5012  0384  2B8A               u148_20:
  5013  0385                     	
  5014                           i1l1569:	
  5015  0385                     	btfss	(_val1+3),7
  5016  0385  1FC5               	goto	u149_21
  5017  0386  2B88               	goto	u149_20
  5018  0387  2B89               u149_21:
  5019  0388                     	goto	i1l1573
  5020  0388  2B96               u149_20:
  5021  0389                     	goto	i1l1571
  5022  0389  2B8A               	
  5023                           i1l188:	
  5024  038A                     	
  5025                           i1l1571:	
  5026  038A                     	movlw	0FFh
  5027  038A  30FF               	addwf	(_val0),f
  5028  038B  07DD               	movlw	0FFh
  5029  038C  30FF               	skipc
  5030  038D  1C03               	addwf	(_val0+1),f
  5031  038E  07DE               	movlw	0FFh
  5032  038F  30FF               	skipc
  5033  0390  1C03               	addwf	(_val0+2),f
  5034  0391  07DF               	movlw	0FFh
  5035  0392  30FF               	skipc
  5036  0393  1C03               	addwf	(_val0+3),f
  5037  0394  07E0               	goto	i1l1573
  5038  0395  2B96               	
  5039                           i1l186:	
  5040  0396                     	line	231
  5041                           	
  5042                           i1l1573:	
  5043  0396                     ;newmain.c: 231:                                 if(val0<1)
  5044                           	btfsc	(_val0+3),7
  5045  0396  1BE0               	goto	u150_20
  5046  0397  2BA9               	movf	(_val0+3),w
  5047  0398  0860               	btfss	status,2
  5048  0399  1D03               	goto	u150_21
  5049  039A  2BA8               	movf	(_val0+2),w
  5050  039B  085F               	btfss	status,2
  5051  039C  1D03               	goto	u150_21
  5052  039D  2BA8               	movf	(_val0+1),w
  5053  039E  085E               	btfss	status,2
  5054  039F  1D03               	goto	u150_21
  5055  03A0  2BA8               	movlw	1
  5056  03A1  3001               	subwf	(_val0),w
  5057  03A2  025D               	skipz
  5058  03A3  1D03               	goto	u150_23
  5059  03A4  2BA5               u150_23:
  5060  03A5                     	btfsc	status,0
  5061  03A5  1803               	goto	u150_21
  5062  03A6  2BA8               	goto	u150_20
  5063  03A7  2BA9               
  5064                           u150_21:
  5065  03A8                     	goto	i1l189
  5066  03A8  2BD1               u150_20:
  5067  03A9                     	line	232
  5068                           	
  5069                           i1l1575:	
  5070  03A9                     ;newmain.c: 232:                                 {val0=1;
  5071                           	movlw	0
  5072  03A9  3000               	movwf	(_val0+3)
  5073  03AA  00E0               	movlw	0
  5074  03AB  3000               	movwf	(_val0+2)
  5075  03AC  00DF               	movlw	0
  5076  03AD  3000               	movwf	(_val0+1)
  5077  03AE  00DE               	movlw	01h
  5078  03AF  3001               	movwf	(_val0)
  5079  03B0  00DD               
  5080                           	line	233
  5081                           	
  5082                           i1l1577:	
  5083  03B1                     ;newmain.c: 233:                                 if(val1<0){val1=0;}
  5084                           	btfss	(_val1+3),7
  5085  03B1  1FC5               	goto	u151_21
  5086  03B2  2BB4               	goto	u151_20
  5087  03B3  2BB5               u151_21:
  5088  03B4                     	goto	i1l1581
  5089  03B4  2BBE               u151_20:
  5090  03B5                     	
  5091                           i1l1579:	
  5092  03B5                     	movlw	high highword(0)
  5093  03B5  3000               	movwf	(_val1+3)
  5094  03B6  00C5               	movlw	low highword(0)
  5095  03B7  3000               	movwf	(_val1+2)
  5096  03B8  00C4               	movlw	high(0)
  5097  03B9  3000               	movwf	(_val1+1)
  5098  03BA  00C3               	movlw	low(0)
  5099  03BB  3000               	movwf	(_val1)
  5100  03BC  00C2               
  5101                           	goto	i1l1581
  5102  03BD  2BBE               	
  5103                           i1l190:	
  5104  03BE                     	line	235
  5105                           	
  5106                           i1l1581:	
  5107  03BE                     ;newmain.c: 234:                                 {;newmain.c: 235:                      
                                            if(val2<0){val2=0;}
  5108                           	btfss	(_val2),7
  5109  03BE  1FDC               	goto	u152_21
  5110  03BF  2BC1               	goto	u152_20
  5111  03C0  2BC2               u152_21:
  5112  03C1                     	goto	i1l1585
  5113  03C1  2BC4               u152_20:
  5114  03C2                     	
  5115                           i1l1583:	
  5116  03C2                     	clrf	(_val2)
  5117  03C2  01DC               	goto	i1l1585
  5118  03C3  2BC4               	
  5119                           i1l191:	
  5120  03C4                     	line	237
  5121                           	
  5122                           i1l1585:	
  5123  03C4                     ;newmain.c: 237:                                 {if(val3<0){val3=0;}
  5124                           	btfss	(_val3),7
  5125  03C4  1FDB               	goto	u153_21
  5126  03C5  2BC7               	goto	u153_20
  5127  03C6  2BC8               u153_21:
  5128  03C7                     	goto	i1l1589
  5129  03C7  2BCA               u153_20:
  5130  03C8                     	
  5131                           i1l1587:	
  5132  03C8                     	clrf	(_val3)
  5133  03C8  01DB               	goto	i1l1589
  5134  03C9  2BCA               	
  5135                           i1l192:	
  5136  03CA                     	line	238
  5137                           	
  5138                           i1l1589:	
  5139  03CA                     ;newmain.c: 238:                                 {if(val4<0){val4=0;}
  5140                           	btfss	(_val4),7
  5141  03CA  1FDA               	goto	u154_21
  5142  03CB  2BCD               	goto	u154_20
  5143  03CC  2BCE               u154_21:
  5144  03CD                     	goto	i1l175
  5145  03CD  2BFA               u154_20:
  5146  03CE                     	
  5147                           i1l1591:	
  5148  03CE                     	clrf	(_val4)
  5149  03CE  01DA               	goto	i1l175
  5150  03CF  2BFA               	
  5151                           i1l193:	
  5152  03D0                     	line	239
  5153                           ;newmain.c: 239:                                 }}}}
  5154                           	goto	i1l175
  5155  03D0  2BFA               	line	240
  5156                           ;newmain.c: 240:                                 else{
  5157                           	
  5158                           i1l189:	
  5159  03D1                     	line	241
  5160                           ;newmain.c: 241:                                 if(val1<0)val1=9;
  5161                           	btfss	(_val1+3),7
  5162  03D1  1FC5               	goto	u155_21
  5163  03D2  2BD4               	goto	u155_20
  5164  03D3  2BD5               u155_21:
  5165  03D4                     	goto	i1l1595
  5166  03D4  2BDE               u155_20:
  5167  03D5                     	
  5168                           i1l1593:	
  5169  03D5                     	movlw	0
  5170  03D5  3000               	movwf	(_val1+3)
  5171  03D6  00C5               	movlw	0
  5172  03D7  3000               	movwf	(_val1+2)
  5173  03D8  00C4               	movlw	0
  5174  03D9  3000               	movwf	(_val1+1)
  5175  03DA  00C3               	movlw	09h
  5176  03DB  3009               	movwf	(_val1)
  5177  03DC  00C2               
  5178                           	goto	i1l1595
  5179  03DD  2BDE               	
  5180                           i1l195:	
  5181  03DE                     	line	242
  5182                           	
  5183                           i1l1595:	
  5184  03DE                     ;newmain.c: 242:                                 if(val2<0)val2=9;
  5185                           	btfss	(_val2),7
  5186  03DE  1FDC               	goto	u156_21
  5187  03DF  2BE1               	goto	u156_20
  5188  03E0  2BE2               u156_21:
  5189  03E1                     	goto	i1l1599
  5190  03E1  2BE7               u156_20:
  5191  03E2                     	
  5192                           i1l1597:	
  5193  03E2                     	movlw	low(09h)
  5194  03E2  3009               	movwf	(??_ISR+0)+0
  5195  03E3  00F0               	movf	(??_ISR+0)+0,w
  5196  03E4  0870               	movwf	(_val2)
  5197  03E5  00DC               	goto	i1l1599
  5198  03E6  2BE7               	
  5199                           i1l196:	
  5200  03E7                     	line	243
  5201                           	
  5202                           i1l1599:	
  5203  03E7                     ;newmain.c: 243:                                 if(val3<0)val3=9;
  5204                           	btfss	(_val3),7
  5205  03E7  1FDB               	goto	u157_21
  5206  03E8  2BEA               	goto	u157_20
  5207  03E9  2BEB               u157_21:
  5208  03EA                     	goto	i1l1603
  5209  03EA  2BF0               u157_20:
  5210  03EB                     	
  5211                           i1l1601:	
  5212  03EB                     	movlw	low(09h)
  5213  03EB  3009               	movwf	(??_ISR+0)+0
  5214  03EC  00F0               	movf	(??_ISR+0)+0,w
  5215  03ED  0870               	movwf	(_val3)
  5216  03EE  00DB               	goto	i1l1603
  5217  03EF  2BF0               	
  5218                           i1l197:	
  5219  03F0                     	line	244
  5220                           	
  5221                           i1l1603:	
  5222  03F0                     ;newmain.c: 244:                                 if(val4<0)val4=9;
  5223                           	btfss	(_val4),7
  5224  03F0  1FDA               	goto	u158_21
  5225  03F1  2BF3               	goto	u158_20
  5226  03F2  2BF4               u158_21:
  5227  03F3                     	goto	i1l175
  5228  03F3  2BFA               u158_20:
  5229  03F4                     	
  5230                           i1l1605:	
  5231  03F4                     	movlw	low(09h)
  5232  03F4  3009               	movwf	(??_ISR+0)+0
  5233  03F5  00F0               	movf	(??_ISR+0)+0,w
  5234  03F6  0870               	movwf	(_val4)
  5235  03F7  00DA               	goto	i1l175
  5236  03F8  2BFA               	
  5237                           i1l198:	
  5238  03F9                     	goto	i1l175
  5239  03F9  2BFA               	line	246
  5240                           ;newmain.c: 246:                                 }
  5241                           	
  5242                           i1l194:	
  5243  03FA                     	line	247
  5244                           ;newmain.c: 247:                              }
  5245                           	
  5246                           i1l175:	
  5247  03FA                     	line	250
  5248                           ;newmain.c: 250:         _delay((unsigned long)((150)*(20000000/4000000.0)));
  5249                           	opt asmopt_push
  5250                           opt asmopt_off
  5251                           	movlw	249
  5252  03FA  30F9               movwf	((??_ISR+0)+0),f
  5253  03FB  00F0               	u195_27:
  5254  03FC                     decfsz	(??_ISR+0)+0,f
  5255  03FC  0BF0               	goto	u195_27
  5256  03FD  2BFC               	nop2
  5257  03FE  2BFF               opt asmopt_pop
  5258                           
  5259                           	line	252
  5260                           	
  5261                           i1l1607:	
  5262  03FF                     ;newmain.c: 252:         INTF = 0;
  5263                           	bcf	(89/8),(89)&7	;volatile
  5264  03FF  108B               	goto	i1l199
  5265  0400  2C01               	line	253
  5266                           ;newmain.c: 253:     }
  5267                           	
  5268                           i1l155:	
  5269  0401                     	line	254
  5270                           	
  5271                           i1l199:	
  5272  0401                     	movf	(??_ISR+2),w
  5273  0401  0872               	movwf	pclath
  5274  0402  008A               	swapf	(??_ISR+1)^0FFFFFF80h,w
  5275  0403  0E71               	movwf	status
  5276  0404  0083               	swapf	saved_w,f
  5277  0405  0EFE               	swapf	saved_w,w
  5278  0406  0E7E               	retfie
  5279  0407  0009               	opt stack 0
  5280                           GLOBAL	__end_of_ISR
  5281                           	__end_of_ISR:
  5282  0408                     	signat	_ISR,89
  5283                           global	___latbits
  5284                           ___latbits	equ	0
  5285  0000                     	global	btemp
  5286                           	btemp set 07Eh
  5287  007E                     
  5288                           	DABS	1,126,2	;btemp
  5289                           	global	wtemp0
  5290                           	wtemp0 set btemp+0
  5291  007E                     	end


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         35
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     34      77
    BANK1            32      0       8

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK1[8]), 

    send_string@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[4]), STR_1(CODE[7]), buff(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_DDS
    _main->___lmul
    _main->_send_string
    _send_int->_send_string
    _send_string->_lcd_data
    _lcd_data->_data_write
    _utoa->___lwdiv
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_data_write
    _DDS_init->_DDS
    _DDS->_spi_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_int
    _send_int->_itoa
    _itoa->_utoa
    _DDS_init->_DDS

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    7526
                                             18 BANK0     16    16      0
                                _DDS
                           _DDS_init
                             ___lmul
                             ___wmul
                          _lcd_clear
                            _lcd_cmd
                           _lcd_init
                           _send_int
                        _send_string
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _send_int                                             2     0      2    2398
                                             16 BANK0      2     0      2
                               _itoa
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          4     2      2     384
                                              7 COMMON     4     2      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      66
                                              5 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    1612
                                              9 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1264
                                              0 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      88
                                              7 COMMON     2     2      0
                         _data_write
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0      66
                                              7 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      66
                                              5 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (3) _data_write                                           2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     396
                                              3 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DDS_init                                             0     0      0    1790
                                _DDS
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _DDS                                                  9     4      5    1167
                                              7 COMMON     4     4      0
                                              0 BANK0      5     0      5
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            4     2      2     623
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DDS
     _spi_write
   _DDS_init
     _DDS
       _spi_write
     _spi_write
   ___lmul
   ___wmul
   _lcd_clear
     _lcd_cmd
       _data_write
   _lcd_cmd
     _data_write
   _lcd_init
     _data_write
     _lcd_cmd
       _data_write
   _send_int
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _send_string
       _lcd_data
         _data_write
   _send_string
     _lcd_data
       _data_write
   _spi_write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       8       7       25.0%
DATA                 0      0      60       8        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 07 11:06:59 2019

            lcd_cmd@data 0076                        pc 0002             lcd_data@data 0076  
            __CFG_CP$OFF 0000                       fsr 0004      ___wmul@multiplicand 0075  
                    l120 0625                      l113 0588                      l121 062E  
                    l114 05AE                      l122 062D                      l210 021B  
                    l115 0590                      l123 063A                      l211 01FB  
                    l116 0593                      l132 0735                      l220 0272  
                    l212 0212                      l204 006D                      l117 05BA  
                    l141 076E                      l213 0278                      l221 0277  
                    l205 009B                      l126 06D2                      l310 0670  
                    l150 0762                      l222 0279                      l214 0252  
                    l206 00C7                      l311 0685                      l135 0750  
                    l223 027A                      l215 0246                      l207 00E0  
                    l312 068A                      l144 06A0                      l224 027A  
                    l216 0251                      l208 00F9                      l321 04ED  
                    l129 06F3                      l145 068E                      l217 0271  
                    l209 0112                      l322 0509                      l138 0476  
                    l146 06B0                      l218 0267                      l323 0524  
                    l147 06B0                      l219 0270                      l324 052D  
                    l309 0666                      l580 0564                      l581 0572  
                    l582 0578                      l590 05E7                      l742 047F  
                    l575 0573                      l591 05F5                      l743 0499  
                    l576 0545                      l592 05FB                      l744 04A0  
                    l577 0539                      l585 05F6                      l745 04C8  
                    l578 054A                      l586 05D0                      l746 04DC  
                    l738 0657                      l579 054B                      l587 05C4  
                    l747 04E1                      l739 0662                      l588 05D5  
                    l589 05D6                      _DDS 05FC                      _GIE 005F  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      _RC2 003A                      _RB5 0035  
                    _RC3 003B                      _RC4 003C                      _RC5 003D  
                    _RC6 003E                      _RC7 003F             __CFG_CPD$OFF 0000  
                    _ISR 027B                      u900 0536                      u901 0535  
                    u920 0549                      u921 0548                      u915 053A  
                    u940 055C                      u941 055B                      u935 054C  
                    u960 0571                      u961 0570                      u945 0558  
                    u970 05C1                      u955 0565                      u971 05C0  
                    u990 05D4                      u895 06D7                      u991 05D3  
                    u985 05C5                      _pos 0059                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_DDS 0020                     ?_ISR 0070                     l1301 0536  
                   l1311 055C                     l1303 0539                     l1401 0604  
                   l1321 0578                     l1313 0562                     l1305 0540  
                   l1411 062E                     l1403 0619                     l1315 0564  
                   l1307 0545                     l1331 05D0                     l1323 05BB  
                   l1405 0622                     l1501 0509                     l1413 0737  
                   l1317 056B                     l1309 054B                     l1333 05D6  
                   l1325 05C1                     l1341 05F6                     l1421 068B  
                   l1351 0587                     l1407 0625                     l1503 0512  
                   l1415 073A                     l1319 0573                     l1343 05FB  
                   l1335 05E0                     l1327 05C4                     l1431 0642  
                   l1423 068E                     l1353 058C                     l1345 0579  
                   l1409 062A                     l1505 0524                     l1417 073F  
                   l1337 05E7                     l1329 05CB                     l1441 0662  
                   l1433 0646                     l1361 071C                     l1425 0699  
                   l1355 059F                     l1347 057F                     l1443 06B1  
                   l1507 052D                     l1291 06E2                     l1419 0749  
                   l1451 0422                     l1339 05EE                     l1371 047F  
                   l1435 064D                     l1363 071F                     l1427 06A0  
                   l1611 0028                     l1357 05A4                     l1349 0580  
                   l1293 06E9                     l1461 044D                     l1453 042C  
                   l1445 0408                     l1381 04A0                     l1373 048E  
                   l1437 0651                     l1429 063E                     l1365 0724  
                   l1701 00F9                     l1621 0031                     l1613 002B  
                   l1359 05A8                     l1295 06EC                     l1287 06D4  
                   l1471 046F                     l1463 0454                     l1455 0435  
                   l1447 0418                     l1391 04D3                     l1383 04AF  
                   l1375 0492                     l1439 0657                     l1367 072E  
                   l1703 00FF                     l1711 0112                     l1631 0038  
                   l1623 0032                     l1615 002C                     l1481 0663  
                   l1289 06E1                     l1473 0763                     l1465 045D  
                   l1457 0440                     l1449 0420                     l1297 052E  
                   l1393 04D5                     l1385 04BE                     l1377 0499  
                   l1369 047A                     l1721 01FB                     l1713 01CF  
                   l1705 0101                     l1641 0057                     l1633 0053  
                   l1625 0035                     l1617 002D                     l1609 0016  
                   l1491 0685                     l1483 0666                     l1475 0765  
                   l1467 0464                     l1459 0442                     l1299 0530  
                   l1395 04DC                     l1387 04C4                     l1379 049D  
                   l1731 022A                     l1723 020D                     l1715 01E1  
                   l1707 0109                     l1651 005E                     l1643 005A  
                   l1635 0054                     l1627 0036                     l1619 0030  
                   l1493 068A                     l1485 066A                     l1469 046D  
                   l1397 04E1                     l1389 04CC                     l1477 0751  
                   l1741 0243                     l1733 0231                     l1725 0212  
                   l1717 01E6                     l1709 010B                     l1661 006D  
                   l1653 005F                     l1645 005B                     l1637 0055  
                   l1629 0037                     l1399 05FC                     l1495 04E2  
                   l1487 0677                     l1479 075D                     l1751 025A  
                   l1743 0246                     l1735 0233                     l1719 01F7  
                   l1727 021B                     l1663 0089                     l1671 009B  
                   l1655 0064                     l1647 005C                     l1639 0056  
                   l1497 04ED                     l1489 067E                     l1753 0260  
                   l1745 024E                     l1761 0272                     l1737 0239  
                   l1729 021F                     l1673 00B5                     l1681 00C7  
                   l1665 008B                     l1657 0066                     l1649 005D  
                   l1499 04F1                     l1755 0264                     l1739 023F  
                   l1747 0252                     l1683 00CD                     l1691 00E0  
                   l1675 00B7                     l1667 0092                     l1659 006B  
                   l1757 0267                     l1749 0254                     l1693 00E6  
                   l1685 00CF                     l1677 00BE                     l1669 0094  
                   l1759 026E                     l1695 00E8                     l1687 00D7  
                   l1679 00C0                     l1697 00F0                     l1689 00D9  
                   l1699 00F2                     STR_1 0710                     STR_2 0717  
                   u1000 05E0                     u1001 05DF                     u1100 0612  
                   u1020 05F4                     u1021 05F3                     u1005 05DC  
                   u1030 0586                     u1110 0622                     u1031 0585  
                   u1111 0621                     u1015 05E8                     u1040 058C  
                   u1120 062A                     u1200 04F1                     u1041 058B  
                   u1121 0629                     u1105 060D                     u1201 04F0  
                   u1050 05AE                     u1051 05AD                     u1211 04FA  
                   u1212 0501                     u1140 06AF                     u1213 0508  
                   u1141 06AE                     u1070 0498                     u1150 0646  
                   u1135 0742                     u1071 0497                     u1151 0645  
                   u1240 0523                     u1160 066A                     u1080 04C4  
                   u1241 0522                     u1225 050B                     u1161 0669  
                   u1081 04C3                     u1065 0727                     u1090 04DB  
                   u1235 0513                     u1091 04DA                     u1190 0684  
                   u1191 0683                     u1175 0671                     u1600 00B5  
                   u1185 0678                     u1601 00B4                     u1610 00CD  
                   u1611 00CC                     u1700 021F                     u1620 00E6  
                   u1701 021E                     u1621 00E5                     u1605 00B1  
                   u1710 0231                     u1630 00FF                     u1711 0230  
                   u1631 00FE                     u1720 023F                     u1640 0186  
                   u1721 023E                     u1641 0187                     u1730 024E  
                   u1650 0198                     u1642 018C                     u1731 024D  
                   u1651 0199                     u1643 018D                     u1740 0260  
                   u1660 01AA                     u1652 019E                     u1741 025F  
                   u1661 01AB                     u1653 019F                     u1750 026E  
                   u1670 01BC                     u1662 01B0                     u1590 0089  
                   u1807 041C                     u1751 026D                     u1671 01BD  
                   u1663 01B1                     u1591 0088                     u1760 0276  
                   u1680 01E1                     u1672 01C2                     u1817 0426  
                   u1761 0275                     u1681 01E0                     u1673 01C3  
                   u1690 01E6                     u1907 0769                     u1827 0430  
                   u1691 01E5                     u1595 0085                     u1917 073C  
                   u1837 043B                     u1685 01DD                     u1927 074B  
                   u1847 0446                     u1937 06E4                     u1857 044F  
                   u1777 0225                     u1947 06EE                     u1867 0456  
                   u1787 0721                     _PEIE 005E                     u1877 045F  
                   u1797 0730                     _INTE 005C                     _INTF 0059  
                   u1887 0468                     u1897 0471             __CFG_WRT$ALL 0000  
                   _buff 00A0                     _main 0016                     _freq 0046  
                   _val0 005D                     _val1 0042                     _val2 005C  
                   _val3 005B                     _val4 005A                     _itoa 063B  
                   _temp 004A                     btemp 007E                     _utoa 0477  
          __CFG_BOREN$ON 0000                     start 000A                    ??_DDS 0077  
                  ??_ISR 0070         __end_of_DDS_init 06D3                    ?_main 0070  
                  ?_itoa 0029            __CFG_WDTE$OFF 0000                    ?_utoa 0020  
        __end_of___lwdiv 0579                    i1l161 02B0                    i1l170 02FB  
                  i1l162 02C6                    i1l155 0401                    i1l171 0325  
                  i1l180 036A                    i1l156 0342                    i1l172 032E  
                  i1l164 02C2                    i1l157 0341                    i1l173 0337  
                  i1l165 02E2                    i1l190 03BE                    i1l182 0366  
                  i1l174 0340                    i1l158 02A2                    i1l191 03C4  
                  i1l183 0380                    i1l167 02D3                    i1l159 02B4  
                  i1l175 03FA                    i1l192 03CA                    i1l176 034C  
                  i1l168 030A                    i1l193 03D0                    i1l185 0374  
                  i1l177 035B          __end_of___lwmod 05FC                    i1l194 03FA  
                  i1l186 0396                    i1l195 03DE                    i1l179 0357  
                  i1l196 03E7                    i1l188 038A                    i1l197 03F0  
                  i1l189 03D1                    i1l198 03F9                    i1l199 0401  
                  _PHASE 0065                    _RESET 006B                    _SET_0 0069  
                  _SET_1 0067                    _PORTB 0006      ___lmul@multiplicand 0077  
        __end_of_lcd_cmd 0751                    pclath 000A                    utoa@c 0027  
                  utoa@v 0025                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 027B             __end_of_itoa 0663  
           __end_of_utoa 04E2                   DDS@reg 0024                   ??_main 0032  
                 ??_itoa 002D                   ??_utoa 0024                   i1l1511 027F  
                 i1l1601 03EB                   i1l1521 02B0                   i1l1513 0285  
                 i1l1603 03F0                   i1l1531 02E2                   i1l1523 02BA  
                 i1l1515 0298                   i1l1605 03F4                   i1l1541 032C  
                 i1l1533 02E7                   i1l1525 02C2                   i1l1517 029E  
                 i1l1509 027B                   i1l1607 03FF                   i1l1543 032E  
                 i1l1535 02FB                   i1l1527 02CB                   i1l1519 02A8  
                 i1l1551 0342                   i1l1561 0366                   i1l1553 0348  
                 i1l1545 0335                   i1l1537 030A                   i1l1529 02D3  
                 i1l1571 038A                   i1l1563 036F                   i1l1555 0352  
                 i1l1547 0337                   i1l1539 031D                   i1l1581 03BE  
                 i1l1573 0396                   i1l1565 0374                   i1l1557 0357  
                 i1l1549 033E                   i1l1591 03CE                   i1l1583 03C2  
                 i1l1575 03A9                   i1l1567 0380                   i1l1559 0361  
                 u130_20 02AF                   i1l1593 03D5                   i1l1585 03C4  
                 i1l1577 03B1                   i1l1569 0385                   u130_21 02AE  
                 i1l1595 03DE                   i1l1587 03C8                   i1l1579 03B5  
                 i1l1597 03E2                   i1l1589 03CA                   i1l1599 03E7  
                 u131_20 02BA                   u131_21 02B9                   u140_20 033E  
                 u132_20 02C1                   u140_21 033D                   u132_21 02C0  
                 u141_20 0348                   u133_20 02CB                   u125_20 027F  
                 u141_21 0347                   u133_21 02CA                   u125_21 027E  
                 u150_20 03A9                   u142_20 0352                   u134_20 02D2  
                 u126_20 0285                   u150_21 03A8                   u142_21 0351  
                 u134_21 02D1                   u126_21 0284                   u150_23 03A5  
                 _INTEDG 040E                   u151_20 03B5                   u143_20 0356  
                 u135_20 02E7                   u127_20 0298                   u151_21 03B4  
                 u143_21 0355                   u135_21 02E6                   u127_21 0297  
                 u127_23 0294                   u152_20 03C2                   u144_20 0361  
                 u136_20 02FA                   u128_20 029E                   u152_21 03C1  
                 u144_21 0360                   u136_21 02F9                   u128_21 029D  
                 u136_23 02F6                   u153_20 03C8                   u145_20 0365  
                 u137_20 031D                   u129_20 02A8                   u153_21 03C7  
                 u145_21 0364                   u137_21 031C                   u129_21 02A7  
                 u137_23 0319                   u154_20 03CE                   u146_20 036F  
                 u138_20 032C                   u154_21 03CD                   u146_21 036E  
                 u138_21 032B                   u155_20 03D5                   u147_20 0373  
                 u139_20 0335                   u155_21 03D4                   u147_21 0372  
                 u139_21 0334                   u156_20 03E2                   u148_20 0385  
                 u156_21 03E1                   u148_21 0384                   u157_20 03EB  
                 u149_20 0389                   u157_21 03EA                   u149_21 0388  
                 u158_20 03F4                   u158_21 03F3             ?_send_string 0077  
                 u195_27 03FC                   _F_FREQ 0053                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB2 0432                   _TRISB3 0433  
                 _TRISC1 0439                   _TRISB4 0434                   _TRISC2 043A  
                 _TRISB5 0435                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _TRISC6 043E                   _TRISC7 043F  
         __CFG_PWRTE$OFF 0000         __end_of_lcd_data 0736         __end_of_lcd_init 0477  
                 ___lmul 04E2                   ___wmul 0663                ??___lwdiv 0077  
              ??___lwmod 0077                ??_lcd_cmd 0075         __end_of_send_int 0763  
                 itoa@cp 002E                   saved_w 007E                ?_DDS_init 0070  
__end_of__initialization 0014            spi_write@data 0073           __pcstackCOMMON 0070  
     __size_of_lcd_clear 000C               __pbssBANK0 0042               __pbssBANK1 00A0  
             ??_DDS_init 007B               _data_write 06D3               __pmaintext 0016  
                ?___lmul 0073                  ?___wmul 0073               __pintentry 0004  
         ___lmul@product 0021       __size_of_spi_write 0042                ?_lcd_data 0070  
              ?_lcd_init 0070               __stringtab 0700     __size_of_send_string 0026  
              ?_send_int 0030        __end_of_lcd_clear 076F          __size_of___lmul 004C  
        __size_of___wmul 0028                  ___lwdiv 052E                  ___lwmod 05BB  
                __ptext1 0751                  __ptext2 068B                  __ptext3 071B  
                __ptext4 063B                  __ptext5 0477               _cursor_dir 0052  
                __ptext6 05BB                  __ptext7 052E                  __ptext8 0408  
                __ptext9 0763                  _lcd_cmd 0736                  _freqLSB 004E  
                _freqMSB 0050             __size_of_DDS 003F             __size_of_ISR 018D  
             ??_lcd_data 0075                  clrloop0 0770               ??_lcd_init 0077  
   end_of_initialization 0014                  itoa@buf 002F                  itoa@val 0029  
            ?_data_write 0070               ??_send_int 007B        __end_of_spi_write 05BB  
                utoa@buf 0028                  utoa@val 0020        __size_of_DDS_init 0022  
         __end_of___lmul 052E           __end_of___wmul 068B      __size_of_data_write 0021  
    start_initialization 000B              __end_of_DDS 063B              __end_of_ISR 0408  
               ??___lmul 0020                 ??___wmul 0077                 DDS@input 0020  
              ___latbits 0000            __pcstackBANK0 0020        __size_of_lcd_data 001B  
      __size_of_lcd_init 006F                __pnvBANK0 005D         ___lwdiv@dividend 0075  
      __size_of_send_int 0012                 ?___lwdiv 0073                 ?___lwmod 0073  
              _lcd_clear 0763                __pstrings 0700                 ?_lcd_cmd 0070  
              _last_freq 0061                _last_val0 0058                _last_val1 0057  
              _last_val2 0056                _last_val3 0055                _last_val4 0054  
       ___lwdiv@quotient 0078            ??_send_string 0079                 _DDS_init 06B1  
      interrupt_function 0004           ___wmul@product 0077             ??_data_write 0073  
              clear_ram0 076F               ?_lcd_clear 0070                _spi_write 0579  
            __stringbase 070F        ___wmul@multiplier 0073             send_int@data 0030  
     __end_of_data_write 06F4        ___lmul@multiplier 0073               spi_write@i 0076  
           send_string@i 0079             send_string@s 0077      __end_of_send_string 06B1  
       __size_of___lwdiv 004B         __size_of___lwmod 0041               ?_spi_write 0073  
     __end_of__stringtab 0710         __size_of_lcd_cmd 001B          ___lwdiv@divisor 0073  
        ___lwdiv@counter 007A                 __ptext10 0736                 __ptext11 06D3  
               __ptext12 0663                 __ptext13 04E2                 __ptext14 06B1  
               __ptext15 05FC                 __ptext16 0579                 __ptext17 027B  
               _lcd_data 071B                 _lcd_init 0408            __size_of_main 0265  
          __size_of_itoa 0028            __size_of_utoa 006B                 _send_int 0751  
            ??_lcd_clear 0077           data_write@data 0074                 itoa@base 002B  
               intlevel1 0000              _send_string 068B         ___lwmod@dividend 0075  
              stringcode 070A              ??_spi_write 0075                 utoa@base 0022  
        ___lwmod@divisor 0073          ___lwmod@counter 0078                 stringdir 070A  
               stringtab 0700  
