

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Aug 26 17:31:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    33                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    34                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    40                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    41                           	psect	text1,local,class=CODE,merge=1,delta=2
    42                           	psect	text2,local,class=CODE,merge=1,delta=2
    43                           	psect	text3,local,class=CODE,merge=1,delta=2
    44                           	psect	text4,local,class=CODE,merge=1,delta=2
    45                           	psect	text5,local,class=CODE,merge=1,delta=2
    46                           	psect	text6,local,class=CODE,merge=1,delta=2
    47                           	psect	text7,local,class=CODE,merge=1,delta=2
    48                           	psect	text8,local,class=CODE,merge=1,delta=2
    49                           	psect	text9,local,class=CODE,merge=1,delta=2
    50                           	psect	text10,local,class=CODE,merge=1,delta=2
    51                           	psect	text11,local,class=CODE,merge=1,delta=2
    52                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text13,local,class=CODE,merge=1,delta=2
    54                           	psect	text14,local,class=CODE,merge=1,delta=2
    55                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text16,local,class=CODE,merge=1,delta=2
    57                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text30,local,class=CODE,merge=1,delta=2
    71                           	psect	text31,local,class=CODE,merge=1,delta=2
    72                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text44,local,class=CODE,merge=1,delta=2
    85                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    87                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text49,local,class=CODE,merge=1,delta=2
    90                           	psect	text50,local,class=CODE,merge=1,delta=2
    91                           	psect	text51,local,class=CODE,merge=1,delta=2
    92                           	psect	text52,local,class=CODE,merge=1,delta=2
    93                           	psect	text53,local,class=CODE,merge=1,delta=2
    94                           	psect	text54,local,class=CODE,merge=1,delta=2
    95                           	psect	text55,local,class=CODE,merge=1,delta=2
    96                           	psect	text56,local,class=CODE,merge=1,delta=2
    97                           	psect	text57,local,class=CODE,merge=1,delta=2
    98                           	psect	text58,local,class=CODE,merge=1,delta=2
    99                           	psect	text59,local,class=CODE,merge=1,delta=2
   100                           	psect	text60,local,class=CODE,merge=1,delta=2
   101                           	psect	intentry,global,class=CODE,delta=2
   102                           	dabs	1,0x7E,2
   103  0000                     
   104                           ; Version 2.10
   105                           ; Generated 31/07/2019 GMT
   106                           ; 
   107                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC16F1938 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  0110                     	;# 
   190  0111                     	;# 
   191  0112                     	;# 
   192  0113                     	;# 
   193  0114                     	;# 
   194  0115                     	;# 
   195  0116                     	;# 
   196  0117                     	;# 
   197  0118                     	;# 
   198  0119                     	;# 
   199  011A                     	;# 
   200  011B                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0191                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0193                     	;# 
   208  0193                     	;# 
   209  0193                     	;# 
   210  0194                     	;# 
   211  0195                     	;# 
   212  0196                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019C                     	;# 
   220  019C                     	;# 
   221  019D                     	;# 
   222  019E                     	;# 
   223  019F                     	;# 
   224  020D                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0294                     	;# 
   239  0295                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0298                     	;# 
   243  0298                     	;# 
   244  0299                     	;# 
   245  029A                     	;# 
   246  029B                     	;# 
   247  029C                     	;# 
   248  029C                     	;# 
   249  029D                     	;# 
   250  029E                     	;# 
   251  029F                     	;# 
   252  0311                     	;# 
   253  0311                     	;# 
   254  0312                     	;# 
   255  0313                     	;# 
   256  0314                     	;# 
   257  0315                     	;# 
   258  0315                     	;# 
   259  0316                     	;# 
   260  0318                     	;# 
   261  0318                     	;# 
   262  0319                     	;# 
   263  031A                     	;# 
   264  031C                     	;# 
   265  031C                     	;# 
   266  031D                     	;# 
   267  031E                     	;# 
   268  0394                     	;# 
   269  0395                     	;# 
   270  0396                     	;# 
   271  0415                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  0791                     	;# 
   278  0792                     	;# 
   279  0793                     	;# 
   280  0794                     	;# 
   281  0795                     	;# 
   282  0798                     	;# 
   283  0799                     	;# 
   284  07A0                     	;# 
   285  07A1                     	;# 
   286  07A3                     	;# 
   287  07A4                     	;# 
   288  07A6                     	;# 
   289  07A7                     	;# 
   290  07A9                     	;# 
   291  07AA                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  0110                     	;# 
   355  0111                     	;# 
   356  0112                     	;# 
   357  0113                     	;# 
   358  0114                     	;# 
   359  0115                     	;# 
   360  0116                     	;# 
   361  0117                     	;# 
   362  0118                     	;# 
   363  0119                     	;# 
   364  011A                     	;# 
   365  011B                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0191                     	;# 
   370  0191                     	;# 
   371  0192                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0193                     	;# 
   375  0194                     	;# 
   376  0195                     	;# 
   377  0196                     	;# 
   378  0199                     	;# 
   379  019A                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019C                     	;# 
   385  019C                     	;# 
   386  019D                     	;# 
   387  019E                     	;# 
   388  019F                     	;# 
   389  020D                     	;# 
   390  0210                     	;# 
   391  0211                     	;# 
   392  0212                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0217                     	;# 
   399  0291                     	;# 
   400  0291                     	;# 
   401  0292                     	;# 
   402  0293                     	;# 
   403  0294                     	;# 
   404  0295                     	;# 
   405  0295                     	;# 
   406  0296                     	;# 
   407  0298                     	;# 
   408  0298                     	;# 
   409  0299                     	;# 
   410  029A                     	;# 
   411  029B                     	;# 
   412  029C                     	;# 
   413  029C                     	;# 
   414  029D                     	;# 
   415  029E                     	;# 
   416  029F                     	;# 
   417  0311                     	;# 
   418  0311                     	;# 
   419  0312                     	;# 
   420  0313                     	;# 
   421  0314                     	;# 
   422  0315                     	;# 
   423  0315                     	;# 
   424  0316                     	;# 
   425  0318                     	;# 
   426  0318                     	;# 
   427  0319                     	;# 
   428  031A                     	;# 
   429  031C                     	;# 
   430  031C                     	;# 
   431  031D                     	;# 
   432  031E                     	;# 
   433  0394                     	;# 
   434  0395                     	;# 
   435  0396                     	;# 
   436  0415                     	;# 
   437  0416                     	;# 
   438  0417                     	;# 
   439  041C                     	;# 
   440  041D                     	;# 
   441  041E                     	;# 
   442  0791                     	;# 
   443  0792                     	;# 
   444  0793                     	;# 
   445  0794                     	;# 
   446  0795                     	;# 
   447  0798                     	;# 
   448  0799                     	;# 
   449  07A0                     	;# 
   450  07A1                     	;# 
   451  07A3                     	;# 
   452  07A4                     	;# 
   453  07A6                     	;# 
   454  07A7                     	;# 
   455  07A9                     	;# 
   456  07AA                     	;# 
   457  0FE4                     	;# 
   458  0FE5                     	;# 
   459  0FE6                     	;# 
   460  0FE7                     	;# 
   461  0FE8                     	;# 
   462  0FE9                     	;# 
   463  0FEA                     	;# 
   464  0FEB                     	;# 
   465  0FED                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468                           
   469                           	psect	nvBANK3
   470  01C8                     __pnvBANK3:	
   471  01C8                     _last_frequency:	
   472  01C8                     	ds	4
   473  01CC                     _last_v2:	
   474  01CC                     	ds	4
   475  01D0                     _last_v1:	
   476  01D0                     	ds	4
   477  01D4                     _last_pwm_lvl:	
   478  01D4                     	ds	2
   479  0016                     _TMR1	set	22
   480  001B                     _PR2	set	27
   481  0018                     _T1CON	set	24
   482  0068                     _RB0	set	104
   483  0074                     _RC4	set	116
   484  0076                     _RC6	set	118
   485  0070                     _RC0	set	112
   486  006B                     _RB3	set	107
   487  0077                     _RC7	set	119
   488  0075                     _RC5	set	117
   489  0073                     _RC3	set	115
   490  006A                     _RB2	set	106
   491  0061                     _RA1	set	97
   492  0060                     _RA0	set	96
   493  0062                     _RA2	set	98
   494  0063                     _RA3	set	99
   495  0064                     _RA4	set	100
   496  0065                     _RA5	set	101
   497  0067                     _RA7	set	103
   498  0066                     _RA6	set	102
   499  00E2                     _TMR2ON	set	226
   500  00E0                     _T2CKPS0	set	224
   501  00E1                     _T2CKPS1	set	225
   502  0089                     _TMR2IF	set	137
   503  008A                     _CCP1IF	set	138
   504  00CF                     _TMR1GE	set	207
   505  005C                     _INTE	set	92
   506  0059                     _INTF	set	89
   507  005E                     _PEIE	set	94
   508  005F                     _GIE	set	95
   509  009B                     _ADRESL	set	155
   510  009C                     _ADRESH	set	156
   511  009E                     _ADCON1	set	158
   512  0099                     _OSCCON	set	153
   513  04E9                     _GO	set	1257
   514  04ED                     _CHS3	set	1261
   515  04EC                     _CHS2	set	1260
   516  04EB                     _CHS1	set	1259
   517  04EA                     _CHS0	set	1258
   518  048A                     _CCP1IE	set	1162
   519  04AE                     _INTEDG	set	1198
   520  04E8                     _ADON	set	1256
   521  048E                     _ADIE	set	1166
   522  046D                     _TRISB5	set	1133
   523  046B                     _TRISB3	set	1131
   524  046A                     _TRISB2	set	1130
   525  0469                     _TRISB1	set	1129
   526  0468                     _TRISB0	set	1128
   527  0477                     _TRISC7	set	1143
   528  0476                     _TRISC6	set	1142
   529  0475                     _TRISC5	set	1141
   530  0474                     _TRISC4	set	1140
   531  0473                     _TRISC3	set	1139
   532  0472                     _TRISC2	set	1138
   533  0471                     _TRISC1	set	1137
   534  0470                     _TRISC0	set	1136
   535  0467                     _TRISA7	set	1127
   536  0466                     _TRISA6	set	1126
   537  0465                     _TRISA5	set	1125
   538  0464                     _TRISA4	set	1124
   539  0463                     _TRISA3	set	1123
   540  0462                     _TRISA2	set	1122
   541  0461                     _TRISA1	set	1121
   542  0460                     _TRISA0	set	1120
   543  0C6D                     _ANSB5	set	3181
   544  0C6B                     _ANSB3	set	3179
   545  0C6A                     _ANSB2	set	3178
   546  0C69                     _ANSB1	set	3177
   547  0C68                     _ANSB0	set	3176
   548  0C65                     _ANSA5	set	3173
   549  0C64                     _ANSA4	set	3172
   550  0C63                     _ANSA3	set	3171
   551  0C62                     _ANSA2	set	3170
   552  0C61                     _ANSA1	set	3169
   553  0C60                     _ANSA0	set	3168
   554  0293                     _CCP1CON	set	659
   555  0291                     _CCPR1L	set	657
   556  0292                     _CCPR1H	set	658
   557  0298                     _CCPR2L	set	664
   558  029A                     _CCP2CON	set	666
   559  14D4                     _DC2B0	set	5332
   560  14D5                     _DC2B1	set	5333
   561  14F3                     _C2TSEL1	set	5363
   562  14F2                     _C2TSEL0	set	5362
   563                           
   564                           	psect	stringtext1
   565  2800                     __pstringtext1:	
   566  2800                     STR_11:	
   567  2800  3420               	retlw	32	;' '
   568  2801  3420               	retlw	32	;' '
   569  2802  3420               	retlw	32	;' '
   570  2803  3420               	retlw	32	;' '
   571  2804  3420               	retlw	32	;' '
   572  2805  3400               	retlw	0
   573                           
   574                           	psect	stringtext2
   575  2806                     __pstringtext2:	
   576  2806                     STR_3:	
   577  2806  3446               	retlw	70	;'F'
   578  2807  3452               	retlw	82	;'R'
   579  2808  3445               	retlw	69	;'E'
   580  2809  3451               	retlw	81	;'Q'
   581  280A  342E               	retlw	46	;'.'
   582  280B  3400               	retlw	0
   583                           
   584                           	psect	stringtext3
   585  280C                     __pstringtext3:	
   586  280C                     STR_16:	
   587  280C  3420               	retlw	32	;' '
   588  280D  344C               	retlw	76	;'L'
   589  280E  344F               	retlw	79	;'O'
   590  280F  3441               	retlw	65	;'A'
   591  2810  3444               	retlw	68	;'D'
   592  2811  3400               	retlw	0
   593                           
   594                           	psect	stringtext4
   595  2812                     __pstringtext4:	
   596  2812                     STR_7:	
   597  2812  3444               	retlw	68	;'D'
   598  2813  3452               	retlw	82	;'R'
   599  2814  3449               	retlw	73	;'I'
   600  2815  3456               	retlw	86	;'V'
   601  2816  3445               	retlw	69	;'E'
   602  2817  3400               	retlw	0
   603                           
   604                           	psect	stringtext5
   605  2818                     __pstringtext5:	
   606  2818                     STR_19:	
   607  2818  3442               	retlw	66	;'B'
   608  2819  3452               	retlw	82	;'R'
   609  281A  3445               	retlw	69	;'E'
   610  281B  3441               	retlw	65	;'A'
   611  281C  344B               	retlw	75	;'K'
   612  281D  3400               	retlw	0
   613                           
   614                           	psect	stringtext6
   615  281E                     __pstringtext6:	
   616  281E                     STR_12:	
   617  281E  3453               	retlw	83	;'S'
   618  281F  3454               	retlw	84	;'T'
   619  2820  3441               	retlw	65	;'A'
   620  2821  344C               	retlw	76	;'L'
   621  2822  344C               	retlw	76	;'L'
   622  2823  3400               	retlw	0
   623                           
   624                           	psect	stringtext7
   625  2824                     __pstringtext7:	
   626  2824                     STR_15:	
   627  2824  3420               	retlw	32	;' '
   628  2825  344F               	retlw	79	;'O'
   629  2826  3456               	retlw	86	;'V'
   630  2827  3445               	retlw	69	;'E'
   631  2828  3452               	retlw	82	;'R'
   632  2829  3400               	retlw	0
   633                           
   634                           	psect	stringtext8
   635  282A                     __pstringtext8:	
   636  282A                     STR_9:	
   637  282A  3450               	retlw	80	;'P'
   638  282B  344F               	retlw	79	;'O'
   639  282C  3457               	retlw	87	;'W'
   640  282D  3445               	retlw	69	;'E'
   641  282E  3452               	retlw	82	;'R'
   642  282F  3400               	retlw	0
   643                           
   644                           	psect	stringtext9
   645  2830                     __pstringtext9:	
   646  2830                     STR_13:	
   647  2830  3445               	retlw	69	;'E'
   648  2831  3452               	retlw	82	;'R'
   649  2832  3452               	retlw	82	;'R'
   650  2833  344F               	retlw	79	;'O'
   651  2834  3452               	retlw	82	;'R'
   652  2835  3400               	retlw	0
   653                           
   654                           	psect	stringtext10
   655  2836                     __pstringtext10:	
   656  2836                     STR_29:	
   657  2836  3430               	retlw	48	;'0'
   658  2837  3430               	retlw	48	;'0'
   659  2838  342E               	retlw	46	;'.'
   660  2839  3430               	retlw	48	;'0'
   661  283A  3400               	retlw	0
   662                           
   663                           	psect	stringtext11
   664  283B                     __pstringtext11:	
   665  283B                     STR_31:	
   666  283B  3420               	retlw	32	;' '
   667  283C  3430               	retlw	48	;'0'
   668  283D  3430               	retlw	48	;'0'
   669  283E  3430               	retlw	48	;'0'
   670  283F  3400               	retlw	0
   671                           
   672                           	psect	stringtext12
   673  2840                     __pstringtext12:	
   674  2840                     STR_30:	
   675  2840  3430               	retlw	48	;'0'
   676  2841  3430               	retlw	48	;'0'
   677  2842  3430               	retlw	48	;'0'
   678  2843  3430               	retlw	48	;'0'
   679  2844  3400               	retlw	0
   680                           
   681                           	psect	stringtext13
   682  2845                     __pstringtext13:	
   683  2845                     STR_2:	
   684  2845  3425               	retlw	37	;'%'
   685  2846  342E               	retlw	46	;'.'
   686  2847  3431               	retlw	49	;'1'
   687  2848  3466               	retlw	102	;'f'
   688  2849  3400               	retlw	0
   689                           
   690                           	psect	stringtext14
   691  284A                     __pstringtext14:	
   692  284A                     STR_6:	
   693  284A  3456               	retlw	86	;'V'
   694  284B  3470               	retlw	112	;'p'
   695  284C  342D               	retlw	45	;'-'
   696  284D  3470               	retlw	112	;'p'
   697  284E  3400               	retlw	0
   698                           
   699                           	psect	stringtext15
   700  284F                     __pstringtext15:	
   701  284F                     STR_34:	
   702  284F  3449               	retlw	73	;'I'
   703  2850  344E               	retlw	78	;'N'
   704  2851  3446               	retlw	70	;'F'
   705  2852  3400               	retlw	0
   706                           
   707                           	psect	stringtext16
   708  2853                     __pstringtext16:	
   709  2853                     STR_38:	
   710  2853  344E               	retlw	78	;'N'
   711  2854  3441               	retlw	65	;'A'
   712  2855  344E               	retlw	78	;'N'
   713  2856  3400               	retlw	0
   714                           
   715                           	psect	stringtext17
   716  2857                     __pstringtext17:	
   717  2857                     STR_35:	
   718  2857  3469               	retlw	105	;'i'
   719  2858  346E               	retlw	110	;'n'
   720  2859  3466               	retlw	102	;'f'
   721  285A  3400               	retlw	0
   722                           
   723                           	psect	stringtext18
   724  285B                     __pstringtext18:	
   725  285B                     STR_39:	
   726  285B  346E               	retlw	110	;'n'
   727  285C  3461               	retlw	97	;'a'
   728  285D  346E               	retlw	110	;'n'
   729  285E  3400               	retlw	0
   730                           
   731                           	psect	stringtext19
   732  285F                     __pstringtext19:	
   733  285F                     STR_5:	
   734  285F  3442               	retlw	66	;'B'
   735  2860  344C               	retlw	76	;'L'
   736  2861  3454               	retlw	84	;'T'
   737  2862  3400               	retlw	0
   738                           
   739                           	psect	stringtext20
   740  2863                     __pstringtext20:	
   741  2863                     STR_4:	
   742  2863  344B               	retlw	75	;'K'
   743  2864  3448               	retlw	72	;'H'
   744  2865  347A               	retlw	122	;'z'
   745  2866  3400               	retlw	0
   746                           
   747                           	psect	stringtext21
   748  2867                     __pstringtext21:	
   749  2867                     STR_42:	
   750  2867  346C               	retlw	108	;'l'
   751  2868  3466               	retlw	102	;'f'
   752  2869  3400               	retlw	0
   753                           
   754                           	psect	stringtext22
   755  286A                     __pstringtext22:	
   756  286A                     STR_1:	
   757  286A  3425               	retlw	37	;'%'
   758  286B  3464               	retlw	100	;'d'
   759  286C  3400               	retlw	0
   760                           
   761                           	psect	stringtext23
   762  286D                     __pstringtext23:	
   763  286D                     STR_10:	
   764  286D  3425               	retlw	37	;'%'
   765  286E  3400               	retlw	0
   766                           
   767                           	psect	stringtext24
   768  286F                     __pstringtext24:	
   769  286F                     STR_8:	
   770  286F  3456               	retlw	86	;'V'
   771  2870  3400               	retlw	0
   772                           
   773                           	psect	stringtext25
   774  0000                     __pstringtext25:	
   775  2804                     
   776                           ; #config settings
   777  0000                     
   778                           	psect	cinit
   779  00BD                     start_initialization:	
   780  00BD                     __initialization:	
   781                           
   782                           ; Clear objects allocated to COMMON
   783  00BD  01FC               	clrf	__pbssCOMMON& (0+127)
   784                           
   785                           ; Clear objects allocated to BANK2
   786  00BE  3058               	movlw	low __pbssBANK2
   787  00BF  0084               	movwf	4
   788  00C0  3001               	movlw	high __pbssBANK2
   789  00C1  0085               	movwf	5
   790  00C2  3018               	movlw	24
   791  00C3  31A0  20D5  3180   	fcall	clear_ram0
   792                           
   793                           ; Clear objects allocated to BANK3
   794  00C6  30A0               	movlw	low __pbssBANK3
   795  00C7  0084               	movwf	4
   796  00C8  3001               	movlw	high __pbssBANK3
   797  00C9  0085               	movwf	5
   798  00CA  3028               	movlw	40
   799  00CB  31A0  20D5  3180   	fcall	clear_ram0
   800                           
   801                           ; Clear objects allocated to BANK4
   802  00CE  3020               	movlw	low __pbssBANK4
   803  00CF  0084               	movwf	4
   804  00D0  3002               	movlw	high __pbssBANK4
   805  00D1  0085               	movwf	5
   806  00D2  3050               	movlw	80
   807  00D3  31A0  20D5  3180   	fcall	clear_ram0
   808  00D6                     end_of_initialization:	
   809                           ;End of C runtime variable initialization code
   810                           
   811  00D6                     __end_of__initialization:	
   812  00D6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   813  00D7  0020               	movlb	0
   814  00D8  31A6  2ED1         	ljmp	_main	;jump to C main() function
   815                           
   816                           	psect	bssCOMMON
   817  007C                     __pbssCOMMON:	
   818  007C                     _pwmcon_flag:	
   819  007C                     	ds	1
   820                           
   821                           	psect	bssBANK2
   822  0158                     __pbssBANK2:	
   823  0158                     _v2:	
   824  0158                     	ds	4
   825  015C                     _v1:	
   826  015C                     	ds	4
   827  0160                     _prec:	
   828  0160                     	ds	2
   829  0162                     _flags:	
   830  0162                     	ds	2
   831  0164                     _adcbuff:	
   832  0164                     	ds	2
   833  0166                     _pwm_lvl:	
   834  0166                     	ds	2
   835  0168                     _f1:	
   836  0168                     	ds	1
   837  0169                     _f2:	
   838  0169                     	ds	1
   839  016A                     _maintenance_f:	
   840  016A                     	ds	1
   841  016B                     _start_flag:	
   842  016B                     	ds	1
   843  016C                     _h_voltage_flag:	
   844  016C                     	ds	1
   845  016D                     _e_overvolt:	
   846  016D                     	ds	1
   847  016E                     _e_lock:	
   848  016E                     	ds	1
   849  016F                     _pause:	
   850  016F                     	ds	1
   851                           
   852                           	psect	bssBANK3
   853  01A0                     __pbssBANK3:	
   854  01A0                     floorf@F524:	
   855  01A0                     	ds	4
   856  01A4                     fabsf@F463:	
   857  01A4                     	ds	4
   858  01A8                     ___fpclassifyf@F463:	
   859  01A8                     	ds	4
   860  01AC                     _diff:	
   861  01AC                     	ds	4
   862  01B0                     _frequency:	
   863  01B0                     	ds	4
   864  01B4                     _nout:	
   865  01B4                     	ds	2
   866  01B6                     _width:	
   867  01B6                     	ds	2
   868  01B8                     _temp:	
   869  01B8                     	ds	2
   870  01BA                     _j:	
   871  01BA                     	ds	2
   872  01BC                     _dutycycle:	
   873  01BC                     	ds	2
   874  01BE                     _buff:	
   875  01BE                     	ds	8
   876  01C6                     _period:	
   877  01C6                     	ds	2
   878                           
   879                           	psect	bssBANK4
   880  0220                     __pbssBANK4:	
   881  0220                     _dbuf:	
   882  0220                     	ds	80
   883                           
   884                           	psect	clrtext
   885  20D5                     clear_ram0:	
   886                           ;	Called with FSR0 containing the base address, and
   887                           ;	WREG with the size to clear
   888                           
   889  20D5  0064               	clrwdt	;clear the watchdog before getting into this loop
   890  20D6                     clrloop0:	
   891  20D6  0180               	clrf	0	;clear RAM location pointed to by FSR
   892  20D7  3101               	addfsr 0,1
   893  20D8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   894  20D9  28D6               	goto	clrloop0	;have we reached the end yet?
   895  20DA  3400               	retlw	0	;all done for this memory range, return
   896                           
   897                           	psect	cstackBANK2
   898  0120                     __pcstackBANK2:	
   899  0120                     vfpfcnvrt@ll:	
   900                           
   901                           ; 8 bytes @ 0x0
   902  0120                     	ds	8
   903  0128                     _vfpfcnvrt$575:	
   904                           
   905                           ; 2 bytes @ 0x8
   906  0128                     	ds	2
   907  012A                     _vfpfcnvrt$580:	
   908                           
   909                           ; 2 bytes @ 0xA
   910  012A                     	ds	2
   911  012C                     vfpfcnvrt@ct:	
   912                           
   913                           ; 3 bytes @ 0xC
   914  012C                     	ds	3
   915  012F                     vfpfcnvrt@f:	
   916                           
   917                           ; 4 bytes @ 0xF
   918  012F                     	ds	4
   919  0133                     vfpfcnvrt@c:	
   920                           
   921                           ; 1 bytes @ 0x13
   922  0133                     	ds	1
   923  0134                     vfpfcnvrt@fp:	
   924                           
   925                           ; 1 bytes @ 0x14
   926  0134                     	ds	1
   927  0135                     ?_vfprintf:	
   928  0135                     vfprintf@fmt:	
   929                           ; 2 bytes @ 0x15
   930                           
   931                           
   932                           ; 2 bytes @ 0x15
   933  0135                     	ds	2
   934  0137                     vfprintf@ap:	
   935                           
   936                           ; 1 bytes @ 0x17
   937  0137                     	ds	1
   938  0138                     ??_vfprintf:	
   939                           
   940                           ; 1 bytes @ 0x18
   941  0138                     	ds	2
   942  013A                     vfprintf@fp:	
   943                           
   944                           ; 1 bytes @ 0x1A
   945  013A                     	ds	1
   946  013B                     vfprintf@cfmt:	
   947                           
   948                           ; 2 bytes @ 0x1B
   949  013B                     	ds	2
   950  013D                     ?_sprintf:	
   951  013D                     sprintf@fmt:	
   952                           ; 2 bytes @ 0x1D
   953                           
   954                           
   955                           ; 2 bytes @ 0x1D
   956  013D                     	ds	6
   957  0143                     ??_sprintf:	
   958                           
   959                           ; 1 bytes @ 0x23
   960  0143                     	ds	3
   961  0146                     sprintf@s:	
   962                           
   963                           ; 1 bytes @ 0x26
   964  0146                     	ds	1
   965  0147                     sprintf@ap:	
   966                           
   967                           ; 1 bytes @ 0x27
   968  0147                     	ds	1
   969  0148                     sprintf@f:	
   970                           
   971                           ; 5 bytes @ 0x28
   972  0148                     	ds	5
   973  014D                     ?_lcd_send_int:	
   974  014D                     ?_lcd_send_float1:	
   975                           ; 1 bytes @ 0x2D
   976                           
   977  014D                     lcd_send_int@data:	
   978                           ; 1 bytes @ 0x2D
   979                           
   980  014D                     lcd_send_float1@data:	
   981                           ; 2 bytes @ 0x2D
   982                           
   983                           
   984                           ; 4 bytes @ 0x2D
   985  014D                     	ds	4
   986  0151                     ??_lcd_update:	
   987                           
   988                           ; 1 bytes @ 0x31
   989  0151                     	ds	2
   990  0153                     lcd_update@cmd:	
   991                           
   992                           ; 1 bytes @ 0x33
   993  0153                     	ds	1
   994  0154                     _lcd_update$1259:	
   995                           
   996                           ; 2 bytes @ 0x34
   997  0154                     	ds	2
   998  0156                     ??_pwm_con:	
   999                           
  1000                           ; 1 bytes @ 0x36
  1001  0156                     	ds	2
  1002                           
  1003                           	psect	cstackBANK1
  1004  00A0                     __pcstackBANK1:	
  1005  00A0                     ??_read_volt:	
  1006  00A0                     ?___flsub:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  00A0                     ___flsub@a:	
  1010                           ; 4 bytes @ 0x0
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x0
  1014  00A0                     	ds	3
  1015  00A3                     _read_volt$1260:	
  1016                           
  1017                           ; 4 bytes @ 0x3
  1018  00A3                     	ds	1
  1019  00A4                     ___flsub@b:	
  1020                           
  1021                           ; 4 bytes @ 0x4
  1022  00A4                     	ds	4
  1023  00A8                     ?_efgtoa:	
  1024  00A8                     ?_fabsf:	
  1025                           ; 2 bytes @ 0x8
  1026                           
  1027  00A8                     efgtoa@f:	
  1028                           ; 4 bytes @ 0x8
  1029                           
  1030  00A8                     fabsf@x:	
  1031                           ; 4 bytes @ 0x8
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0x8
  1035  00A8                     	ds	4
  1036  00AC                     efgtoa@c:	
  1037  00AC                     fabsf@u:	
  1038                           ; 1 bytes @ 0xC
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0xC
  1042  00AC                     	ds	1
  1043  00AD                     ??_efgtoa:	
  1044                           
  1045                           ; 1 bytes @ 0xD
  1046  00AD                     	ds	4
  1047  00B1                     efgtoa@ou:	
  1048                           
  1049                           ; 4 bytes @ 0x11
  1050  00B1                     	ds	4
  1051  00B5                     _efgtoa$550:	
  1052                           
  1053                           ; 2 bytes @ 0x15
  1054  00B5                     	ds	2
  1055  00B7                     _efgtoa$551:	
  1056                           
  1057                           ; 2 bytes @ 0x17
  1058  00B7                     	ds	2
  1059  00B9                     _efgtoa$555:	
  1060                           
  1061                           ; 2 bytes @ 0x19
  1062  00B9                     	ds	2
  1063  00BB                     _efgtoa$559:	
  1064                           
  1065                           ; 2 bytes @ 0x1B
  1066  00BB                     	ds	2
  1067  00BD                     _efgtoa$560:	
  1068                           
  1069                           ; 2 bytes @ 0x1D
  1070  00BD                     	ds	2
  1071  00BF                     _efgtoa$561:	
  1072                           
  1073                           ; 2 bytes @ 0x1F
  1074  00BF                     	ds	2
  1075  00C1                     efgtoa@t:	
  1076                           
  1077                           ; 2 bytes @ 0x21
  1078  00C1                     	ds	2
  1079  00C3                     efgtoa@pp:	
  1080                           
  1081                           ; 2 bytes @ 0x23
  1082  00C3                     	ds	2
  1083  00C5                     efgtoa@m:	
  1084                           
  1085                           ; 2 bytes @ 0x25
  1086  00C5                     	ds	2
  1087  00C7                     efgtoa@ne:	
  1088                           
  1089                           ; 2 bytes @ 0x27
  1090  00C7                     	ds	2
  1091  00C9                     efgtoa@d:	
  1092                           
  1093                           ; 2 bytes @ 0x29
  1094  00C9                     	ds	2
  1095  00CB                     efgtoa@fp:	
  1096                           
  1097                           ; 1 bytes @ 0x2B
  1098  00CB                     	ds	1
  1099  00CC                     efgtoa@sign:	
  1100                           
  1101                           ; 2 bytes @ 0x2C
  1102  00CC                     	ds	2
  1103  00CE                     efgtoa@p:	
  1104                           
  1105                           ; 2 bytes @ 0x2E
  1106  00CE                     	ds	2
  1107  00D0                     efgtoa@nmode:	
  1108                           
  1109                           ; 1 bytes @ 0x30
  1110  00D0                     	ds	1
  1111  00D1                     efgtoa@w:	
  1112                           
  1113                           ; 2 bytes @ 0x31
  1114  00D1                     	ds	2
  1115  00D3                     efgtoa@mode:	
  1116                           
  1117                           ; 1 bytes @ 0x33
  1118  00D3                     	ds	1
  1119  00D4                     efgtoa@h:	
  1120                           
  1121                           ; 4 bytes @ 0x34
  1122  00D4                     	ds	4
  1123  00D8                     efgtoa@l:	
  1124                           
  1125                           ; 4 bytes @ 0x38
  1126  00D8                     	ds	4
  1127  00DC                     efgtoa@i:	
  1128                           
  1129                           ; 2 bytes @ 0x3C
  1130  00DC                     	ds	2
  1131  00DE                     efgtoa@g:	
  1132                           
  1133                           ; 4 bytes @ 0x3E
  1134  00DE                     	ds	4
  1135  00E2                     efgtoa@e:	
  1136                           
  1137                           ; 2 bytes @ 0x42
  1138  00E2                     	ds	2
  1139  00E4                     efgtoa@n:	
  1140                           
  1141                           ; 2 bytes @ 0x44
  1142  00E4                     	ds	2
  1143  00E6                     efgtoa@u:	
  1144                           
  1145                           ; 4 bytes @ 0x46
  1146  00E6                     	ds	4
  1147  00EA                     ??_vfpfcnvrt:	
  1148                           
  1149                           ; 1 bytes @ 0x4A
  1150  00EA                     	ds	6
  1151                           
  1152                           	psect	cstackCOMMON
  1153  0070                     __pcstackCOMMON:	
  1154  0070                     ?_putch:	
  1155  0070                     ?_init_setting:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_data_write:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_lcd_data:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_lcd_cmd:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_lcd_init:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_lcd_clear:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_lcd_update:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_read_volt:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_freq_count:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_interrupt_enable:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_start_up:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_shut_down:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_pwm_con:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_power_con:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_check_overload:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_process_loop:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_buzz_op:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_error_handling:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_maintenance:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_ISR:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_ISR:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_main:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     putch@c:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x0
  1226  0070                     	ds	1
  1227  0071                     ?___fleq:	
  1228  0071                     ?_strcpy:	
  1229                           ; 1 bit 
  1230                           
  1231  0071                     ??_putch:	
  1232                           ; 1 bytes @ 0x1
  1233                           
  1234  0071                     ??_init_setting:	
  1235                           ; 1 bytes @ 0x1
  1236                           
  1237  0071                     ??_data_write:	
  1238                           ; 1 bytes @ 0x1
  1239                           
  1240  0071                     ??_interrupt_enable:	
  1241                           ; 1 bytes @ 0x1
  1242                           
  1243  0071                     ??_start_up:	
  1244                           ; 1 bytes @ 0x1
  1245                           
  1246  0071                     ??_buzz_op:	
  1247                           ; 1 bytes @ 0x1
  1248                           
  1249  0071                     ??___aodiv:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252  0071                     ??___aomod:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255  0071                     ?_fputc:	
  1256                           ; 1 bytes @ 0x1
  1257                           
  1258  0071                     ?_strlen:	
  1259                           ; 2 bytes @ 0x1
  1260                           
  1261  0071                     ?___fpclassifyf:	
  1262                           ; 2 bytes @ 0x1
  1263                           
  1264  0071                     ?_isupper:	
  1265                           ; 2 bytes @ 0x1
  1266                           
  1267  0071                     ?_isdigit:	
  1268                           ; 2 bytes @ 0x1
  1269                           
  1270  0071                     ?_strncmp:	
  1271                           ; 2 bytes @ 0x1
  1272                           
  1273  0071                     ?__Umul8_16:	
  1274                           ; 2 bytes @ 0x1
  1275                           
  1276  0071                     ?_isspace:	
  1277                           ; 2 bytes @ 0x1
  1278                           
  1279  0071                     ?___wmul:	
  1280                           ; 2 bytes @ 0x1
  1281                           
  1282  0071                     ?___awdiv:	
  1283                           ; 2 bytes @ 0x1
  1284                           
  1285  0071                     ?___awmod:	
  1286                           ; 2 bytes @ 0x1
  1287                           
  1288  0071                     ?___flneg:	
  1289                           ; 2 bytes @ 0x1
  1290                           
  1291  0071                     ?___fltol:	
  1292                           ; 4 bytes @ 0x1
  1293                           
  1294  0071                     ?___xxtofl:	
  1295                           ; 4 bytes @ 0x1
  1296                           
  1297  0071                     data_write@data:	
  1298                           ; 4 bytes @ 0x1
  1299                           
  1300  0071                     interrupt_enable@state:	
  1301                           ; 1 bytes @ 0x1
  1302                           
  1303  0071                     __Umul8_16@multiplicand:	
  1304                           ; 1 bytes @ 0x1
  1305                           
  1306  0071                     ___wmul@multiplier:	
  1307                           ; 1 bytes @ 0x1
  1308                           
  1309  0071                     ___awdiv@divisor:	
  1310                           ; 2 bytes @ 0x1
  1311                           
  1312  0071                     ___awmod@divisor:	
  1313                           ; 2 bytes @ 0x1
  1314                           
  1315  0071                     isdigit@c:	
  1316                           ; 2 bytes @ 0x1
  1317                           
  1318  0071                     isspace@c:	
  1319                           ; 2 bytes @ 0x1
  1320                           
  1321  0071                     isupper@c:	
  1322                           ; 2 bytes @ 0x1
  1323                           
  1324  0071                     fputc@c:	
  1325                           ; 2 bytes @ 0x1
  1326                           
  1327  0071                     strcpy@src:	
  1328                           ; 2 bytes @ 0x1
  1329                           
  1330  0071                     strncmp@_r:	
  1331                           ; 2 bytes @ 0x1
  1332                           
  1333  0071                     ___fleq@ff1:	
  1334                           ; 2 bytes @ 0x1
  1335                           
  1336  0071                     ___flneg@f1:	
  1337                           ; 4 bytes @ 0x1
  1338                           
  1339  0071                     ___fltol@f1:	
  1340                           ; 4 bytes @ 0x1
  1341                           
  1342  0071                     ___xxtofl@val:	
  1343                           ; 4 bytes @ 0x1
  1344                           
  1345  0071                     ___fpclassifyf@x:	
  1346                           ; 4 bytes @ 0x1
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x1
  1350  0071                     	ds	1
  1351  0072                     ??_lcd_data:	
  1352  0072                     ??_lcd_cmd:	
  1353                           ; 1 bytes @ 0x2
  1354                           
  1355  0072                     ??_shut_down:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358  0072                     ___aodiv@counter:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361  0072                     ___aomod@counter:	
  1362                           ; 1 bytes @ 0x2
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x2
  1366  0072                     	ds	1
  1367  0073                     ??_strlen:	
  1368  0073                     ??_isupper:	
  1369                           ; 1 bytes @ 0x3
  1370                           
  1371  0073                     ??_strcpy:	
  1372                           ; 1 bytes @ 0x3
  1373                           
  1374  0073                     ??_isdigit:	
  1375                           ; 1 bytes @ 0x3
  1376                           
  1377  0073                     ??__Umul8_16:	
  1378                           ; 1 bytes @ 0x3
  1379                           
  1380  0073                     ??_isspace:	
  1381                           ; 1 bytes @ 0x3
  1382                           
  1383  0073                     lcd_data@data:	
  1384                           ; 1 bytes @ 0x3
  1385                           
  1386  0073                     lcd_cmd@data:	
  1387                           ; 1 bytes @ 0x3
  1388                           
  1389  0073                     ___aodiv@sign:	
  1390                           ; 1 bytes @ 0x3
  1391                           
  1392  0073                     ___aomod@sign:	
  1393                           ; 1 bytes @ 0x3
  1394                           
  1395  0073                     fputc@fp:	
  1396                           ; 1 bytes @ 0x3
  1397                           
  1398  0073                     ___wmul@multiplicand:	
  1399                           ; 1 bytes @ 0x3
  1400                           
  1401  0073                     ___awdiv@dividend:	
  1402                           ; 2 bytes @ 0x3
  1403                           
  1404  0073                     ___awmod@dividend:	
  1405                           ; 2 bytes @ 0x3
  1406                           
  1407  0073                     strncmp@n:	
  1408                           ; 2 bytes @ 0x3
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x3
  1412  0073                     	ds	1
  1413  0074                     ??_fputc:	
  1414  0074                     ??_lcd_init:	
  1415                           ; 1 bytes @ 0x4
  1416                           
  1417  0074                     ??_lcd_clear:	
  1418                           ; 1 bytes @ 0x4
  1419                           
  1420  0074                     ?_lcd_send_string:	
  1421                           ; 1 bytes @ 0x4
  1422                           
  1423  0074                     ?_lcd_set_pos:	
  1424                           ; 1 bytes @ 0x4
  1425                           
  1426  0074                     ?_abs:	
  1427                           ; 1 bytes @ 0x4
  1428                           
  1429  0074                     strlen@a:	
  1430                           ; 2 bytes @ 0x4
  1431                           
  1432  0074                     lcd_send_string@s:	
  1433                           ; 1 bytes @ 0x4
  1434                           
  1435  0074                     lcd_set_pos@pos:	
  1436                           ; 2 bytes @ 0x4
  1437                           
  1438  0074                     abs@a:	
  1439                           ; 2 bytes @ 0x4
  1440                           
  1441  0074                     ___aodiv@quotient:	
  1442                           ; 2 bytes @ 0x4
  1443                           
  1444                           
  1445                           ; 8 bytes @ 0x4
  1446  0074                     	ds	1
  1447  0075                     ??___fpclassifyf:	
  1448  0075                     ??_strncmp:	
  1449                           ; 1 bytes @ 0x5
  1450                           
  1451  0075                     ??___wmul:	
  1452                           ; 1 bytes @ 0x5
  1453                           
  1454  0075                     ??___awdiv:	
  1455                           ; 1 bytes @ 0x5
  1456                           
  1457  0075                     ??___awmod:	
  1458                           ; 1 bytes @ 0x5
  1459                           
  1460  0075                     ??___flneg:	
  1461                           ; 1 bytes @ 0x5
  1462                           
  1463  0075                     ??___fltol:	
  1464                           ; 1 bytes @ 0x5
  1465                           
  1466  0075                     ??___xxtofl:	
  1467                           ; 1 bytes @ 0x5
  1468                           
  1469  0075                     _isspace$933:	
  1470                           ; 1 bytes @ 0x5
  1471                           
  1472  0075                     strlen@s:	
  1473                           ; 1 bytes @ 0x5
  1474                           
  1475  0075                     ___wmul@product:	
  1476                           ; 1 bytes @ 0x5
  1477                           
  1478  0075                     strcpy@s:	
  1479                           ; 2 bytes @ 0x5
  1480                           
  1481  0075                     __Umul8_16@product:	
  1482                           ; 2 bytes @ 0x5
  1483                           
  1484  0075                     ___fleq@ff2:	
  1485                           ; 2 bytes @ 0x5
  1486                           
  1487                           
  1488                           ; 4 bytes @ 0x5
  1489  0075                     	ds	1
  1490  0076                     ??_abs:	
  1491  0076                     ??_lcd_send_string:	
  1492                           ; 1 bytes @ 0x6
  1493                           
  1494  0076                     ??_lcd_set_pos:	
  1495                           ; 1 bytes @ 0x6
  1496                           
  1497  0076                     ___awdiv@counter:	
  1498                           ; 1 bytes @ 0x6
  1499                           
  1500  0076                     ___awmod@counter:	
  1501                           ; 1 bytes @ 0x6
  1502                           
  1503  0076                     strncmp@_l:	
  1504                           ; 1 bytes @ 0x6
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x6
  1508  0076                     	ds	1
  1509  0077                     ?_tolower:	
  1510  0077                     ?_atoi:	
  1511                           ; 2 bytes @ 0x7
  1512                           
  1513  0077                     ___awdiv@sign:	
  1514                           ; 2 bytes @ 0x7
  1515                           
  1516  0077                     ___awmod@sign:	
  1517                           ; 1 bytes @ 0x7
  1518                           
  1519  0077                     strcpy@d:	
  1520                           ; 1 bytes @ 0x7
  1521                           
  1522  0077                     lcd_send_string@i:	
  1523                           ; 1 bytes @ 0x7
  1524                           
  1525  0077                     atoi@s:	
  1526                           ; 2 bytes @ 0x7
  1527                           
  1528  0077                     strncmp@r:	
  1529                           ; 2 bytes @ 0x7
  1530                           
  1531  0077                     tolower@c:	
  1532                           ; 2 bytes @ 0x7
  1533                           
  1534  0077                     __Umul8_16@word_mpld:	
  1535                           ; 2 bytes @ 0x7
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x7
  1539  0077                     	ds	1
  1540  0078                     strcpy@dest:	
  1541  0078                     ___awdiv@quotient:	
  1542                           ; 1 bytes @ 0x8
  1543                           
  1544                           
  1545                           ; 2 bytes @ 0x8
  1546  0078                     	ds	1
  1547  0079                     ?_lcd_show:	
  1548  0079                     ?_fputs:	
  1549                           ; 1 bytes @ 0x9
  1550                           
  1551  0079                     fputs@fp:	
  1552                           ; 2 bytes @ 0x9
  1553                           
  1554  0079                     strncmp@l:	
  1555                           ; 1 bytes @ 0x9
  1556                           
  1557  0079                     __Umul8_16@multiplier:	
  1558                           ; 1 bytes @ 0x9
  1559                           
  1560  0079                     lcd_show@x:	
  1561                           ; 1 bytes @ 0x9
  1562                           
  1563  0079                     _tolower$1018:	
  1564                           ; 2 bytes @ 0x9
  1565                           
  1566                           
  1567                           ; 2 bytes @ 0x9
  1568  0079                     	ds	1
  1569  007A                     ??_fabsf:	
  1570  007A                     ??_power_con:	
  1571                           ; 1 bytes @ 0xA
  1572                           
  1573  007A                     ??_check_overload:	
  1574                           ; 1 bytes @ 0xA
  1575                           
  1576  007A                     ??_pad:	
  1577                           ; 1 bytes @ 0xA
  1578                           
  1579  007A                     ??___flsub:	
  1580                           ; 1 bytes @ 0xA
  1581                           
  1582  007A                     ___fltol@sign1:	
  1583                           ; 1 bytes @ 0xA
  1584                           
  1585                           
  1586                           ; 1 bytes @ 0xA
  1587  007A                     	ds	1
  1588  007B                     ??_lcd_show:	
  1589  007B                     ??_error_handling:	
  1590                           ; 1 bytes @ 0xB
  1591                           
  1592  007B                     ___fltol@exp1:	
  1593                           ; 1 bytes @ 0xB
  1594                           
  1595                           
  1596                           ; 1 bytes @ 0xB
  1597  007B                     	ds	1
  1598  007C                     ??_lcd_send_int:	
  1599  007C                     ??_lcd_send_float1:	
  1600                           ; 1 bytes @ 0xC
  1601                           
  1602  007C                     ??_process_loop:	
  1603                           ; 1 bytes @ 0xC
  1604                           
  1605  007C                     ??_maintenance:	
  1606                           ; 1 bytes @ 0xC
  1607                           
  1608  007C                     ??_main:	
  1609                           ; 1 bytes @ 0xC
  1610                           
  1611                           
  1612                           	psect	cstackBANK0
  1613  0020                     __pcstackBANK0:	
  1614                           ; 1 bytes @ 0xC
  1615                           
  1616  0020                     ??_fputs:	
  1617  0020                     ??_tolower:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0020                     ??_atoi:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0020                     ??___fleq:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0020                     ?___aodiv:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0020                     ?___aomod:	
  1630                           ; 8 bytes @ 0x0
  1631                           
  1632  0020                     ___xxtofl@sign:	
  1633                           ; 8 bytes @ 0x0
  1634                           
  1635  0020                     error_handling@i:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0020                     ___fpclassifyf@e:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641  0020                     ___aodiv@divisor:	
  1642                           ; 2 bytes @ 0x0
  1643                           
  1644  0020                     ___aomod@divisor:	
  1645                           ; 8 bytes @ 0x0
  1646                           
  1647                           
  1648                           ; 8 bytes @ 0x0
  1649  0020                     	ds	1
  1650  0021                     ___xxtofl@exp:	
  1651                           
  1652                           ; 1 bytes @ 0x1
  1653  0021                     	ds	1
  1654  0022                     ___xxtofl@arg:	
  1655  0022                     ___fpclassifyf@u:	
  1656                           ; 4 bytes @ 0x2
  1657                           
  1658                           
  1659                           ; 4 bytes @ 0x2
  1660  0022                     	ds	1
  1661  0023                     fputs@c:	
  1662                           
  1663                           ; 1 bytes @ 0x3
  1664  0023                     	ds	1
  1665  0024                     atoi@neg:	
  1666  0024                     fputs@i:	
  1667                           ; 2 bytes @ 0x4
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0x4
  1671  0024                     	ds	2
  1672  0026                     ?___flmul:	
  1673  0026                     fputs@s:	
  1674                           ; 4 bytes @ 0x6
  1675                           
  1676  0026                     _atoi$891:	
  1677                           ; 1 bytes @ 0x6
  1678                           
  1679  0026                     ___flmul@b:	
  1680                           ; 2 bytes @ 0x6
  1681                           
  1682                           
  1683                           ; 4 bytes @ 0x6
  1684  0026                     	ds	1
  1685  0027                     ?_pad:	
  1686  0027                     pad@buf:	
  1687                           ; 2 bytes @ 0x7
  1688                           
  1689                           
  1690                           ; 1 bytes @ 0x7
  1691  0027                     	ds	1
  1692  0028                     pad@p:	
  1693  0028                     _atoi$893:	
  1694                           ; 2 bytes @ 0x8
  1695                           
  1696  0028                     ___aodiv@dividend:	
  1697                           ; 2 bytes @ 0x8
  1698                           
  1699  0028                     ___aomod@dividend:	
  1700                           ; 8 bytes @ 0x8
  1701                           
  1702                           
  1703                           ; 8 bytes @ 0x8
  1704  0028                     	ds	2
  1705  002A                     _atoi$892:	
  1706  002A                     pad@i:	
  1707                           ; 1 bytes @ 0xA
  1708                           
  1709  002A                     ___flmul@a:	
  1710                           ; 2 bytes @ 0xA
  1711                           
  1712                           
  1713                           ; 4 bytes @ 0xA
  1714  002A                     	ds	1
  1715  002B                     atoi@n:	
  1716                           
  1717                           ; 2 bytes @ 0xB
  1718  002B                     	ds	1
  1719  002C                     pad@w:	
  1720                           
  1721                           ; 2 bytes @ 0xC
  1722  002C                     	ds	2
  1723  002E                     ??___flmul:	
  1724  002E                     pad@fp:	
  1725                           ; 1 bytes @ 0xE
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0xE
  1729  002E                     	ds	2
  1730  0030                     ?_dtoa:	
  1731  0030                     dtoa@d:	
  1732                           ; 2 bytes @ 0x10
  1733                           
  1734                           
  1735                           ; 8 bytes @ 0x10
  1736  0030                     	ds	3
  1737  0033                     ___flmul@sign:	
  1738                           
  1739                           ; 1 bytes @ 0x13
  1740  0033                     	ds	1
  1741  0034                     ___flmul@grs:	
  1742                           
  1743                           ; 4 bytes @ 0x14
  1744  0034                     	ds	4
  1745  0038                     ??_dtoa:	
  1746  0038                     ___flmul@aexp:	
  1747                           ; 1 bytes @ 0x18
  1748                           
  1749                           
  1750                           ; 1 bytes @ 0x18
  1751  0038                     	ds	1
  1752  0039                     ___flmul@bexp:	
  1753                           
  1754                           ; 1 bytes @ 0x19
  1755  0039                     	ds	1
  1756  003A                     ___flmul@prod:	
  1757                           
  1758                           ; 4 bytes @ 0x1A
  1759  003A                     	ds	1
  1760  003B                     dtoa@fp:	
  1761                           
  1762                           ; 1 bytes @ 0x1B
  1763  003B                     	ds	1
  1764  003C                     _dtoa$526:	
  1765                           
  1766                           ; 2 bytes @ 0x1C
  1767  003C                     	ds	2
  1768  003E                     dtoa@p:	
  1769  003E                     ___flmul@temp:	
  1770                           ; 2 bytes @ 0x1E
  1771                           
  1772                           
  1773                           ; 2 bytes @ 0x1E
  1774  003E                     	ds	2
  1775  0040                     ?___flge:	
  1776  0040                     ?___fldiv:	
  1777                           ; 1 bit 
  1778                           
  1779  0040                     dtoa@w:	
  1780                           ; 4 bytes @ 0x20
  1781                           
  1782  0040                     ___flge@ff1:	
  1783                           ; 2 bytes @ 0x20
  1784                           
  1785  0040                     ___fldiv@a:	
  1786                           ; 4 bytes @ 0x20
  1787                           
  1788                           
  1789                           ; 4 bytes @ 0x20
  1790  0040                     	ds	2
  1791  0042                     dtoa@s:	
  1792                           
  1793                           ; 2 bytes @ 0x22
  1794  0042                     	ds	2
  1795  0044                     ___flge@ff2:	
  1796  0044                     ___fldiv@b:	
  1797                           ; 4 bytes @ 0x24
  1798                           
  1799  0044                     dtoa@n:	
  1800                           ; 4 bytes @ 0x24
  1801                           
  1802                           
  1803                           ; 8 bytes @ 0x24
  1804  0044                     	ds	4
  1805  0048                     ??___flge:	
  1806  0048                     ??___fldiv:	
  1807                           ; 1 bytes @ 0x28
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x28
  1811  0048                     	ds	4
  1812  004C                     dtoa@i:	
  1813                           
  1814                           ; 2 bytes @ 0x2C
  1815  004C                     	ds	1
  1816  004D                     ___fldiv@rem:	
  1817                           
  1818                           ; 4 bytes @ 0x2D
  1819  004D                     	ds	4
  1820  0051                     ___fldiv@sign:	
  1821                           
  1822                           ; 1 bytes @ 0x31
  1823  0051                     	ds	1
  1824  0052                     ___fldiv@new_exp:	
  1825                           
  1826                           ; 2 bytes @ 0x32
  1827  0052                     	ds	2
  1828  0054                     ___fldiv@grs:	
  1829                           
  1830                           ; 4 bytes @ 0x34
  1831  0054                     	ds	4
  1832  0058                     ___fldiv@bexp:	
  1833                           
  1834                           ; 1 bytes @ 0x38
  1835  0058                     	ds	1
  1836  0059                     ___fldiv@aexp:	
  1837                           
  1838                           ; 1 bytes @ 0x39
  1839  0059                     	ds	1
  1840  005A                     ??_freq_count:	
  1841  005A                     ?_floorf:	
  1842                           ; 1 bytes @ 0x3A
  1843                           
  1844  005A                     ?___fladd:	
  1845                           ; 4 bytes @ 0x3A
  1846                           
  1847  005A                     ___fladd@b:	
  1848                           ; 4 bytes @ 0x3A
  1849                           
  1850  005A                     floorf@x:	
  1851                           ; 4 bytes @ 0x3A
  1852                           
  1853                           
  1854                           ; 4 bytes @ 0x3A
  1855  005A                     	ds	4
  1856  005E                     ??_floorf:	
  1857  005E                     ___fladd@a:	
  1858                           ; 1 bytes @ 0x3E
  1859                           
  1860                           
  1861                           ; 4 bytes @ 0x3E
  1862  005E                     	ds	4
  1863  0062                     ??___fladd:	
  1864                           
  1865                           ; 1 bytes @ 0x42
  1866  0062                     	ds	2
  1867  0064                     floorf@m:	
  1868                           
  1869                           ; 4 bytes @ 0x44
  1870  0064                     	ds	4
  1871  0068                     floorf@e:	
  1872                           
  1873                           ; 2 bytes @ 0x48
  1874  0068                     	ds	2
  1875  006A                     ___fladd@signs:	
  1876  006A                     floorf@u:	
  1877                           ; 1 bytes @ 0x4A
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0x4A
  1881  006A                     	ds	1
  1882  006B                     ___fladd@aexp:	
  1883                           
  1884                           ; 1 bytes @ 0x4B
  1885  006B                     	ds	1
  1886  006C                     ___fladd@bexp:	
  1887                           
  1888                           ; 1 bytes @ 0x4C
  1889  006C                     	ds	1
  1890  006D                     ___fladd@grs:	
  1891                           
  1892                           ; 1 bytes @ 0x4D
  1893  006D                     	ds	1
  1894  006E                     ?_vfpfcnvrt:	
  1895  006E                     vfpfcnvrt@fmt:	
  1896                           ; 2 bytes @ 0x4E
  1897                           
  1898                           
  1899                           ; 1 bytes @ 0x4E
  1900  006E                     	ds	1
  1901  006F                     vfpfcnvrt@ap:	
  1902                           
  1903                           ; 1 bytes @ 0x4F
  1904  006F                     	ds	1
  1905                           
  1906                           	psect	maintext
  1907  26D1                     __pmaintext:	
  1908 ;;
  1909 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1910 ;;
  1911 ;; *************** function _main *****************
  1912 ;; Defined at:
  1913 ;;		line 1115 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : B1F/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels required when called:   13
  1933 ;; This function calls:
  1934 ;;		_error_handling
  1935 ;;		_init_setting
  1936 ;;		_interrupt_enable
  1937 ;;		_lcd_clear
  1938 ;;		_lcd_init
  1939 ;;		_lcd_show
  1940 ;;		_lcd_update
  1941 ;;		_maintenance
  1942 ;;		_process_loop
  1943 ;;		_pwm_con
  1944 ;; This function is called by:
  1945 ;;		Startup code after reset
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _main
  1951  26D1                     _main:	
  1952  26D1                     l6929:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1955                           
  1956                           
  1957                           ;main.c: 1116:     init_setting();
  1958  26D1  3198  2025  31A6   	fcall	_init_setting
  1959                           
  1960                           ;main.c: 1117:     lcd_init();
  1961  26D4  31A4  246D  31A6   	fcall	_lcd_init
  1962                           
  1963                           ;main.c: 1118:     lcd_clear();
  1964  26D7  31A0  20E5  31A6   	fcall	_lcd_clear
  1965                           
  1966                           ;main.c: 1122:     interrupt_enable(1);
  1967  26DA  3001               	movlw	1
  1968  26DB  31A0  20DB  31A6   	fcall	_interrupt_enable
  1969  26DE                     l6931:	
  1970                           
  1971                           ;main.c: 1123:     pwmcon_flag=1;
  1972  26DE  01FC               	clrf	_pwmcon_flag
  1973  26DF  0AFC               	incf	_pwmcon_flag,f
  1974  26E0                     l6933:	
  1975                           
  1976                           ;main.c: 1124:     pause=0;
  1977  26E0  0022               	movlb	2	; select bank2
  1978  26E1  01EF               	clrf	_pause^(0+256)
  1979  26E2                     l6935:	
  1980                           
  1981                           ;main.c: 1125:     start_flag=0;
  1982  26E2  01EB               	clrf	_start_flag^(0+256)
  1983  26E3                     l6937:	
  1984                           
  1985                           ;main.c: 1126:     pwm_lvl=20;
  1986  26E3  3014               	movlw	20
  1987  26E4  00E6               	movwf	_pwm_lvl^(0+256)
  1988  26E5  3000               	movlw	0
  1989  26E6  00E7               	movwf	(_pwm_lvl^(0+256)+1)
  1990  26E7                     l6939:	
  1991                           
  1992                           ;main.c: 1132:     {;main.c: 1133:         if (!pause)
  1993  26E7  0022               	movlb	2	; select bank2
  1994  26E8  086F               	movf	_pause^(0+256),w
  1995  26E9  1D03               	btfss	3,2
  1996  26EA  2EEC               	goto	u9251
  1997  26EB  2EED               	goto	u9250
  1998  26EC                     u9251:	
  1999  26EC  2EF8               	goto	l6945
  2000  26ED                     u9250:	
  2001  26ED                     l6941:	
  2002                           
  2003                           ;main.c: 1134:         {;main.c: 1136:             lcd_show(0);
  2004  26ED  3000               	movlw	0
  2005  26EE  00F9               	movwf	lcd_show@x
  2006  26EF  00FA               	movwf	lcd_show@x+1
  2007  26F0  319E  26D7  31A6   	fcall	_lcd_show
  2008  26F3                     l6943:	
  2009                           
  2010                           ;main.c: 1137:             lcd_update('d');
  2011  26F3  3064               	movlw	100
  2012  26F4  318C  24E2  31A6   	fcall	_lcd_update
  2013                           
  2014                           ;main.c: 1138:         }
  2015  26F7  2F03               	goto	l6949
  2016  26F8                     l6945:	
  2017                           
  2018                           ;main.c: 1140:         {;main.c: 1142:             lcd_show(3);
  2019  26F8  3003               	movlw	3
  2020  26F9  00F9               	movwf	lcd_show@x
  2021  26FA  3000               	movlw	0
  2022  26FB  00FA               	movwf	lcd_show@x+1
  2023  26FC  319E  26D7  31A6   	fcall	_lcd_show
  2024  26FF                     l6947:	
  2025                           
  2026                           ;main.c: 1143:             lcd_update('p');
  2027  26FF  3070               	movlw	112
  2028  2700  318C  24E2  31A6   	fcall	_lcd_update
  2029  2703                     l6949:	
  2030                           
  2031                           ;main.c: 1147:         {;main.c: 1148:             if (RC6)
  2032  2703  0020               	movlb	0	; select bank0
  2033  2704  1F0E               	btfss	14,6	;volatile
  2034  2705  2F07               	goto	u9261
  2035  2706  2F08               	goto	u9260
  2036  2707                     u9261:	
  2037  2707  2F10               	goto	l433
  2038  2708                     u9260:	
  2039  2708                     l6951:	
  2040                           
  2041                           ;main.c: 1149:             {;main.c: 1150:                 RC0=1;
  2042  2708  140E               	bsf	14,0	;volatile
  2043  2709                     l434:	
  2044                           ;main.c: 1151:                 while(RC6);
  2045                           
  2046  2709  1B0E               	btfsc	14,6	;volatile
  2047  270A  2F0C               	goto	u9271
  2048  270B  2F0D               	goto	u9270
  2049  270C                     u9271:	
  2050  270C  2F09               	goto	l434
  2051  270D                     u9270:	
  2052  270D                     l6953:	
  2053                           
  2054                           ;main.c: 1153:                 maintenance();
  2055  270D  3190  2004  31A6   	fcall	_maintenance
  2056  2710                     l433:	
  2057                           ;main.c: 1155:             }
  2058                           
  2059                           
  2060                           ;main.c: 1158:             pwm_con();
  2061  2710  319A  2214  31A6   	fcall	_pwm_con
  2062  2713                     l6955:	
  2063                           
  2064                           ;main.c: 1159:             if (RC5 ||RC7)
  2065  2713  0020               	movlb	0	; select bank0
  2066  2714  1A8E               	btfsc	14,5	;volatile
  2067  2715  2F17               	goto	u9281
  2068  2716  2F18               	goto	u9280
  2069  2717                     u9281:	
  2070  2717  2F1C               	goto	l6959
  2071  2718                     u9280:	
  2072  2718                     l6957:	
  2073  2718  1F8E               	btfss	14,7	;volatile
  2074  2719  2F1B               	goto	u9291
  2075  271A  2F1C               	goto	u9290
  2076  271B                     u9291:	
  2077  271B  2F03               	goto	l6949
  2078  271C                     u9290:	
  2079  271C                     l6959:	
  2080                           
  2081                           ;main.c: 1167:         process_loop();
  2082  271C  31A7  2797  31A6   	fcall	_process_loop
  2083  271F                     l6961:	
  2084                           
  2085                           ;main.c: 1169:         start_flag=0;
  2086  271F  0022               	movlb	2	; select bank2
  2087  2720  01EB               	clrf	_start_flag^(0+256)
  2088  2721                     l6963:	
  2089                           
  2090                           ;main.c: 1171:         if (e_lock||e_overvolt)
  2091  2721  086E               	movf	_e_lock^(0+256),w
  2092  2722  1D03               	btfss	3,2
  2093  2723  2F25               	goto	u9301
  2094  2724  2F26               	goto	u9300
  2095  2725                     u9301:	
  2096  2725  2F2B               	goto	l6967
  2097  2726                     u9300:	
  2098  2726                     l6965:	
  2099  2726  086D               	movf	_e_overvolt^(0+256),w
  2100  2727  1903               	btfsc	3,2
  2101  2728  2F2A               	goto	u9311
  2102  2729  2F2B               	goto	u9310
  2103  272A                     u9311:	
  2104  272A  2EE7               	goto	l6939
  2105  272B                     u9310:	
  2106  272B                     l6967:	
  2107                           
  2108                           ;main.c: 1172:         {;main.c: 1173:            error_handling();
  2109  272B  31A5  2566  31A6   	fcall	_error_handling
  2110  272E  2EE7               	goto	l6939
  2111  272F  3180  28BB         	ljmp	start
  2112  2731                     __end_of_main:	
  2113                           
  2114                           	psect	text1
  2115  2797                     __ptext1:	
  2116 ;; *************** function _process_loop *****************
  2117 ;; Defined at:
  2118 ;;		line 840 in file "main.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;Total ram usage:        0 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:   12
  2139 ;; This function calls:
  2140 ;;		_check_overload
  2141 ;;		_freq_count
  2142 ;;		_interrupt_enable
  2143 ;;		_lcd_show
  2144 ;;		_lcd_update
  2145 ;;		_power_con
  2146 ;;		_pwm_con
  2147 ;;		_read_volt
  2148 ;;		_shut_down
  2149 ;;		_start_up
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _process_loop
  2157  2797                     _process_loop:	
  2158  2797                     l6831:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _process_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2161                           
  2162                           
  2163                           ;main.c: 842:     if (pause)
  2164  2797  0022               	movlb	2	; select bank2
  2165  2798  086F               	movf	_pause^(0+256),w
  2166  2799  1903               	btfsc	3,2
  2167  279A  2F9C               	goto	u9091
  2168  279B  2F9D               	goto	u9090
  2169  279C                     u9091:	
  2170  279C  2FA8               	goto	l6839
  2171  279D                     u9090:	
  2172  279D                     l6833:	
  2173                           
  2174                           ;main.c: 843:     {;main.c: 844:         pause=0;
  2175  279D  01EF               	clrf	_pause^(0+256)
  2176  279E                     l6835:	
  2177                           
  2178                           ;main.c: 845:         lcd_show(0);
  2179  279E  3000               	movlw	0
  2180  279F  00F9               	movwf	lcd_show@x
  2181  27A0  00FA               	movwf	lcd_show@x+1
  2182  27A1  319E  26D7  31A7   	fcall	_lcd_show
  2183  27A4                     l6837:	
  2184                           
  2185                           ;main.c: 846:         lcd_update('d');
  2186  27A4  3064               	movlw	100
  2187  27A5  318C  24E2  31A7   	fcall	_lcd_update
  2188  27A8                     l6839:	
  2189                           
  2190                           ;main.c: 850:     {;main.c: 851:         if (RC5 || RC7)
  2191  27A8  0020               	movlb	0	; select bank0
  2192  27A9  1A8E               	btfsc	14,5	;volatile
  2193  27AA  2FAC               	goto	u9101
  2194  27AB  2FAD               	goto	u9100
  2195  27AC                     u9101:	
  2196  27AC  2FB1               	goto	l355
  2197  27AD                     u9100:	
  2198  27AD                     l6841:	
  2199  27AD  1F8E               	btfss	14,7	;volatile
  2200  27AE  2FB0               	goto	u9111
  2201  27AF  2FB1               	goto	u9110
  2202  27B0                     u9111:	
  2203  27B0  2FCC               	goto	l6855
  2204  27B1                     u9110:	
  2205  27B1                     l355:	
  2206                           
  2207                           ;main.c: 852:       {;main.c: 853:          if(RC7)
  2208  27B1  1F8E               	btfss	14,7	;volatile
  2209  27B2  2FB4               	goto	u9121
  2210  27B3  2FB5               	goto	u9120
  2211  27B4                     u9121:	
  2212  27B4  2FC1               	goto	l6849
  2213  27B5                     u9120:	
  2214  27B5                     l6843:	
  2215                           
  2216                           ;main.c: 854:             {;main.c: 855:                 if(!pwmcon_flag)
  2217  27B5  087C               	movf	_pwmcon_flag,w
  2218  27B6  1D03               	btfss	3,2
  2219  27B7  2FB9               	goto	u9131
  2220  27B8  2FBA               	goto	u9130
  2221  27B9                     u9131:	
  2222  27B9  2FD0               	goto	l6857
  2223  27BA                     u9130:	
  2224  27BA                     l6845:	
  2225                           
  2226                           ;main.c: 856:                  {;main.c: 857:                    interrupt_enable(1);
  2227  27BA  3001               	movlw	1
  2228  27BB  31A0  20DB  31A7   	fcall	_interrupt_enable
  2229  27BE                     l6847:	
  2230                           
  2231                           ;main.c: 858:                    pwmcon_flag=1;
  2232  27BE  01FC               	clrf	_pwmcon_flag
  2233  27BF  0AFC               	incf	_pwmcon_flag,f
  2234  27C0  2FD0               	goto	l6857
  2235  27C1                     l6849:	
  2236                           
  2237                           ;main.c: 862:           {;main.c: 863:                 if(pwmcon_flag)
  2238  27C1  087C               	movf	_pwmcon_flag,w
  2239  27C2  1903               	btfsc	3,2
  2240  27C3  2FC5               	goto	u9141
  2241  27C4  2FC6               	goto	u9140
  2242  27C5                     u9141:	
  2243  27C5  2FD0               	goto	l6857
  2244  27C6                     u9140:	
  2245  27C6                     l6851:	
  2246                           
  2247                           ;main.c: 864:                 {;main.c: 865:                   interrupt_enable(0);
  2248  27C6  3000               	movlw	0
  2249  27C7  31A0  20DB  31A7   	fcall	_interrupt_enable
  2250  27CA                     l6853:	
  2251                           
  2252                           ;main.c: 866:                   pwmcon_flag=0;
  2253  27CA  01FC               	clrf	_pwmcon_flag
  2254  27CB  2FD0               	goto	l6857
  2255  27CC                     l6855:	
  2256                           
  2257                           ;main.c: 871:       {;main.c: 873:           shut_down();
  2258  27CC  31A3  2356  31A7   	fcall	_shut_down
  2259                           
  2260                           ;main.c: 875:           break;
  2261  27CF  2FFF               	goto	l366
  2262  27D0                     l6857:	
  2263                           
  2264                           ;main.c: 878:         if (!start_flag)
  2265  27D0  0022               	movlb	2	; select bank2
  2266  27D1  086B               	movf	_start_flag^(0+256),w
  2267  27D2  1D03               	btfss	3,2
  2268  27D3  2FD5               	goto	u9151
  2269  27D4  2FD6               	goto	u9150
  2270  27D5                     u9151:	
  2271  27D5  2FD9               	goto	l6861
  2272  27D6                     u9150:	
  2273  27D6                     l6859:	
  2274                           
  2275                           ;main.c: 879:         {;main.c: 880:             start_up();
  2276  27D6  31A2  22F3  31A7   	fcall	_start_up
  2277  27D9                     l6861:	
  2278                           
  2279                           ;main.c: 883:         if (!RB3)
  2280  27D9  0020               	movlb	0	; select bank0
  2281  27DA  198D               	btfsc	13,3	;volatile
  2282  27DB  2FDD               	goto	u9161
  2283  27DC  2FDE               	goto	u9160
  2284  27DD                     u9161:	
  2285  27DD  2FE2               	goto	l6865
  2286  27DE                     u9160:	
  2287  27DE                     l6863:	
  2288                           
  2289                           ;main.c: 884:         {;main.c: 885:             e_lock=1;
  2290  27DE  0022               	movlb	2	; select bank2
  2291  27DF  01EE               	clrf	_e_lock^(0+256)
  2292  27E0  0AEE               	incf	_e_lock^(0+256),f
  2293                           
  2294                           ;main.c: 886:             break;
  2295  27E1  2FFF               	goto	l366
  2296  27E2                     l6865:	
  2297                           
  2298                           ;main.c: 889:         pwm_con();
  2299  27E2  319A  2214  31A7   	fcall	_pwm_con
  2300  27E5                     l6867:	
  2301                           
  2302                           ;main.c: 890:         freq_count();
  2303  27E5  31A7  2731  31A7   	fcall	_freq_count
  2304  27E8                     l6869:	
  2305                           
  2306                           ;main.c: 891:         lcd_update('f');
  2307  27E8  3066               	movlw	102
  2308  27E9  318C  24E2  31A7   	fcall	_lcd_update
  2309                           
  2310                           ;main.c: 892:         read_volt();
  2311  27EC  3191  21DE  31A7   	fcall	_read_volt
  2312  27EF                     l6871:	
  2313                           
  2314                           ;main.c: 893:         lcd_update('v');
  2315  27EF  3076               	movlw	118
  2316  27F0  318C  24E2  31A7   	fcall	_lcd_update
  2317  27F3                     l6873:	
  2318                           
  2319                           ;main.c: 894:         power_con();
  2320  27F3  31A4  241E  31A7   	fcall	_power_con
  2321  27F6                     l6875:	
  2322                           
  2323                           ;main.c: 896:         check_overload();
  2324  27F6  31A3  238B  31A7   	fcall	_check_overload
  2325  27F9                     l6877:	
  2326                           
  2327                           ;main.c: 899:         if (e_overvolt)
  2328  27F9  0022               	movlb	2	; select bank2
  2329  27FA  086D               	movf	_e_overvolt^(0+256),w
  2330  27FB  1903               	btfsc	3,2
  2331  27FC  2FFE               	goto	u9171
  2332  27FD  2FFF               	goto	u9170
  2333  27FE                     u9171:	
  2334  27FE  2FA8               	goto	l6839
  2335  27FF                     u9170:	
  2336  27FF                     l366:	
  2337  27FF  0008               	return
  2338  2800                     __end_of_process_loop:	
  2339                           
  2340                           	psect	text2
  2341  22F3                     __ptext2:	
  2342 ;; *************** function _start_up *****************
  2343 ;; Defined at:
  2344 ;;		line 699 in file "main.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_process_loop
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _start_up
  2374  22F3                     _start_up:	
  2375  22F3                     l5507:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _start_up: [wreg]
  2378                           
  2379                           
  2380                           ;main.c: 701:     RB2=1;
  2381  22F3  0020               	movlb	0	; select bank0
  2382  22F4  150D               	bsf	13,2	;volatile
  2383  22F5                     l5509:	
  2384                           
  2385                           ;main.c: 702:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2386  22F5  300B               	movlw	11
  2387  22F6  00F2               	movwf	??_start_up+1
  2388  22F7  3026               	movlw	38
  2389  22F8  00F1               	movwf	??_start_up
  2390  22F9  305E               	movlw	94
  2391  22FA                     u9327:	
  2392  22FA  0B89               	decfsz	9,f
  2393  22FB  2AFA               	goto	u9327
  2394  22FC  0BF1               	decfsz	??_start_up,f
  2395  22FD  2AFA               	goto	u9327
  2396  22FE  0BF2               	decfsz	??_start_up+1,f
  2397  22FF  2AFA               	goto	u9327
  2398  2300                     l5511:	
  2399                           
  2400                           ;main.c: 703:     RA0=1;
  2401  2300  0020               	movlb	0	; select bank0
  2402  2301  140C               	bsf	12,0	;volatile
  2403                           
  2404                           ;main.c: 704:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2405  2302  300B               	movlw	11
  2406  2303  00F2               	movwf	??_start_up+1
  2407  2304  3026               	movlw	38
  2408  2305  00F1               	movwf	??_start_up
  2409  2306  305E               	movlw	94
  2410  2307                     u9337:	
  2411  2307  0B89               	decfsz	9,f
  2412  2308  2B07               	goto	u9337
  2413  2309  0BF1               	decfsz	??_start_up,f
  2414  230A  2B07               	goto	u9337
  2415  230B  0BF2               	decfsz	??_start_up+1,f
  2416  230C  2B07               	goto	u9337
  2417  230D                     l5513:	
  2418                           
  2419                           ;main.c: 705:     RB2=0;
  2420  230D  0020               	movlb	0	; select bank0
  2421  230E  110D               	bcf	13,2	;volatile
  2422                           
  2423                           ;main.c: 706:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2424  230F  300B               	movlw	11
  2425  2310  00F2               	movwf	??_start_up+1
  2426  2311  3026               	movlw	38
  2427  2312  00F1               	movwf	??_start_up
  2428  2313  305E               	movlw	94
  2429  2314                     u9347:	
  2430  2314  0B89               	decfsz	9,f
  2431  2315  2B14               	goto	u9347
  2432  2316  0BF1               	decfsz	??_start_up,f
  2433  2317  2B14               	goto	u9347
  2434  2318  0BF2               	decfsz	??_start_up+1,f
  2435  2319  2B14               	goto	u9347
  2436  231A                     l5515:	
  2437                           
  2438                           ;main.c: 708:     start_flag=1;
  2439  231A  0022               	movlb	2	; select bank2
  2440  231B  01EB               	clrf	_start_flag^(0+256)
  2441  231C  0AEB               	incf	_start_flag^(0+256),f
  2442                           
  2443                           ;main.c: 709:     CCP1CON=0b00000101;
  2444  231D  3005               	movlw	5
  2445  231E  0025               	movlb	5	; select bank5
  2446  231F  0093               	movwf	19	;volatile
  2447  2320                     l323:	
  2448  2320  0008               	return
  2449  2321                     __end_of_start_up:	
  2450                           
  2451                           	psect	text3
  2452  2356                     __ptext3:	
  2453 ;; *************** function _shut_down *****************
  2454 ;; Defined at:
  2455 ;;		line 722 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		_interrupt_enable
  2478 ;; This function is called by:
  2479 ;;		_process_loop
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _shut_down
  2485  2356                     _shut_down:	
  2486  2356                     l5517:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _shut_down: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;main.c: 724:           RA0=0;
  2492  2356  0020               	movlb	0	; select bank0
  2493  2357  100C               	bcf	12,0	;volatile
  2494  2358                     l5519:	
  2495                           
  2496                           ;main.c: 725:           interrupt_enable(1);
  2497  2358  3001               	movlw	1
  2498  2359  31A0  20DB  31A3   	fcall	_interrupt_enable
  2499  235C                     l5521:	
  2500                           
  2501                           ;main.c: 726:           pwmcon_flag=1;
  2502  235C  01FC               	clrf	_pwmcon_flag
  2503  235D  0AFC               	incf	_pwmcon_flag,f
  2504  235E                     l5523:	
  2505                           
  2506                           ;main.c: 727:           pause=1;
  2507  235E  0022               	movlb	2	; select bank2
  2508  235F  01EF               	clrf	_pause^(0+256)
  2509  2360  0AEF               	incf	_pause^(0+256),f
  2510  2361                     l5525:	
  2511                           
  2512                           ;main.c: 728:           CCP1CON=0b00000000;
  2513  2361  0025               	movlb	5	; select bank5
  2514  2362  0193               	clrf	19	;volatile
  2515  2363                     l5527:	
  2516                           
  2517                           ;main.c: 732:           period=0;
  2518  2363  0023               	movlb	3	; select bank3
  2519  2364  01C6               	clrf	_period^(0+384)
  2520  2365  01C7               	clrf	(_period+1)^(0+384)
  2521  2366                     l5529:	
  2522                           
  2523                           ;main.c: 733:           v1=0;
  2524  2366  3000               	movlw	0
  2525  2367  0022               	movlb	2	; select bank2
  2526  2368  00DF               	movwf	(_v1+3)^(0+256)
  2527  2369  3000               	movlw	0
  2528  236A  00DE               	movwf	(_v1+2)^(0+256)
  2529  236B  3000               	movlw	0
  2530  236C  00DD               	movwf	(_v1+1)^(0+256)
  2531  236D  3000               	movlw	0
  2532  236E  00DC               	movwf	_v1^(0+256)
  2533  236F                     l5531:	
  2534                           
  2535                           ;main.c: 734:           last_v1=1;
  2536  236F  303F               	movlw	63
  2537  2370  0023               	movlb	3	; select bank3
  2538  2371  00D3               	movwf	(_last_v1+3)^(0+384)
  2539  2372  3080               	movlw	128
  2540  2373  00D2               	movwf	(_last_v1+2)^(0+384)
  2541  2374  3000               	movlw	0
  2542  2375  00D1               	movwf	(_last_v1+1)^(0+384)
  2543  2376  3000               	movlw	0
  2544  2377  00D0               	movwf	_last_v1^(0+384)
  2545  2378                     l5533:	
  2546                           
  2547                           ;main.c: 735:           v2=0;
  2548  2378  3000               	movlw	0
  2549  2379  0022               	movlb	2	; select bank2
  2550  237A  00DB               	movwf	(_v2+3)^(0+256)
  2551  237B  3000               	movlw	0
  2552  237C  00DA               	movwf	(_v2+2)^(0+256)
  2553  237D  3000               	movlw	0
  2554  237E  00D9               	movwf	(_v2+1)^(0+256)
  2555  237F  3000               	movlw	0
  2556  2380  00D8               	movwf	_v2^(0+256)
  2557  2381                     l5535:	
  2558                           
  2559                           ;main.c: 736:           last_v2=1;
  2560  2381  303F               	movlw	63
  2561  2382  0023               	movlb	3	; select bank3
  2562  2383  00CF               	movwf	(_last_v2+3)^(0+384)
  2563  2384  3080               	movlw	128
  2564  2385  00CE               	movwf	(_last_v2+2)^(0+384)
  2565  2386  3000               	movlw	0
  2566  2387  00CD               	movwf	(_last_v2+1)^(0+384)
  2567  2388  3000               	movlw	0
  2568  2389  00CC               	movwf	_last_v2^(0+384)
  2569  238A                     l326:	
  2570  238A  0008               	return
  2571  238B                     __end_of_shut_down:	
  2572                           
  2573                           	psect	text4
  2574  241E                     __ptext4:	
  2575 ;; *************** function _power_con *****************
  2576 ;; Defined at:
  2577 ;;		line 795 in file "main.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		___flge
  2600 ;; This function is called by:
  2601 ;;		_process_loop
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _power_con
  2607  241E                     _power_con:	
  2608  241E                     l5559:	
  2609                           ;incstack = 0
  2610                           ; Regs used in _power_con: [wreg+status,2+status,0+pclath+cstack]
  2611                           
  2612                           
  2613                           ;main.c: 798:     if (h_voltage_flag)
  2614  241E  0022               	movlb	2	; select bank2
  2615  241F  086C               	movf	_h_voltage_flag^(0+256),w
  2616  2420  1903               	btfsc	3,2
  2617  2421  2C23               	goto	u7361
  2618  2422  2C24               	goto	u7360
  2619  2423                     u7361:	
  2620  2423  2C47               	goto	l5567
  2621  2424                     u7360:	
  2622  2424                     l5561:	
  2623                           
  2624                           ;main.c: 799:     {;main.c: 801:         if (v1<40)
  2625  2424  085F               	movf	(_v1+3)^(0+256),w
  2626  2425  0020               	movlb	0	; select bank0
  2627  2426  00C3               	movwf	___flge@ff1+3
  2628  2427  0022               	movlb	2	; select bank2
  2629  2428  085E               	movf	(_v1+2)^(0+256),w
  2630  2429  0020               	movlb	0	; select bank0
  2631  242A  00C2               	movwf	___flge@ff1+2
  2632  242B  0022               	movlb	2	; select bank2
  2633  242C  085D               	movf	(_v1+1)^(0+256),w
  2634  242D  0020               	movlb	0	; select bank0
  2635  242E  00C1               	movwf	___flge@ff1+1
  2636  242F  0022               	movlb	2	; select bank2
  2637  2430  085C               	movf	_v1^(0+256),w
  2638  2431  0020               	movlb	0	; select bank0
  2639  2432  00C0               	movwf	___flge@ff1
  2640  2433  3042               	movlw	66
  2641  2434  00C7               	movwf	___flge@ff2+3
  2642  2435  3020               	movlw	32
  2643  2436  00C6               	movwf	___flge@ff2+2
  2644  2437  3000               	movlw	0
  2645  2438  00C5               	movwf	___flge@ff2+1
  2646  2439  3000               	movlw	0
  2647  243A  00C4               	movwf	___flge@ff2
  2648  243B  3199  2189  31A4   	fcall	___flge
  2649  243E  1803               	btfsc	3,0
  2650  243F  2C41               	goto	u7371
  2651  2440  2C42               	goto	u7370
  2652  2441                     u7371:	
  2653  2441  2C6C               	goto	l342
  2654  2442                     u7370:	
  2655  2442                     l5563:	
  2656                           
  2657                           ;main.c: 802:         {;main.c: 803:           h_voltage_flag=0;
  2658  2442  0022               	movlb	2	; select bank2
  2659  2443  01EC               	clrf	_h_voltage_flag^(0+256)
  2660  2444                     l5565:	
  2661                           
  2662                           ;main.c: 804:           RA1=0;
  2663  2444  0020               	movlb	0	; select bank0
  2664  2445  108C               	bcf	12,1	;volatile
  2665  2446  2C6C               	goto	l342
  2666  2447                     l5567:	
  2667                           
  2668                           ;main.c: 809:     {;main.c: 810:         if (v1>50)
  2669  2447  3042               	movlw	66
  2670  2448  0020               	movlb	0	; select bank0
  2671  2449  00C3               	movwf	___flge@ff1+3
  2672  244A  3048               	movlw	72
  2673  244B  00C2               	movwf	___flge@ff1+2
  2674  244C  3000               	movlw	0
  2675  244D  00C1               	movwf	___flge@ff1+1
  2676  244E  3000               	movlw	0
  2677  244F  00C0               	movwf	___flge@ff1
  2678  2450  0022               	movlb	2	; select bank2
  2679  2451  085F               	movf	(_v1+3)^(0+256),w
  2680  2452  0020               	movlb	0	; select bank0
  2681  2453  00C7               	movwf	___flge@ff2+3
  2682  2454  0022               	movlb	2	; select bank2
  2683  2455  085E               	movf	(_v1+2)^(0+256),w
  2684  2456  0020               	movlb	0	; select bank0
  2685  2457  00C6               	movwf	___flge@ff2+2
  2686  2458  0022               	movlb	2	; select bank2
  2687  2459  085D               	movf	(_v1+1)^(0+256),w
  2688  245A  0020               	movlb	0	; select bank0
  2689  245B  00C5               	movwf	___flge@ff2+1
  2690  245C  0022               	movlb	2	; select bank2
  2691  245D  085C               	movf	_v1^(0+256),w
  2692  245E  0020               	movlb	0	; select bank0
  2693  245F  00C4               	movwf	___flge@ff2
  2694  2460  3199  2189  31A4   	fcall	___flge
  2695  2463  1803               	btfsc	3,0
  2696  2464  2C66               	goto	u7381
  2697  2465  2C67               	goto	u7380
  2698  2466                     u7381:	
  2699  2466  2C6C               	goto	l342
  2700  2467                     u7380:	
  2701  2467                     l5569:	
  2702                           
  2703                           ;main.c: 811:         {;main.c: 812:           h_voltage_flag=1;
  2704  2467  0022               	movlb	2	; select bank2
  2705  2468  01EC               	clrf	_h_voltage_flag^(0+256)
  2706  2469  0AEC               	incf	_h_voltage_flag^(0+256),f
  2707                           
  2708                           ;main.c: 813:           RA1=1;
  2709  246A  0020               	movlb	0	; select bank0
  2710  246B  148C               	bsf	12,1	;volatile
  2711  246C                     l342:	
  2712  246C  0008               	return
  2713  246D                     __end_of_power_con:	
  2714                           
  2715                           	psect	text5
  2716  238B                     __ptext5:	
  2717 ;; *************** function _check_overload *****************
  2718 ;; Defined at:
  2719 ;;		line 824 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    2
  2740 ;; This function calls:
  2741 ;;		___flge
  2742 ;; This function is called by:
  2743 ;;		_process_loop
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _check_overload
  2749  238B                     _check_overload:	
  2750  238B                     l5571:	
  2751                           ;incstack = 0
  2752                           ; Regs used in _check_overload: [wreg+status,2+status,0+pclath+cstack]
  2753                           
  2754                           
  2755                           ;main.c: 826:     if (v1>120||v2>4500)
  2756  238B  3042               	movlw	66
  2757  238C  0020               	movlb	0	; select bank0
  2758  238D  00C3               	movwf	___flge@ff1+3
  2759  238E  30F0               	movlw	240
  2760  238F  00C2               	movwf	___flge@ff1+2
  2761  2390  3000               	movlw	0
  2762  2391  00C1               	movwf	___flge@ff1+1
  2763  2392  3000               	movlw	0
  2764  2393  00C0               	movwf	___flge@ff1
  2765  2394  0022               	movlb	2	; select bank2
  2766  2395  085F               	movf	(_v1+3)^(0+256),w
  2767  2396  0020               	movlb	0	; select bank0
  2768  2397  00C7               	movwf	___flge@ff2+3
  2769  2398  0022               	movlb	2	; select bank2
  2770  2399  085E               	movf	(_v1+2)^(0+256),w
  2771  239A  0020               	movlb	0	; select bank0
  2772  239B  00C6               	movwf	___flge@ff2+2
  2773  239C  0022               	movlb	2	; select bank2
  2774  239D  085D               	movf	(_v1+1)^(0+256),w
  2775  239E  0020               	movlb	0	; select bank0
  2776  239F  00C5               	movwf	___flge@ff2+1
  2777  23A0  0022               	movlb	2	; select bank2
  2778  23A1  085C               	movf	_v1^(0+256),w
  2779  23A2  0020               	movlb	0	; select bank0
  2780  23A3  00C4               	movwf	___flge@ff2
  2781  23A4  3199  2189  31A3   	fcall	___flge
  2782  23A7  1C03               	btfss	3,0
  2783  23A8  2BAA               	goto	u7391
  2784  23A9  2BAB               	goto	u7390
  2785  23AA                     u7391:	
  2786  23AA  2BCB               	goto	l347
  2787  23AB                     u7390:	
  2788  23AB                     l5573:	
  2789  23AB  3045               	movlw	69
  2790  23AC  0020               	movlb	0	; select bank0
  2791  23AD  00C3               	movwf	___flge@ff1+3
  2792  23AE  308C               	movlw	140
  2793  23AF  00C2               	movwf	___flge@ff1+2
  2794  23B0  30A0               	movlw	160
  2795  23B1  00C1               	movwf	___flge@ff1+1
  2796  23B2  3000               	movlw	0
  2797  23B3  00C0               	movwf	___flge@ff1
  2798  23B4  0022               	movlb	2	; select bank2
  2799  23B5  085B               	movf	(_v2+3)^(0+256),w
  2800  23B6  0020               	movlb	0	; select bank0
  2801  23B7  00C7               	movwf	___flge@ff2+3
  2802  23B8  0022               	movlb	2	; select bank2
  2803  23B9  085A               	movf	(_v2+2)^(0+256),w
  2804  23BA  0020               	movlb	0	; select bank0
  2805  23BB  00C6               	movwf	___flge@ff2+2
  2806  23BC  0022               	movlb	2	; select bank2
  2807  23BD  0859               	movf	(_v2+1)^(0+256),w
  2808  23BE  0020               	movlb	0	; select bank0
  2809  23BF  00C5               	movwf	___flge@ff2+1
  2810  23C0  0022               	movlb	2	; select bank2
  2811  23C1  0858               	movf	_v2^(0+256),w
  2812  23C2  0020               	movlb	0	; select bank0
  2813  23C3  00C4               	movwf	___flge@ff2
  2814  23C4  3199  2189  31A3   	fcall	___flge
  2815  23C7  1803               	btfsc	3,0
  2816  23C8  2BCA               	goto	u7401
  2817  23C9  2BCB               	goto	u7400
  2818  23CA                     u7401:	
  2819  23CA  2BCE               	goto	l348
  2820  23CB                     u7400:	
  2821  23CB                     l347:	
  2822                           
  2823                           ;main.c: 827:     {;main.c: 828:         e_overvolt=1;
  2824  23CB  0022               	movlb	2	; select bank2
  2825  23CC  01ED               	clrf	_e_overvolt^(0+256)
  2826  23CD  0AED               	incf	_e_overvolt^(0+256),f
  2827  23CE                     l348:	
  2828  23CE  0008               	return
  2829  23CF                     __end_of_check_overload:	
  2830                           
  2831                           	psect	text6
  2832  1004                     __ptext6:	
  2833 ;; *************** function _maintenance *****************
  2834 ;; Defined at:
  2835 ;;		line 964 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:   12
  2856 ;; This function calls:
  2857 ;;		_freq_count
  2858 ;;		_lcd_show
  2859 ;;		_lcd_update
  2860 ;;		_pwm_con
  2861 ;;		_read_volt
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           
  2868                           ;psect for function _maintenance
  2869  1004                     _maintenance:	
  2870  1004                     l6881:	
  2871                           ;incstack = 0
  2872                           ; Regs used in _maintenance: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2873                           
  2874                           
  2875                           ;main.c: 966:     if (pause){
  2876  1004  0022               	movlb	2	; select bank2
  2877  1005  086F               	movf	_pause^(0+256),w
  2878  1006  1903               	btfsc	3,2
  2879  1007  2809               	goto	u9181
  2880  1008  280A               	goto	u9180
  2881  1009                     u9181:	
  2882  1009  2814               	goto	l6887
  2883  100A                     u9180:	
  2884  100A                     l6883:	
  2885                           
  2886                           ;main.c: 967:         lcd_show(0);
  2887  100A  3000               	movlw	0
  2888  100B  00F9               	movwf	lcd_show@x
  2889  100C  00FA               	movwf	lcd_show@x+1
  2890  100D  319E  26D7  3190   	fcall	_lcd_show
  2891  1010                     l6885:	
  2892                           
  2893                           ;main.c: 968:         lcd_update('d');
  2894  1010  3064               	movlw	100
  2895  1011  318C  24E2  3190   	fcall	_lcd_update
  2896  1014                     l6887:	
  2897                           
  2898                           ;main.c: 970:     RA0=0;
  2899  1014  0020               	movlb	0	; select bank0
  2900  1015  100C               	bcf	12,0	;volatile
  2901  1016                     l6889:	
  2902                           
  2903                           ;main.c: 971:     RA1=0;
  2904  1016  108C               	bcf	12,1	;volatile
  2905  1017                     l6891:	
  2906                           
  2907                           ;main.c: 972:     RB2=0;
  2908  1017  110D               	bcf	13,2	;volatile
  2909  1018                     l6893:	
  2910                           
  2911                           ;main.c: 973:     RC3=0;
  2912  1018  118E               	bcf	14,3	;volatile
  2913  1019                     l6895:	
  2914                           
  2915                           ;main.c: 974:     pwm_lvl=10;
  2916  1019  300A               	movlw	10
  2917  101A  0022               	movlb	2	; select bank2
  2918  101B  00E6               	movwf	_pwm_lvl^(0+256)
  2919  101C  3000               	movlw	0
  2920  101D  00E7               	movwf	(_pwm_lvl^(0+256)+1)
  2921  101E                     l6897:	
  2922                           
  2923                           ;main.c: 975:     CCP1CON=0b00000101;
  2924  101E  3005               	movlw	5
  2925  101F  0025               	movlb	5	; select bank5
  2926  1020  0093               	movwf	19	;volatile
  2927  1021                     l6899:	
  2928                           
  2929                           ;main.c: 978:         if (RC5){
  2930  1021  0020               	movlb	0	; select bank0
  2931  1022  1E8E               	btfss	14,5	;volatile
  2932  1023  2825               	goto	u9191
  2933  1024  2826               	goto	u9190
  2934  1025                     u9191:	
  2935  1025  2828               	goto	l385
  2936  1026                     u9190:	
  2937  1026                     l6901:	
  2938                           
  2939                           ;main.c: 980:             RA0=1;
  2940  1026  140C               	bsf	12,0	;volatile
  2941                           
  2942                           ;main.c: 982:         }
  2943  1027  2829               	goto	l386
  2944  1028                     l385:	
  2945                           ;main.c: 983:         else{
  2946                           
  2947                           
  2948                           ;main.c: 985:             RA0=0;
  2949  1028  100C               	bcf	12,0	;volatile
  2950  1029                     l386:	
  2951                           ;main.c: 987:         }
  2952                           
  2953                           
  2954                           ;main.c: 989:          if (RC7){
  2955  1029  1F8E               	btfss	14,7	;volatile
  2956  102A  282C               	goto	u9201
  2957  102B  282D               	goto	u9200
  2958  102C                     u9201:	
  2959  102C  2849               	goto	l6911
  2960  102D                     u9200:	
  2961  102D                     l6903:	
  2962                           
  2963                           ;main.c: 991:             if (!f2){
  2964  102D  0022               	movlb	2	; select bank2
  2965  102E  0869               	movf	_f2^(0+256),w
  2966  102F  1D03               	btfss	3,2
  2967  1030  2832               	goto	u9211
  2968  1031  2833               	goto	u9210
  2969  1032                     u9211:	
  2970  1032  283F               	goto	l388
  2971  1033                     u9210:	
  2972  1033                     l6905:	
  2973                           
  2974                           ;main.c: 992:                 RB2=1;
  2975  1033  0020               	movlb	0	; select bank0
  2976  1034  150D               	bsf	13,2	;volatile
  2977                           
  2978                           ;main.c: 993:                 f2=1;
  2979  1035  0022               	movlb	2	; select bank2
  2980  1036  01E9               	clrf	_f2^(0+256)
  2981  1037  0AE9               	incf	_f2^(0+256),f
  2982                           
  2983                           ;main.c: 994:                 RC3=1;
  2984  1038  0020               	movlb	0	; select bank0
  2985  1039  158E               	bsf	14,3	;volatile
  2986  103A                     l389:	
  2987                           ;main.c: 995:                 while(RC7);
  2988                           
  2989  103A  1B8E               	btfsc	14,7	;volatile
  2990  103B  283D               	goto	u9221
  2991  103C  283E               	goto	u9220
  2992  103D                     u9221:	
  2993  103D  283A               	goto	l389
  2994  103E                     u9220:	
  2995  103E  2849               	goto	l6911
  2996  103F                     l388:	
  2997                           ;main.c: 997:             else{
  2998                           
  2999                           
  3000                           ;main.c: 998:                 RB2=0;
  3001  103F  0020               	movlb	0	; select bank0
  3002  1040  110D               	bcf	13,2	;volatile
  3003  1041                     l6907:	
  3004                           
  3005                           ;main.c: 999:                 f2=0;
  3006  1041  0022               	movlb	2	; select bank2
  3007  1042  01E9               	clrf	_f2^(0+256)
  3008  1043                     l6909:	
  3009                           
  3010                           ;main.c: 1000:                 RC3=0;
  3011  1043  0020               	movlb	0	; select bank0
  3012  1044  118E               	bcf	14,3	;volatile
  3013  1045                     l393:	
  3014                           ;main.c: 1001:                 while(RC7);
  3015                           
  3016  1045  1B8E               	btfsc	14,7	;volatile
  3017  1046  2848               	goto	u9231
  3018  1047  2849               	goto	u9230
  3019  1048                     u9231:	
  3020  1048  2845               	goto	l393
  3021  1049                     u9230:	
  3022  1049                     l6911:	
  3023                           
  3024                           ;main.c: 1005:         pwm_con();
  3025  1049  319A  2214  3190   	fcall	_pwm_con
  3026  104C                     l6913:	
  3027                           
  3028                           ;main.c: 1006:         freq_count();
  3029  104C  31A7  2731  3190   	fcall	_freq_count
  3030  104F                     l6915:	
  3031                           
  3032                           ;main.c: 1007:         lcd_update('f');
  3033  104F  3066               	movlw	102
  3034  1050  318C  24E2  3190   	fcall	_lcd_update
  3035                           
  3036                           ;main.c: 1008:         read_volt();
  3037  1053  3191  21DE  3190   	fcall	_read_volt
  3038  1056                     l6917:	
  3039                           
  3040                           ;main.c: 1009:         lcd_update('v');
  3041  1056  3076               	movlw	118
  3042  1057  318C  24E2  3190   	fcall	_lcd_update
  3043  105A                     l6919:	
  3044                           
  3045                           ;main.c: 1011:         if (RC6){
  3046  105A  0020               	movlb	0	; select bank0
  3047  105B  1F0E               	btfss	14,6	;volatile
  3048  105C  285E               	goto	u9241
  3049  105D  285F               	goto	u9240
  3050  105E                     u9241:	
  3051  105E  2821               	goto	l6899
  3052  105F                     u9240:	
  3053  105F                     l6921:	
  3054                           
  3055                           ;main.c: 1012:             lcd_show(0);
  3056  105F  3000               	movlw	0
  3057  1060  00F9               	movwf	lcd_show@x
  3058  1061  00FA               	movwf	lcd_show@x+1
  3059  1062  319E  26D7  3190   	fcall	_lcd_show
  3060  1065                     l6923:	
  3061                           
  3062                           ;main.c: 1013:             lcd_update('d');
  3063  1065  3064               	movlw	100
  3064  1066  318C  24E2  3190   	fcall	_lcd_update
  3065  1069                     l6925:	
  3066                           
  3067                           ;main.c: 1014:             RC0=0;
  3068  1069  0020               	movlb	0	; select bank0
  3069  106A  100E               	bcf	14,0	;volatile
  3070  106B                     l6927:	
  3071                           
  3072                           ;main.c: 1015:             CCP1CON=0b00000000;
  3073  106B  0025               	movlb	5	; select bank5
  3074  106C  0193               	clrf	19	;volatile
  3075  106D                     l399:	
  3076                           ;main.c: 1016:             break;
  3077                           
  3078  106D  0008               	return
  3079  106E                     __end_of_maintenance:	
  3080                           
  3081                           	psect	text7
  3082  1A14                     __ptext7:	
  3083 ;; *************** function _pwm_con *****************
  3084 ;; Defined at:
  3085 ;;		line 757 in file "main.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;Total ram usage:        2 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:   11
  3106 ;; This function calls:
  3107 ;;		___flge
  3108 ;;		___wmul
  3109 ;;		_lcd_update
  3110 ;;		_read_volt
  3111 ;; This function is called by:
  3112 ;;		_process_loop
  3113 ;;		_maintenance
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _pwm_con
  3120  1A14                     _pwm_con:	
  3121  1A14                     l6809:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _pwm_con: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;main.c: 759:     if (pwmcon_flag)
  3127  1A14  087C               	movf	_pwmcon_flag,w
  3128  1A15  1903               	btfsc	3,2
  3129  1A16  2A18               	goto	u9031
  3130  1A17  2A19               	goto	u9030
  3131  1A18                     u9031:	
  3132  1A18  2AA4               	goto	l335
  3133  1A19                     u9030:	
  3134  1A19                     l6811:	
  3135                           
  3136                           ;main.c: 760:     {;main.c: 762:         if (last_pwm_lvl!=pwm_lvl)
  3137  1A19  0022               	movlb	2	; select bank2
  3138  1A1A  0867               	movf	(_pwm_lvl+1)^(0+256),w
  3139  1A1B  0023               	movlb	3	; select bank3
  3140  1A1C  0655               	xorwf	(_last_pwm_lvl+1)^(0+384),w
  3141  1A1D  1D03               	skipz
  3142  1A1E  2A23               	goto	u9045
  3143  1A1F  0022               	movlb	2	; select bank2
  3144  1A20  0866               	movf	_pwm_lvl^(0+256),w
  3145  1A21  0023               	movlb	3	; select bank3
  3146  1A22  0654               	xorwf	_last_pwm_lvl^(0+384),w
  3147  1A23                     u9045:	
  3148  1A23  1903               	skipnz
  3149  1A24  2A26               	goto	u9041
  3150  1A25  2A27               	goto	u9040
  3151  1A26                     u9041:	
  3152  1A26  2AA4               	goto	l335
  3153  1A27                     u9040:	
  3154  1A27                     l6813:	
  3155                           
  3156                           ;main.c: 763:         {;main.c: 764:             lcd_update('p');
  3157  1A27  3070               	movlw	112
  3158  1A28  318C  24E2  319A   	fcall	_lcd_update
  3159  1A2B                     l6815:	
  3160                           
  3161                           ;main.c: 765:             dutycycle=(pwm_lvl*10);
  3162  1A2B  0022               	movlb	2	; select bank2
  3163  1A2C  0867               	movf	(_pwm_lvl+1)^(0+256),w
  3164  1A2D  00F2               	movwf	___wmul@multiplier+1
  3165  1A2E  0866               	movf	_pwm_lvl^(0+256),w
  3166  1A2F  00F1               	movwf	___wmul@multiplier
  3167  1A30  300A               	movlw	10
  3168  1A31  00F3               	movwf	___wmul@multiplicand
  3169  1A32  3000               	movlw	0
  3170  1A33  00F4               	movwf	___wmul@multiplicand+1
  3171  1A34  31A1  21CC  319A   	fcall	___wmul
  3172  1A37  0872               	movf	?___wmul+1,w
  3173  1A38  0023               	movlb	3	; select bank3
  3174  1A39  00BD               	movwf	(_dutycycle+1)^(0+384)
  3175  1A3A  0871               	movf	?___wmul,w
  3176  1A3B  00BC               	movwf	_dutycycle^(0+384)
  3177  1A3C                     l6817:	
  3178                           
  3179                           ;main.c: 767:             DC2B0=dutycycle & 0x01;
  3180  1A3C  183C               	btfsc	_dutycycle^(0+384),0
  3181  1A3D  2A3F               	goto	u9051
  3182  1A3E  2A42               	goto	u9050
  3183  1A3F                     u9051:	
  3184  1A3F  0025               	movlb	5	; select bank5
  3185  1A40  161A               	bsf	26,4	;volatile
  3186  1A41  2A44               	goto	u9064
  3187  1A42                     u9050:	
  3188  1A42  0025               	movlb	5	; select bank5
  3189  1A43  121A               	bcf	26,4	;volatile
  3190  1A44                     u9064:	
  3191  1A44                     l6819:	
  3192                           
  3193                           ;main.c: 768:             DC2B1=dutycycle & 0x02;
  3194  1A44  129A               	bcf	26,5	;volatile
  3195  1A45                     l6821:	
  3196                           
  3197                           ;main.c: 769:             CCPR2L=dutycycle>>2&0xFF;
  3198  1A45  0023               	movlb	3	; select bank3
  3199  1A46  083D               	movf	(_dutycycle+1)^(0+384),w
  3200  1A47  0022               	movlb	2	; select bank2
  3201  1A48  00D7               	movwf	(??_pwm_con^(0+256)+1)
  3202  1A49  0023               	movlb	3	; select bank3
  3203  1A4A  083C               	movf	_dutycycle^(0+384),w
  3204  1A4B  0022               	movlb	2	; select bank2
  3205  1A4C  00D6               	movwf	??_pwm_con^(0+256)
  3206  1A4D  36D7               	lsrf	(??_pwm_con^(0+256)+1),f
  3207  1A4E  0CD6               	rrf	??_pwm_con^(0+256),f
  3208  1A4F  36D7               	lsrf	(??_pwm_con^(0+256)+1),f
  3209  1A50  0CD6               	rrf	??_pwm_con^(0+256),f
  3210  1A51  0856               	movf	??_pwm_con^(0+256),w
  3211  1A52  0025               	movlb	5	; select bank5
  3212  1A53  0098               	movwf	24	;volatile
  3213  1A54                     l6823:	
  3214                           
  3215                           ;main.c: 771:             last_pwm_lvl=pwm_lvl;
  3216  1A54  0022               	movlb	2	; select bank2
  3217  1A55  0867               	movf	(_pwm_lvl+1)^(0+256),w
  3218  1A56  0023               	movlb	3	; select bank3
  3219  1A57  00D5               	movwf	(_last_pwm_lvl+1)^(0+384)
  3220  1A58  0022               	movlb	2	; select bank2
  3221  1A59  0866               	movf	_pwm_lvl^(0+256),w
  3222  1A5A  0023               	movlb	3	; select bank3
  3223  1A5B  00D4               	movwf	_last_pwm_lvl^(0+384)
  3224  1A5C                     l6825:	
  3225                           
  3226                           ;main.c: 772:             read_volt();
  3227  1A5C  3191  21DE  319A   	fcall	_read_volt
  3228  1A5F                     l6827:	
  3229                           
  3230                           ;main.c: 774:             if (v1>100 || v2>4000)
  3231  1A5F  3042               	movlw	66
  3232  1A60  0020               	movlb	0	; select bank0
  3233  1A61  00C3               	movwf	___flge@ff1+3
  3234  1A62  30C8               	movlw	200
  3235  1A63  00C2               	movwf	___flge@ff1+2
  3236  1A64  3000               	movlw	0
  3237  1A65  00C1               	movwf	___flge@ff1+1
  3238  1A66  3000               	movlw	0
  3239  1A67  00C0               	movwf	___flge@ff1
  3240  1A68  0022               	movlb	2	; select bank2
  3241  1A69  085F               	movf	(_v1+3)^(0+256),w
  3242  1A6A  0020               	movlb	0	; select bank0
  3243  1A6B  00C7               	movwf	___flge@ff2+3
  3244  1A6C  0022               	movlb	2	; select bank2
  3245  1A6D  085E               	movf	(_v1+2)^(0+256),w
  3246  1A6E  0020               	movlb	0	; select bank0
  3247  1A6F  00C6               	movwf	___flge@ff2+2
  3248  1A70  0022               	movlb	2	; select bank2
  3249  1A71  085D               	movf	(_v1+1)^(0+256),w
  3250  1A72  0020               	movlb	0	; select bank0
  3251  1A73  00C5               	movwf	___flge@ff2+1
  3252  1A74  0022               	movlb	2	; select bank2
  3253  1A75  085C               	movf	_v1^(0+256),w
  3254  1A76  0020               	movlb	0	; select bank0
  3255  1A77  00C4               	movwf	___flge@ff2
  3256  1A78  3199  2189  319A   	fcall	___flge
  3257  1A7B  1C03               	btfss	3,0
  3258  1A7C  2A7E               	goto	u9071
  3259  1A7D  2A7F               	goto	u9070
  3260  1A7E                     u9071:	
  3261  1A7E  2A9F               	goto	l333
  3262  1A7F                     u9070:	
  3263  1A7F                     l6829:	
  3264  1A7F  3045               	movlw	69
  3265  1A80  0020               	movlb	0	; select bank0
  3266  1A81  00C3               	movwf	___flge@ff1+3
  3267  1A82  307A               	movlw	122
  3268  1A83  00C2               	movwf	___flge@ff1+2
  3269  1A84  3000               	movlw	0
  3270  1A85  00C1               	movwf	___flge@ff1+1
  3271  1A86  3000               	movlw	0
  3272  1A87  00C0               	movwf	___flge@ff1
  3273  1A88  0022               	movlb	2	; select bank2
  3274  1A89  085B               	movf	(_v2+3)^(0+256),w
  3275  1A8A  0020               	movlb	0	; select bank0
  3276  1A8B  00C7               	movwf	___flge@ff2+3
  3277  1A8C  0022               	movlb	2	; select bank2
  3278  1A8D  085A               	movf	(_v2+2)^(0+256),w
  3279  1A8E  0020               	movlb	0	; select bank0
  3280  1A8F  00C6               	movwf	___flge@ff2+2
  3281  1A90  0022               	movlb	2	; select bank2
  3282  1A91  0859               	movf	(_v2+1)^(0+256),w
  3283  1A92  0020               	movlb	0	; select bank0
  3284  1A93  00C5               	movwf	___flge@ff2+1
  3285  1A94  0022               	movlb	2	; select bank2
  3286  1A95  0858               	movf	_v2^(0+256),w
  3287  1A96  0020               	movlb	0	; select bank0
  3288  1A97  00C4               	movwf	___flge@ff2
  3289  1A98  3199  2189  319A   	fcall	___flge
  3290  1A9B  1803               	btfsc	3,0
  3291  1A9C  2A9E               	goto	u9081
  3292  1A9D  2A9F               	goto	u9080
  3293  1A9E                     u9081:	
  3294  1A9E  2AA2               	goto	l331
  3295  1A9F                     u9080:	
  3296  1A9F                     l333:	
  3297                           
  3298                           ;main.c: 775:             {;main.c: 776:                 RC3=1;
  3299  1A9F  0020               	movlb	0	; select bank0
  3300  1AA0  158E               	bsf	14,3	;volatile
  3301                           
  3302                           ;main.c: 777:             }
  3303  1AA1  2AA4               	goto	l335
  3304  1AA2                     l331:	
  3305                           ;main.c: 778:             else
  3306                           
  3307                           
  3308                           ;main.c: 779:             {;main.c: 780:                 RC3=0;
  3309  1AA2  0020               	movlb	0	; select bank0
  3310  1AA3  118E               	bcf	14,3	;volatile
  3311  1AA4                     l335:	
  3312  1AA4  0008               	return
  3313  1AA5                     __end_of_pwm_con:	
  3314                           
  3315                           	psect	text8
  3316  11DE                     __ptext8:	
  3317 ;; *************** function _read_volt *****************
  3318 ;; Defined at:
  3319 ;;		line 598 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3336 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;Total ram usage:        7 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    3
  3340 ;; This function calls:
  3341 ;;		___fladd
  3342 ;;		___fldiv
  3343 ;;		___flmul
  3344 ;;		___xxtofl
  3345 ;; This function is called by:
  3346 ;;		_pwm_con
  3347 ;;		_process_loop
  3348 ;;		_maintenance
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _read_volt
  3354  11DE                     _read_volt:	
  3355  11DE                     l6757:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _read_volt: [wreg+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;main.c: 601:         CHS0=1;
  3361  11DE  0021               	movlb	1	; select bank1
  3362  11DF  151D               	bsf	29,2	;volatile
  3363                           
  3364                           ;main.c: 602:         CHS1=0;
  3365  11E0  119D               	bcf	29,3	;volatile
  3366                           
  3367                           ;main.c: 603:         CHS2=1;
  3368  11E1  161D               	bsf	29,4	;volatile
  3369                           
  3370                           ;main.c: 604:         CHS3=1;
  3371  11E2  169D               	bsf	29,5	;volatile
  3372  11E3                     l6759:	
  3373                           
  3374                           ;main.c: 605:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3375  11E3  3006               	movlw	6
  3376  11E4                     u9357:	
  3377  11E4  0B89               	decfsz	9,f
  3378  11E5  29E4               	goto	u9357
  3379  11E6  3200               	nop2
  3380  11E7                     l6761:	
  3381                           
  3382                           ;main.c: 606:     GO=1;
  3383  11E7  0021               	movlb	1	; select bank1
  3384  11E8  149D               	bsf	29,1	;volatile
  3385  11E9                     l305:	
  3386                           ;main.c: 607:     while(GO==1);
  3387                           
  3388  11E9  189D               	btfsc	29,1	;volatile
  3389  11EA  29EC               	goto	u9001
  3390  11EB  29ED               	goto	u9000
  3391  11EC                     u9001:	
  3392  11EC  29E9               	goto	l305
  3393  11ED                     u9000:	
  3394  11ED                     l6763:	
  3395                           
  3396                           ;main.c: 610:     adcbuff=0;
  3397  11ED  0022               	movlb	2	; select bank2
  3398  11EE  01E4               	clrf	_adcbuff^(0+256)
  3399  11EF  01E5               	clrf	(_adcbuff+1)^(0+256)
  3400  11F0                     l6765:	
  3401                           
  3402                           ;main.c: 611:     adcbuff=ADRESH;
  3403  11F0  0021               	movlb	1	; select bank1
  3404  11F1  081C               	movf	28,w	;volatile
  3405  11F2  00A0               	movwf	??_read_volt^(0+128)
  3406  11F3  01A1               	clrf	(??_read_volt^(0+128)+1)
  3407  11F4  0820               	movf	??_read_volt^(0+128),w
  3408  11F5  0022               	movlb	2	; select bank2
  3409  11F6  00E4               	movwf	_adcbuff^(0+256)
  3410  11F7  0021               	movlb	1	; select bank1
  3411  11F8  0821               	movf	(??_read_volt+1)^(0+128),w
  3412  11F9  0022               	movlb	2	; select bank2
  3413  11FA  00E5               	movwf	(_adcbuff+1)^(0+256)
  3414  11FB                     l6767:	
  3415                           
  3416                           ;main.c: 612:     adcbuff=adcbuff<<8;
  3417  11FB  0865               	movf	(_adcbuff+1)^(0+256),w
  3418  11FC  0021               	movlb	1	; select bank1
  3419  11FD  00A1               	movwf	(??_read_volt^(0+128)+1)
  3420  11FE  0022               	movlb	2	; select bank2
  3421  11FF  0864               	movf	_adcbuff^(0+256),w
  3422  1200  0021               	movlb	1	; select bank1
  3423  1201  00A0               	movwf	??_read_volt^(0+128)
  3424  1202  0820               	movf	??_read_volt^(0+128),w
  3425  1203  00A1               	movwf	(??_read_volt^(0+128)+1)
  3426  1204  01A0               	clrf	??_read_volt^(0+128)
  3427  1205  0820               	movf	??_read_volt^(0+128),w
  3428  1206  0022               	movlb	2	; select bank2
  3429  1207  00E4               	movwf	_adcbuff^(0+256)
  3430  1208  0021               	movlb	1	; select bank1
  3431  1209  0821               	movf	(??_read_volt+1)^(0+128),w
  3432  120A  0022               	movlb	2	; select bank2
  3433  120B  00E5               	movwf	(_adcbuff+1)^(0+256)
  3434  120C                     l6769:	
  3435                           
  3436                           ;main.c: 613:     adcbuff=adcbuff|ADRESL;
  3437  120C  0864               	movf	_adcbuff^(0+256),w
  3438  120D  0021               	movlb	1	; select bank1
  3439  120E  041B               	iorwf	27,w	;volatile
  3440  120F  00A0               	movwf	??_read_volt^(0+128)
  3441  1210  0022               	movlb	2	; select bank2
  3442  1211  0865               	movf	(_adcbuff+1)^(0+256),w
  3443  1212  0021               	movlb	1	; select bank1
  3444  1213  00A1               	movwf	(??_read_volt+1)^(0+128)
  3445  1214  0820               	movf	??_read_volt^(0+128),w
  3446  1215  0022               	movlb	2	; select bank2
  3447  1216  00E4               	movwf	_adcbuff^(0+256)
  3448  1217  0021               	movlb	1	; select bank1
  3449  1218  0821               	movf	(??_read_volt+1)^(0+128),w
  3450  1219  0022               	movlb	2	; select bank2
  3451  121A  00E5               	movwf	(_adcbuff+1)^(0+256)
  3452  121B                     l6771:	
  3453                           
  3454                           ;main.c: 615:     v1=adcbuff;
  3455  121B  0864               	movf	_adcbuff^(0+256),w
  3456  121C  00F1               	movwf	___xxtofl@val
  3457  121D  0865               	movf	(_adcbuff+1)^(0+256),w
  3458  121E  00F2               	movwf	___xxtofl@val+1
  3459  121F  0D89               	rlf	9,f
  3460  1220  3B89               	subwfb	9,f
  3461  1221  0989               	comf	9,f
  3462  1222  00F3               	movwf	___xxtofl@val+2
  3463  1223  00F4               	movwf	___xxtofl@val+3
  3464  1224  3001               	movlw	1
  3465  1225  319A  22A5  3191   	fcall	___xxtofl
  3466  1228  0874               	movf	?___xxtofl+3,w
  3467  1229  0022               	movlb	2	; select bank2
  3468  122A  00DF               	movwf	(_v1+3)^(0+256)
  3469  122B  0873               	movf	?___xxtofl+2,w
  3470  122C  00DE               	movwf	(_v1+2)^(0+256)
  3471  122D  0872               	movf	?___xxtofl+1,w
  3472  122E  00DD               	movwf	(_v1+1)^(0+256)
  3473  122F  0871               	movf	?___xxtofl,w
  3474  1230  00DC               	movwf	_v1^(0+256)
  3475  1231                     l6773:	
  3476                           
  3477                           ;main.c: 616:     v1 = (v1*5/1023)*38;
  3478  1231  3044               	movlw	68
  3479  1232  0020               	movlb	0	; select bank0
  3480  1233  00C3               	movwf	___fldiv@a+3
  3481  1234  307F               	movlw	127
  3482  1235  00C2               	movwf	___fldiv@a+2
  3483  1236  30C0               	movlw	192
  3484  1237  00C1               	movwf	___fldiv@a+1
  3485  1238  3000               	movlw	0
  3486  1239  00C0               	movwf	___fldiv@a
  3487  123A  3040               	movlw	64
  3488  123B  00A9               	movwf	___flmul@b+3
  3489  123C  30A0               	movlw	160
  3490  123D  00A8               	movwf	___flmul@b+2
  3491  123E  3000               	movlw	0
  3492  123F  00A7               	movwf	___flmul@b+1
  3493  1240  3000               	movlw	0
  3494  1241  00A6               	movwf	___flmul@b
  3495  1242  0022               	movlb	2	; select bank2
  3496  1243  085F               	movf	(_v1+3)^(0+256),w
  3497  1244  0020               	movlb	0	; select bank0
  3498  1245  00AD               	movwf	___flmul@a+3
  3499  1246  0022               	movlb	2	; select bank2
  3500  1247  085E               	movf	(_v1+2)^(0+256),w
  3501  1248  0020               	movlb	0	; select bank0
  3502  1249  00AC               	movwf	___flmul@a+2
  3503  124A  0022               	movlb	2	; select bank2
  3504  124B  085D               	movf	(_v1+1)^(0+256),w
  3505  124C  0020               	movlb	0	; select bank0
  3506  124D  00AB               	movwf	___flmul@a+1
  3507  124E  0022               	movlb	2	; select bank2
  3508  124F  085C               	movf	_v1^(0+256),w
  3509  1250  0020               	movlb	0	; select bank0
  3510  1251  00AA               	movwf	___flmul@a
  3511  1252  3195  25A9  3191   	fcall	___flmul
  3512  1255  0020               	movlb	0	; select bank0
  3513  1256  0829               	movf	?___flmul+3,w
  3514  1257  00C7               	movwf	___fldiv@b+3
  3515  1258  0828               	movf	?___flmul+2,w
  3516  1259  00C6               	movwf	___fldiv@b+2
  3517  125A  0827               	movf	?___flmul+1,w
  3518  125B  00C5               	movwf	___fldiv@b+1
  3519  125C  0826               	movf	?___flmul,w
  3520  125D  00C4               	movwf	___fldiv@b
  3521  125E  3188  2016  3191   	fcall	___fldiv
  3522  1261  0020               	movlb	0	; select bank0
  3523  1262  0843               	movf	?___fldiv+3,w
  3524  1263  0021               	movlb	1	; select bank1
  3525  1264  00A6               	movwf	(_read_volt$1260+3)^(0+128)
  3526  1265  0020               	movlb	0	; select bank0
  3527  1266  0842               	movf	?___fldiv+2,w
  3528  1267  0021               	movlb	1	; select bank1
  3529  1268  00A5               	movwf	(_read_volt$1260+2)^(0+128)
  3530  1269  0020               	movlb	0	; select bank0
  3531  126A  0841               	movf	?___fldiv+1,w
  3532  126B  0021               	movlb	1	; select bank1
  3533  126C  00A4               	movwf	(_read_volt$1260+1)^(0+128)
  3534  126D  0020               	movlb	0	; select bank0
  3535  126E  0840               	movf	?___fldiv,w
  3536  126F  0021               	movlb	1	; select bank1
  3537  1270  00A3               	movwf	_read_volt$1260^(0+128)
  3538  1271                     l6775:	
  3539                           
  3540                           ;main.c: 616:     v1 = (v1*5/1023)*38;
  3541  1271  3042               	movlw	66
  3542  1272  0020               	movlb	0	; select bank0
  3543  1273  00A9               	movwf	___flmul@b+3
  3544  1274  3018               	movlw	24
  3545  1275  00A8               	movwf	___flmul@b+2
  3546  1276  3000               	movlw	0
  3547  1277  00A7               	movwf	___flmul@b+1
  3548  1278  3000               	movlw	0
  3549  1279  00A6               	movwf	___flmul@b
  3550  127A  0021               	movlb	1	; select bank1
  3551  127B  0826               	movf	(_read_volt$1260+3)^(0+128),w
  3552  127C  0020               	movlb	0	; select bank0
  3553  127D  00AD               	movwf	___flmul@a+3
  3554  127E  0021               	movlb	1	; select bank1
  3555  127F  0825               	movf	(_read_volt$1260+2)^(0+128),w
  3556  1280  0020               	movlb	0	; select bank0
  3557  1281  00AC               	movwf	___flmul@a+2
  3558  1282  0021               	movlb	1	; select bank1
  3559  1283  0824               	movf	(_read_volt$1260+1)^(0+128),w
  3560  1284  0020               	movlb	0	; select bank0
  3561  1285  00AB               	movwf	___flmul@a+1
  3562  1286  0021               	movlb	1	; select bank1
  3563  1287  0823               	movf	_read_volt$1260^(0+128),w
  3564  1288  0020               	movlb	0	; select bank0
  3565  1289  00AA               	movwf	___flmul@a
  3566  128A  3195  25A9  3191   	fcall	___flmul
  3567  128D  0020               	movlb	0	; select bank0
  3568  128E  0829               	movf	?___flmul+3,w
  3569  128F  0022               	movlb	2	; select bank2
  3570  1290  00DF               	movwf	(_v1+3)^(0+256)
  3571  1291  0020               	movlb	0	; select bank0
  3572  1292  0828               	movf	?___flmul+2,w
  3573  1293  0022               	movlb	2	; select bank2
  3574  1294  00DE               	movwf	(_v1+2)^(0+256)
  3575  1295  0020               	movlb	0	; select bank0
  3576  1296  0827               	movf	?___flmul+1,w
  3577  1297  0022               	movlb	2	; select bank2
  3578  1298  00DD               	movwf	(_v1+1)^(0+256)
  3579  1299  0020               	movlb	0	; select bank0
  3580  129A  0826               	movf	?___flmul,w
  3581  129B  0022               	movlb	2	; select bank2
  3582  129C  00DC               	movwf	_v1^(0+256)
  3583  129D                     l6777:	
  3584                           
  3585                           ;main.c: 619:         CHS0=0;
  3586  129D  0021               	movlb	1	; select bank1
  3587  129E  111D               	bcf	29,2	;volatile
  3588  129F                     l6779:	
  3589                           
  3590                           ;main.c: 620:         CHS1=1;
  3591  129F  159D               	bsf	29,3	;volatile
  3592  12A0                     l6781:	
  3593                           
  3594                           ;main.c: 621:         CHS2=0;
  3595  12A0  121D               	bcf	29,4	;volatile
  3596  12A1                     l6783:	
  3597                           
  3598                           ;main.c: 622:         CHS3=1;
  3599  12A1  169D               	bsf	29,5	;volatile
  3600  12A2                     l6785:	
  3601                           
  3602                           ;main.c: 623:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3603  12A2  3006               	movlw	6
  3604  12A3                     u9367:	
  3605  12A3  0B89               	decfsz	9,f
  3606  12A4  2AA3               	goto	u9367
  3607  12A5  3200               	nop2
  3608  12A6                     l6787:	
  3609                           
  3610                           ;main.c: 624:     GO=1;
  3611  12A6  0021               	movlb	1	; select bank1
  3612  12A7  149D               	bsf	29,1	;volatile
  3613  12A8                     l308:	
  3614                           ;main.c: 625:     while(GO==1);
  3615                           
  3616  12A8  189D               	btfsc	29,1	;volatile
  3617  12A9  2AAB               	goto	u9011
  3618  12AA  2AAC               	goto	u9010
  3619  12AB                     u9011:	
  3620  12AB  2AA8               	goto	l308
  3621  12AC                     u9010:	
  3622  12AC                     l6789:	
  3623                           
  3624                           ;main.c: 628:     adcbuff=0;
  3625  12AC  0022               	movlb	2	; select bank2
  3626  12AD  01E4               	clrf	_adcbuff^(0+256)
  3627  12AE  01E5               	clrf	(_adcbuff+1)^(0+256)
  3628  12AF                     l6791:	
  3629                           
  3630                           ;main.c: 629:     adcbuff=ADRESH;
  3631  12AF  0021               	movlb	1	; select bank1
  3632  12B0  081C               	movf	28,w	;volatile
  3633  12B1  00A0               	movwf	??_read_volt^(0+128)
  3634  12B2  01A1               	clrf	(??_read_volt^(0+128)+1)
  3635  12B3  0820               	movf	??_read_volt^(0+128),w
  3636  12B4  0022               	movlb	2	; select bank2
  3637  12B5  00E4               	movwf	_adcbuff^(0+256)
  3638  12B6  0021               	movlb	1	; select bank1
  3639  12B7  0821               	movf	(??_read_volt+1)^(0+128),w
  3640  12B8  0022               	movlb	2	; select bank2
  3641  12B9  00E5               	movwf	(_adcbuff+1)^(0+256)
  3642  12BA                     l6793:	
  3643                           
  3644                           ;main.c: 630:     adcbuff=adcbuff<<8;
  3645  12BA  0865               	movf	(_adcbuff+1)^(0+256),w
  3646  12BB  0021               	movlb	1	; select bank1
  3647  12BC  00A1               	movwf	(??_read_volt^(0+128)+1)
  3648  12BD  0022               	movlb	2	; select bank2
  3649  12BE  0864               	movf	_adcbuff^(0+256),w
  3650  12BF  0021               	movlb	1	; select bank1
  3651  12C0  00A0               	movwf	??_read_volt^(0+128)
  3652  12C1  0820               	movf	??_read_volt^(0+128),w
  3653  12C2  00A1               	movwf	(??_read_volt^(0+128)+1)
  3654  12C3  01A0               	clrf	??_read_volt^(0+128)
  3655  12C4  0820               	movf	??_read_volt^(0+128),w
  3656  12C5  0022               	movlb	2	; select bank2
  3657  12C6  00E4               	movwf	_adcbuff^(0+256)
  3658  12C7  0021               	movlb	1	; select bank1
  3659  12C8  0821               	movf	(??_read_volt+1)^(0+128),w
  3660  12C9  0022               	movlb	2	; select bank2
  3661  12CA  00E5               	movwf	(_adcbuff+1)^(0+256)
  3662  12CB                     l6795:	
  3663                           
  3664                           ;main.c: 631:     adcbuff=adcbuff|ADRESL;
  3665  12CB  0864               	movf	_adcbuff^(0+256),w
  3666  12CC  0021               	movlb	1	; select bank1
  3667  12CD  041B               	iorwf	27,w	;volatile
  3668  12CE  00A0               	movwf	??_read_volt^(0+128)
  3669  12CF  0022               	movlb	2	; select bank2
  3670  12D0  0865               	movf	(_adcbuff+1)^(0+256),w
  3671  12D1  0021               	movlb	1	; select bank1
  3672  12D2  00A1               	movwf	(??_read_volt+1)^(0+128)
  3673  12D3  0820               	movf	??_read_volt^(0+128),w
  3674  12D4  0022               	movlb	2	; select bank2
  3675  12D5  00E4               	movwf	_adcbuff^(0+256)
  3676  12D6  0021               	movlb	1	; select bank1
  3677  12D7  0821               	movf	(??_read_volt+1)^(0+128),w
  3678  12D8  0022               	movlb	2	; select bank2
  3679  12D9  00E5               	movwf	(_adcbuff+1)^(0+256)
  3680  12DA                     l6797:	
  3681                           
  3682                           ;main.c: 633:     v2=adcbuff;
  3683  12DA  0864               	movf	_adcbuff^(0+256),w
  3684  12DB  00F1               	movwf	___xxtofl@val
  3685  12DC  0865               	movf	(_adcbuff+1)^(0+256),w
  3686  12DD  00F2               	movwf	___xxtofl@val+1
  3687  12DE  0D89               	rlf	9,f
  3688  12DF  3B89               	subwfb	9,f
  3689  12E0  0989               	comf	9,f
  3690  12E1  00F3               	movwf	___xxtofl@val+2
  3691  12E2  00F4               	movwf	___xxtofl@val+3
  3692  12E3  3001               	movlw	1
  3693  12E4  319A  22A5  3191   	fcall	___xxtofl
  3694  12E7  0874               	movf	?___xxtofl+3,w
  3695  12E8  0022               	movlb	2	; select bank2
  3696  12E9  00DB               	movwf	(_v2+3)^(0+256)
  3697  12EA  0873               	movf	?___xxtofl+2,w
  3698  12EB  00DA               	movwf	(_v2+2)^(0+256)
  3699  12EC  0872               	movf	?___xxtofl+1,w
  3700  12ED  00D9               	movwf	(_v2+1)^(0+256)
  3701  12EE  0871               	movf	?___xxtofl,w
  3702  12EF  00D8               	movwf	_v2^(0+256)
  3703  12F0                     l6799:	
  3704                           
  3705                           ;main.c: 634:     v2=((v2*5/1023)*1298)+285;
  3706  12F0  3044               	movlw	68
  3707  12F1  0020               	movlb	0	; select bank0
  3708  12F2  00C3               	movwf	___fldiv@a+3
  3709  12F3  307F               	movlw	127
  3710  12F4  00C2               	movwf	___fldiv@a+2
  3711  12F5  30C0               	movlw	192
  3712  12F6  00C1               	movwf	___fldiv@a+1
  3713  12F7  3000               	movlw	0
  3714  12F8  00C0               	movwf	___fldiv@a
  3715  12F9  3040               	movlw	64
  3716  12FA  00A9               	movwf	___flmul@b+3
  3717  12FB  30A0               	movlw	160
  3718  12FC  00A8               	movwf	___flmul@b+2
  3719  12FD  3000               	movlw	0
  3720  12FE  00A7               	movwf	___flmul@b+1
  3721  12FF  3000               	movlw	0
  3722  1300  00A6               	movwf	___flmul@b
  3723  1301  0022               	movlb	2	; select bank2
  3724  1302  085B               	movf	(_v2+3)^(0+256),w
  3725  1303  0020               	movlb	0	; select bank0
  3726  1304  00AD               	movwf	___flmul@a+3
  3727  1305  0022               	movlb	2	; select bank2
  3728  1306  085A               	movf	(_v2+2)^(0+256),w
  3729  1307  0020               	movlb	0	; select bank0
  3730  1308  00AC               	movwf	___flmul@a+2
  3731  1309  0022               	movlb	2	; select bank2
  3732  130A  0859               	movf	(_v2+1)^(0+256),w
  3733  130B  0020               	movlb	0	; select bank0
  3734  130C  00AB               	movwf	___flmul@a+1
  3735  130D  0022               	movlb	2	; select bank2
  3736  130E  0858               	movf	_v2^(0+256),w
  3737  130F  0020               	movlb	0	; select bank0
  3738  1310  00AA               	movwf	___flmul@a
  3739  1311  3195  25A9  3191   	fcall	___flmul
  3740  1314  0020               	movlb	0	; select bank0
  3741  1315  0829               	movf	?___flmul+3,w
  3742  1316  00C7               	movwf	___fldiv@b+3
  3743  1317  0828               	movf	?___flmul+2,w
  3744  1318  00C6               	movwf	___fldiv@b+2
  3745  1319  0827               	movf	?___flmul+1,w
  3746  131A  00C5               	movwf	___fldiv@b+1
  3747  131B  0826               	movf	?___flmul,w
  3748  131C  00C4               	movwf	___fldiv@b
  3749  131D  3188  2016  3191   	fcall	___fldiv
  3750  1320  0020               	movlb	0	; select bank0
  3751  1321  0843               	movf	?___fldiv+3,w
  3752  1322  0021               	movlb	1	; select bank1
  3753  1323  00A6               	movwf	(_read_volt$1260+3)^(0+128)
  3754  1324  0020               	movlb	0	; select bank0
  3755  1325  0842               	movf	?___fldiv+2,w
  3756  1326  0021               	movlb	1	; select bank1
  3757  1327  00A5               	movwf	(_read_volt$1260+2)^(0+128)
  3758  1328  0020               	movlb	0	; select bank0
  3759  1329  0841               	movf	?___fldiv+1,w
  3760  132A  0021               	movlb	1	; select bank1
  3761  132B  00A4               	movwf	(_read_volt$1260+1)^(0+128)
  3762  132C  0020               	movlb	0	; select bank0
  3763  132D  0840               	movf	?___fldiv,w
  3764  132E  0021               	movlb	1	; select bank1
  3765  132F  00A3               	movwf	_read_volt$1260^(0+128)
  3766  1330                     l6801:	
  3767                           
  3768                           ;main.c: 634:     v2=((v2*5/1023)*1298)+285;
  3769  1330  3043               	movlw	67
  3770  1331  0020               	movlb	0	; select bank0
  3771  1332  00DD               	movwf	___fladd@b+3
  3772  1333  308E               	movlw	142
  3773  1334  00DC               	movwf	___fladd@b+2
  3774  1335  3080               	movlw	128
  3775  1336  00DB               	movwf	___fladd@b+1
  3776  1337  3000               	movlw	0
  3777  1338  00DA               	movwf	___fladd@b
  3778  1339  3044               	movlw	68
  3779  133A  00A9               	movwf	___flmul@b+3
  3780  133B  30A2               	movlw	162
  3781  133C  00A8               	movwf	___flmul@b+2
  3782  133D  3040               	movlw	64
  3783  133E  00A7               	movwf	___flmul@b+1
  3784  133F  3000               	movlw	0
  3785  1340  00A6               	movwf	___flmul@b
  3786  1341  0021               	movlb	1	; select bank1
  3787  1342  0826               	movf	(_read_volt$1260+3)^(0+128),w
  3788  1343  0020               	movlb	0	; select bank0
  3789  1344  00AD               	movwf	___flmul@a+3
  3790  1345  0021               	movlb	1	; select bank1
  3791  1346  0825               	movf	(_read_volt$1260+2)^(0+128),w
  3792  1347  0020               	movlb	0	; select bank0
  3793  1348  00AC               	movwf	___flmul@a+2
  3794  1349  0021               	movlb	1	; select bank1
  3795  134A  0824               	movf	(_read_volt$1260+1)^(0+128),w
  3796  134B  0020               	movlb	0	; select bank0
  3797  134C  00AB               	movwf	___flmul@a+1
  3798  134D  0021               	movlb	1	; select bank1
  3799  134E  0823               	movf	_read_volt$1260^(0+128),w
  3800  134F  0020               	movlb	0	; select bank0
  3801  1350  00AA               	movwf	___flmul@a
  3802  1351  3195  25A9  3191   	fcall	___flmul
  3803  1354  0020               	movlb	0	; select bank0
  3804  1355  0829               	movf	?___flmul+3,w
  3805  1356  00E1               	movwf	___fladd@a+3
  3806  1357  0828               	movf	?___flmul+2,w
  3807  1358  00E0               	movwf	___fladd@a+2
  3808  1359  0827               	movf	?___flmul+1,w
  3809  135A  00DF               	movwf	___fladd@a+1
  3810  135B  0826               	movf	?___flmul,w
  3811  135C  00DE               	movwf	___fladd@a
  3812  135D  3193  2371  3191   	fcall	___fladd
  3813  1360  0020               	movlb	0	; select bank0
  3814  1361  085D               	movf	?___fladd+3,w
  3815  1362  0022               	movlb	2	; select bank2
  3816  1363  00DB               	movwf	(_v2+3)^(0+256)
  3817  1364  0020               	movlb	0	; select bank0
  3818  1365  085C               	movf	?___fladd+2,w
  3819  1366  0022               	movlb	2	; select bank2
  3820  1367  00DA               	movwf	(_v2+2)^(0+256)
  3821  1368  0020               	movlb	0	; select bank0
  3822  1369  085B               	movf	?___fladd+1,w
  3823  136A  0022               	movlb	2	; select bank2
  3824  136B  00D9               	movwf	(_v2+1)^(0+256)
  3825  136C  0020               	movlb	0	; select bank0
  3826  136D  085A               	movf	?___fladd,w
  3827  136E  0022               	movlb	2	; select bank2
  3828  136F  00D8               	movwf	_v2^(0+256)
  3829  1370                     l311:	
  3830  1370  0008               	return
  3831  1371                     __end_of_read_volt:	
  3832                           
  3833                           	psect	text9
  3834  0CE2                     __ptext9:	
  3835 ;; *************** function _lcd_update *****************
  3836 ;; Defined at:
  3837 ;;		line 457 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  cmd             1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  cmd             1   51[BANK2 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;Total ram usage:        5 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   10
  3858 ;; This function calls:
  3859 ;;		___flge
  3860 ;;		___flsub
  3861 ;;		___fltol
  3862 ;;		_fabsf
  3863 ;;		_lcd_send_float1
  3864 ;;		_lcd_send_int
  3865 ;;		_lcd_send_string
  3866 ;;		_lcd_set_pos
  3867 ;; This function is called by:
  3868 ;;		_pwm_con
  3869 ;;		_process_loop
  3870 ;;		_maintenance
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _lcd_update
  3877  0CE2                     _lcd_update:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _lcd_update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3881                           ;lcd_update@cmd stored from wreg
  3882  0CE2  0022               	movlb	2	; select bank2
  3883  0CE3  00D3               	movwf	lcd_update@cmd^(0+256)
  3884  0CE4                     l6639:	
  3885                           
  3886                           ;main.c: 457: void lcd_update(char cmd);main.c: 458: {;main.c: 460:     switch (cmd)
  3887  0CE4  2FE9               	goto	l6749
  3888  0CE5                     l6641:	
  3889                           
  3890                           ;main.c: 465:             diff=fabsf(v2-last_v2);
  3891  0CE5  0023               	movlb	3	; select bank3
  3892  0CE6  084F               	movf	(_last_v2+3)^(0+384),w
  3893  0CE7  0021               	movlb	1	; select bank1
  3894  0CE8  00A3               	movwf	(___flsub@a+3)^(0+128)
  3895  0CE9  0023               	movlb	3	; select bank3
  3896  0CEA  084E               	movf	(_last_v2+2)^(0+384),w
  3897  0CEB  0021               	movlb	1	; select bank1
  3898  0CEC  00A2               	movwf	(___flsub@a+2)^(0+128)
  3899  0CED  0023               	movlb	3	; select bank3
  3900  0CEE  084D               	movf	(_last_v2+1)^(0+384),w
  3901  0CEF  0021               	movlb	1	; select bank1
  3902  0CF0  00A1               	movwf	(___flsub@a+1)^(0+128)
  3903  0CF1  0023               	movlb	3	; select bank3
  3904  0CF2  084C               	movf	_last_v2^(0+384),w
  3905  0CF3  0021               	movlb	1	; select bank1
  3906  0CF4  00A0               	movwf	___flsub@a^(0+128)
  3907  0CF5  0022               	movlb	2	; select bank2
  3908  0CF6  085B               	movf	(_v2+3)^(0+256),w
  3909  0CF7  0021               	movlb	1	; select bank1
  3910  0CF8  00A7               	movwf	(___flsub@b+3)^(0+128)
  3911  0CF9  0022               	movlb	2	; select bank2
  3912  0CFA  085A               	movf	(_v2+2)^(0+256),w
  3913  0CFB  0021               	movlb	1	; select bank1
  3914  0CFC  00A6               	movwf	(___flsub@b+2)^(0+128)
  3915  0CFD  0022               	movlb	2	; select bank2
  3916  0CFE  0859               	movf	(_v2+1)^(0+256),w
  3917  0CFF  0021               	movlb	1	; select bank1
  3918  0D00  00A5               	movwf	(___flsub@b+1)^(0+128)
  3919  0D01  0022               	movlb	2	; select bank2
  3920  0D02  0858               	movf	_v2^(0+256),w
  3921  0D03  0021               	movlb	1	; select bank1
  3922  0D04  00A4               	movwf	___flsub@b^(0+128)
  3923  0D05  3187  27BF  318C   	fcall	___flsub
  3924  0D08  0021               	movlb	1	; select bank1
  3925  0D09  0823               	movf	(?___flsub+3)^(0+128),w
  3926  0D0A  00AB               	movwf	(fabsf@x+3)^(0+128)
  3927  0D0B  0822               	movf	(?___flsub+2)^(0+128),w
  3928  0D0C  00AA               	movwf	(fabsf@x+2)^(0+128)
  3929  0D0D  0821               	movf	(?___flsub+1)^(0+128),w
  3930  0D0E  00A9               	movwf	(fabsf@x+1)^(0+128)
  3931  0D0F  0820               	movf	?___flsub^(0+128),w
  3932  0D10  00A8               	movwf	fabsf@x^(0+128)
  3933  0D11  31A2  2276  318C   	fcall	_fabsf
  3934  0D14  0021               	movlb	1	; select bank1
  3935  0D15  082B               	movf	(?_fabsf+3)^(0+128),w
  3936  0D16  0023               	movlb	3	; select bank3
  3937  0D17  00AF               	movwf	(_diff+3)^(0+384)
  3938  0D18  0021               	movlb	1	; select bank1
  3939  0D19  082A               	movf	(?_fabsf+2)^(0+128),w
  3940  0D1A  0023               	movlb	3	; select bank3
  3941  0D1B  00AE               	movwf	(_diff+2)^(0+384)
  3942  0D1C  0021               	movlb	1	; select bank1
  3943  0D1D  0829               	movf	(?_fabsf+1)^(0+128),w
  3944  0D1E  0023               	movlb	3	; select bank3
  3945  0D1F  00AD               	movwf	(_diff+1)^(0+384)
  3946  0D20  0021               	movlb	1	; select bank1
  3947  0D21  0828               	movf	?_fabsf^(0+128),w
  3948  0D22  0023               	movlb	3	; select bank3
  3949  0D23  00AC               	movwf	_diff^(0+384)
  3950                           
  3951                           ;main.c: 467:             if (diff>10)
  3952  0D24  3041               	movlw	65
  3953  0D25  0020               	movlb	0	; select bank0
  3954  0D26  00C3               	movwf	___flge@ff1+3
  3955  0D27  3020               	movlw	32
  3956  0D28  00C2               	movwf	___flge@ff1+2
  3957  0D29  3000               	movlw	0
  3958  0D2A  00C1               	movwf	___flge@ff1+1
  3959  0D2B  3000               	movlw	0
  3960  0D2C  00C0               	movwf	___flge@ff1
  3961  0D2D  0023               	movlb	3	; select bank3
  3962  0D2E  082F               	movf	(_diff+3)^(0+384),w
  3963  0D2F  0020               	movlb	0	; select bank0
  3964  0D30  00C7               	movwf	___flge@ff2+3
  3965  0D31  0023               	movlb	3	; select bank3
  3966  0D32  082E               	movf	(_diff+2)^(0+384),w
  3967  0D33  0020               	movlb	0	; select bank0
  3968  0D34  00C6               	movwf	___flge@ff2+2
  3969  0D35  0023               	movlb	3	; select bank3
  3970  0D36  082D               	movf	(_diff+1)^(0+384),w
  3971  0D37  0020               	movlb	0	; select bank0
  3972  0D38  00C5               	movwf	___flge@ff2+1
  3973  0D39  0023               	movlb	3	; select bank3
  3974  0D3A  082C               	movf	_diff^(0+384),w
  3975  0D3B  0020               	movlb	0	; select bank0
  3976  0D3C  00C4               	movwf	___flge@ff2
  3977  0D3D  3199  2189  318C   	fcall	___flge
  3978  0D40  1803               	btfsc	3,0
  3979  0D41  2D43               	goto	u8881
  3980  0D42  2D44               	goto	u8880
  3981  0D43                     u8881:	
  3982  0D43  2DEC               	goto	l6673
  3983  0D44                     u8880:	
  3984  0D44                     l6643:	
  3985                           
  3986                           ;main.c: 468:             {;main.c: 469:             lcd_set_pos(0x48);
  3987  0D44  3048               	movlw	72
  3988  0D45  00F4               	movwf	lcd_set_pos@pos
  3989  0D46  3000               	movlw	0
  3990  0D47  00F5               	movwf	lcd_set_pos@pos+1
  3991  0D48  31A0  20CF  318C   	fcall	_lcd_set_pos
  3992                           
  3993                           ;main.c: 470:                 if (v2>999.9){
  3994  0D4B  3044               	movlw	68
  3995  0D4C  0020               	movlb	0	; select bank0
  3996  0D4D  00C3               	movwf	___flge@ff1+3
  3997  0D4E  3079               	movlw	121
  3998  0D4F  00C2               	movwf	___flge@ff1+2
  3999  0D50  30F9               	movlw	249
  4000  0D51  00C1               	movwf	___flge@ff1+1
  4001  0D52  309A               	movlw	154
  4002  0D53  00C0               	movwf	___flge@ff1
  4003  0D54  0022               	movlb	2	; select bank2
  4004  0D55  085B               	movf	(_v2+3)^(0+256),w
  4005  0D56  0020               	movlb	0	; select bank0
  4006  0D57  00C7               	movwf	___flge@ff2+3
  4007  0D58  0022               	movlb	2	; select bank2
  4008  0D59  085A               	movf	(_v2+2)^(0+256),w
  4009  0D5A  0020               	movlb	0	; select bank0
  4010  0D5B  00C6               	movwf	___flge@ff2+2
  4011  0D5C  0022               	movlb	2	; select bank2
  4012  0D5D  0859               	movf	(_v2+1)^(0+256),w
  4013  0D5E  0020               	movlb	0	; select bank0
  4014  0D5F  00C5               	movwf	___flge@ff2+1
  4015  0D60  0022               	movlb	2	; select bank2
  4016  0D61  0858               	movf	_v2^(0+256),w
  4017  0D62  0020               	movlb	0	; select bank0
  4018  0D63  00C4               	movwf	___flge@ff2
  4019  0D64  3199  2189  318C   	fcall	___flge
  4020  0D67  1803               	btfsc	3,0
  4021  0D68  2D6A               	goto	u8891
  4022  0D69  2D6B               	goto	u8890
  4023  0D6A                     u8891:	
  4024  0D6A  2D84               	goto	l6649
  4025  0D6B                     u8890:	
  4026  0D6B                     l6645:	
  4027                           
  4028                           ;main.c: 472:                     lcd_send_int((int)v2);
  4029  0D6B  0022               	movlb	2	; select bank2
  4030  0D6C  085B               	movf	(_v2+3)^(0+256),w
  4031  0D6D  00F4               	movwf	___fltol@f1+3
  4032  0D6E  085A               	movf	(_v2+2)^(0+256),w
  4033  0D6F  00F3               	movwf	___fltol@f1+2
  4034  0D70  0859               	movf	(_v2+1)^(0+256),w
  4035  0D71  00F2               	movwf	___fltol@f1+1
  4036  0D72  0858               	movf	_v2^(0+256),w
  4037  0D73  00F1               	movwf	___fltol@f1
  4038  0D74  3198  2096  318C   	fcall	___fltol
  4039  0D77  0872               	movf	?___fltol+1,w
  4040  0D78  0022               	movlb	2	; select bank2
  4041  0D79  00D5               	movwf	(_lcd_update$1259+1)^(0+256)
  4042  0D7A  0871               	movf	?___fltol,w
  4043  0D7B  00D4               	movwf	_lcd_update$1259^(0+256)
  4044  0D7C                     l6647:	
  4045                           
  4046                           ;main.c: 472:                     lcd_send_int((int)v2);
  4047  0D7C  0855               	movf	(_lcd_update$1259+1)^(0+256),w
  4048  0D7D  00CE               	movwf	(lcd_send_int@data+1)^(0+256)
  4049  0D7E  0854               	movf	_lcd_update$1259^(0+256),w
  4050  0D7F  00CD               	movwf	lcd_send_int@data^(0+256)
  4051  0D80  3188  2001  318C   	fcall	_lcd_send_int
  4052                           
  4053                           ;main.c: 473:                 }
  4054  0D83  2DDC               	goto	l6671
  4055  0D84                     l6649:	
  4056  0D84  3042               	movlw	66
  4057  0D85  0020               	movlb	0	; select bank0
  4058  0D86  00C3               	movwf	___flge@ff1+3
  4059  0D87  30C7               	movlw	199
  4060  0D88  00C2               	movwf	___flge@ff1+2
  4061  0D89  30CC               	movlw	204
  4062  0D8A  00C1               	movwf	___flge@ff1+1
  4063  0D8B  30CD               	movlw	205
  4064  0D8C  00C0               	movwf	___flge@ff1
  4065  0D8D  0022               	movlb	2	; select bank2
  4066  0D8E  085B               	movf	(_v2+3)^(0+256),w
  4067  0D8F  0020               	movlb	0	; select bank0
  4068  0D90  00C7               	movwf	___flge@ff2+3
  4069  0D91  0022               	movlb	2	; select bank2
  4070  0D92  085A               	movf	(_v2+2)^(0+256),w
  4071  0D93  0020               	movlb	0	; select bank0
  4072  0D94  00C6               	movwf	___flge@ff2+2
  4073  0D95  0022               	movlb	2	; select bank2
  4074  0D96  0859               	movf	(_v2+1)^(0+256),w
  4075  0D97  0020               	movlb	0	; select bank0
  4076  0D98  00C5               	movwf	___flge@ff2+1
  4077  0D99  0022               	movlb	2	; select bank2
  4078  0D9A  0858               	movf	_v2^(0+256),w
  4079  0D9B  0020               	movlb	0	; select bank0
  4080  0D9C  00C4               	movwf	___flge@ff2
  4081  0D9D  3199  2189  318C   	fcall	___flge
  4082  0DA0  1803               	btfsc	3,0
  4083  0DA1  2DA3               	goto	u8901
  4084  0DA2  2DA4               	goto	u8900
  4085  0DA3                     u8901:	
  4086  0DA3  2DAC               	goto	l6657
  4087  0DA4                     u8900:	
  4088  0DA4                     l6651:	
  4089                           
  4090                           ;main.c: 475:                     lcd_send_string(" ");
  4091  0DA4  3004               	movlw	low ((STR_11+4)| (0+32768))
  4092  0DA5  00F4               	movwf	lcd_send_string@s
  4093  0DA6  30A8               	movlw	high ((STR_11+4)| (0+32768))
  4094  0DA7  00F5               	movwf	lcd_send_string@s+1
  4095  0DA8  31A1  21AF  318C   	fcall	_lcd_send_string
  4096  0DAB  2D6B               	goto	l6645
  4097  0DAC                     l6657:	
  4098  0DAC  3041               	movlw	65
  4099  0DAD  0020               	movlb	0	; select bank0
  4100  0DAE  00C3               	movwf	___flge@ff1+3
  4101  0DAF  301E               	movlw	30
  4102  0DB0  00C2               	movwf	___flge@ff1+2
  4103  0DB1  3066               	movlw	102
  4104  0DB2  00C1               	movwf	___flge@ff1+1
  4105  0DB3  3066               	movlw	102
  4106  0DB4  00C0               	movwf	___flge@ff1
  4107  0DB5  0022               	movlb	2	; select bank2
  4108  0DB6  085B               	movf	(_v2+3)^(0+256),w
  4109  0DB7  0020               	movlb	0	; select bank0
  4110  0DB8  00C7               	movwf	___flge@ff2+3
  4111  0DB9  0022               	movlb	2	; select bank2
  4112  0DBA  085A               	movf	(_v2+2)^(0+256),w
  4113  0DBB  0020               	movlb	0	; select bank0
  4114  0DBC  00C6               	movwf	___flge@ff2+2
  4115  0DBD  0022               	movlb	2	; select bank2
  4116  0DBE  0859               	movf	(_v2+1)^(0+256),w
  4117  0DBF  0020               	movlb	0	; select bank0
  4118  0DC0  00C5               	movwf	___flge@ff2+1
  4119  0DC1  0022               	movlb	2	; select bank2
  4120  0DC2  0858               	movf	_v2^(0+256),w
  4121  0DC3  0020               	movlb	0	; select bank0
  4122  0DC4  00C4               	movwf	___flge@ff2
  4123  0DC5  3199  2189  318C   	fcall	___flge
  4124  0DC8  1803               	btfsc	3,0
  4125  0DC9  2DCB               	goto	u8911
  4126  0DCA  2DCC               	goto	u8910
  4127  0DCB                     u8911:	
  4128  0DCB  2DD4               	goto	l6665
  4129  0DCC                     u8910:	
  4130  0DCC                     l6659:	
  4131                           
  4132                           ;main.c: 479:                     lcd_send_string("  ");
  4133  0DCC  3003               	movlw	low ((STR_11+3)| (0+32768))
  4134  0DCD  00F4               	movwf	lcd_send_string@s
  4135  0DCE  30A8               	movlw	high ((STR_11+3)| (0+32768))
  4136  0DCF  00F5               	movwf	lcd_send_string@s+1
  4137  0DD0  31A1  21AF  318C   	fcall	_lcd_send_string
  4138  0DD3  2D6B               	goto	l6645
  4139  0DD4                     l6665:	
  4140                           
  4141                           ;main.c: 483:                     lcd_send_string("    ");
  4142  0DD4  3001               	movlw	low ((STR_11+1)| (0+32768))
  4143  0DD5  00F4               	movwf	lcd_send_string@s
  4144  0DD6  30A8               	movlw	high ((STR_11+1)| (0+32768))
  4145  0DD7  00F5               	movwf	lcd_send_string@s+1
  4146  0DD8  31A1  21AF  318C   	fcall	_lcd_send_string
  4147  0DDB  2D6B               	goto	l6645
  4148  0DDC                     l6671:	
  4149                           
  4150                           ;main.c: 486:                 last_v2=v2;
  4151  0DDC  0022               	movlb	2	; select bank2
  4152  0DDD  085B               	movf	(_v2+3)^(0+256),w
  4153  0DDE  0023               	movlb	3	; select bank3
  4154  0DDF  00CF               	movwf	(_last_v2+3)^(0+384)
  4155  0DE0  0022               	movlb	2	; select bank2
  4156  0DE1  085A               	movf	(_v2+2)^(0+256),w
  4157  0DE2  0023               	movlb	3	; select bank3
  4158  0DE3  00CE               	movwf	(_last_v2+2)^(0+384)
  4159  0DE4  0022               	movlb	2	; select bank2
  4160  0DE5  0859               	movf	(_v2+1)^(0+256),w
  4161  0DE6  0023               	movlb	3	; select bank3
  4162  0DE7  00CD               	movwf	(_last_v2+1)^(0+384)
  4163  0DE8  0022               	movlb	2	; select bank2
  4164  0DE9  0858               	movf	_v2^(0+256),w
  4165  0DEA  0023               	movlb	3	; select bank3
  4166  0DEB  00CC               	movwf	_last_v2^(0+384)
  4167  0DEC                     l6673:	
  4168                           
  4169                           ;main.c: 491:             diff=fabsf(v1-last_v1);
  4170  0DEC  0023               	movlb	3	; select bank3
  4171  0DED  0853               	movf	(_last_v1+3)^(0+384),w
  4172  0DEE  0021               	movlb	1	; select bank1
  4173  0DEF  00A3               	movwf	(___flsub@a+3)^(0+128)
  4174  0DF0  0023               	movlb	3	; select bank3
  4175  0DF1  0852               	movf	(_last_v1+2)^(0+384),w
  4176  0DF2  0021               	movlb	1	; select bank1
  4177  0DF3  00A2               	movwf	(___flsub@a+2)^(0+128)
  4178  0DF4  0023               	movlb	3	; select bank3
  4179  0DF5  0851               	movf	(_last_v1+1)^(0+384),w
  4180  0DF6  0021               	movlb	1	; select bank1
  4181  0DF7  00A1               	movwf	(___flsub@a+1)^(0+128)
  4182  0DF8  0023               	movlb	3	; select bank3
  4183  0DF9  0850               	movf	_last_v1^(0+384),w
  4184  0DFA  0021               	movlb	1	; select bank1
  4185  0DFB  00A0               	movwf	___flsub@a^(0+128)
  4186  0DFC  0022               	movlb	2	; select bank2
  4187  0DFD  085F               	movf	(_v1+3)^(0+256),w
  4188  0DFE  0021               	movlb	1	; select bank1
  4189  0DFF  00A7               	movwf	(___flsub@b+3)^(0+128)
  4190  0E00  0022               	movlb	2	; select bank2
  4191  0E01  085E               	movf	(_v1+2)^(0+256),w
  4192  0E02  0021               	movlb	1	; select bank1
  4193  0E03  00A6               	movwf	(___flsub@b+2)^(0+128)
  4194  0E04  0022               	movlb	2	; select bank2
  4195  0E05  085D               	movf	(_v1+1)^(0+256),w
  4196  0E06  0021               	movlb	1	; select bank1
  4197  0E07  00A5               	movwf	(___flsub@b+1)^(0+128)
  4198  0E08  0022               	movlb	2	; select bank2
  4199  0E09  085C               	movf	_v1^(0+256),w
  4200  0E0A  0021               	movlb	1	; select bank1
  4201  0E0B  00A4               	movwf	___flsub@b^(0+128)
  4202  0E0C  3187  27BF  318C   	fcall	___flsub
  4203  0E0F  0021               	movlb	1	; select bank1
  4204  0E10  0823               	movf	(?___flsub+3)^(0+128),w
  4205  0E11  00AB               	movwf	(fabsf@x+3)^(0+128)
  4206  0E12  0822               	movf	(?___flsub+2)^(0+128),w
  4207  0E13  00AA               	movwf	(fabsf@x+2)^(0+128)
  4208  0E14  0821               	movf	(?___flsub+1)^(0+128),w
  4209  0E15  00A9               	movwf	(fabsf@x+1)^(0+128)
  4210  0E16  0820               	movf	?___flsub^(0+128),w
  4211  0E17  00A8               	movwf	fabsf@x^(0+128)
  4212  0E18  31A2  2276  318C   	fcall	_fabsf
  4213  0E1B  0021               	movlb	1	; select bank1
  4214  0E1C  082B               	movf	(?_fabsf+3)^(0+128),w
  4215  0E1D  0023               	movlb	3	; select bank3
  4216  0E1E  00AF               	movwf	(_diff+3)^(0+384)
  4217  0E1F  0021               	movlb	1	; select bank1
  4218  0E20  082A               	movf	(?_fabsf+2)^(0+128),w
  4219  0E21  0023               	movlb	3	; select bank3
  4220  0E22  00AE               	movwf	(_diff+2)^(0+384)
  4221  0E23  0021               	movlb	1	; select bank1
  4222  0E24  0829               	movf	(?_fabsf+1)^(0+128),w
  4223  0E25  0023               	movlb	3	; select bank3
  4224  0E26  00AD               	movwf	(_diff+1)^(0+384)
  4225  0E27  0021               	movlb	1	; select bank1
  4226  0E28  0828               	movf	?_fabsf^(0+128),w
  4227  0E29  0023               	movlb	3	; select bank3
  4228  0E2A  00AC               	movwf	_diff^(0+384)
  4229  0E2B                     l6675:	
  4230                           
  4231                           ;main.c: 492:             if (diff>0.1)
  4232  0E2B  303D               	movlw	61
  4233  0E2C  0020               	movlb	0	; select bank0
  4234  0E2D  00C3               	movwf	___flge@ff1+3
  4235  0E2E  30CC               	movlw	204
  4236  0E2F  00C2               	movwf	___flge@ff1+2
  4237  0E30  30CC               	movlw	204
  4238  0E31  00C1               	movwf	___flge@ff1+1
  4239  0E32  30CD               	movlw	205
  4240  0E33  00C0               	movwf	___flge@ff1
  4241  0E34  0023               	movlb	3	; select bank3
  4242  0E35  082F               	movf	(_diff+3)^(0+384),w
  4243  0E36  0020               	movlb	0	; select bank0
  4244  0E37  00C7               	movwf	___flge@ff2+3
  4245  0E38  0023               	movlb	3	; select bank3
  4246  0E39  082E               	movf	(_diff+2)^(0+384),w
  4247  0E3A  0020               	movlb	0	; select bank0
  4248  0E3B  00C6               	movwf	___flge@ff2+2
  4249  0E3C  0023               	movlb	3	; select bank3
  4250  0E3D  082D               	movf	(_diff+1)^(0+384),w
  4251  0E3E  0020               	movlb	0	; select bank0
  4252  0E3F  00C5               	movwf	___flge@ff2+1
  4253  0E40  0023               	movlb	3	; select bank3
  4254  0E41  082C               	movf	_diff^(0+384),w
  4255  0E42  0020               	movlb	0	; select bank0
  4256  0E43  00C4               	movwf	___flge@ff2
  4257  0E44  3199  2189  318C   	fcall	___flge
  4258  0E47  1803               	btfsc	3,0
  4259  0E48  2E4A               	goto	u8921
  4260  0E49  2E4B               	goto	u8920
  4261  0E4A                     u8921:	
  4262  0E4A  2FFF               	goto	l302
  4263  0E4B                     u8920:	
  4264  0E4B                     l6677:	
  4265                           
  4266                           ;main.c: 493:             {;main.c: 494:                 lcd_set_pos(0x19);
  4267  0E4B  3019               	movlw	25
  4268  0E4C  00F4               	movwf	lcd_set_pos@pos
  4269  0E4D  3000               	movlw	0
  4270  0E4E  00F5               	movwf	lcd_set_pos@pos+1
  4271  0E4F  31A0  20CF  318C   	fcall	_lcd_set_pos
  4272                           
  4273                           ;main.c: 496:                 if (v1>9.9)
  4274  0E52  3041               	movlw	65
  4275  0E53  0020               	movlb	0	; select bank0
  4276  0E54  00C3               	movwf	___flge@ff1+3
  4277  0E55  301E               	movlw	30
  4278  0E56  00C2               	movwf	___flge@ff1+2
  4279  0E57  3066               	movlw	102
  4280  0E58  00C1               	movwf	___flge@ff1+1
  4281  0E59  3066               	movlw	102
  4282  0E5A  00C0               	movwf	___flge@ff1
  4283  0E5B  0022               	movlb	2	; select bank2
  4284  0E5C  085F               	movf	(_v1+3)^(0+256),w
  4285  0E5D  0020               	movlb	0	; select bank0
  4286  0E5E  00C7               	movwf	___flge@ff2+3
  4287  0E5F  0022               	movlb	2	; select bank2
  4288  0E60  085E               	movf	(_v1+2)^(0+256),w
  4289  0E61  0020               	movlb	0	; select bank0
  4290  0E62  00C6               	movwf	___flge@ff2+2
  4291  0E63  0022               	movlb	2	; select bank2
  4292  0E64  085D               	movf	(_v1+1)^(0+256),w
  4293  0E65  0020               	movlb	0	; select bank0
  4294  0E66  00C5               	movwf	___flge@ff2+1
  4295  0E67  0022               	movlb	2	; select bank2
  4296  0E68  085C               	movf	_v1^(0+256),w
  4297  0E69  0020               	movlb	0	; select bank0
  4298  0E6A  00C4               	movwf	___flge@ff2
  4299  0E6B  3199  2189  318C   	fcall	___flge
  4300  0E6E  1803               	btfsc	3,0
  4301  0E6F  2E71               	goto	u8931
  4302  0E70  2E72               	goto	u8930
  4303  0E71                     u8931:	
  4304  0E71  2E92               	goto	l6685
  4305  0E72                     u8930:	
  4306  0E72                     l6679:	
  4307                           
  4308                           ;main.c: 497:                 {;main.c: 498:                     lcd_send_string(" ");
  4309  0E72  3004               	movlw	low ((STR_11+4)| (0+32768))
  4310  0E73  00F4               	movwf	lcd_send_string@s
  4311  0E74  30A8               	movlw	high ((STR_11+4)| (0+32768))
  4312  0E75  00F5               	movwf	lcd_send_string@s+1
  4313  0E76  31A1  21AF  318C   	fcall	_lcd_send_string
  4314  0E79                     l6681:	
  4315                           
  4316                           ;main.c: 499:                     lcd_send_int((int)v1);
  4317  0E79  0022               	movlb	2	; select bank2
  4318  0E7A  085F               	movf	(_v1+3)^(0+256),w
  4319  0E7B  00F4               	movwf	___fltol@f1+3
  4320  0E7C  085E               	movf	(_v1+2)^(0+256),w
  4321  0E7D  00F3               	movwf	___fltol@f1+2
  4322  0E7E  085D               	movf	(_v1+1)^(0+256),w
  4323  0E7F  00F2               	movwf	___fltol@f1+1
  4324  0E80  085C               	movf	_v1^(0+256),w
  4325  0E81  00F1               	movwf	___fltol@f1
  4326  0E82  3198  2096  318C   	fcall	___fltol
  4327  0E85  0872               	movf	?___fltol+1,w
  4328  0E86  0022               	movlb	2	; select bank2
  4329  0E87  00D5               	movwf	(_lcd_update$1259+1)^(0+256)
  4330  0E88  0871               	movf	?___fltol,w
  4331  0E89  00D4               	movwf	_lcd_update$1259^(0+256)
  4332  0E8A                     l6683:	
  4333                           
  4334                           ;main.c: 499:                     lcd_send_int((int)v1);
  4335  0E8A  0855               	movf	(_lcd_update$1259+1)^(0+256),w
  4336  0E8B  00CE               	movwf	(lcd_send_int@data+1)^(0+256)
  4337  0E8C  0854               	movf	_lcd_update$1259^(0+256),w
  4338  0E8D  00CD               	movwf	lcd_send_int@data^(0+256)
  4339  0E8E  3188  2001  318C   	fcall	_lcd_send_int
  4340                           
  4341                           ;main.c: 500:                 }
  4342  0E91  2EBB               	goto	l6697
  4343  0E92                     l6685:	
  4344  0E92  3042               	movlw	66
  4345  0E93  0020               	movlb	0	; select bank0
  4346  0E94  00C3               	movwf	___flge@ff1+3
  4347  0E95  30C7               	movlw	199
  4348  0E96  00C2               	movwf	___flge@ff1+2
  4349  0E97  30CC               	movlw	204
  4350  0E98  00C1               	movwf	___flge@ff1+1
  4351  0E99  30CD               	movlw	205
  4352  0E9A  00C0               	movwf	___flge@ff1
  4353  0E9B  0022               	movlb	2	; select bank2
  4354  0E9C  085F               	movf	(_v1+3)^(0+256),w
  4355  0E9D  0020               	movlb	0	; select bank0
  4356  0E9E  00C7               	movwf	___flge@ff2+3
  4357  0E9F  0022               	movlb	2	; select bank2
  4358  0EA0  085E               	movf	(_v1+2)^(0+256),w
  4359  0EA1  0020               	movlb	0	; select bank0
  4360  0EA2  00C6               	movwf	___flge@ff2+2
  4361  0EA3  0022               	movlb	2	; select bank2
  4362  0EA4  085D               	movf	(_v1+1)^(0+256),w
  4363  0EA5  0020               	movlb	0	; select bank0
  4364  0EA6  00C5               	movwf	___flge@ff2+1
  4365  0EA7  0022               	movlb	2	; select bank2
  4366  0EA8  085C               	movf	_v1^(0+256),w
  4367  0EA9  0020               	movlb	0	; select bank0
  4368  0EAA  00C4               	movwf	___flge@ff2
  4369  0EAB  3199  2189  318C   	fcall	___flge
  4370  0EAE  1803               	btfsc	3,0
  4371  0EAF  2EB1               	goto	u8941
  4372  0EB0  2EB2               	goto	u8940
  4373  0EB1                     u8941:	
  4374  0EB1  2EB3               	goto	l6691
  4375  0EB2                     u8940:	
  4376  0EB2  2E79               	goto	l6681
  4377  0EB3                     l6691:	
  4378                           
  4379                           ;main.c: 507:                 {;main.c: 508:                     lcd_send_string("  ");
  4380  0EB3  3003               	movlw	low ((STR_11+3)| (0+32768))
  4381  0EB4  00F4               	movwf	lcd_send_string@s
  4382  0EB5  30A8               	movlw	high ((STR_11+3)| (0+32768))
  4383  0EB6  00F5               	movwf	lcd_send_string@s+1
  4384  0EB7  31A1  21AF  318C   	fcall	_lcd_send_string
  4385  0EBA  2E79               	goto	l6681
  4386  0EBB                     l6697:	
  4387                           
  4388                           ;main.c: 511:                 last_v1=v1;
  4389  0EBB  0022               	movlb	2	; select bank2
  4390  0EBC  085F               	movf	(_v1+3)^(0+256),w
  4391  0EBD  0023               	movlb	3	; select bank3
  4392  0EBE  00D3               	movwf	(_last_v1+3)^(0+384)
  4393  0EBF  0022               	movlb	2	; select bank2
  4394  0EC0  085E               	movf	(_v1+2)^(0+256),w
  4395  0EC1  0023               	movlb	3	; select bank3
  4396  0EC2  00D2               	movwf	(_last_v1+2)^(0+384)
  4397  0EC3  0022               	movlb	2	; select bank2
  4398  0EC4  085D               	movf	(_v1+1)^(0+256),w
  4399  0EC5  0023               	movlb	3	; select bank3
  4400  0EC6  00D1               	movwf	(_last_v1+1)^(0+384)
  4401  0EC7  0022               	movlb	2	; select bank2
  4402  0EC8  085C               	movf	_v1^(0+256),w
  4403  0EC9  0023               	movlb	3	; select bank3
  4404  0ECA  00D0               	movwf	_last_v1^(0+384)
  4405  0ECB  2FFF               	goto	l302
  4406  0ECC                     l6699:	
  4407                           
  4408                           ;main.c: 520:               diff=fabsf(last_frequency-frequency);
  4409  0ECC  0023               	movlb	3	; select bank3
  4410  0ECD  0833               	movf	(_frequency+3)^(0+384),w
  4411  0ECE  0021               	movlb	1	; select bank1
  4412  0ECF  00A3               	movwf	(___flsub@a+3)^(0+128)
  4413  0ED0  0023               	movlb	3	; select bank3
  4414  0ED1  0832               	movf	(_frequency+2)^(0+384),w
  4415  0ED2  0021               	movlb	1	; select bank1
  4416  0ED3  00A2               	movwf	(___flsub@a+2)^(0+128)
  4417  0ED4  0023               	movlb	3	; select bank3
  4418  0ED5  0831               	movf	(_frequency+1)^(0+384),w
  4419  0ED6  0021               	movlb	1	; select bank1
  4420  0ED7  00A1               	movwf	(___flsub@a+1)^(0+128)
  4421  0ED8  0023               	movlb	3	; select bank3
  4422  0ED9  0830               	movf	_frequency^(0+384),w
  4423  0EDA  0021               	movlb	1	; select bank1
  4424  0EDB  00A0               	movwf	___flsub@a^(0+128)
  4425  0EDC  0023               	movlb	3	; select bank3
  4426  0EDD  084B               	movf	(_last_frequency+3)^(0+384),w
  4427  0EDE  0021               	movlb	1	; select bank1
  4428  0EDF  00A7               	movwf	(___flsub@b+3)^(0+128)
  4429  0EE0  0023               	movlb	3	; select bank3
  4430  0EE1  084A               	movf	(_last_frequency+2)^(0+384),w
  4431  0EE2  0021               	movlb	1	; select bank1
  4432  0EE3  00A6               	movwf	(___flsub@b+2)^(0+128)
  4433  0EE4  0023               	movlb	3	; select bank3
  4434  0EE5  0849               	movf	(_last_frequency+1)^(0+384),w
  4435  0EE6  0021               	movlb	1	; select bank1
  4436  0EE7  00A5               	movwf	(___flsub@b+1)^(0+128)
  4437  0EE8  0023               	movlb	3	; select bank3
  4438  0EE9  0848               	movf	_last_frequency^(0+384),w
  4439  0EEA  0021               	movlb	1	; select bank1
  4440  0EEB  00A4               	movwf	___flsub@b^(0+128)
  4441  0EEC  3187  27BF  318C   	fcall	___flsub
  4442  0EEF  0021               	movlb	1	; select bank1
  4443  0EF0  0823               	movf	(?___flsub+3)^(0+128),w
  4444  0EF1  00AB               	movwf	(fabsf@x+3)^(0+128)
  4445  0EF2  0822               	movf	(?___flsub+2)^(0+128),w
  4446  0EF3  00AA               	movwf	(fabsf@x+2)^(0+128)
  4447  0EF4  0821               	movf	(?___flsub+1)^(0+128),w
  4448  0EF5  00A9               	movwf	(fabsf@x+1)^(0+128)
  4449  0EF6  0820               	movf	?___flsub^(0+128),w
  4450  0EF7  00A8               	movwf	fabsf@x^(0+128)
  4451  0EF8  31A2  2276  318C   	fcall	_fabsf
  4452  0EFB  0021               	movlb	1	; select bank1
  4453  0EFC  082B               	movf	(?_fabsf+3)^(0+128),w
  4454  0EFD  0023               	movlb	3	; select bank3
  4455  0EFE  00AF               	movwf	(_diff+3)^(0+384)
  4456  0EFF  0021               	movlb	1	; select bank1
  4457  0F00  082A               	movf	(?_fabsf+2)^(0+128),w
  4458  0F01  0023               	movlb	3	; select bank3
  4459  0F02  00AE               	movwf	(_diff+2)^(0+384)
  4460  0F03  0021               	movlb	1	; select bank1
  4461  0F04  0829               	movf	(?_fabsf+1)^(0+128),w
  4462  0F05  0023               	movlb	3	; select bank3
  4463  0F06  00AD               	movwf	(_diff+1)^(0+384)
  4464  0F07  0021               	movlb	1	; select bank1
  4465  0F08  0828               	movf	?_fabsf^(0+128),w
  4466  0F09  0023               	movlb	3	; select bank3
  4467  0F0A  00AC               	movwf	_diff^(0+384)
  4468                           
  4469                           ;main.c: 522:             if (diff>0.05)
  4470  0F0B  303D               	movlw	61
  4471  0F0C  0020               	movlb	0	; select bank0
  4472  0F0D  00C3               	movwf	___flge@ff1+3
  4473  0F0E  304C               	movlw	76
  4474  0F0F  00C2               	movwf	___flge@ff1+2
  4475  0F10  30CC               	movlw	204
  4476  0F11  00C1               	movwf	___flge@ff1+1
  4477  0F12  30CD               	movlw	205
  4478  0F13  00C0               	movwf	___flge@ff1
  4479  0F14  0023               	movlb	3	; select bank3
  4480  0F15  082F               	movf	(_diff+3)^(0+384),w
  4481  0F16  0020               	movlb	0	; select bank0
  4482  0F17  00C7               	movwf	___flge@ff2+3
  4483  0F18  0023               	movlb	3	; select bank3
  4484  0F19  082E               	movf	(_diff+2)^(0+384),w
  4485  0F1A  0020               	movlb	0	; select bank0
  4486  0F1B  00C6               	movwf	___flge@ff2+2
  4487  0F1C  0023               	movlb	3	; select bank3
  4488  0F1D  082D               	movf	(_diff+1)^(0+384),w
  4489  0F1E  0020               	movlb	0	; select bank0
  4490  0F1F  00C5               	movwf	___flge@ff2+1
  4491  0F20  0023               	movlb	3	; select bank3
  4492  0F21  082C               	movf	_diff^(0+384),w
  4493  0F22  0020               	movlb	0	; select bank0
  4494  0F23  00C4               	movwf	___flge@ff2
  4495  0F24  3199  2189  318C   	fcall	___flge
  4496  0F27  1803               	btfsc	3,0
  4497  0F28  2F2A               	goto	u8951
  4498  0F29  2F2B               	goto	u8950
  4499  0F2A                     u8951:	
  4500  0F2A  2FFF               	goto	l302
  4501  0F2B                     u8950:	
  4502  0F2B                     l6701:	
  4503                           
  4504                           ;main.c: 523:             {;main.c: 524:               lcd_set_pos(0x08);
  4505  0F2B  3008               	movlw	8
  4506  0F2C  00F4               	movwf	lcd_set_pos@pos
  4507  0F2D  3000               	movlw	0
  4508  0F2E  00F5               	movwf	lcd_set_pos@pos+1
  4509  0F2F  31A0  20CF  318C   	fcall	_lcd_set_pos
  4510  0F32                     l6703:	
  4511                           
  4512                           ;main.c: 525:               lcd_send_float1(frequency);
  4513  0F32  0023               	movlb	3	; select bank3
  4514  0F33  0833               	movf	(_frequency+3)^(0+384),w
  4515  0F34  0022               	movlb	2	; select bank2
  4516  0F35  00D0               	movwf	(lcd_send_float1@data+3)^(0+256)
  4517  0F36  0023               	movlb	3	; select bank3
  4518  0F37  0832               	movf	(_frequency+2)^(0+384),w
  4519  0F38  0022               	movlb	2	; select bank2
  4520  0F39  00CF               	movwf	(lcd_send_float1@data+2)^(0+256)
  4521  0F3A  0023               	movlb	3	; select bank3
  4522  0F3B  0831               	movf	(_frequency+1)^(0+384),w
  4523  0F3C  0022               	movlb	2	; select bank2
  4524  0F3D  00CE               	movwf	(lcd_send_float1@data+1)^(0+256)
  4525  0F3E  0023               	movlb	3	; select bank3
  4526  0F3F  0830               	movf	_frequency^(0+384),w
  4527  0F40  0022               	movlb	2	; select bank2
  4528  0F41  00CD               	movwf	lcd_send_float1@data^(0+256)
  4529  0F42  31A1  2162  318C   	fcall	_lcd_send_float1
  4530  0F45                     l6705:	
  4531                           
  4532                           ;main.c: 526:               last_frequency=frequency;
  4533  0F45  0023               	movlb	3	; select bank3
  4534  0F46  0833               	movf	(_frequency+3)^(0+384),w
  4535  0F47  00CB               	movwf	(_last_frequency+3)^(0+384)
  4536  0F48  0832               	movf	(_frequency+2)^(0+384),w
  4537  0F49  00CA               	movwf	(_last_frequency+2)^(0+384)
  4538  0F4A  0831               	movf	(_frequency+1)^(0+384),w
  4539  0F4B  00C9               	movwf	(_last_frequency+1)^(0+384)
  4540  0F4C  0830               	movf	_frequency^(0+384),w
  4541  0F4D  00C8               	movwf	_last_frequency^(0+384)
  4542  0F4E  2FFF               	goto	l302
  4543  0F4F                     l6707:	
  4544                           
  4545                           ;main.c: 533:             lcd_set_pos(0x59);
  4546  0F4F  3059               	movlw	89
  4547  0F50  00F4               	movwf	lcd_set_pos@pos
  4548  0F51  3000               	movlw	0
  4549  0F52  00F5               	movwf	lcd_set_pos@pos+1
  4550  0F53  31A0  20CF  318C   	fcall	_lcd_set_pos
  4551  0F56                     l6709:	
  4552                           
  4553                           ;main.c: 535:             if (pwm_lvl>9){
  4554  0F56  0022               	movlb	2	; select bank2
  4555  0F57  0867               	movf	(_pwm_lvl+1)^(0+256),w
  4556  0F58  3A80               	xorlw	128
  4557  0F59  00D1               	movwf	??_lcd_update^(0+256)
  4558  0F5A  3080               	movlw	128
  4559  0F5B  0251               	subwf	??_lcd_update^(0+256),w
  4560  0F5C  1D03               	skipz
  4561  0F5D  2F60               	goto	u8965
  4562  0F5E  300A               	movlw	10
  4563  0F5F  0266               	subwf	_pwm_lvl^(0+256),w
  4564  0F60                     u8965:	
  4565  0F60  1C03               	skipc
  4566  0F61  2F63               	goto	u8961
  4567  0F62  2F64               	goto	u8960
  4568  0F63                     u8961:	
  4569  0F63  2F74               	goto	l6715
  4570  0F64                     u8960:	
  4571  0F64                     l6711:	
  4572                           
  4573                           ;main.c: 536:                 lcd_send_string(" ");
  4574  0F64  3004               	movlw	low ((STR_11+4)| (0+32768))
  4575  0F65  00F4               	movwf	lcd_send_string@s
  4576  0F66  30A8               	movlw	high ((STR_11+4)| (0+32768))
  4577  0F67  00F5               	movwf	lcd_send_string@s+1
  4578  0F68  31A1  21AF  318C   	fcall	_lcd_send_string
  4579  0F6B                     l6713:	
  4580                           
  4581                           ;main.c: 537:                 lcd_send_int(pwm_lvl);
  4582  0F6B  0022               	movlb	2	; select bank2
  4583  0F6C  0867               	movf	(_pwm_lvl+1)^(0+256),w
  4584  0F6D  00CE               	movwf	(lcd_send_int@data+1)^(0+256)
  4585  0F6E  0866               	movf	_pwm_lvl^(0+256),w
  4586  0F6F  00CD               	movwf	lcd_send_int@data^(0+256)
  4587  0F70  3188  2001  318C   	fcall	_lcd_send_int
  4588                           
  4589                           ;main.c: 538:             }
  4590  0F73  2FFF               	goto	l302
  4591  0F74                     l6715:	
  4592  0F74  0022               	movlb	2	; select bank2
  4593  0F75  0867               	movf	(_pwm_lvl+1)^(0+256),w
  4594  0F76  3A80               	xorlw	128
  4595  0F77  00D1               	movwf	??_lcd_update^(0+256)
  4596  0F78  3080               	movlw	128
  4597  0F79  0251               	subwf	??_lcd_update^(0+256),w
  4598  0F7A  1D03               	skipz
  4599  0F7B  2F7E               	goto	u8975
  4600  0F7C  3064               	movlw	100
  4601  0F7D  0266               	subwf	_pwm_lvl^(0+256),w
  4602  0F7E                     u8975:	
  4603  0F7E  1C03               	skipc
  4604  0F7F  2F81               	goto	u8971
  4605  0F80  2F82               	goto	u8970
  4606  0F81                     u8971:	
  4607  0F81  2F83               	goto	l6719
  4608  0F82                     u8970:	
  4609  0F82  2F6B               	goto	l6713
  4610  0F83                     l6719:	
  4611                           
  4612                           ;main.c: 544:             {;main.c: 545:                 lcd_send_string("  ");
  4613  0F83  3003               	movlw	low ((STR_11+3)| (0+32768))
  4614  0F84  00F4               	movwf	lcd_send_string@s
  4615  0F85  30A8               	movlw	high ((STR_11+3)| (0+32768))
  4616  0F86  00F5               	movwf	lcd_send_string@s+1
  4617  0F87  31A1  21AF  318C   	fcall	_lcd_send_string
  4618  0F8A  2F6B               	goto	l6713
  4619  0F8B                     l6723:	
  4620                           
  4621                           ;main.c: 553:             lcd_set_pos(0x08);
  4622  0F8B  3008               	movlw	8
  4623  0F8C  00F4               	movwf	lcd_set_pos@pos
  4624  0F8D  3000               	movlw	0
  4625  0F8E  00F5               	movwf	lcd_set_pos@pos+1
  4626  0F8F  31A0  20CF  318C   	fcall	_lcd_set_pos
  4627  0F92                     l6725:	
  4628                           
  4629                           ;main.c: 554:             lcd_send_string("00.0");
  4630  0F92  3036               	movlw	low (STR_29| (0+32768))
  4631  0F93  00F4               	movwf	lcd_send_string@s
  4632  0F94  30A8               	movlw	high (STR_29| (0+32768))
  4633  0F95  00F5               	movwf	lcd_send_string@s+1
  4634  0F96  31A1  21AF  318C   	fcall	_lcd_send_string
  4635  0F99                     l6727:	
  4636                           
  4637                           ;main.c: 555:             lcd_set_pos(0x48);
  4638  0F99  3048               	movlw	72
  4639  0F9A  00F4               	movwf	lcd_set_pos@pos
  4640  0F9B  3000               	movlw	0
  4641  0F9C  00F5               	movwf	lcd_set_pos@pos+1
  4642  0F9D  31A0  20CF  318C   	fcall	_lcd_set_pos
  4643                           
  4644                           ;main.c: 556:             lcd_send_string("0000");
  4645  0FA0  3040               	movlw	low (STR_30| (0+32768))
  4646  0FA1  00F4               	movwf	lcd_send_string@s
  4647  0FA2  30A8               	movlw	high (STR_30| (0+32768))
  4648  0FA3  00F5               	movwf	lcd_send_string@s+1
  4649  0FA4  31A1  21AF  318C   	fcall	_lcd_send_string
  4650  0FA7                     l6729:	
  4651                           
  4652                           ;main.c: 557:             lcd_set_pos(0x18);
  4653  0FA7  3018               	movlw	24
  4654  0FA8  00F4               	movwf	lcd_set_pos@pos
  4655  0FA9  3000               	movlw	0
  4656  0FAA  00F5               	movwf	lcd_set_pos@pos+1
  4657  0FAB  31A0  20CF  318C   	fcall	_lcd_set_pos
  4658  0FAE                     l6731:	
  4659                           
  4660                           ;main.c: 558:             lcd_send_string(" 000");
  4661  0FAE  303B               	movlw	low (STR_31| (0+32768))
  4662  0FAF  00F4               	movwf	lcd_send_string@s
  4663  0FB0  30A8               	movlw	high (STR_31| (0+32768))
  4664  0FB1  00F5               	movwf	lcd_send_string@s+1
  4665  0FB2  31A1  21AF  318C   	fcall	_lcd_send_string
  4666                           
  4667                           ;main.c: 562:             lcd_set_pos(0x59);
  4668  0FB5  3059               	movlw	89
  4669  0FB6  00F4               	movwf	lcd_set_pos@pos
  4670  0FB7  3000               	movlw	0
  4671  0FB8  00F5               	movwf	lcd_set_pos@pos+1
  4672  0FB9  31A0  20CF  318C   	fcall	_lcd_set_pos
  4673  0FBC                     l6733:	
  4674                           
  4675                           ;main.c: 563:             if (pwm_lvl>9){
  4676  0FBC  0022               	movlb	2	; select bank2
  4677  0FBD  0867               	movf	(_pwm_lvl+1)^(0+256),w
  4678  0FBE  3A80               	xorlw	128
  4679  0FBF  00D1               	movwf	??_lcd_update^(0+256)
  4680  0FC0  3080               	movlw	128
  4681  0FC1  0251               	subwf	??_lcd_update^(0+256),w
  4682  0FC2  1D03               	skipz
  4683  0FC3  2FC6               	goto	u8985
  4684  0FC4  300A               	movlw	10
  4685  0FC5  0266               	subwf	_pwm_lvl^(0+256),w
  4686  0FC6                     u8985:	
  4687  0FC6  1C03               	skipc
  4688  0FC7  2FC9               	goto	u8981
  4689  0FC8  2FCA               	goto	u8980
  4690  0FC9                     u8981:	
  4691  0FC9  2FD2               	goto	l6739
  4692  0FCA                     u8980:	
  4693  0FCA                     l6735:	
  4694                           
  4695                           ;main.c: 564:                 lcd_send_string(" ");
  4696  0FCA  3004               	movlw	low ((STR_11+4)| (0+32768))
  4697  0FCB  00F4               	movwf	lcd_send_string@s
  4698  0FCC  30A8               	movlw	high ((STR_11+4)| (0+32768))
  4699  0FCD  00F5               	movwf	lcd_send_string@s+1
  4700  0FCE  31A1  21AF  318C   	fcall	_lcd_send_string
  4701  0FD1  2F6B               	goto	l6713
  4702  0FD2                     l6739:	
  4703  0FD2  0022               	movlb	2	; select bank2
  4704  0FD3  0867               	movf	(_pwm_lvl+1)^(0+256),w
  4705  0FD4  3A80               	xorlw	128
  4706  0FD5  00D1               	movwf	??_lcd_update^(0+256)
  4707  0FD6  3080               	movlw	128
  4708  0FD7  0251               	subwf	??_lcd_update^(0+256),w
  4709  0FD8  1D03               	skipz
  4710  0FD9  2FDC               	goto	u8995
  4711  0FDA  3064               	movlw	100
  4712  0FDB  0266               	subwf	_pwm_lvl^(0+256),w
  4713  0FDC                     u8995:	
  4714  0FDC  1C03               	skipc
  4715  0FDD  2FDF               	goto	u8991
  4716  0FDE  2FE0               	goto	u8990
  4717  0FDF                     u8991:	
  4718  0FDF  2FE1               	goto	l6743
  4719  0FE0                     u8990:	
  4720  0FE0  2F6B               	goto	l6713
  4721  0FE1                     l6743:	
  4722                           
  4723                           ;main.c: 572:                 lcd_send_string("  ");
  4724  0FE1  3003               	movlw	low ((STR_11+3)| (0+32768))
  4725  0FE2  00F4               	movwf	lcd_send_string@s
  4726  0FE3  30A8               	movlw	high ((STR_11+3)| (0+32768))
  4727  0FE4  00F5               	movwf	lcd_send_string@s+1
  4728  0FE5  31A1  21AF  318C   	fcall	_lcd_send_string
  4729  0FE8  2F6B               	goto	l6713
  4730  0FE9                     l6749:	
  4731  0FE9  0853               	movf	lcd_update@cmd^(0+256),w
  4732  0FEA  00D1               	movwf	??_lcd_update^(0+256)
  4733  0FEB  01D2               	clrf	(??_lcd_update^(0+256)+1)
  4734                           
  4735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4736                           ; Switch size 1, requested type "simple"
  4737                           ; Number of cases is 1, Range of values is 0 to 0
  4738                           ; switch strategies available:
  4739                           ; Name         Instructions Cycles
  4740                           ; simple_byte            4     3 (average)
  4741                           ; direct_byte            8     6 (fixed)
  4742                           ; jumptable            260     6 (fixed)
  4743                           ;	Chosen strategy is simple_byte
  4744  0FEC  0852               	movf	(??_lcd_update+1)^(0+256),w
  4745  0FED  3A00               	xorlw	0	; case 0
  4746  0FEE  1903               	skipnz
  4747  0FEF  2FF1               	goto	l7049
  4748  0FF0  2FFF               	goto	l302
  4749  0FF1                     l7049:	
  4750                           
  4751                           ; Switch size 1, requested type "simple"
  4752                           ; Number of cases is 4, Range of values is 100 to 118
  4753                           ; switch strategies available:
  4754                           ; Name         Instructions Cycles
  4755                           ; simple_byte           13     7 (average)
  4756                           ; direct_byte           47     9 (fixed)
  4757                           ; jumptable            263     9 (fixed)
  4758                           ;	Chosen strategy is simple_byte
  4759  0FF1  0851               	movf	??_lcd_update^(0+256),w
  4760  0FF2  3A64               	xorlw	100	; case 100
  4761  0FF3  1903               	skipnz
  4762  0FF4  2F8B               	goto	l6723
  4763  0FF5  3A02               	xorlw	2	; case 102
  4764  0FF6  1903               	skipnz
  4765  0FF7  2ECC               	goto	l6699
  4766  0FF8  3A16               	xorlw	22	; case 112
  4767  0FF9  1903               	skipnz
  4768  0FFA  2F4F               	goto	l6707
  4769  0FFB  3A06               	xorlw	6	; case 118
  4770  0FFC  1903               	skipnz
  4771  0FFD  2CE5               	goto	l6641
  4772  0FFE  2FFF               	goto	l302
  4773  0FFF                     l302:	
  4774  0FFF  0008               	return
  4775  1000                     __end_of_lcd_update:	
  4776                           
  4777                           	psect	text10
  4778  0801                     __ptext10:	
  4779 ;; *************** function _lcd_send_int *****************
  4780 ;; Defined at:
  4781 ;;		line 334 in file "main.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  data            2   45[BANK2 ] int 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4795 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;Total ram usage:        2 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    9
  4802 ;; This function calls:
  4803 ;;		_lcd_send_string
  4804 ;;		_sprintf
  4805 ;; This function is called by:
  4806 ;;		_lcd_update
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _lcd_send_int
  4812  0801                     _lcd_send_int:	
  4813  0801                     l6631:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _lcd_send_int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4816                           
  4817                           
  4818                           ;main.c: 335:         sprintf(buff,"%d",data);
  4819  0801  306A               	movlw	low (STR_1| (0+32768))
  4820  0802  0022               	movlb	2	; select bank2
  4821  0803  00BD               	movwf	sprintf@fmt^(0+256)
  4822  0804  30A8               	movlw	high (STR_1| (0+32768))
  4823  0805  00BE               	movwf	(sprintf@fmt^(0+256)+1)
  4824  0806  084E               	movf	(lcd_send_int@data+1)^(0+256),w
  4825  0807  00C0               	movwf	((?_sprintf+1)^(0+256)+2)
  4826  0808  084D               	movf	lcd_send_int@data^(0+256),w
  4827  0809  00BF               	movwf	(?_sprintf^(0+256)+2)
  4828  080A  30BE               	movlw	(low (_buff| (0+256)))& (0+255)
  4829  080B  3198  2001  3188   	fcall	_sprintf
  4830  080E                     l6633:	
  4831                           
  4832                           ;main.c: 336:         lcd_send_string(buff);
  4833  080E  30BE               	movlw	low _buff
  4834  080F  00F4               	movwf	lcd_send_string@s
  4835  0810  3001               	movlw	high _buff
  4836  0811  00F5               	movwf	lcd_send_string@s+1
  4837  0812  31A1  21AF  3188   	fcall	_lcd_send_string
  4838  0815                     l257:	
  4839  0815  0008               	return
  4840  0816                     __end_of_lcd_send_int:	
  4841                           
  4842                           	psect	text11
  4843  2162                     __ptext11:	
  4844 ;; *************** function _lcd_send_float1 *****************
  4845 ;; Defined at:
  4846 ;;		line 345 in file "main.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  data            4   45[BANK2 ] float 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4860 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;Total ram usage:        4 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    9
  4867 ;; This function calls:
  4868 ;;		_lcd_send_string
  4869 ;;		_sprintf
  4870 ;; This function is called by:
  4871 ;;		_lcd_update
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _lcd_send_float1
  4877  2162                     _lcd_send_float1:	
  4878  2162                     l6635:	
  4879                           ;incstack = 0
  4880                           ; Regs used in _lcd_send_float1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4881                           
  4882                           
  4883                           ;main.c: 346:      sprintf(buff,"%.1f",data);
  4884  2162  3045               	movlw	low (STR_2| (0+32768))
  4885  2163  0022               	movlb	2	; select bank2
  4886  2164  00BD               	movwf	sprintf@fmt^(0+256)
  4887  2165  30A8               	movlw	high (STR_2| (0+32768))
  4888  2166  00BE               	movwf	(sprintf@fmt^(0+256)+1)
  4889  2167  0850               	movf	(lcd_send_float1@data+3)^(0+256),w
  4890  2168  00C2               	movwf	((?_sprintf+3)^(0+256)+2)
  4891  2169  084F               	movf	(lcd_send_float1@data+2)^(0+256),w
  4892  216A  00C1               	movwf	((?_sprintf+2)^(0+256)+2)
  4893  216B  084E               	movf	(lcd_send_float1@data+1)^(0+256),w
  4894  216C  00C0               	movwf	((?_sprintf+1)^(0+256)+2)
  4895  216D  084D               	movf	lcd_send_float1@data^(0+256),w
  4896  216E  00BF               	movwf	(?_sprintf^(0+256)+2)
  4897  216F  30BE               	movlw	(low (_buff| (0+256)))& (0+255)
  4898  2170  3198  2001  31A1   	fcall	_sprintf
  4899  2173                     l6637:	
  4900                           
  4901                           ;main.c: 347:      lcd_send_string(buff);
  4902  2173  30BE               	movlw	low _buff
  4903  2174  00F4               	movwf	lcd_send_string@s
  4904  2175  3001               	movlw	high _buff
  4905  2176  00F5               	movwf	lcd_send_string@s+1
  4906  2177  31A1  21AF  31A1   	fcall	_lcd_send_string
  4907  217A                     l260:	
  4908  217A  0008               	return
  4909  217B                     __end_of_lcd_send_float1:	
  4910                           
  4911                           	psect	text12
  4912  1801                     __ptext12:	
  4913 ;; *************** function _sprintf *****************
  4914 ;; Defined at:
  4915 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  s               1    wreg     PTR unsigned char 
  4918 ;;		 -> buff(8), 
  4919 ;;  fmt             2   29[BANK2 ] PTR const unsigned char 
  4920 ;;		 -> STR_2(5), STR_1(3), 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  s               1   38[BANK2 ] PTR unsigned char 
  4923 ;;		 -> buff(8), 
  4924 ;;  f               5   40[BANK2 ] struct _IO_FILE
  4925 ;;  ret             2    0        int 
  4926 ;;  ap              1   39[BANK2 ] PTR void [1]
  4927 ;;		 -> ?_sprintf(2), 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  2   29[BANK2 ] int 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4937 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4940 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;Total ram usage:       16 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    8
  4944 ;; This function calls:
  4945 ;;		_vfprintf
  4946 ;; This function is called by:
  4947 ;;		_lcd_send_int
  4948 ;;		_lcd_send_float1
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _sprintf
  4954  1801                     _sprintf:	
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4958                           ;sprintf@s stored from wreg
  4959  1801  0022               	movlb	2	; select bank2
  4960  1802  00C6               	movwf	sprintf@s^(0+256)
  4961  1803                     l6619:	
  4962  1803  303F               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  4963  1804  00C3               	movwf	??_sprintf^(0+256)
  4964  1805  0843               	movf	??_sprintf^(0+256),w
  4965  1806  00C7               	movwf	sprintf@ap^(0+256)
  4966  1807  0846               	movf	sprintf@s^(0+256),w
  4967  1808  00C3               	movwf	??_sprintf^(0+256)
  4968  1809  0843               	movf	??_sprintf^(0+256),w
  4969  180A  00C8               	movwf	sprintf@f^(0+256)
  4970  180B                     l6621:	
  4971  180B  01C9               	clrf	(sprintf@f^(0+256)+1)
  4972  180C  01CA               	clrf	((sprintf@f+1)^(0+256)+1)
  4973  180D                     l6623:	
  4974  180D  01CB               	clrf	(sprintf@f^(0+256)+3)
  4975  180E  01CC               	clrf	((sprintf@f+1)^(0+256)+3)
  4976  180F                     l6625:	
  4977  180F  083E               	movf	(sprintf@fmt+1)^(0+256),w
  4978  1810  00B6               	movwf	(vfprintf@fmt+1)^(0+256)
  4979  1811  083D               	movf	sprintf@fmt^(0+256),w
  4980  1812  00B5               	movwf	vfprintf@fmt^(0+256)
  4981  1813  3047               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  4982  1814  00C3               	movwf	??_sprintf^(0+256)
  4983  1815  0843               	movf	??_sprintf^(0+256),w
  4984  1816  00B7               	movwf	vfprintf@ap^(0+256)
  4985  1817  3048               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  4986  1818  31A3  2321  3198   	fcall	_vfprintf
  4987  181B                     l6627:	
  4988  181B  0022               	movlb	2	; select bank2
  4989  181C  0849               	movf	(sprintf@f^(0+256)+1),w
  4990  181D  0746               	addwf	sprintf@s^(0+256),w
  4991  181E  00C3               	movwf	??_sprintf^(0+256)
  4992  181F  0843               	movf	??_sprintf^(0+256),w
  4993  1820  0086               	movwf	6
  4994  1821  3001               	movlw	1	; select bank2/3
  4995  1822  0087               	movwf	7
  4996  1823  0181               	clrf	1
  4997  1824                     l1360:	
  4998  1824  0008               	return
  4999  1825                     __end_of_sprintf:	
  5000                           
  5001                           	psect	text13
  5002  2321                     __ptext13:	
  5003 ;; *************** function _vfprintf *****************
  5004 ;; Defined at:
  5005 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  fp              1    wreg     PTR struct _IO_FILE
  5008 ;;		 -> sprintf@f(5), 
  5009 ;;  fmt             2   21[BANK2 ] PTR const unsigned char 
  5010 ;;		 -> STR_2(5), STR_1(3), 
  5011 ;;  ap              1   23[BANK2 ] PTR PTR void 
  5012 ;;		 -> sprintf@ap(1), 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  fp              1   26[BANK2 ] PTR struct _IO_FILE
  5015 ;;		 -> sprintf@f(5), 
  5016 ;;  cfmt            2   27[BANK2 ] PTR unsigned char 
  5017 ;;		 -> STR_2(5), STR_1(3), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2   21[BANK2 ] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    7
  5034 ;; This function calls:
  5035 ;;		_vfpfcnvrt
  5036 ;; This function is called by:
  5037 ;;		_sprintf
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _vfprintf
  5043  2321                     _vfprintf:	
  5044                           
  5045                           ;incstack = 0
  5046                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5047                           ;vfprintf@fp stored from wreg
  5048  2321  0022               	movlb	2	; select bank2
  5049  2322  00BA               	movwf	vfprintf@fp^(0+256)
  5050  2323                     l6607:	
  5051                           
  5052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5053  2323  0836               	movf	(vfprintf@fmt+1)^(0+256),w
  5054  2324  00BC               	movwf	(vfprintf@cfmt+1)^(0+256)
  5055  2325  0835               	movf	vfprintf@fmt^(0+256),w
  5056  2326  00BB               	movwf	vfprintf@cfmt^(0+256)
  5057  2327                     l6609:	
  5058                           
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5060  2327  0023               	movlb	3	; select bank3
  5061  2328  01B4               	clrf	_nout^(0+384)
  5062  2329  01B5               	clrf	(_nout+1)^(0+384)
  5063                           
  5064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5065  232A  2B43               	goto	l6613
  5066  232B                     l6611:	
  5067                           
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5069  232B  303B               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5070  232C  00B8               	movwf	??_vfprintf^(0+256)
  5071  232D  0838               	movf	??_vfprintf^(0+256),w
  5072  232E  0020               	movlb	0	; select bank0
  5073  232F  00EE               	movwf	vfpfcnvrt@fmt
  5074  2330  0022               	movlb	2	; select bank2
  5075  2331  0837               	movf	vfprintf@ap^(0+256),w
  5076  2332  00B9               	movwf	(??_vfprintf+1)^(0+256)
  5077  2333  0839               	movf	(??_vfprintf+1)^(0+256),w
  5078  2334  0020               	movlb	0	; select bank0
  5079  2335  00EF               	movwf	vfpfcnvrt@ap
  5080  2336  0022               	movlb	2	; select bank2
  5081  2337  083A               	movf	vfprintf@fp^(0+256),w
  5082  2338  3189  21CA  31A3   	fcall	_vfpfcnvrt
  5083  233B  0020               	movlb	0	; select bank0
  5084  233C  086E               	movf	?_vfpfcnvrt,w
  5085  233D  0023               	movlb	3	; select bank3
  5086  233E  07B4               	addwf	_nout^(0+384),f
  5087  233F  0020               	movlb	0	; select bank0
  5088  2340  086F               	movf	?_vfpfcnvrt+1,w
  5089  2341  0023               	movlb	3	; select bank3
  5090  2342  3DB5               	addwfc	(_nout+1)^(0+384),f
  5091  2343                     l6613:	
  5092                           
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5094  2343  0022               	movlb	2	; select bank2
  5095  2344  083B               	movf	vfprintf@cfmt^(0+256),w
  5096  2345  0084               	movwf	4
  5097  2346  083C               	movf	(vfprintf@cfmt+1)^(0+256),w
  5098  2347  0085               	movwf	5
  5099  2348  0012               	moviw fsr0++
  5100  2349  1D03               	btfss	3,2
  5101  234A  2B4C               	goto	u8871
  5102  234B  2B4D               	goto	u8870
  5103  234C                     u8871:	
  5104  234C  2B2B               	goto	l6611
  5105  234D                     u8870:	
  5106  234D                     l6615:	
  5107                           
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5109  234D  0023               	movlb	3	; select bank3
  5110  234E  0835               	movf	(_nout+1)^(0+384),w
  5111  234F  0022               	movlb	2	; select bank2
  5112  2350  00B6               	movwf	(?_vfprintf+1)^(0+256)
  5113  2351  0023               	movlb	3	; select bank3
  5114  2352  0834               	movf	_nout^(0+384),w
  5115  2353  0022               	movlb	2	; select bank2
  5116  2354  00B5               	movwf	?_vfprintf^(0+256)
  5117  2355                     l792:	
  5118  2355  0008               	return
  5119  2356                     __end_of_vfprintf:	
  5120                           
  5121                           	psect	text14
  5122  09CA                     __ptext14:	
  5123 ;; *************** function _vfpfcnvrt *****************
  5124 ;; Defined at:
  5125 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  fp              1    wreg     PTR struct _IO_FILE
  5128 ;;		 -> sprintf@f(5), 
  5129 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
  5130 ;;		 -> vfprintf@cfmt(2), 
  5131 ;;  ap              1   79[BANK0 ] PTR PTR void 
  5132 ;;		 -> sprintf@ap(1), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  fp              1   20[BANK2 ] PTR struct _IO_FILE
  5135 ;;		 -> sprintf@f(5), 
  5136 ;;  ll              8    0[BANK2 ] long long 
  5137 ;;  llu             8    0        unsigned long long 
  5138 ;;  f               4   15[BANK2 ] unsigned long long 
  5139 ;;  ct              3   12[BANK2 ] unsigned char [3]
  5140 ;;  vp              2    0        PTR void 
  5141 ;;  i               2    0        int 
  5142 ;;  done            2    0        int 
  5143 ;;  cp              2    0        PTR unsigned char 
  5144 ;;  c               1   19[BANK2 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2   78[BANK0 ] int 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;      Totals:         0       2       6      21       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;Total ram usage:       29 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    6
  5161 ;; This function calls:
  5162 ;;		_atoi
  5163 ;;		_dtoa
  5164 ;;		_efgtoa
  5165 ;;		_fputc
  5166 ;;		_isdigit
  5167 ;;		_isupper
  5168 ;;		_strncmp
  5169 ;;		_tolower
  5170 ;; This function is called by:
  5171 ;;		_vfprintf
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _vfpfcnvrt
  5177  09CA                     _vfpfcnvrt:	
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5181                           ;vfpfcnvrt@fp stored from wreg
  5182  09CA  0022               	movlb	2	; select bank2
  5183  09CB  00B4               	movwf	vfpfcnvrt@fp^(0+256)
  5184  09CC                     l6501:	
  5185                           
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5187  09CC  0020               	movlb	0	; select bank0
  5188  09CD  086E               	movf	vfpfcnvrt@fmt,w
  5189  09CE  0086               	movwf	6
  5190  09CF  3001               	movlw	1	; select bank2/3
  5191  09D0  0087               	movwf	7
  5192  09D1  3F40               	moviw [0]fsr1
  5193  09D2  0021               	movlb	1	; select bank1
  5194  09D3  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5195  09D4  3F41               	moviw [1]fsr1
  5196  09D5  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5197  09D6  086A               	movf	??_vfpfcnvrt^(0+128),w
  5198  09D7  0084               	movwf	4
  5199  09D8  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5200  09D9  0085               	movwf	5
  5201  09DA  0012               	moviw fsr0++
  5202  09DB  3A25               	xorlw	37
  5203  09DC  1D03               	btfss	3,2
  5204  09DD  29DF               	goto	u8711
  5205  09DE  29E0               	goto	u8710
  5206  09DF                     u8711:	
  5207  09DF  2CB8               	goto	l6599
  5208  09E0                     u8710:	
  5209  09E0                     l6503:	
  5210                           
  5211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5212  09E0  0020               	movlb	0	; select bank0
  5213  09E1  086E               	movf	vfpfcnvrt@fmt,w
  5214  09E2  0086               	movwf	6
  5215  09E3  3001               	movlw	1	; select bank2/3
  5216  09E4  0087               	movwf	7
  5217  09E5  3001               	movlw	1
  5218  09E6  0781               	addwf	1,f
  5219  09E7  3141               	addfsr 1,1
  5220  09E8  1803               	skipnc
  5221  09E9  0A81               	incf	1,f
  5222  09EA                     l6505:	
  5223                           
  5224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5225  09EA  0023               	movlb	3	; select bank3
  5226  09EB  01B6               	clrf	_width^(0+384)
  5227  09EC  01B7               	clrf	(_width+1)^(0+384)
  5228  09ED  0022               	movlb	2	; select bank2
  5229  09EE  01E2               	clrf	_flags^(0+256)
  5230  09EF  01E3               	clrf	(_flags+1)^(0+256)
  5231  09F0                     l6507:	
  5232                           
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5234  09F0  30FF               	movlw	255
  5235  09F1  00E0               	movwf	_prec^(0+256)
  5236  09F2  30FF               	movlw	255
  5237  09F3  00E1               	movwf	(_prec^(0+256)+1)
  5238  09F4                     l6509:	
  5239                           
  5240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5241  09F4  0020               	movlb	0	; select bank0
  5242  09F5  086E               	movf	vfpfcnvrt@fmt,w
  5243  09F6  0086               	movwf	6
  5244  09F7  3001               	movlw	1	; select bank2/3
  5245  09F8  0087               	movwf	7
  5246  09F9  3F40               	moviw [0]fsr1
  5247  09FA  0021               	movlb	1	; select bank1
  5248  09FB  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5249  09FC  3F41               	moviw [1]fsr1
  5250  09FD  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5251  09FE  086A               	movf	??_vfpfcnvrt^(0+128),w
  5252  09FF  0084               	movwf	4
  5253  0A00  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5254  0A01  0085               	movwf	5
  5255  0A02  0012               	moviw fsr0++
  5256  0A03  3A2E               	xorlw	46
  5257  0A04  1D03               	btfss	3,2
  5258  0A05  2A07               	goto	u8721
  5259  0A06  2A08               	goto	u8720
  5260  0A07                     u8721:	
  5261  0A07  2A8D               	goto	l6531
  5262  0A08                     u8720:	
  5263  0A08                     l6511:	
  5264                           
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5266  0A08  0022               	movlb	2	; select bank2
  5267  0A09  01E0               	clrf	_prec^(0+256)
  5268  0A0A  01E1               	clrf	(_prec+1)^(0+256)
  5269  0A0B                     l6513:	
  5270                           
  5271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5272  0A0B  0020               	movlb	0	; select bank0
  5273  0A0C  086E               	movf	vfpfcnvrt@fmt,w
  5274  0A0D  0086               	movwf	6
  5275  0A0E  3001               	movlw	1	; select bank2/3
  5276  0A0F  0087               	movwf	7
  5277  0A10  3001               	movlw	1
  5278  0A11  0781               	addwf	1,f
  5279  0A12  3141               	addfsr 1,1
  5280  0A13  1803               	skipnc
  5281  0A14  0A81               	incf	1,f
  5282  0A15                     l6515:	
  5283                           
  5284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5285  0A15  086E               	movf	vfpfcnvrt@fmt,w
  5286  0A16  0086               	movwf	6
  5287  0A17  3001               	movlw	1	; select bank2/3
  5288  0A18  0087               	movwf	7
  5289  0A19  3F40               	moviw [0]fsr1
  5290  0A1A  0021               	movlb	1	; select bank1
  5291  0A1B  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5292  0A1C  3F41               	moviw [1]fsr1
  5293  0A1D  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5294  0A1E  086A               	movf	??_vfpfcnvrt^(0+128),w
  5295  0A1F  0084               	movwf	4
  5296  0A20  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5297  0A21  0085               	movwf	5
  5298  0A22  0012               	moviw fsr0++
  5299  0A23  3A2A               	xorlw	42
  5300  0A24  1D03               	btfss	3,2
  5301  0A25  2A27               	goto	u8731
  5302  0A26  2A28               	goto	u8730
  5303  0A27                     u8731:	
  5304  0A27  2A42               	goto	l6521
  5305  0A28                     u8730:	
  5306  0A28                     l6517:	
  5307                           
  5308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5309  0A28  0020               	movlb	0	; select bank0
  5310  0A29  086E               	movf	vfpfcnvrt@fmt,w
  5311  0A2A  0086               	movwf	6
  5312  0A2B  3001               	movlw	1	; select bank2/3
  5313  0A2C  0087               	movwf	7
  5314  0A2D  3001               	movlw	1
  5315  0A2E  0781               	addwf	1,f
  5316  0A2F  3141               	addfsr 1,1
  5317  0A30  1803               	skipnc
  5318  0A31  0A81               	incf	1,f
  5319  0A32                     l6519:	
  5320                           
  5321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5322  0A32  086F               	movf	vfpfcnvrt@ap,w
  5323  0A33  0086               	movwf	6
  5324  0A34  3001               	movlw	1	; select bank2/3
  5325  0A35  0087               	movwf	7
  5326  0A36  0801               	movf	1,w
  5327  0A37  0084               	movwf	4
  5328  0A38  3001               	movlw	1	; select bank2/3
  5329  0A39  0085               	movwf	5
  5330  0A3A  3002               	movlw	2
  5331  0A3B  0781               	addwf	1,f
  5332  0A3C  3F00               	moviw [0]fsr0
  5333  0A3D  0022               	movlb	2	; select bank2
  5334  0A3E  00E0               	movwf	_prec^(0+256)
  5335  0A3F  3F01               	moviw [1]fsr0
  5336  0A40  00E1               	movwf	(_prec+1)^(0+256)
  5337                           
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5339  0A41  2A8D               	goto	l6531
  5340  0A42                     l6521:	
  5341                           
  5342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5343  0A42  0020               	movlb	0	; select bank0
  5344  0A43  086E               	movf	vfpfcnvrt@fmt,w
  5345  0A44  0086               	movwf	6
  5346  0A45  3001               	movlw	1	; select bank2/3
  5347  0A46  0087               	movwf	7
  5348  0A47  3F40               	moviw [0]fsr1
  5349  0A48  00F7               	movwf	atoi@s
  5350  0A49  3F41               	moviw [1]fsr1
  5351  0A4A  00F8               	movwf	atoi@s+1
  5352  0A4B  319B  2352  3189   	fcall	_atoi
  5353  0A4E  0878               	movf	?_atoi+1,w
  5354  0A4F  0022               	movlb	2	; select bank2
  5355  0A50  00E1               	movwf	(_prec+1)^(0+256)
  5356  0A51  0877               	movf	?_atoi,w
  5357  0A52  00E0               	movwf	_prec^(0+256)
  5358                           
  5359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5360  0A53  2A5E               	goto	l6525
  5361  0A54                     l6523:	
  5362                           
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5364  0A54  0020               	movlb	0	; select bank0
  5365  0A55  086E               	movf	vfpfcnvrt@fmt,w
  5366  0A56  0086               	movwf	6
  5367  0A57  3001               	movlw	1	; select bank2/3
  5368  0A58  0087               	movwf	7
  5369  0A59  3001               	movlw	1
  5370  0A5A  0781               	addwf	1,f
  5371  0A5B  3141               	addfsr 1,1
  5372  0A5C  1803               	skipnc
  5373  0A5D  0A81               	incf	1,f
  5374  0A5E                     l6525:	
  5375  0A5E  0020               	movlb	0	; select bank0
  5376  0A5F  086E               	movf	vfpfcnvrt@fmt,w
  5377  0A60  0086               	movwf	6
  5378  0A61  3001               	movlw	1	; select bank2/3
  5379  0A62  0087               	movwf	7
  5380  0A63  3F40               	moviw [0]fsr1
  5381  0A64  0021               	movlb	1	; select bank1
  5382  0A65  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5383  0A66  3F41               	moviw [1]fsr1
  5384  0A67  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5385  0A68  086A               	movf	??_vfpfcnvrt^(0+128),w
  5386  0A69  0084               	movwf	4
  5387  0A6A  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5388  0A6B  0085               	movwf	5
  5389  0A6C  0800               	movf	0,w	;code access
  5390  0A6D  3ED0               	addlw	208
  5391  0A6E  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5392  0A6F  30FF               	movlw	255
  5393  0A70  1803               	skipnc
  5394  0A71  3000               	movlw	0
  5395  0A72  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  5396  0A73  3000               	movlw	0
  5397  0A74  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  5398  0A75  300A               	movlw	10
  5399  0A76  1903               	skipnz
  5400  0A77  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  5401  0A78  1C03               	skipc
  5402  0A79  2A7B               	goto	u8741
  5403  0A7A  2A7D               	goto	u8740
  5404  0A7B                     u8741:	
  5405  0A7B  3001               	movlw	1
  5406  0A7C  2A7E               	goto	u8750
  5407  0A7D                     u8740:	
  5408  0A7D  3000               	movlw	0
  5409  0A7E                     u8750:	
  5410  0A7E  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5411  0A7F  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  5412  0A80  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5413  0A81  0022               	movlb	2	; select bank2
  5414  0A82  00A8               	movwf	_vfpfcnvrt$575^(0+256)
  5415  0A83  0021               	movlb	1	; select bank1
  5416  0A84  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  5417  0A85  0022               	movlb	2	; select bank2
  5418  0A86  00A9               	movwf	(_vfpfcnvrt$575+1)^(0+256)
  5419  0A87                     l6529:	
  5420  0A87  0828               	movf	_vfpfcnvrt$575^(0+256),w
  5421  0A88  0429               	iorwf	(_vfpfcnvrt$575+1)^(0+256),w
  5422  0A89  1D03               	btfss	3,2
  5423  0A8A  2A8C               	goto	u8761
  5424  0A8B  2A8D               	goto	u8760
  5425  0A8C                     u8761:	
  5426  0A8C  2A54               	goto	l6523
  5427  0A8D                     u8760:	
  5428  0A8D                     l6531:	
  5429                           
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5431  0A8D  0020               	movlb	0	; select bank0
  5432  0A8E  086E               	movf	vfpfcnvrt@fmt,w
  5433  0A8F  0086               	movwf	6
  5434  0A90  3001               	movlw	1	; select bank2/3
  5435  0A91  0087               	movwf	7
  5436  0A92  3F40               	moviw [0]fsr1
  5437  0A93  0021               	movlb	1	; select bank1
  5438  0A94  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5439  0A95  3F41               	moviw [1]fsr1
  5440  0A96  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5441  0A97  086A               	movf	??_vfpfcnvrt^(0+128),w
  5442  0A98  0084               	movwf	4
  5443  0A99  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5444  0A9A  0085               	movwf	5
  5445  0A9B  0800               	movf	0,w	;code access
  5446  0A9C  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5447  0A9D  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5448  0A9E  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5449  0A9F  00F7               	movwf	tolower@c
  5450  0AA0  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5451  0AA1  00F8               	movwf	tolower@c+1
  5452  0AA2  31A2  2250  3189   	fcall	_tolower
  5453  0AA5  0877               	movf	?_tolower,w
  5454  0AA6  0021               	movlb	1	; select bank1
  5455  0AA7  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5456  0AA8  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5457  0AA9  0022               	movlb	2	; select bank2
  5458  0AAA  00AC               	movwf	vfpfcnvrt@ct^(0+256)
  5459  0AAB                     l6533:	
  5460                           
  5461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5462  0AAB  082C               	movf	vfpfcnvrt@ct^(0+256),w
  5463  0AAC  1903               	btfsc	3,2
  5464  0AAD  2AAF               	goto	u8771
  5465  0AAE  2AB0               	goto	u8770
  5466  0AAF                     u8771:	
  5467  0AAF  2AF7               	goto	l6541
  5468  0AB0                     u8770:	
  5469  0AB0                     l6535:	
  5470                           
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5472  0AB0  0020               	movlb	0	; select bank0
  5473  0AB1  086E               	movf	vfpfcnvrt@fmt,w
  5474  0AB2  0086               	movwf	6
  5475  0AB3  3001               	movlw	1	; select bank2/3
  5476  0AB4  0087               	movwf	7
  5477  0AB5  3F40               	moviw [0]fsr1
  5478  0AB6  0021               	movlb	1	; select bank1
  5479  0AB7  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5480  0AB8  3F41               	moviw [1]fsr1
  5481  0AB9  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5482  0ABA  3001               	movlw	1
  5483  0ABB  076A               	addwf	??_vfpfcnvrt^(0+128),w
  5484  0ABC  0084               	movwf	4
  5485  0ABD  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5486  0ABE  1803               	skipnc
  5487  0ABF  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5488  0AC0  0085               	movwf	5
  5489  0AC1  0800               	movf	0,w	;code access
  5490  0AC2  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5491  0AC3  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5492  0AC4  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5493  0AC5  00F7               	movwf	tolower@c
  5494  0AC6  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5495  0AC7  00F8               	movwf	tolower@c+1
  5496  0AC8  31A2  2250  3189   	fcall	_tolower
  5497  0ACB  0877               	movf	?_tolower,w
  5498  0ACC  0021               	movlb	1	; select bank1
  5499  0ACD  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5500  0ACE  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5501  0ACF  0022               	movlb	2	; select bank2
  5502  0AD0  00AD               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  5503  0AD1                     l6537:	
  5504                           
  5505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5506  0AD1  082D               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  5507  0AD2  1903               	btfsc	3,2
  5508  0AD3  2AD5               	goto	u8781
  5509  0AD4  2AD6               	goto	u8780
  5510  0AD5                     u8781:	
  5511  0AD5  2AF7               	goto	l6541
  5512  0AD6                     u8780:	
  5513  0AD6                     l6539:	
  5514                           
  5515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5516  0AD6  0020               	movlb	0	; select bank0
  5517  0AD7  086E               	movf	vfpfcnvrt@fmt,w
  5518  0AD8  0086               	movwf	6
  5519  0AD9  3001               	movlw	1	; select bank2/3
  5520  0ADA  0087               	movwf	7
  5521  0ADB  3F40               	moviw [0]fsr1
  5522  0ADC  0021               	movlb	1	; select bank1
  5523  0ADD  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5524  0ADE  3F41               	moviw [1]fsr1
  5525  0ADF  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5526  0AE0  3002               	movlw	2
  5527  0AE1  076A               	addwf	??_vfpfcnvrt^(0+128),w
  5528  0AE2  0084               	movwf	4
  5529  0AE3  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5530  0AE4  1803               	skipnc
  5531  0AE5  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5532  0AE6  0085               	movwf	5
  5533  0AE7  0800               	movf	0,w	;code access
  5534  0AE8  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5535  0AE9  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5536  0AEA  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5537  0AEB  00F7               	movwf	tolower@c
  5538  0AEC  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5539  0AED  00F8               	movwf	tolower@c+1
  5540  0AEE  31A2  2250  3189   	fcall	_tolower
  5541  0AF1  0877               	movf	?_tolower,w
  5542  0AF2  0021               	movlb	1	; select bank1
  5543  0AF3  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5544  0AF4  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5545  0AF5  0022               	movlb	2	; select bank2
  5546  0AF6  00AE               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  5547  0AF7                     l6541:	
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5550  0AF7  0020               	movlb	0	; select bank0
  5551  0AF8  086E               	movf	vfpfcnvrt@fmt,w
  5552  0AF9  0086               	movwf	6
  5553  0AFA  3001               	movlw	1	; select bank2/3
  5554  0AFB  0087               	movwf	7
  5555  0AFC  3F40               	moviw [0]fsr1
  5556  0AFD  0021               	movlb	1	; select bank1
  5557  0AFE  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5558  0AFF  3F41               	moviw [1]fsr1
  5559  0B00  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5560  0B01  086A               	movf	??_vfpfcnvrt^(0+128),w
  5561  0B02  0084               	movwf	4
  5562  0B03  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5563  0B04  0085               	movwf	5
  5564  0B05  0012               	moviw fsr0++
  5565  0B06  3A64               	xorlw	100
  5566  0B07  1903               	btfsc	3,2
  5567  0B08  2B0A               	goto	u8791
  5568  0B09  2B0B               	goto	u8790
  5569  0B0A                     u8791:	
  5570  0B0A  2B1F               	goto	l6545
  5571  0B0B                     u8790:	
  5572  0B0B                     l6543:	
  5573  0B0B  0020               	movlb	0	; select bank0
  5574  0B0C  086E               	movf	vfpfcnvrt@fmt,w
  5575  0B0D  0086               	movwf	6
  5576  0B0E  3001               	movlw	1	; select bank2/3
  5577  0B0F  0087               	movwf	7
  5578  0B10  3F40               	moviw [0]fsr1
  5579  0B11  0021               	movlb	1	; select bank1
  5580  0B12  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5581  0B13  3F41               	moviw [1]fsr1
  5582  0B14  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5583  0B15  086A               	movf	??_vfpfcnvrt^(0+128),w
  5584  0B16  0084               	movwf	4
  5585  0B17  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5586  0B18  0085               	movwf	5
  5587  0B19  0012               	moviw fsr0++
  5588  0B1A  3A69               	xorlw	105
  5589  0B1B  1D03               	btfss	3,2
  5590  0B1C  2B1E               	goto	u8801
  5591  0B1D  2B1F               	goto	u8800
  5592  0B1E                     u8801:	
  5593  0B1E  2B72               	goto	l6553
  5594  0B1F                     u8800:	
  5595  0B1F                     l6545:	
  5596                           
  5597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5598  0B1F  0020               	movlb	0	; select bank0
  5599  0B20  086E               	movf	vfpfcnvrt@fmt,w
  5600  0B21  0086               	movwf	6
  5601  0B22  3001               	movlw	1	; select bank2/3
  5602  0B23  0087               	movwf	7
  5603  0B24  3001               	movlw	1
  5604  0B25  0781               	addwf	1,f
  5605  0B26  3141               	addfsr 1,1
  5606  0B27  1803               	skipnc
  5607  0B28  0A81               	incf	1,f
  5608  0B29                     l6547:	
  5609                           
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5611  0B29  086F               	movf	vfpfcnvrt@ap,w
  5612  0B2A  0086               	movwf	6
  5613  0B2B  3001               	movlw	1	; select bank2/3
  5614  0B2C  0087               	movwf	7
  5615  0B2D  0801               	movf	1,w
  5616  0B2E  0084               	movwf	4
  5617  0B2F  3001               	movlw	1	; select bank2/3
  5618  0B30  0085               	movwf	5
  5619  0B31  3002               	movlw	2
  5620  0B32  0781               	addwf	1,f
  5621  0B33  3F00               	moviw [0]fsr0
  5622  0B34  0021               	movlb	1	; select bank1
  5623  0B35  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5624  0B36  3F01               	moviw [1]fsr0
  5625  0B37  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5626  0B38  086A               	movf	??_vfpfcnvrt^(0+128),w
  5627  0B39  0022               	movlb	2	; select bank2
  5628  0B3A  00A0               	movwf	vfpfcnvrt@ll^(0+256)
  5629  0B3B  0021               	movlb	1	; select bank1
  5630  0B3C  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5631  0B3D  0022               	movlb	2	; select bank2
  5632  0B3E  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+256)
  5633  0B3F  0D89               	rlf	9,f
  5634  0B40  3B89               	subwfb	9,f
  5635  0B41  0989               	comf	9,f
  5636  0B42  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+256)
  5637  0B43  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+256)
  5638  0B44  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+256)
  5639  0B45  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+256)
  5640  0B46  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+256)
  5641  0B47  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+256)
  5642  0B48                     l6549:	
  5643                           
  5644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5645  0B48  0820               	movf	vfpfcnvrt@ll^(0+256),w
  5646  0B49  0020               	movlb	0	; select bank0
  5647  0B4A  00B0               	movwf	dtoa@d
  5648  0B4B  0022               	movlb	2	; select bank2
  5649  0B4C  0821               	movf	(vfpfcnvrt@ll+1)^(0+256),w
  5650  0B4D  0020               	movlb	0	; select bank0
  5651  0B4E  00B1               	movwf	dtoa@d+1
  5652  0B4F  0022               	movlb	2	; select bank2
  5653  0B50  0822               	movf	(vfpfcnvrt@ll+2)^(0+256),w
  5654  0B51  0020               	movlb	0	; select bank0
  5655  0B52  00B2               	movwf	dtoa@d+2
  5656  0B53  0022               	movlb	2	; select bank2
  5657  0B54  0823               	movf	(vfpfcnvrt@ll+3)^(0+256),w
  5658  0B55  0020               	movlb	0	; select bank0
  5659  0B56  00B3               	movwf	dtoa@d+3
  5660  0B57  0022               	movlb	2	; select bank2
  5661  0B58  0824               	movf	(vfpfcnvrt@ll+4)^(0+256),w
  5662  0B59  0020               	movlb	0	; select bank0
  5663  0B5A  00B4               	movwf	dtoa@d+4
  5664  0B5B  0022               	movlb	2	; select bank2
  5665  0B5C  0825               	movf	(vfpfcnvrt@ll+5)^(0+256),w
  5666  0B5D  0020               	movlb	0	; select bank0
  5667  0B5E  00B5               	movwf	dtoa@d+5
  5668  0B5F  0022               	movlb	2	; select bank2
  5669  0B60  0826               	movf	(vfpfcnvrt@ll+6)^(0+256),w
  5670  0B61  0020               	movlb	0	; select bank0
  5671  0B62  00B6               	movwf	dtoa@d+6
  5672  0B63  0022               	movlb	2	; select bank2
  5673  0B64  0827               	movf	(vfpfcnvrt@ll+7)^(0+256),w
  5674  0B65  0020               	movlb	0	; select bank0
  5675  0B66  00B7               	movwf	dtoa@d+7
  5676  0B67  0022               	movlb	2	; select bank2
  5677  0B68  0834               	movf	vfpfcnvrt@fp^(0+256),w
  5678  0B69  3190  206E  3189   	fcall	_dtoa
  5679  0B6C  0020               	movlb	0	; select bank0
  5680  0B6D  0831               	movf	?_dtoa+1,w
  5681  0B6E  00EF               	movwf	?_vfpfcnvrt+1
  5682  0B6F  0830               	movf	?_dtoa,w
  5683  0B70  00EE               	movwf	?_vfpfcnvrt
  5684  0B71  2CE1               	goto	l777
  5685  0B72                     l6553:	
  5686                           
  5687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5688  0B72  3066               	movlw	102
  5689  0B73  0022               	movlb	2	; select bank2
  5690  0B74  062C               	xorwf	vfpfcnvrt@ct^(0+256),w
  5691  0B75  1D03               	btfss	3,2
  5692  0B76  2B78               	goto	u8811
  5693  0B77  2B79               	goto	u8810
  5694  0B78                     u8811:	
  5695  0B78  2BCC               	goto	l6565
  5696  0B79                     u8810:	
  5697  0B79                     l6555:	
  5698                           
  5699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5700  0B79  0020               	movlb	0	; select bank0
  5701  0B7A  086E               	movf	vfpfcnvrt@fmt,w
  5702  0B7B  0086               	movwf	6
  5703  0B7C  3001               	movlw	1	; select bank2/3
  5704  0B7D  0087               	movwf	7
  5705  0B7E  3F40               	moviw [0]fsr1
  5706  0B7F  0021               	movlb	1	; select bank1
  5707  0B80  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5708  0B81  3F41               	moviw [1]fsr1
  5709  0B82  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5710  0B83  086A               	movf	??_vfpfcnvrt^(0+128),w
  5711  0B84  0084               	movwf	4
  5712  0B85  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5713  0B86  0085               	movwf	5
  5714  0B87  0800               	movf	0,w	;code access
  5715  0B88  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5716  0B89  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5717  0B8A  0022               	movlb	2	; select bank2
  5718  0B8B  00B3               	movwf	vfpfcnvrt@c^(0+256)
  5719  0B8C                     l6557:	
  5720                           
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5722  0B8C  0020               	movlb	0	; select bank0
  5723  0B8D  086E               	movf	vfpfcnvrt@fmt,w
  5724  0B8E  0086               	movwf	6
  5725  0B8F  3001               	movlw	1	; select bank2/3
  5726  0B90  0087               	movwf	7
  5727  0B91  3001               	movlw	1
  5728  0B92  0781               	addwf	1,f
  5729  0B93  3141               	addfsr 1,1
  5730  0B94  1803               	skipnc
  5731  0B95  0A81               	incf	1,f
  5732  0B96                     l6559:	
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5735  0B96  086F               	movf	vfpfcnvrt@ap,w
  5736  0B97  0086               	movwf	6
  5737  0B98  3001               	movlw	1	; select bank2/3
  5738  0B99  0087               	movwf	7
  5739  0B9A  0801               	movf	1,w
  5740  0B9B  0084               	movwf	4
  5741  0B9C  3001               	movlw	1	; select bank2/3
  5742  0B9D  0085               	movwf	5
  5743  0B9E  3004               	movlw	4
  5744  0B9F  0781               	addwf	1,f
  5745  0BA0  3F00               	moviw [0]fsr0
  5746  0BA1  0022               	movlb	2	; select bank2
  5747  0BA2  00AF               	movwf	vfpfcnvrt@f^(0+256)
  5748  0BA3  3F01               	moviw [1]fsr0
  5749  0BA4  00B0               	movwf	(vfpfcnvrt@f+1)^(0+256)
  5750  0BA5  3F02               	moviw [2]fsr0
  5751  0BA6  00B1               	movwf	(vfpfcnvrt@f+2)^(0+256)
  5752  0BA7  3F03               	moviw [3]fsr0
  5753  0BA8  00B2               	movwf	(vfpfcnvrt@f+3)^(0+256)
  5754  0BA9                     l6561:	
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5757  0BA9  0832               	movf	(vfpfcnvrt@f+3)^(0+256),w
  5758  0BAA  0021               	movlb	1	; select bank1
  5759  0BAB  00AB               	movwf	(efgtoa@f+3)^(0+128)
  5760  0BAC  0022               	movlb	2	; select bank2
  5761  0BAD  0831               	movf	(vfpfcnvrt@f+2)^(0+256),w
  5762  0BAE  0021               	movlb	1	; select bank1
  5763  0BAF  00AA               	movwf	(efgtoa@f+2)^(0+128)
  5764  0BB0  0022               	movlb	2	; select bank2
  5765  0BB1  0830               	movf	(vfpfcnvrt@f+1)^(0+256),w
  5766  0BB2  0021               	movlb	1	; select bank1
  5767  0BB3  00A9               	movwf	(efgtoa@f+1)^(0+128)
  5768  0BB4  0022               	movlb	2	; select bank2
  5769  0BB5  082F               	movf	vfpfcnvrt@f^(0+256),w
  5770  0BB6  0021               	movlb	1	; select bank1
  5771  0BB7  00A8               	movwf	efgtoa@f^(0+128)
  5772  0BB8  0022               	movlb	2	; select bank2
  5773  0BB9  0833               	movf	vfpfcnvrt@c^(0+256),w
  5774  0BBA  0021               	movlb	1	; select bank1
  5775  0BBB  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5776  0BBC  086A               	movf	??_vfpfcnvrt^(0+128),w
  5777  0BBD  00AC               	movwf	efgtoa@c^(0+128)
  5778  0BBE  0022               	movlb	2	; select bank2
  5779  0BBF  0834               	movf	vfpfcnvrt@fp^(0+256),w
  5780  0BC0  3180  20DA  3189   	fcall	_efgtoa
  5781  0BC3  0021               	movlb	1	; select bank1
  5782  0BC4  0829               	movf	(?_efgtoa+1)^(0+128),w
  5783  0BC5  0020               	movlb	0	; select bank0
  5784  0BC6  00EF               	movwf	?_vfpfcnvrt+1
  5785  0BC7  0021               	movlb	1	; select bank1
  5786  0BC8  0828               	movf	?_efgtoa^(0+128),w
  5787  0BC9  0020               	movlb	0	; select bank0
  5788  0BCA  00EE               	movwf	?_vfpfcnvrt
  5789  0BCB  2CE1               	goto	l777
  5790  0BCC                     l6565:	
  5791                           
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5793  0BCC  3067               	movlw	low (STR_42| (0+32768))
  5794  0BCD  00F1               	movwf	strncmp@_r
  5795  0BCE  30A8               	movlw	high (STR_42| (0+32768))
  5796  0BCF  00F2               	movwf	strncmp@_r+1
  5797  0BD0  3002               	movlw	2
  5798  0BD1  00F3               	movwf	strncmp@n
  5799  0BD2  3000               	movlw	0
  5800  0BD3  00F4               	movwf	strncmp@n+1
  5801  0BD4  302C               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  5802  0BD5  31A6  2617  3189   	fcall	_strncmp
  5803  0BD8  0871               	movf	?_strncmp,w
  5804  0BD9  0472               	iorwf	?_strncmp+1,w
  5805  0BDA  1D03               	btfss	3,2
  5806  0BDB  2BDD               	goto	u8821
  5807  0BDC  2BDE               	goto	u8820
  5808  0BDD                     u8821:	
  5809  0BDD  2C7A               	goto	l6583
  5810  0BDE                     u8820:	
  5811  0BDE                     l6567:	
  5812                           
  5813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5814  0BDE  0020               	movlb	0	; select bank0
  5815  0BDF  086E               	movf	vfpfcnvrt@fmt,w
  5816  0BE0  0086               	movwf	6
  5817  0BE1  3001               	movlw	1	; select bank2/3
  5818  0BE2  0087               	movwf	7
  5819  0BE3  3F40               	moviw [0]fsr1
  5820  0BE4  0021               	movlb	1	; select bank1
  5821  0BE5  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5822  0BE6  3F41               	moviw [1]fsr1
  5823  0BE7  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5824  0BE8  3001               	movlw	1
  5825  0BE9  076A               	addwf	??_vfpfcnvrt^(0+128),w
  5826  0BEA  0084               	movwf	4
  5827  0BEB  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  5828  0BEC  1803               	skipnc
  5829  0BED  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  5830  0BEE  0085               	movwf	5
  5831  0BEF  0800               	movf	0,w	;code access
  5832  0BF0  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5833  0BF1  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5834  0BF2  0022               	movlb	2	; select bank2
  5835  0BF3  00B3               	movwf	vfpfcnvrt@c^(0+256)
  5836  0BF4  0020               	movlb	0	; select bank0
  5837  0BF5  086E               	movf	vfpfcnvrt@fmt,w
  5838  0BF6  0086               	movwf	6
  5839  0BF7  3001               	movlw	1	; select bank2/3
  5840  0BF8  0087               	movwf	7
  5841  0BF9  3F40               	moviw [0]fsr1
  5842  0BFA  0021               	movlb	1	; select bank1
  5843  0BFB  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5844  0BFC  3F41               	moviw [1]fsr1
  5845  0BFD  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5846  0BFE  086A               	movf	??_vfpfcnvrt^(0+128),w
  5847  0BFF  0084               	movwf	4
  5848  0C00  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5849  0C01  0085               	movwf	5
  5850  0C02  0800               	movf	0,w	;code access
  5851  0C03  3EBF               	addlw	191
  5852  0C04  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5853  0C05  30FF               	movlw	255
  5854  0C06  1803               	skipnc
  5855  0C07  3000               	movlw	0
  5856  0C08  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  5857  0C09  3000               	movlw	0
  5858  0C0A  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  5859  0C0B  301A               	movlw	26
  5860  0C0C  1903               	skipnz
  5861  0C0D  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  5862  0C0E  1C03               	skipc
  5863  0C0F  2C11               	goto	u8831
  5864  0C10  2C13               	goto	u8830
  5865  0C11                     u8831:	
  5866  0C11  3001               	movlw	1
  5867  0C12  2C14               	goto	u8840
  5868  0C13                     u8830:	
  5869  0C13  3000               	movlw	0
  5870  0C14                     u8840:	
  5871  0C14  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5872  0C15  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  5873  0C16  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5874  0C17  0022               	movlb	2	; select bank2
  5875  0C18  00AA               	movwf	_vfpfcnvrt$580^(0+256)
  5876  0C19  0021               	movlb	1	; select bank1
  5877  0C1A  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  5878  0C1B  0022               	movlb	2	; select bank2
  5879  0C1C  00AB               	movwf	(_vfpfcnvrt$580+1)^(0+256)
  5880  0C1D                     l6571:	
  5881  0C1D  082A               	movf	_vfpfcnvrt$580^(0+256),w
  5882  0C1E  042B               	iorwf	(_vfpfcnvrt$580+1)^(0+256),w
  5883  0C1F  1903               	btfsc	3,2
  5884  0C20  2C22               	goto	u8851
  5885  0C21  2C23               	goto	u8850
  5886  0C22                     u8851:	
  5887  0C22  2C38               	goto	l6575
  5888  0C23                     u8850:	
  5889  0C23                     l6573:	
  5890                           
  5891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5892  0C23  0020               	movlb	0	; select bank0
  5893  0C24  086F               	movf	vfpfcnvrt@ap,w
  5894  0C25  0086               	movwf	6
  5895  0C26  3001               	movlw	1	; select bank2/3
  5896  0C27  0087               	movwf	7
  5897  0C28  0801               	movf	1,w
  5898  0C29  0084               	movwf	4
  5899  0C2A  3001               	movlw	1	; select bank2/3
  5900  0C2B  0085               	movwf	5
  5901  0C2C  3004               	movlw	4
  5902  0C2D  0781               	addwf	1,f
  5903  0C2E  3F00               	moviw [0]fsr0
  5904  0C2F  0022               	movlb	2	; select bank2
  5905  0C30  00AF               	movwf	vfpfcnvrt@f^(0+256)
  5906  0C31  3F01               	moviw [1]fsr0
  5907  0C32  00B0               	movwf	(vfpfcnvrt@f+1)^(0+256)
  5908  0C33  3F02               	moviw [2]fsr0
  5909  0C34  00B1               	movwf	(vfpfcnvrt@f+2)^(0+256)
  5910  0C35  3F03               	moviw [3]fsr0
  5911  0C36  00B2               	movwf	(vfpfcnvrt@f+3)^(0+256)
  5912                           
  5913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5914  0C37  2C4C               	goto	l6577
  5915  0C38                     l6575:	
  5916                           
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5918  0C38  0020               	movlb	0	; select bank0
  5919  0C39  086F               	movf	vfpfcnvrt@ap,w
  5920  0C3A  0086               	movwf	6
  5921  0C3B  3001               	movlw	1	; select bank2/3
  5922  0C3C  0087               	movwf	7
  5923  0C3D  0801               	movf	1,w
  5924  0C3E  0084               	movwf	4
  5925  0C3F  3001               	movlw	1	; select bank2/3
  5926  0C40  0085               	movwf	5
  5927  0C41  3004               	movlw	4
  5928  0C42  0781               	addwf	1,f
  5929  0C43  3F00               	moviw [0]fsr0
  5930  0C44  0022               	movlb	2	; select bank2
  5931  0C45  00AF               	movwf	vfpfcnvrt@f^(0+256)
  5932  0C46  3F01               	moviw [1]fsr0
  5933  0C47  00B0               	movwf	(vfpfcnvrt@f+1)^(0+256)
  5934  0C48  3F02               	moviw [2]fsr0
  5935  0C49  00B1               	movwf	(vfpfcnvrt@f+2)^(0+256)
  5936  0C4A  3F03               	moviw [3]fsr0
  5937  0C4B  00B2               	movwf	(vfpfcnvrt@f+3)^(0+256)
  5938  0C4C                     l6577:	
  5939                           
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5941  0C4C  0020               	movlb	0	; select bank0
  5942  0C4D  086E               	movf	vfpfcnvrt@fmt,w
  5943  0C4E  0086               	movwf	6
  5944  0C4F  3001               	movlw	1	; select bank2/3
  5945  0C50  0087               	movwf	7
  5946  0C51  3002               	movlw	2
  5947  0C52  0781               	addwf	1,f
  5948  0C53  3141               	addfsr 1,1
  5949  0C54  1803               	skipnc
  5950  0C55  0A81               	incf	1,f
  5951  0C56                     l6579:	
  5952                           
  5953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  5954  0C56  0022               	movlb	2	; select bank2
  5955  0C57  0832               	movf	(vfpfcnvrt@f+3)^(0+256),w
  5956  0C58  0021               	movlb	1	; select bank1
  5957  0C59  00AB               	movwf	(efgtoa@f+3)^(0+128)
  5958  0C5A  0022               	movlb	2	; select bank2
  5959  0C5B  0831               	movf	(vfpfcnvrt@f+2)^(0+256),w
  5960  0C5C  0021               	movlb	1	; select bank1
  5961  0C5D  00AA               	movwf	(efgtoa@f+2)^(0+128)
  5962  0C5E  0022               	movlb	2	; select bank2
  5963  0C5F  0830               	movf	(vfpfcnvrt@f+1)^(0+256),w
  5964  0C60  0021               	movlb	1	; select bank1
  5965  0C61  00A9               	movwf	(efgtoa@f+1)^(0+128)
  5966  0C62  0022               	movlb	2	; select bank2
  5967  0C63  082F               	movf	vfpfcnvrt@f^(0+256),w
  5968  0C64  0021               	movlb	1	; select bank1
  5969  0C65  00A8               	movwf	efgtoa@f^(0+128)
  5970  0C66  0022               	movlb	2	; select bank2
  5971  0C67  0833               	movf	vfpfcnvrt@c^(0+256),w
  5972  0C68  0021               	movlb	1	; select bank1
  5973  0C69  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5974  0C6A  086A               	movf	??_vfpfcnvrt^(0+128),w
  5975  0C6B  00AC               	movwf	efgtoa@c^(0+128)
  5976  0C6C  0022               	movlb	2	; select bank2
  5977  0C6D  0834               	movf	vfpfcnvrt@fp^(0+256),w
  5978  0C6E  3180  20DA  3189   	fcall	_efgtoa
  5979  0C71  0021               	movlb	1	; select bank1
  5980  0C72  0829               	movf	(?_efgtoa+1)^(0+128),w
  5981  0C73  0020               	movlb	0	; select bank0
  5982  0C74  00EF               	movwf	?_vfpfcnvrt+1
  5983  0C75  0021               	movlb	1	; select bank1
  5984  0C76  0828               	movf	?_efgtoa^(0+128),w
  5985  0C77  0020               	movlb	0	; select bank0
  5986  0C78  00EE               	movwf	?_vfpfcnvrt
  5987  0C79  2CE1               	goto	l777
  5988  0C7A                     l6583:	
  5989                           
  5990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5991  0C7A  0020               	movlb	0	; select bank0
  5992  0C7B  086E               	movf	vfpfcnvrt@fmt,w
  5993  0C7C  0086               	movwf	6
  5994  0C7D  3001               	movlw	1	; select bank2/3
  5995  0C7E  0087               	movwf	7
  5996  0C7F  3F40               	moviw [0]fsr1
  5997  0C80  0021               	movlb	1	; select bank1
  5998  0C81  00EA               	movwf	??_vfpfcnvrt^(0+128)
  5999  0C82  3F41               	moviw [1]fsr1
  6000  0C83  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6001  0C84  086A               	movf	??_vfpfcnvrt^(0+128),w
  6002  0C85  0084               	movwf	4
  6003  0C86  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6004  0C87  0085               	movwf	5
  6005  0C88  0012               	moviw fsr0++
  6006  0C89  3A25               	xorlw	37
  6007  0C8A  1D03               	btfss	3,2
  6008  0C8B  2C8D               	goto	u8861
  6009  0C8C  2C8E               	goto	u8860
  6010  0C8D                     u8861:	
  6011  0C8D  2CAB               	goto	l6593
  6012  0C8E                     u8860:	
  6013  0C8E                     l6585:	
  6014                           
  6015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6016  0C8E  0020               	movlb	0	; select bank0
  6017  0C8F  086E               	movf	vfpfcnvrt@fmt,w
  6018  0C90  0086               	movwf	6
  6019  0C91  3001               	movlw	1	; select bank2/3
  6020  0C92  0087               	movwf	7
  6021  0C93  3001               	movlw	1
  6022  0C94  0781               	addwf	1,f
  6023  0C95  3141               	addfsr 1,1
  6024  0C96  1803               	skipnc
  6025  0C97  0A81               	incf	1,f
  6026  0C98                     l6587:	
  6027                           
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6029  0C98  3025               	movlw	37
  6030  0C99  00F1               	movwf	fputc@c
  6031  0C9A  3000               	movlw	0
  6032  0C9B  00F2               	movwf	fputc@c+1
  6033  0C9C  0022               	movlb	2	; select bank2
  6034  0C9D  0834               	movf	vfpfcnvrt@fp^(0+256),w
  6035  0C9E  0021               	movlb	1	; select bank1
  6036  0C9F  00EA               	movwf	??_vfpfcnvrt^(0+128)
  6037  0CA0  086A               	movf	??_vfpfcnvrt^(0+128),w
  6038  0CA1  00F3               	movwf	fputc@fp
  6039  0CA2  31A5  2510  3189   	fcall	_fputc
  6040  0CA5                     l6589:	
  6041                           
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6043  0CA5  3001               	movlw	1
  6044  0CA6  0020               	movlb	0	; select bank0
  6045  0CA7  00EE               	movwf	?_vfpfcnvrt
  6046  0CA8  3000               	movlw	0
  6047  0CA9  00EF               	movwf	?_vfpfcnvrt+1
  6048  0CAA  2CE1               	goto	l777
  6049  0CAB                     l6593:	
  6050                           
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6052  0CAB  0020               	movlb	0	; select bank0
  6053  0CAC  086E               	movf	vfpfcnvrt@fmt,w
  6054  0CAD  0086               	movwf	6
  6055  0CAE  3001               	movlw	1	; select bank2/3
  6056  0CAF  0087               	movwf	7
  6057  0CB0  3001               	movlw	1
  6058  0CB1  0781               	addwf	1,f
  6059  0CB2  3141               	addfsr 1,1
  6060  0CB3  1803               	skipnc
  6061  0CB4  0A81               	incf	1,f
  6062  0CB5                     l6595:	
  6063                           
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6065  0CB5  01EE               	clrf	?_vfpfcnvrt
  6066  0CB6  01EF               	clrf	?_vfpfcnvrt+1
  6067  0CB7  2CE1               	goto	l777
  6068  0CB8                     l6599:	
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6071  0CB8  0020               	movlb	0	; select bank0
  6072  0CB9  086E               	movf	vfpfcnvrt@fmt,w
  6073  0CBA  0086               	movwf	6
  6074  0CBB  3001               	movlw	1	; select bank2/3
  6075  0CBC  0087               	movwf	7
  6076  0CBD  3F40               	moviw [0]fsr1
  6077  0CBE  0021               	movlb	1	; select bank1
  6078  0CBF  00EA               	movwf	??_vfpfcnvrt^(0+128)
  6079  0CC0  3F41               	moviw [1]fsr1
  6080  0CC1  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6081  0CC2  086A               	movf	??_vfpfcnvrt^(0+128),w
  6082  0CC3  0084               	movwf	4
  6083  0CC4  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6084  0CC5  0085               	movwf	5
  6085  0CC6  0800               	movf	0,w	;code access
  6086  0CC7  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6087  0CC8  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6088  0CC9  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6089  0CCA  00F1               	movwf	fputc@c
  6090  0CCB  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6091  0CCC  00F2               	movwf	fputc@c+1
  6092  0CCD  0022               	movlb	2	; select bank2
  6093  0CCE  0834               	movf	vfpfcnvrt@fp^(0+256),w
  6094  0CCF  0021               	movlb	1	; select bank1
  6095  0CD0  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6096  0CD1  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6097  0CD2  00F3               	movwf	fputc@fp
  6098  0CD3  31A5  2510  3189   	fcall	_fputc
  6099  0CD6                     l6601:	
  6100                           
  6101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6102  0CD6  0020               	movlb	0	; select bank0
  6103  0CD7  086E               	movf	vfpfcnvrt@fmt,w
  6104  0CD8  0086               	movwf	6
  6105  0CD9  3001               	movlw	1	; select bank2/3
  6106  0CDA  0087               	movwf	7
  6107  0CDB  3001               	movlw	1
  6108  0CDC  0781               	addwf	1,f
  6109  0CDD  3141               	addfsr 1,1
  6110  0CDE  1803               	skipnc
  6111  0CDF  0A81               	incf	1,f
  6112  0CE0  2CA5               	goto	l6589
  6113  0CE1                     l777:	
  6114  0CE1  0008               	return
  6115  0CE2                     __end_of_vfpfcnvrt:	
  6116                           
  6117                           	psect	text15
  6118  2617                     __ptext15:	
  6119 ;; *************** function _strncmp *****************
  6120 ;; Defined at:
  6121 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  _l              1    wreg     PTR const unsigned char 
  6124 ;;		 -> vfpfcnvrt@ct(3), 
  6125 ;;  _r              2    1[COMMON] PTR const unsigned char 
  6126 ;;		 -> STR_44(3), 
  6127 ;;  n               2    3[COMMON] unsigned int 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  _l              1    6[COMMON] PTR const unsigned char 
  6130 ;;		 -> vfpfcnvrt@ct(3), 
  6131 ;;  r               2    7[COMMON] PTR const unsigned char 
  6132 ;;		 -> STR_44(3), 
  6133 ;;  l               1    9[COMMON] PTR const unsigned char 
  6134 ;;		 -> vfpfcnvrt@ct(3), 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  2    1[COMMON] int 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;Total ram usage:        9 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    1
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_vfpfcnvrt
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _strncmp
  6160  2617                     _strncmp:	
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6164                           ;strncmp@_l stored from wreg
  6165  2617  00F6               	movwf	strncmp@_l
  6166  2618                     l5005:	
  6167  2618  0876               	movf	strncmp@_l,w
  6168  2619  00F5               	movwf	??_strncmp
  6169  261A  0875               	movf	??_strncmp,w
  6170  261B  00F9               	movwf	strncmp@l
  6171  261C  0872               	movf	strncmp@_r+1,w
  6172  261D  00F8               	movwf	strncmp@r+1
  6173  261E  0871               	movf	strncmp@_r,w
  6174  261F  00F7               	movwf	strncmp@r
  6175  2620                     l5007:	
  6176  2620  3001               	movlw	1
  6177  2621  02F3               	subwf	strncmp@n,f
  6178  2622  3000               	movlw	0
  6179  2623  3BF4               	subwfb	strncmp@n+1,f
  6180  2624  0A73               	incf	strncmp@n,w
  6181  2625  1D03               	skipz
  6182  2626  2E2B               	goto	u6711
  6183  2627  0A74               	incf	strncmp@n+1,w
  6184  2628  1D03               	btfss	3,2
  6185  2629  2E2B               	goto	u6711
  6186  262A  2E2C               	goto	u6710
  6187  262B                     u6711:	
  6188  262B  2E3B               	goto	l5019
  6189  262C                     u6710:	
  6190  262C                     l5009:	
  6191  262C  01F1               	clrf	?_strncmp
  6192  262D  01F2               	clrf	?_strncmp+1
  6193  262E  2E71               	goto	l1379
  6194  262F                     l5013:	
  6195  262F  3001               	movlw	1
  6196  2630  00F5               	movwf	??_strncmp
  6197  2631  0875               	movf	??_strncmp,w
  6198  2632  07F9               	addwf	strncmp@l,f
  6199  2633                     l5015:	
  6200  2633  3001               	movlw	1
  6201  2634  07F7               	addwf	strncmp@r,f
  6202  2635  3000               	movlw	0
  6203  2636  3DF8               	addwfc	strncmp@r+1,f
  6204  2637                     l5017:	
  6205  2637  3001               	movlw	1
  6206  2638  02F3               	subwf	strncmp@n,f
  6207  2639  3000               	movlw	0
  6208  263A  3BF4               	subwfb	strncmp@n+1,f
  6209  263B                     l5019:	
  6210  263B  0879               	movf	strncmp@l,w
  6211  263C  0086               	movwf	6
  6212  263D  3001               	movlw	1	; select bank2/3
  6213  263E  0087               	movwf	7
  6214  263F  0801               	movf	1,w
  6215  2640  1903               	btfsc	3,2
  6216  2641  2E43               	goto	u6721
  6217  2642  2E44               	goto	u6720
  6218  2643                     u6721:	
  6219  2643  2E63               	goto	l5027
  6220  2644                     u6720:	
  6221  2644                     l5021:	
  6222  2644  0877               	movf	strncmp@r,w
  6223  2645  0084               	movwf	4
  6224  2646  0878               	movf	strncmp@r+1,w
  6225  2647  0085               	movwf	5
  6226  2648  0012               	moviw fsr0++
  6227  2649  1903               	btfsc	3,2
  6228  264A  2E4C               	goto	u6731
  6229  264B  2E4D               	goto	u6730
  6230  264C                     u6731:	
  6231  264C  2E63               	goto	l5027
  6232  264D                     u6730:	
  6233  264D                     l5023:	
  6234  264D  0873               	movf	strncmp@n,w
  6235  264E  0474               	iorwf	strncmp@n+1,w
  6236  264F  1903               	btfsc	3,2
  6237  2650  2E52               	goto	u6741
  6238  2651  2E53               	goto	u6740
  6239  2652                     u6741:	
  6240  2652  2E63               	goto	l5027
  6241  2653                     u6740:	
  6242  2653                     l5025:	
  6243  2653  0877               	movf	strncmp@r,w
  6244  2654  0084               	movwf	4
  6245  2655  0878               	movf	strncmp@r+1,w
  6246  2656  0085               	movwf	5
  6247  2657  0800               	movf	0,w	;code access
  6248  2658  00F5               	movwf	??_strncmp
  6249  2659  0879               	movf	strncmp@l,w
  6250  265A  0086               	movwf	6
  6251  265B  3001               	movlw	1	; select bank2/3
  6252  265C  0087               	movwf	7
  6253  265D  0801               	movf	1,w
  6254  265E  0675               	xorwf	??_strncmp,w
  6255  265F  1903               	skipnz
  6256  2660  2E62               	goto	u6751
  6257  2661  2E63               	goto	u6750
  6258  2662                     u6751:	
  6259  2662  2E2F               	goto	l5013
  6260  2663                     u6750:	
  6261  2663                     l5027:	
  6262  2663  0879               	movf	strncmp@l,w
  6263  2664  0086               	movwf	6
  6264  2665  3001               	movlw	1	; select bank2/3
  6265  2666  0087               	movwf	7
  6266  2667  0877               	movf	strncmp@r,w
  6267  2668  0084               	movwf	4
  6268  2669  0878               	movf	strncmp@r+1,w
  6269  266A  0085               	movwf	5
  6270  266B  0800               	movf	0,w	;code access
  6271  266C  0201               	subwf	1,w
  6272  266D  00F1               	movwf	?_strncmp
  6273  266E  01F2               	clrf	?_strncmp+1
  6274  266F  1C03               	skipc
  6275  2670  03F2               	decf	?_strncmp+1,f
  6276  2671                     l1379:	
  6277  2671  0008               	return
  6278  2672                     __end_of_strncmp:	
  6279                           
  6280                           	psect	text16
  6281  00DA                     __ptext16:	
  6282 ;; *************** function _efgtoa *****************
  6283 ;; Defined at:
  6284 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  fp              1    wreg     PTR struct _IO_FILE
  6287 ;;		 -> sprintf@f(5), 
  6288 ;;  f               4    8[BANK1 ] PTR struct _IO_FILE
  6289 ;;  c               1   12[BANK1 ] unsigned char 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  6292 ;;		 -> sprintf@f(5), 
  6293 ;;  u               4   70[BANK1 ] PTR struct _IO_FILE
  6294 ;;  g               4   62[BANK1 ] PTR struct _IO_FILE
  6295 ;;  l               4   56[BANK1 ] PTR struct _IO_FILE
  6296 ;;  h               4   52[BANK1 ] PTR struct _IO_FILE
  6297 ;;  ou              4   17[BANK1 ] PTR struct _IO_FILE
  6298 ;;  n               2   68[BANK1 ] int 
  6299 ;;  e               2   66[BANK1 ] int 
  6300 ;;  i               2   60[BANK1 ] int 
  6301 ;;  w               2   49[BANK1 ] int 
  6302 ;;  p               2   46[BANK1 ] int 
  6303 ;;  sign            2   44[BANK1 ] int 
  6304 ;;  d               2   41[BANK1 ] int 
  6305 ;;  ne              2   39[BANK1 ] int 
  6306 ;;  m               2   37[BANK1 ] int 
  6307 ;;  pp              2   35[BANK1 ] int 
  6308 ;;  t               2   33[BANK1 ] int 
  6309 ;;  mode            1   51[BANK1 ] unsigned char 
  6310 ;;  nmode           1   48[BANK1 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2    8[BANK1 ] int 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6320 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;Total ram usage:       66 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    5
  6327 ;; This function calls:
  6328 ;;		___awdiv
  6329 ;;		___awmod
  6330 ;;		___fladd
  6331 ;;		___fldiv
  6332 ;;		___fleq
  6333 ;;		___flge
  6334 ;;		___flmul
  6335 ;;		___flneg
  6336 ;;		___flsub
  6337 ;;		___fltol
  6338 ;;		___fpclassifyf
  6339 ;;		_floorf
  6340 ;;		_isupper
  6341 ;;		_pad
  6342 ;;		_strcpy
  6343 ;;		_tolower
  6344 ;; This function is called by:
  6345 ;;		_vfpfcnvrt
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _efgtoa
  6351  00DA                     _efgtoa:	
  6352                           
  6353                           ;incstack = 0
  6354                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6355                           ;efgtoa@fp stored from wreg
  6356  00DA  0021               	movlb	1	; select bank1
  6357  00DB  00CB               	movwf	efgtoa@fp^(0+128)
  6358  00DC                     l6163:	
  6359                           
  6360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  6361  00DC  01CC               	clrf	efgtoa@sign^(0+128)
  6362  00DD  01CD               	clrf	(efgtoa@sign+1)^(0+128)
  6363  00DE                     l6165:	
  6364                           
  6365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  6366  00DE  082B               	movf	(efgtoa@f+3)^(0+128),w
  6367  00DF  00E1               	movwf	(efgtoa@g+3)^(0+128)
  6368  00E0  082A               	movf	(efgtoa@f+2)^(0+128),w
  6369  00E1  00E0               	movwf	(efgtoa@g+2)^(0+128)
  6370  00E2  0829               	movf	(efgtoa@f+1)^(0+128),w
  6371  00E3  00DF               	movwf	(efgtoa@g+1)^(0+128)
  6372  00E4  0828               	movf	efgtoa@f^(0+128),w
  6373  00E5  00DE               	movwf	efgtoa@g^(0+128)
  6374  00E6                     l6167:	
  6375                           
  6376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  6377  00E6  0861               	movf	(efgtoa@g+3)^(0+128),w
  6378  00E7  0020               	movlb	0	; select bank0
  6379  00E8  00C3               	movwf	___flge@ff1+3
  6380  00E9  0021               	movlb	1	; select bank1
  6381  00EA  0860               	movf	(efgtoa@g+2)^(0+128),w
  6382  00EB  0020               	movlb	0	; select bank0
  6383  00EC  00C2               	movwf	___flge@ff1+2
  6384  00ED  0021               	movlb	1	; select bank1
  6385  00EE  085F               	movf	(efgtoa@g+1)^(0+128),w
  6386  00EF  0020               	movlb	0	; select bank0
  6387  00F0  00C1               	movwf	___flge@ff1+1
  6388  00F1  0021               	movlb	1	; select bank1
  6389  00F2  085E               	movf	efgtoa@g^(0+128),w
  6390  00F3  0020               	movlb	0	; select bank0
  6391  00F4  00C0               	movwf	___flge@ff1
  6392  00F5  3000               	movlw	0
  6393  00F6  00C7               	movwf	___flge@ff2+3
  6394  00F7  3000               	movlw	0
  6395  00F8  00C6               	movwf	___flge@ff2+2
  6396  00F9  3000               	movlw	0
  6397  00FA  00C5               	movwf	___flge@ff2+1
  6398  00FB  3000               	movlw	0
  6399  00FC  00C4               	movwf	___flge@ff2
  6400  00FD  3199  2189  3180   	fcall	___flge
  6401  0100  1803               	btfsc	3,0
  6402  0101  2903               	goto	u8121
  6403  0102  2904               	goto	u8120
  6404  0103                     u8121:	
  6405  0103  291D               	goto	l6173
  6406  0104                     u8120:	
  6407  0104                     l6169:	
  6408                           
  6409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  6410  0104  3001               	movlw	1
  6411  0105  0021               	movlb	1	; select bank1
  6412  0106  00CC               	movwf	efgtoa@sign^(0+128)
  6413  0107  3000               	movlw	0
  6414  0108  00CD               	movwf	(efgtoa@sign^(0+128)+1)
  6415  0109                     l6171:	
  6416                           
  6417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  6418  0109  0861               	movf	(efgtoa@g+3)^(0+128),w
  6419  010A  00F4               	movwf	___flneg@f1+3
  6420  010B  0860               	movf	(efgtoa@g+2)^(0+128),w
  6421  010C  00F3               	movwf	___flneg@f1+2
  6422  010D  085F               	movf	(efgtoa@g+1)^(0+128),w
  6423  010E  00F2               	movwf	___flneg@f1+1
  6424  010F  085E               	movf	efgtoa@g^(0+128),w
  6425  0110  00F1               	movwf	___flneg@f1
  6426  0111  3187  27F5  3180   	fcall	___flneg
  6427  0114  0874               	movf	?___flneg+3,w
  6428  0115  0021               	movlb	1	; select bank1
  6429  0116  00E1               	movwf	(efgtoa@g+3)^(0+128)
  6430  0117  0873               	movf	?___flneg+2,w
  6431  0118  00E0               	movwf	(efgtoa@g+2)^(0+128)
  6432  0119  0872               	movf	?___flneg+1,w
  6433  011A  00DF               	movwf	(efgtoa@g+1)^(0+128)
  6434  011B  0871               	movf	?___flneg,w
  6435  011C  00DE               	movwf	efgtoa@g^(0+128)
  6436  011D                     l6173:	
  6437                           
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  6439  011D  0021               	movlb	1	; select bank1
  6440  011E  01E4               	clrf	efgtoa@n^(0+128)
  6441  011F  01E5               	clrf	(efgtoa@n+1)^(0+128)
  6442  0120                     l6175:	
  6443                           
  6444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  6445  0120  0023               	movlb	3	; select bank3
  6446  0121  0837               	movf	(_width+1)^(0+384),w
  6447  0122  0021               	movlb	1	; select bank1
  6448  0123  00D2               	movwf	(efgtoa@w+1)^(0+128)
  6449  0124  0023               	movlb	3	; select bank3
  6450  0125  0836               	movf	_width^(0+384),w
  6451  0126  0021               	movlb	1	; select bank1
  6452  0127  00D1               	movwf	efgtoa@w^(0+128)
  6453  0128                     l6177:	
  6454                           
  6455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  6456  0128  084C               	movf	efgtoa@sign^(0+128),w
  6457  0129  044D               	iorwf	(efgtoa@sign+1)^(0+128),w
  6458  012A  1D03               	btfss	3,2
  6459  012B  292D               	goto	u8131
  6460  012C  292E               	goto	u8130
  6461  012D                     u8131:	
  6462  012D  2933               	goto	l6181
  6463  012E                     u8130:	
  6464  012E                     l6179:	
  6465  012E  0022               	movlb	2	; select bank2
  6466  012F  1D62               	btfss	_flags^(0+256),2
  6467  0130  2932               	goto	u8141
  6468  0131  2933               	goto	u8140
  6469  0132                     u8141:	
  6470  0132  2951               	goto	l6193
  6471  0133                     u8140:	
  6472  0133                     l6181:	
  6473                           
  6474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  6475  0133  0021               	movlb	1	; select bank1
  6476  0134  084C               	movf	efgtoa@sign^(0+128),w
  6477  0135  044D               	iorwf	(efgtoa@sign+1)^(0+128),w
  6478  0136  1D03               	btfss	3,2
  6479  0137  2939               	goto	u8151
  6480  0138  293A               	goto	u8150
  6481  0139                     u8151:	
  6482  0139  293F               	goto	l6185
  6483  013A                     u8150:	
  6484  013A                     l6183:	
  6485  013A  302B               	movlw	43
  6486  013B  00B5               	movwf	_efgtoa$550^(0+128)
  6487  013C  3000               	movlw	0
  6488  013D  00B6               	movwf	(_efgtoa$550^(0+128)+1)
  6489  013E  2943               	goto	l6187
  6490  013F                     l6185:	
  6491  013F  302D               	movlw	45
  6492  0140  00B5               	movwf	_efgtoa$550^(0+128)
  6493  0141  3000               	movlw	0
  6494  0142  00B6               	movwf	(_efgtoa$550^(0+128)+1)
  6495  0143                     l6187:	
  6496  0143  0835               	movf	_efgtoa$550^(0+128),w
  6497  0144  00AD               	movwf	??_efgtoa^(0+128)
  6498  0145  082D               	movf	??_efgtoa^(0+128),w
  6499  0146  0024               	movlb	4	; select bank4
  6500  0147  00A0               	movwf	_dbuf^(0+512)
  6501  0148                     l6189:	
  6502                           
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  6504  0148  3001               	movlw	1
  6505  0149  0021               	movlb	1	; select bank1
  6506  014A  07E4               	addwf	efgtoa@n^(0+128),f
  6507  014B  3000               	movlw	0
  6508  014C  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  6509  014D                     l6191:	
  6510                           
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  6512  014D  30FF               	movlw	255
  6513  014E  07D1               	addwf	efgtoa@w^(0+128),f
  6514  014F  30FF               	movlw	255
  6515  0150  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6516  0151                     l6193:	
  6517                           
  6518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6519  0151  0021               	movlb	1	; select bank1
  6520  0152  0861               	movf	(efgtoa@g+3)^(0+128),w
  6521  0153  00F4               	movwf	___fpclassifyf@x+3
  6522  0154  0860               	movf	(efgtoa@g+2)^(0+128),w
  6523  0155  00F3               	movwf	___fpclassifyf@x+2
  6524  0156  085F               	movf	(efgtoa@g+1)^(0+128),w
  6525  0157  00F2               	movwf	___fpclassifyf@x+1
  6526  0158  085E               	movf	efgtoa@g^(0+128),w
  6527  0159  00F1               	movwf	___fpclassifyf@x
  6528  015A  3199  210A  3180   	fcall	___fpclassifyf
  6529  015D  0371               	decf	?___fpclassifyf,w
  6530  015E  0472               	iorwf	?___fpclassifyf+1,w
  6531  015F  1D03               	btfss	3,2
  6532  0160  2962               	goto	u8161
  6533  0161  2963               	goto	u8160
  6534  0162                     u8161:	
  6535  0162  29B5               	goto	l6211
  6536  0163                     u8160:	
  6537  0163                     l6195:	
  6538  0163  0021               	movlb	1	; select bank1
  6539  0164  082C               	movf	efgtoa@c^(0+128),w
  6540  0165  3EBF               	addlw	191
  6541  0166  00AD               	movwf	??_efgtoa^(0+128)
  6542  0167  30FF               	movlw	255
  6543  0168  1803               	skipnc
  6544  0169  3000               	movlw	0
  6545  016A  00AE               	movwf	(??_efgtoa^(0+128)+1)
  6546  016B  3000               	movlw	0
  6547  016C  022E               	subwf	(??_efgtoa+1)^(0+128),w
  6548  016D  301A               	movlw	26
  6549  016E  1903               	skipnz
  6550  016F  022D               	subwf	??_efgtoa^(0+128),w
  6551  0170  1C03               	skipc
  6552  0171  2973               	goto	u8171
  6553  0172  2975               	goto	u8170
  6554  0173                     u8171:	
  6555  0173  3001               	movlw	1
  6556  0174  2976               	goto	u8180
  6557  0175                     u8170:	
  6558  0175  3000               	movlw	0
  6559  0176                     u8180:	
  6560  0176  00AF               	movwf	(??_efgtoa+2)^(0+128)
  6561  0177  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  6562  0178  082F               	movf	(??_efgtoa+2)^(0+128),w
  6563  0179  00B7               	movwf	_efgtoa$551^(0+128)
  6564  017A  0830               	movf	(??_efgtoa+3)^(0+128),w
  6565  017B  00B8               	movwf	(_efgtoa$551+1)^(0+128)
  6566  017C                     l6199:	
  6567  017C  0837               	movf	_efgtoa$551^(0+128),w
  6568  017D  0438               	iorwf	(_efgtoa$551+1)^(0+128),w
  6569  017E  1903               	btfsc	3,2
  6570  017F  2981               	goto	u8191
  6571  0180  2982               	goto	u8190
  6572  0181                     u8191:	
  6573  0181  298C               	goto	l6203
  6574  0182                     u8190:	
  6575  0182                     l6201:	
  6576                           
  6577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  6578  0182  304F               	movlw	low (STR_34| (0+32768))
  6579  0183  00F1               	movwf	strcpy@src
  6580  0184  30A8               	movlw	high (STR_34| (0+32768))
  6581  0185  00F2               	movwf	strcpy@src+1
  6582  0186  0864               	movf	efgtoa@n^(0+128),w
  6583  0187  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6584  0188  31A2  220C  3180   	fcall	_strcpy
  6585                           
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  6587  018B  2995               	goto	l6205
  6588  018C                     l6203:	
  6589                           
  6590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  6591  018C  3057               	movlw	low (STR_35| (0+32768))
  6592  018D  00F1               	movwf	strcpy@src
  6593  018E  30A8               	movlw	high (STR_35| (0+32768))
  6594  018F  00F2               	movwf	strcpy@src+1
  6595  0190  0864               	movf	efgtoa@n^(0+128),w
  6596  0191  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6597  0192  31A2  220C  3180   	fcall	_strcpy
  6598  0195                     l6205:	
  6599                           
  6600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6601  0195  30FD               	movlw	253
  6602  0196  0021               	movlb	1	; select bank1
  6603  0197  07D1               	addwf	efgtoa@w^(0+128),f
  6604  0198  30FF               	movlw	255
  6605  0199  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6606  019A                     l6207:	
  6607                           
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  6609  019A  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6610  019B  00AD               	movwf	??_efgtoa^(0+128)
  6611  019C  082D               	movf	??_efgtoa^(0+128),w
  6612  019D  0020               	movlb	0	; select bank0
  6613  019E  00A7               	movwf	pad@buf
  6614  019F  0021               	movlb	1	; select bank1
  6615  01A0  0852               	movf	(efgtoa@w+1)^(0+128),w
  6616  01A1  0020               	movlb	0	; select bank0
  6617  01A2  00A9               	movwf	pad@p+1
  6618  01A3  0021               	movlb	1	; select bank1
  6619  01A4  0851               	movf	efgtoa@w^(0+128),w
  6620  01A5  0020               	movlb	0	; select bank0
  6621  01A6  00A8               	movwf	pad@p
  6622  01A7  0021               	movlb	1	; select bank1
  6623  01A8  084B               	movf	efgtoa@fp^(0+128),w
  6624  01A9  31A5  25BE  3180   	fcall	_pad
  6625  01AC  0020               	movlb	0	; select bank0
  6626  01AD  0828               	movf	?_pad+1,w
  6627  01AE  0021               	movlb	1	; select bank1
  6628  01AF  00A9               	movwf	(?_efgtoa+1)^(0+128)
  6629  01B0  0020               	movlb	0	; select bank0
  6630  01B1  0827               	movf	?_pad,w
  6631  01B2  0021               	movlb	1	; select bank1
  6632  01B3  00A8               	movwf	?_efgtoa^(0+128)
  6633  01B4  2FBE               	goto	l685
  6634  01B5                     l6211:	
  6635                           
  6636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6637  01B5  0021               	movlb	1	; select bank1
  6638  01B6  0861               	movf	(efgtoa@g+3)^(0+128),w
  6639  01B7  00F4               	movwf	___fpclassifyf@x+3
  6640  01B8  0860               	movf	(efgtoa@g+2)^(0+128),w
  6641  01B9  00F3               	movwf	___fpclassifyf@x+2
  6642  01BA  085F               	movf	(efgtoa@g+1)^(0+128),w
  6643  01BB  00F2               	movwf	___fpclassifyf@x+1
  6644  01BC  085E               	movf	efgtoa@g^(0+128),w
  6645  01BD  00F1               	movwf	___fpclassifyf@x
  6646  01BE  3199  210A  3180   	fcall	___fpclassifyf
  6647  01C1  0871               	movf	?___fpclassifyf,w
  6648  01C2  0472               	iorwf	?___fpclassifyf+1,w
  6649  01C3  1D03               	btfss	3,2
  6650  01C4  29C6               	goto	u8201
  6651  01C5  29C7               	goto	u8200
  6652  01C6                     u8201:	
  6653  01C6  2A19               	goto	l6229
  6654  01C7                     u8200:	
  6655  01C7                     l6213:	
  6656  01C7  0021               	movlb	1	; select bank1
  6657  01C8  082C               	movf	efgtoa@c^(0+128),w
  6658  01C9  3EBF               	addlw	191
  6659  01CA  00AD               	movwf	??_efgtoa^(0+128)
  6660  01CB  30FF               	movlw	255
  6661  01CC  1803               	skipnc
  6662  01CD  3000               	movlw	0
  6663  01CE  00AE               	movwf	(??_efgtoa^(0+128)+1)
  6664  01CF  3000               	movlw	0
  6665  01D0  022E               	subwf	(??_efgtoa+1)^(0+128),w
  6666  01D1  301A               	movlw	26
  6667  01D2  1903               	skipnz
  6668  01D3  022D               	subwf	??_efgtoa^(0+128),w
  6669  01D4  1C03               	skipc
  6670  01D5  29D7               	goto	u8211
  6671  01D6  29D9               	goto	u8210
  6672  01D7                     u8211:	
  6673  01D7  3001               	movlw	1
  6674  01D8  29DA               	goto	u8220
  6675  01D9                     u8210:	
  6676  01D9  3000               	movlw	0
  6677  01DA                     u8220:	
  6678  01DA  00AF               	movwf	(??_efgtoa+2)^(0+128)
  6679  01DB  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  6680  01DC  082F               	movf	(??_efgtoa+2)^(0+128),w
  6681  01DD  00B9               	movwf	_efgtoa$555^(0+128)
  6682  01DE  0830               	movf	(??_efgtoa+3)^(0+128),w
  6683  01DF  00BA               	movwf	(_efgtoa$555+1)^(0+128)
  6684  01E0                     l6217:	
  6685  01E0  0839               	movf	_efgtoa$555^(0+128),w
  6686  01E1  043A               	iorwf	(_efgtoa$555+1)^(0+128),w
  6687  01E2  1903               	btfsc	3,2
  6688  01E3  29E5               	goto	u8231
  6689  01E4  29E6               	goto	u8230
  6690  01E5                     u8231:	
  6691  01E5  29F0               	goto	l6221
  6692  01E6                     u8230:	
  6693  01E6                     l6219:	
  6694                           
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  6696  01E6  3053               	movlw	low (STR_38| (0+32768))
  6697  01E7  00F1               	movwf	strcpy@src
  6698  01E8  30A8               	movlw	high (STR_38| (0+32768))
  6699  01E9  00F2               	movwf	strcpy@src+1
  6700  01EA  0864               	movf	efgtoa@n^(0+128),w
  6701  01EB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6702  01EC  31A2  220C  3180   	fcall	_strcpy
  6703                           
  6704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  6705  01EF  29F9               	goto	l6223
  6706  01F0                     l6221:	
  6707                           
  6708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  6709  01F0  305B               	movlw	low (STR_39| (0+32768))
  6710  01F1  00F1               	movwf	strcpy@src
  6711  01F2  30A8               	movlw	high (STR_39| (0+32768))
  6712  01F3  00F2               	movwf	strcpy@src+1
  6713  01F4  0864               	movf	efgtoa@n^(0+128),w
  6714  01F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6715  01F6  31A2  220C  3180   	fcall	_strcpy
  6716  01F9                     l6223:	
  6717                           
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6719  01F9  30FD               	movlw	253
  6720  01FA  0021               	movlb	1	; select bank1
  6721  01FB  07D1               	addwf	efgtoa@w^(0+128),f
  6722  01FC  30FF               	movlw	255
  6723  01FD  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6724  01FE                     l6225:	
  6725                           
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  6727  01FE  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6728  01FF  00AD               	movwf	??_efgtoa^(0+128)
  6729  0200  082D               	movf	??_efgtoa^(0+128),w
  6730  0201  0020               	movlb	0	; select bank0
  6731  0202  00A7               	movwf	pad@buf
  6732  0203  0021               	movlb	1	; select bank1
  6733  0204  0852               	movf	(efgtoa@w+1)^(0+128),w
  6734  0205  0020               	movlb	0	; select bank0
  6735  0206  00A9               	movwf	pad@p+1
  6736  0207  0021               	movlb	1	; select bank1
  6737  0208  0851               	movf	efgtoa@w^(0+128),w
  6738  0209  0020               	movlb	0	; select bank0
  6739  020A  00A8               	movwf	pad@p
  6740  020B  0021               	movlb	1	; select bank1
  6741  020C  084B               	movf	efgtoa@fp^(0+128),w
  6742  020D  31A5  25BE  3180   	fcall	_pad
  6743  0210  0020               	movlb	0	; select bank0
  6744  0211  0828               	movf	?_pad+1,w
  6745  0212  0021               	movlb	1	; select bank1
  6746  0213  00A9               	movwf	(?_efgtoa+1)^(0+128)
  6747  0214  0020               	movlb	0	; select bank0
  6748  0215  0827               	movf	?_pad,w
  6749  0216  0021               	movlb	1	; select bank1
  6750  0217  00A8               	movwf	?_efgtoa^(0+128)
  6751  0218  2FBE               	goto	l685
  6752  0219                     l6229:	
  6753                           
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  6755  0219  303F               	movlw	63
  6756  021A  0021               	movlb	1	; select bank1
  6757  021B  00E9               	movwf	(efgtoa@u+3)^(0+128)
  6758  021C  3080               	movlw	128
  6759  021D  00E8               	movwf	(efgtoa@u+2)^(0+128)
  6760  021E  3000               	movlw	0
  6761  021F  00E7               	movwf	(efgtoa@u+1)^(0+128)
  6762  0220  3000               	movlw	0
  6763  0221  00E6               	movwf	efgtoa@u^(0+128)
  6764  0222                     l6231:	
  6765                           
  6766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  6767  0222  01E2               	clrf	efgtoa@e^(0+128)
  6768  0223  01E3               	clrf	(efgtoa@e+1)^(0+128)
  6769  0224                     l6233:	
  6770                           
  6771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  6772  0224  0861               	movf	(efgtoa@g+3)^(0+128),w
  6773  0225  00F4               	movwf	___fleq@ff1+3
  6774  0226  0860               	movf	(efgtoa@g+2)^(0+128),w
  6775  0227  00F3               	movwf	___fleq@ff1+2
  6776  0228  085F               	movf	(efgtoa@g+1)^(0+128),w
  6777  0229  00F2               	movwf	___fleq@ff1+1
  6778  022A  085E               	movf	efgtoa@g^(0+128),w
  6779  022B  00F1               	movwf	___fleq@ff1
  6780  022C  3000               	movlw	0
  6781  022D  00F8               	movwf	___fleq@ff2+3
  6782  022E  3000               	movlw	0
  6783  022F  00F7               	movwf	___fleq@ff2+2
  6784  0230  3000               	movlw	0
  6785  0231  00F6               	movwf	___fleq@ff2+1
  6786  0232  3000               	movlw	0
  6787  0233  00F5               	movwf	___fleq@ff2
  6788  0234  31A3  23CF  3180   	fcall	___fleq
  6789  0237  1803               	btfsc	3,0
  6790  0238  2A3A               	goto	u8241
  6791  0239  2A3B               	goto	u8240
  6792  023A                     u8241:	
  6793  023A  2AFF               	goto	l6249
  6794  023B                     u8240:	
  6795  023B  2A6C               	goto	l6241
  6796  023C                     l6237:	
  6797                           
  6798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  6799  023C  3041               	movlw	65
  6800  023D  0020               	movlb	0	; select bank0
  6801  023E  00A9               	movwf	___flmul@b+3
  6802  023F  3020               	movlw	32
  6803  0240  00A8               	movwf	___flmul@b+2
  6804  0241  3000               	movlw	0
  6805  0242  00A7               	movwf	___flmul@b+1
  6806  0243  3000               	movlw	0
  6807  0244  00A6               	movwf	___flmul@b
  6808  0245  0021               	movlb	1	; select bank1
  6809  0246  0869               	movf	(efgtoa@u+3)^(0+128),w
  6810  0247  0020               	movlb	0	; select bank0
  6811  0248  00AD               	movwf	___flmul@a+3
  6812  0249  0021               	movlb	1	; select bank1
  6813  024A  0868               	movf	(efgtoa@u+2)^(0+128),w
  6814  024B  0020               	movlb	0	; select bank0
  6815  024C  00AC               	movwf	___flmul@a+2
  6816  024D  0021               	movlb	1	; select bank1
  6817  024E  0867               	movf	(efgtoa@u+1)^(0+128),w
  6818  024F  0020               	movlb	0	; select bank0
  6819  0250  00AB               	movwf	___flmul@a+1
  6820  0251  0021               	movlb	1	; select bank1
  6821  0252  0866               	movf	efgtoa@u^(0+128),w
  6822  0253  0020               	movlb	0	; select bank0
  6823  0254  00AA               	movwf	___flmul@a
  6824  0255  3195  25A9  3180   	fcall	___flmul
  6825  0258  0020               	movlb	0	; select bank0
  6826  0259  0829               	movf	?___flmul+3,w
  6827  025A  0021               	movlb	1	; select bank1
  6828  025B  00E9               	movwf	(efgtoa@u+3)^(0+128)
  6829  025C  0020               	movlb	0	; select bank0
  6830  025D  0828               	movf	?___flmul+2,w
  6831  025E  0021               	movlb	1	; select bank1
  6832  025F  00E8               	movwf	(efgtoa@u+2)^(0+128)
  6833  0260  0020               	movlb	0	; select bank0
  6834  0261  0827               	movf	?___flmul+1,w
  6835  0262  0021               	movlb	1	; select bank1
  6836  0263  00E7               	movwf	(efgtoa@u+1)^(0+128)
  6837  0264  0020               	movlb	0	; select bank0
  6838  0265  0826               	movf	?___flmul,w
  6839  0266  0021               	movlb	1	; select bank1
  6840  0267  00E6               	movwf	efgtoa@u^(0+128)
  6841  0268                     l6239:	
  6842                           
  6843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  6844  0268  3001               	movlw	1
  6845  0269  07E2               	addwf	efgtoa@e^(0+128),f
  6846  026A  3000               	movlw	0
  6847  026B  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  6848  026C                     l6241:	
  6849                           
  6850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  6851  026C  0021               	movlb	1	; select bank1
  6852  026D  0861               	movf	(efgtoa@g+3)^(0+128),w
  6853  026E  0020               	movlb	0	; select bank0
  6854  026F  00C3               	movwf	___flge@ff1+3
  6855  0270  0021               	movlb	1	; select bank1
  6856  0271  0860               	movf	(efgtoa@g+2)^(0+128),w
  6857  0272  0020               	movlb	0	; select bank0
  6858  0273  00C2               	movwf	___flge@ff1+2
  6859  0274  0021               	movlb	1	; select bank1
  6860  0275  085F               	movf	(efgtoa@g+1)^(0+128),w
  6861  0276  0020               	movlb	0	; select bank0
  6862  0277  00C1               	movwf	___flge@ff1+1
  6863  0278  0021               	movlb	1	; select bank1
  6864  0279  085E               	movf	efgtoa@g^(0+128),w
  6865  027A  0020               	movlb	0	; select bank0
  6866  027B  00C0               	movwf	___flge@ff1
  6867  027C  3041               	movlw	65
  6868  027D  00A9               	movwf	___flmul@b+3
  6869  027E  3020               	movlw	32
  6870  027F  00A8               	movwf	___flmul@b+2
  6871  0280  3000               	movlw	0
  6872  0281  00A7               	movwf	___flmul@b+1
  6873  0282  3000               	movlw	0
  6874  0283  00A6               	movwf	___flmul@b
  6875  0284  0021               	movlb	1	; select bank1
  6876  0285  0869               	movf	(efgtoa@u+3)^(0+128),w
  6877  0286  0020               	movlb	0	; select bank0
  6878  0287  00AD               	movwf	___flmul@a+3
  6879  0288  0021               	movlb	1	; select bank1
  6880  0289  0868               	movf	(efgtoa@u+2)^(0+128),w
  6881  028A  0020               	movlb	0	; select bank0
  6882  028B  00AC               	movwf	___flmul@a+2
  6883  028C  0021               	movlb	1	; select bank1
  6884  028D  0867               	movf	(efgtoa@u+1)^(0+128),w
  6885  028E  0020               	movlb	0	; select bank0
  6886  028F  00AB               	movwf	___flmul@a+1
  6887  0290  0021               	movlb	1	; select bank1
  6888  0291  0866               	movf	efgtoa@u^(0+128),w
  6889  0292  0020               	movlb	0	; select bank0
  6890  0293  00AA               	movwf	___flmul@a
  6891  0294  3195  25A9  3180   	fcall	___flmul
  6892  0297  0020               	movlb	0	; select bank0
  6893  0298  0829               	movf	?___flmul+3,w
  6894  0299  00C7               	movwf	___flge@ff2+3
  6895  029A  0828               	movf	?___flmul+2,w
  6896  029B  00C6               	movwf	___flge@ff2+2
  6897  029C  0827               	movf	?___flmul+1,w
  6898  029D  00C5               	movwf	___flge@ff2+1
  6899  029E  0826               	movf	?___flmul,w
  6900  029F  00C4               	movwf	___flge@ff2
  6901  02A0  3199  2189  3180   	fcall	___flge
  6902  02A3  1803               	btfsc	3,0
  6903  02A4  2AA6               	goto	u8251
  6904  02A5  2AA7               	goto	u8250
  6905  02A6                     u8251:	
  6906  02A6  2A3C               	goto	l6237
  6907  02A7                     u8250:	
  6908  02A7  2AD8               	goto	l6247
  6909  02A8                     l6243:	
  6910                           
  6911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  6912  02A8  3041               	movlw	65
  6913  02A9  0020               	movlb	0	; select bank0
  6914  02AA  00C3               	movwf	___fldiv@a+3
  6915  02AB  3020               	movlw	32
  6916  02AC  00C2               	movwf	___fldiv@a+2
  6917  02AD  3000               	movlw	0
  6918  02AE  00C1               	movwf	___fldiv@a+1
  6919  02AF  3000               	movlw	0
  6920  02B0  00C0               	movwf	___fldiv@a
  6921  02B1  0021               	movlb	1	; select bank1
  6922  02B2  0869               	movf	(efgtoa@u+3)^(0+128),w
  6923  02B3  0020               	movlb	0	; select bank0
  6924  02B4  00C7               	movwf	___fldiv@b+3
  6925  02B5  0021               	movlb	1	; select bank1
  6926  02B6  0868               	movf	(efgtoa@u+2)^(0+128),w
  6927  02B7  0020               	movlb	0	; select bank0
  6928  02B8  00C6               	movwf	___fldiv@b+2
  6929  02B9  0021               	movlb	1	; select bank1
  6930  02BA  0867               	movf	(efgtoa@u+1)^(0+128),w
  6931  02BB  0020               	movlb	0	; select bank0
  6932  02BC  00C5               	movwf	___fldiv@b+1
  6933  02BD  0021               	movlb	1	; select bank1
  6934  02BE  0866               	movf	efgtoa@u^(0+128),w
  6935  02BF  0020               	movlb	0	; select bank0
  6936  02C0  00C4               	movwf	___fldiv@b
  6937  02C1  3188  2016  3180   	fcall	___fldiv
  6938  02C4  0020               	movlb	0	; select bank0
  6939  02C5  0843               	movf	?___fldiv+3,w
  6940  02C6  0021               	movlb	1	; select bank1
  6941  02C7  00E9               	movwf	(efgtoa@u+3)^(0+128)
  6942  02C8  0020               	movlb	0	; select bank0
  6943  02C9  0842               	movf	?___fldiv+2,w
  6944  02CA  0021               	movlb	1	; select bank1
  6945  02CB  00E8               	movwf	(efgtoa@u+2)^(0+128)
  6946  02CC  0020               	movlb	0	; select bank0
  6947  02CD  0841               	movf	?___fldiv+1,w
  6948  02CE  0021               	movlb	1	; select bank1
  6949  02CF  00E7               	movwf	(efgtoa@u+1)^(0+128)
  6950  02D0  0020               	movlb	0	; select bank0
  6951  02D1  0840               	movf	?___fldiv,w
  6952  02D2  0021               	movlb	1	; select bank1
  6953  02D3  00E6               	movwf	efgtoa@u^(0+128)
  6954  02D4                     l6245:	
  6955                           
  6956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  6957  02D4  30FF               	movlw	255
  6958  02D5  07E2               	addwf	efgtoa@e^(0+128),f
  6959  02D6  30FF               	movlw	255
  6960  02D7  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  6961  02D8                     l6247:	
  6962                           
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  6964  02D8  0021               	movlb	1	; select bank1
  6965  02D9  0861               	movf	(efgtoa@g+3)^(0+128),w
  6966  02DA  0020               	movlb	0	; select bank0
  6967  02DB  00C3               	movwf	___flge@ff1+3
  6968  02DC  0021               	movlb	1	; select bank1
  6969  02DD  0860               	movf	(efgtoa@g+2)^(0+128),w
  6970  02DE  0020               	movlb	0	; select bank0
  6971  02DF  00C2               	movwf	___flge@ff1+2
  6972  02E0  0021               	movlb	1	; select bank1
  6973  02E1  085F               	movf	(efgtoa@g+1)^(0+128),w
  6974  02E2  0020               	movlb	0	; select bank0
  6975  02E3  00C1               	movwf	___flge@ff1+1
  6976  02E4  0021               	movlb	1	; select bank1
  6977  02E5  085E               	movf	efgtoa@g^(0+128),w
  6978  02E6  0020               	movlb	0	; select bank0
  6979  02E7  00C0               	movwf	___flge@ff1
  6980  02E8  0021               	movlb	1	; select bank1
  6981  02E9  0869               	movf	(efgtoa@u+3)^(0+128),w
  6982  02EA  0020               	movlb	0	; select bank0
  6983  02EB  00C7               	movwf	___flge@ff2+3
  6984  02EC  0021               	movlb	1	; select bank1
  6985  02ED  0868               	movf	(efgtoa@u+2)^(0+128),w
  6986  02EE  0020               	movlb	0	; select bank0
  6987  02EF  00C6               	movwf	___flge@ff2+2
  6988  02F0  0021               	movlb	1	; select bank1
  6989  02F1  0867               	movf	(efgtoa@u+1)^(0+128),w
  6990  02F2  0020               	movlb	0	; select bank0
  6991  02F3  00C5               	movwf	___flge@ff2+1
  6992  02F4  0021               	movlb	1	; select bank1
  6993  02F5  0866               	movf	efgtoa@u^(0+128),w
  6994  02F6  0020               	movlb	0	; select bank0
  6995  02F7  00C4               	movwf	___flge@ff2
  6996  02F8  3199  2189  3180   	fcall	___flge
  6997  02FB  1C03               	btfss	3,0
  6998  02FC  2AFE               	goto	u8261
  6999  02FD  2AFF               	goto	u8260
  7000  02FE                     u8261:	
  7001  02FE  2AA8               	goto	l6243
  7002  02FF                     u8260:	
  7003  02FF                     l6249:	
  7004                           
  7005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  7006  02FF  0021               	movlb	1	; select bank1
  7007  0300  082C               	movf	efgtoa@c^(0+128),w
  7008  0301  00AD               	movwf	??_efgtoa^(0+128)
  7009  0302  01AE               	clrf	(??_efgtoa^(0+128)+1)
  7010  0303  082D               	movf	??_efgtoa^(0+128),w
  7011  0304  00F7               	movwf	tolower@c
  7012  0305  082E               	movf	(??_efgtoa+1)^(0+128),w
  7013  0306  00F8               	movwf	tolower@c+1
  7014  0307  31A2  2250  3180   	fcall	_tolower
  7015  030A  0877               	movf	?_tolower,w
  7016  030B  0021               	movlb	1	; select bank1
  7017  030C  00AF               	movwf	(??_efgtoa+2)^(0+128)
  7018  030D  082F               	movf	(??_efgtoa+2)^(0+128),w
  7019  030E  00D3               	movwf	efgtoa@mode^(0+128)
  7020  030F                     l6251:	
  7021                           
  7022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  7023  030F  0853               	movf	efgtoa@mode^(0+128),w
  7024  0310  00AD               	movwf	??_efgtoa^(0+128)
  7025  0311  082D               	movf	??_efgtoa^(0+128),w
  7026  0312  00D0               	movwf	efgtoa@nmode^(0+128)
  7027  0313                     l6253:	
  7028                           
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  7030  0313  3067               	movlw	103
  7031  0314  0653               	xorwf	efgtoa@mode^(0+128),w
  7032  0315  1D03               	btfss	3,2
  7033  0316  2B18               	goto	u8271
  7034  0317  2B19               	goto	u8270
  7035  0318                     u8271:	
  7036  0318  2B42               	goto	l700
  7037  0319                     u8270:	
  7038  0319                     l6255:	
  7039                           
  7040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  7041  0319  0022               	movlb	2	; select bank2
  7042  031A  0860               	movf	_prec^(0+256),w
  7043  031B  0461               	iorwf	(_prec+1)^(0+256),w
  7044  031C  1D03               	btfss	3,2
  7045  031D  2B1F               	goto	u8281
  7046  031E  2B20               	goto	u8280
  7047  031F                     u8281:	
  7048  031F  2B24               	goto	l701
  7049  0320                     u8280:	
  7050  0320                     l6257:	
  7051                           
  7052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  7053  0320  3001               	movlw	1
  7054  0321  00E0               	movwf	_prec^(0+256)
  7055  0322  3000               	movlw	0
  7056  0323  00E1               	movwf	(_prec^(0+256)+1)
  7057  0324                     l701:	
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 382:   }
  7059                           
  7060                           
  7061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  7062  0324  0861               	movf	(_prec+1)^(0+256),w
  7063  0325  3A80               	xorlw	128
  7064  0326  0021               	movlb	1	; select bank1
  7065  0327  00AD               	movwf	??_efgtoa^(0+128)
  7066  0328  3080               	movlw	128
  7067  0329  022D               	subwf	??_efgtoa^(0+128),w
  7068  032A  1D03               	skipz
  7069  032B  2B2F               	goto	u8295
  7070  032C  3001               	movlw	1
  7071  032D  0022               	movlb	2	; select bank2
  7072  032E  0260               	subwf	_prec^(0+256),w
  7073  032F                     u8295:	
  7074  032F  1803               	skipnc
  7075  0330  2B32               	goto	u8291
  7076  0331  2B33               	goto	u8290
  7077  0332                     u8291:	
  7078  0332  2B39               	goto	l6261
  7079  0333                     u8290:	
  7080  0333                     l6259:	
  7081  0333  3006               	movlw	6
  7082  0334  0021               	movlb	1	; select bank1
  7083  0335  00CE               	movwf	efgtoa@p^(0+128)
  7084  0336  3000               	movlw	0
  7085  0337  00CF               	movwf	(efgtoa@p^(0+128)+1)
  7086  0338  2B48               	goto	l6267
  7087  0339                     l6261:	
  7088  0339  0022               	movlb	2	; select bank2
  7089  033A  0861               	movf	(_prec+1)^(0+256),w
  7090  033B  0021               	movlb	1	; select bank1
  7091  033C  00CF               	movwf	(efgtoa@p+1)^(0+128)
  7092  033D  0022               	movlb	2	; select bank2
  7093  033E  0860               	movf	_prec^(0+256),w
  7094  033F  0021               	movlb	1	; select bank1
  7095  0340  00CE               	movwf	efgtoa@p^(0+128)
  7096  0341  2B48               	goto	l6267
  7097  0342                     l700:	
  7098                           
  7099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  7100  0342  0022               	movlb	2	; select bank2
  7101  0343  1BE1               	btfsc	(_prec+1)^(0+256),7
  7102  0344  2B46               	goto	u8301
  7103  0345  2B47               	goto	u8300
  7104  0346                     u8301:	
  7105  0346  2B33               	goto	l6259
  7106  0347                     u8300:	
  7107  0347  2B39               	goto	l6261
  7108  0348                     l6267:	
  7109                           
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  7111  0348  3067               	movlw	103
  7112  0349  0653               	xorwf	efgtoa@mode^(0+128),w
  7113  034A  1D03               	btfss	3,2
  7114  034B  2B4D               	goto	u8311
  7115  034C  2B4E               	goto	u8310
  7116  034D                     u8311:	
  7117  034D  2B7B               	goto	l711
  7118  034E                     u8310:	
  7119  034E                     l6269:	
  7120                           
  7121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  7122  034E  0863               	movf	(efgtoa@e+1)^(0+128),w
  7123  034F  3A80               	xorlw	128
  7124  0350  00AD               	movwf	??_efgtoa^(0+128)
  7125  0351  307F               	movlw	127
  7126  0352  022D               	subwf	??_efgtoa^(0+128),w
  7127  0353  1D03               	skipz
  7128  0354  2B57               	goto	u8325
  7129  0355  30FC               	movlw	252
  7130  0356  0262               	subwf	efgtoa@e^(0+128),w
  7131  0357                     u8325:	
  7132  0357  1C03               	skipc
  7133  0358  2B5A               	goto	u8321
  7134  0359  2B5B               	goto	u8320
  7135  035A                     u8321:	
  7136  035A  2B76               	goto	l6275
  7137  035B                     u8320:	
  7138  035B                     l6271:	
  7139  035B  0021               	movlb	1	; select bank1
  7140  035C  084E               	movf	efgtoa@p^(0+128),w
  7141  035D  3EFF               	addlw	255
  7142  035E  00AD               	movwf	??_efgtoa^(0+128)
  7143  035F  30FF               	movlw	255
  7144  0360  3D4F               	addwfc	(efgtoa@p+1)^(0+128),w
  7145  0361  00AE               	movwf	(??_efgtoa+1)^(0+128)
  7146  0362  082E               	movf	(??_efgtoa+1)^(0+128),w
  7147  0363  3A80               	xorlw	128
  7148  0364  00AF               	movwf	(??_efgtoa+2)^(0+128)
  7149  0365  0863               	movf	(efgtoa@e+1)^(0+128),w
  7150  0366  3A80               	xorlw	128
  7151  0367  022F               	subwf	(??_efgtoa+2)^(0+128),w
  7152  0368  1D03               	skipz
  7153  0369  2B6C               	goto	u8335
  7154  036A  0862               	movf	efgtoa@e^(0+128),w
  7155  036B  022D               	subwf	??_efgtoa^(0+128),w
  7156  036C                     u8335:	
  7157  036C  1C03               	skipc
  7158  036D  2B6F               	goto	u8331
  7159  036E  2B70               	goto	u8330
  7160  036F                     u8331:	
  7161  036F  2B76               	goto	l6275
  7162  0370                     u8330:	
  7163  0370                     l6273:	
  7164                           
  7165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  7166  0370  3066               	movlw	102
  7167  0371  0021               	movlb	1	; select bank1
  7168  0372  00AD               	movwf	??_efgtoa^(0+128)
  7169  0373  082D               	movf	??_efgtoa^(0+128),w
  7170  0374  00D0               	movwf	efgtoa@nmode^(0+128)
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  7173  0375  2B7B               	goto	l711
  7174  0376                     l6275:	
  7175                           
  7176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  7177  0376  3065               	movlw	101
  7178  0377  0021               	movlb	1	; select bank1
  7179  0378  00AD               	movwf	??_efgtoa^(0+128)
  7180  0379  082D               	movf	??_efgtoa^(0+128),w
  7181  037A  00D0               	movwf	efgtoa@nmode^(0+128)
  7182  037B                     l711:	
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 395:     }
  7184                           
  7185                           
  7186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  7187  037B  084F               	movf	(efgtoa@p+1)^(0+128),w
  7188  037C  00C6               	movwf	(efgtoa@m+1)^(0+128)
  7189  037D  084E               	movf	efgtoa@p^(0+128),w
  7190  037E  00C5               	movwf	efgtoa@m^(0+128)
  7191  037F                     l6277:	
  7192                           
  7193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7194  037F  3067               	movlw	103
  7195  0380  0653               	xorwf	efgtoa@mode^(0+128),w
  7196  0381  1D03               	btfss	3,2
  7197  0382  2B84               	goto	u8341
  7198  0383  2B85               	goto	u8340
  7199  0384                     u8341:	
  7200  0384  2B8F               	goto	l6283
  7201  0385                     u8340:	
  7202  0385                     l6279:	
  7203  0385  3066               	movlw	102
  7204  0386  0650               	xorwf	efgtoa@nmode^(0+128),w
  7205  0387  1D03               	btfss	3,2
  7206  0388  2B8A               	goto	u8351
  7207  0389  2B8B               	goto	u8350
  7208  038A                     u8351:	
  7209  038A  2B93               	goto	l6285
  7210  038B                     u8350:	
  7211  038B                     l6281:	
  7212  038B  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  7213  038C  2B8E               	goto	u8361
  7214  038D  2B8F               	goto	u8360
  7215  038E                     u8361:	
  7216  038E  2B93               	goto	l6285
  7217  038F                     u8360:	
  7218  038F                     l6283:	
  7219                           
  7220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  7221  038F  3001               	movlw	1
  7222  0390  07C5               	addwf	efgtoa@m^(0+128),f
  7223  0391  3000               	movlw	0
  7224  0392  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  7225  0393                     l6285:	
  7226                           
  7227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  7228  0393  3066               	movlw	102
  7229  0394  0650               	xorwf	efgtoa@nmode^(0+128),w
  7230  0395  1D03               	btfss	3,2
  7231  0396  2B98               	goto	u8371
  7232  0397  2B99               	goto	u8370
  7233  0398                     u8371:	
  7234  0398  2BB1               	goto	l6297
  7235  0399                     u8370:	
  7236  0399                     l6287:	
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  7239  0399  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  7240  039A  2B9C               	goto	u8381
  7241  039B  2B9D               	goto	u8380
  7242  039C                     u8381:	
  7243  039C  2BA7               	goto	l6293
  7244  039D                     u8380:	
  7245  039D                     l6289:	
  7246                           
  7247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  7248  039D  303F               	movlw	63
  7249  039E  00E9               	movwf	(efgtoa@u+3)^(0+128)
  7250  039F  3080               	movlw	128
  7251  03A0  00E8               	movwf	(efgtoa@u+2)^(0+128)
  7252  03A1  3000               	movlw	0
  7253  03A2  00E7               	movwf	(efgtoa@u+1)^(0+128)
  7254  03A3  3000               	movlw	0
  7255  03A4  00E6               	movwf	efgtoa@u^(0+128)
  7256  03A5                     l6291:	
  7257                           
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  7259  03A5  01E2               	clrf	efgtoa@e^(0+128)
  7260  03A6  01E3               	clrf	(efgtoa@e+1)^(0+128)
  7261  03A7                     l6293:	
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  7264  03A7  3067               	movlw	103
  7265  03A8  0653               	xorwf	efgtoa@mode^(0+128),w
  7266  03A9  1903               	btfsc	3,2
  7267  03AA  2BAC               	goto	u8391
  7268  03AB  2BAD               	goto	u8390
  7269  03AC                     u8391:	
  7270  03AC  2BB1               	goto	l6297
  7271  03AD                     u8390:	
  7272  03AD                     l6295:	
  7273                           
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  7275  03AD  0862               	movf	efgtoa@e^(0+128),w
  7276  03AE  07C5               	addwf	efgtoa@m^(0+128),f
  7277  03AF  0863               	movf	(efgtoa@e+1)^(0+128),w
  7278  03B0  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  7279  03B1                     l6297:	
  7280                           
  7281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  7282  03B1  01DC               	clrf	efgtoa@i^(0+128)
  7283  03B2  01DD               	clrf	(efgtoa@i+1)^(0+128)
  7284  03B3                     l6299:	
  7285                           
  7286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  7287  03B3  0861               	movf	(efgtoa@g+3)^(0+128),w
  7288  03B4  00D7               	movwf	(efgtoa@h+3)^(0+128)
  7289  03B5  0860               	movf	(efgtoa@g+2)^(0+128),w
  7290  03B6  00D6               	movwf	(efgtoa@h+2)^(0+128)
  7291  03B7  085F               	movf	(efgtoa@g+1)^(0+128),w
  7292  03B8  00D5               	movwf	(efgtoa@h+1)^(0+128)
  7293  03B9  085E               	movf	efgtoa@g^(0+128),w
  7294  03BA  00D4               	movwf	efgtoa@h^(0+128)
  7295  03BB                     l6301:	
  7296                           
  7297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  7298  03BB  0869               	movf	(efgtoa@u+3)^(0+128),w
  7299  03BC  00B4               	movwf	(efgtoa@ou+3)^(0+128)
  7300  03BD  0868               	movf	(efgtoa@u+2)^(0+128),w
  7301  03BE  00B3               	movwf	(efgtoa@ou+2)^(0+128)
  7302  03BF  0867               	movf	(efgtoa@u+1)^(0+128),w
  7303  03C0  00B2               	movwf	(efgtoa@ou+1)^(0+128)
  7304  03C1  0866               	movf	efgtoa@u^(0+128),w
  7305  03C2  00B1               	movwf	efgtoa@ou^(0+128)
  7306                           
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7308  03C3  2C89               	goto	l6307
  7309  03C4                     l6303:	
  7310                           
  7311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  7312  03C4  0021               	movlb	1	; select bank1
  7313  03C5  0869               	movf	(efgtoa@u+3)^(0+128),w
  7314  03C6  0020               	movlb	0	; select bank0
  7315  03C7  00C3               	movwf	___fldiv@a+3
  7316  03C8  0021               	movlb	1	; select bank1
  7317  03C9  0868               	movf	(efgtoa@u+2)^(0+128),w
  7318  03CA  0020               	movlb	0	; select bank0
  7319  03CB  00C2               	movwf	___fldiv@a+2
  7320  03CC  0021               	movlb	1	; select bank1
  7321  03CD  0867               	movf	(efgtoa@u+1)^(0+128),w
  7322  03CE  0020               	movlb	0	; select bank0
  7323  03CF  00C1               	movwf	___fldiv@a+1
  7324  03D0  0021               	movlb	1	; select bank1
  7325  03D1  0866               	movf	efgtoa@u^(0+128),w
  7326  03D2  0020               	movlb	0	; select bank0
  7327  03D3  00C0               	movwf	___fldiv@a
  7328  03D4  0021               	movlb	1	; select bank1
  7329  03D5  0857               	movf	(efgtoa@h+3)^(0+128),w
  7330  03D6  0020               	movlb	0	; select bank0
  7331  03D7  00C7               	movwf	___fldiv@b+3
  7332  03D8  0021               	movlb	1	; select bank1
  7333  03D9  0856               	movf	(efgtoa@h+2)^(0+128),w
  7334  03DA  0020               	movlb	0	; select bank0
  7335  03DB  00C6               	movwf	___fldiv@b+2
  7336  03DC  0021               	movlb	1	; select bank1
  7337  03DD  0855               	movf	(efgtoa@h+1)^(0+128),w
  7338  03DE  0020               	movlb	0	; select bank0
  7339  03DF  00C5               	movwf	___fldiv@b+1
  7340  03E0  0021               	movlb	1	; select bank1
  7341  03E1  0854               	movf	efgtoa@h^(0+128),w
  7342  03E2  0020               	movlb	0	; select bank0
  7343  03E3  00C4               	movwf	___fldiv@b
  7344  03E4  3188  2016  3180   	fcall	___fldiv
  7345  03E7  0020               	movlb	0	; select bank0
  7346  03E8  0843               	movf	?___fldiv+3,w
  7347  03E9  00DD               	movwf	floorf@x+3
  7348  03EA  0842               	movf	?___fldiv+2,w
  7349  03EB  00DC               	movwf	floorf@x+2
  7350  03EC  0841               	movf	?___fldiv+1,w
  7351  03ED  00DB               	movwf	floorf@x+1
  7352  03EE  0840               	movf	?___fldiv,w
  7353  03EF  00DA               	movwf	floorf@x
  7354  03F0  319C  24EB  3180   	fcall	_floorf
  7355  03F3  0020               	movlb	0	; select bank0
  7356  03F4  085D               	movf	?_floorf+3,w
  7357  03F5  0021               	movlb	1	; select bank1
  7358  03F6  00DB               	movwf	(efgtoa@l+3)^(0+128)
  7359  03F7  0020               	movlb	0	; select bank0
  7360  03F8  085C               	movf	?_floorf+2,w
  7361  03F9  0021               	movlb	1	; select bank1
  7362  03FA  00DA               	movwf	(efgtoa@l+2)^(0+128)
  7363  03FB  0020               	movlb	0	; select bank0
  7364  03FC  085B               	movf	?_floorf+1,w
  7365  03FD  0021               	movlb	1	; select bank1
  7366  03FE  00D9               	movwf	(efgtoa@l+1)^(0+128)
  7367  03FF  0020               	movlb	0	; select bank0
  7368  0400  085A               	movf	?_floorf,w
  7369  0401  0021               	movlb	1	; select bank1
  7370  0402  00D8               	movwf	efgtoa@l^(0+128)
  7371                           
  7372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  7373  0403  085B               	movf	(efgtoa@l+3)^(0+128),w
  7374  0404  00F4               	movwf	___fltol@f1+3
  7375  0405  085A               	movf	(efgtoa@l+2)^(0+128),w
  7376  0406  00F3               	movwf	___fltol@f1+2
  7377  0407  0859               	movf	(efgtoa@l+1)^(0+128),w
  7378  0408  00F2               	movwf	___fltol@f1+1
  7379  0409  0858               	movf	efgtoa@l^(0+128),w
  7380  040A  00F1               	movwf	___fltol@f1
  7381  040B  3198  2096  3180   	fcall	___fltol
  7382  040E  0872               	movf	?___fltol+1,w
  7383  040F  0021               	movlb	1	; select bank1
  7384  0410  00CA               	movwf	(efgtoa@d+1)^(0+128)
  7385  0411  0871               	movf	?___fltol,w
  7386  0412  00C9               	movwf	efgtoa@d^(0+128)
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  7389  0413  085B               	movf	(efgtoa@l+3)^(0+128),w
  7390  0414  0020               	movlb	0	; select bank0
  7391  0415  00AD               	movwf	___flmul@a+3
  7392  0416  0021               	movlb	1	; select bank1
  7393  0417  085A               	movf	(efgtoa@l+2)^(0+128),w
  7394  0418  0020               	movlb	0	; select bank0
  7395  0419  00AC               	movwf	___flmul@a+2
  7396  041A  0021               	movlb	1	; select bank1
  7397  041B  0859               	movf	(efgtoa@l+1)^(0+128),w
  7398  041C  0020               	movlb	0	; select bank0
  7399  041D  00AB               	movwf	___flmul@a+1
  7400  041E  0021               	movlb	1	; select bank1
  7401  041F  0858               	movf	efgtoa@l^(0+128),w
  7402  0420  0020               	movlb	0	; select bank0
  7403  0421  00AA               	movwf	___flmul@a
  7404  0422  0021               	movlb	1	; select bank1
  7405  0423  0869               	movf	(efgtoa@u+3)^(0+128),w
  7406  0424  0020               	movlb	0	; select bank0
  7407  0425  00A9               	movwf	___flmul@b+3
  7408  0426  0021               	movlb	1	; select bank1
  7409  0427  0868               	movf	(efgtoa@u+2)^(0+128),w
  7410  0428  0020               	movlb	0	; select bank0
  7411  0429  00A8               	movwf	___flmul@b+2
  7412  042A  0021               	movlb	1	; select bank1
  7413  042B  0867               	movf	(efgtoa@u+1)^(0+128),w
  7414  042C  0020               	movlb	0	; select bank0
  7415  042D  00A7               	movwf	___flmul@b+1
  7416  042E  0021               	movlb	1	; select bank1
  7417  042F  0866               	movf	efgtoa@u^(0+128),w
  7418  0430  0020               	movlb	0	; select bank0
  7419  0431  00A6               	movwf	___flmul@b
  7420  0432  3195  25A9  3180   	fcall	___flmul
  7421  0435  0020               	movlb	0	; select bank0
  7422  0436  0829               	movf	?___flmul+3,w
  7423  0437  0021               	movlb	1	; select bank1
  7424  0438  00A3               	movwf	(___flsub@a+3)^(0+128)
  7425  0439  0020               	movlb	0	; select bank0
  7426  043A  0828               	movf	?___flmul+2,w
  7427  043B  0021               	movlb	1	; select bank1
  7428  043C  00A2               	movwf	(___flsub@a+2)^(0+128)
  7429  043D  0020               	movlb	0	; select bank0
  7430  043E  0827               	movf	?___flmul+1,w
  7431  043F  0021               	movlb	1	; select bank1
  7432  0440  00A1               	movwf	(___flsub@a+1)^(0+128)
  7433  0441  0020               	movlb	0	; select bank0
  7434  0442  0826               	movf	?___flmul,w
  7435  0443  0021               	movlb	1	; select bank1
  7436  0444  00A0               	movwf	___flsub@a^(0+128)
  7437  0445  0857               	movf	(efgtoa@h+3)^(0+128),w
  7438  0446  00A7               	movwf	(___flsub@b+3)^(0+128)
  7439  0447  0856               	movf	(efgtoa@h+2)^(0+128),w
  7440  0448  00A6               	movwf	(___flsub@b+2)^(0+128)
  7441  0449  0855               	movf	(efgtoa@h+1)^(0+128),w
  7442  044A  00A5               	movwf	(___flsub@b+1)^(0+128)
  7443  044B  0854               	movf	efgtoa@h^(0+128),w
  7444  044C  00A4               	movwf	___flsub@b^(0+128)
  7445  044D  3187  27BF  3180   	fcall	___flsub
  7446  0450  0021               	movlb	1	; select bank1
  7447  0451  0823               	movf	(?___flsub+3)^(0+128),w
  7448  0452  00D7               	movwf	(efgtoa@h+3)^(0+128)
  7449  0453  0822               	movf	(?___flsub+2)^(0+128),w
  7450  0454  00D6               	movwf	(efgtoa@h+2)^(0+128)
  7451  0455  0821               	movf	(?___flsub+1)^(0+128),w
  7452  0456  00D5               	movwf	(efgtoa@h+1)^(0+128)
  7453  0457  0820               	movf	?___flsub^(0+128),w
  7454  0458  00D4               	movwf	efgtoa@h^(0+128)
  7455                           
  7456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  7457  0459  3041               	movlw	65
  7458  045A  0020               	movlb	0	; select bank0
  7459  045B  00C3               	movwf	___fldiv@a+3
  7460  045C  3020               	movlw	32
  7461  045D  00C2               	movwf	___fldiv@a+2
  7462  045E  3000               	movlw	0
  7463  045F  00C1               	movwf	___fldiv@a+1
  7464  0460  3000               	movlw	0
  7465  0461  00C0               	movwf	___fldiv@a
  7466  0462  0021               	movlb	1	; select bank1
  7467  0463  0869               	movf	(efgtoa@u+3)^(0+128),w
  7468  0464  0020               	movlb	0	; select bank0
  7469  0465  00C7               	movwf	___fldiv@b+3
  7470  0466  0021               	movlb	1	; select bank1
  7471  0467  0868               	movf	(efgtoa@u+2)^(0+128),w
  7472  0468  0020               	movlb	0	; select bank0
  7473  0469  00C6               	movwf	___fldiv@b+2
  7474  046A  0021               	movlb	1	; select bank1
  7475  046B  0867               	movf	(efgtoa@u+1)^(0+128),w
  7476  046C  0020               	movlb	0	; select bank0
  7477  046D  00C5               	movwf	___fldiv@b+1
  7478  046E  0021               	movlb	1	; select bank1
  7479  046F  0866               	movf	efgtoa@u^(0+128),w
  7480  0470  0020               	movlb	0	; select bank0
  7481  0471  00C4               	movwf	___fldiv@b
  7482  0472  3188  2016  3180   	fcall	___fldiv
  7483  0475  0020               	movlb	0	; select bank0
  7484  0476  0843               	movf	?___fldiv+3,w
  7485  0477  0021               	movlb	1	; select bank1
  7486  0478  00E9               	movwf	(efgtoa@u+3)^(0+128)
  7487  0479  0020               	movlb	0	; select bank0
  7488  047A  0842               	movf	?___fldiv+2,w
  7489  047B  0021               	movlb	1	; select bank1
  7490  047C  00E8               	movwf	(efgtoa@u+2)^(0+128)
  7491  047D  0020               	movlb	0	; select bank0
  7492  047E  0841               	movf	?___fldiv+1,w
  7493  047F  0021               	movlb	1	; select bank1
  7494  0480  00E7               	movwf	(efgtoa@u+1)^(0+128)
  7495  0481  0020               	movlb	0	; select bank0
  7496  0482  0840               	movf	?___fldiv,w
  7497  0483  0021               	movlb	1	; select bank1
  7498  0484  00E6               	movwf	efgtoa@u^(0+128)
  7499  0485                     l6305:	
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  7502  0485  3001               	movlw	1
  7503  0486  07DC               	addwf	efgtoa@i^(0+128),f
  7504  0487  3000               	movlw	0
  7505  0488  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  7506  0489                     l6307:	
  7507                           
  7508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7509  0489  085D               	movf	(efgtoa@i+1)^(0+128),w
  7510  048A  3A80               	xorlw	128
  7511  048B  00AD               	movwf	??_efgtoa^(0+128)
  7512  048C  0846               	movf	(efgtoa@m+1)^(0+128),w
  7513  048D  3A80               	xorlw	128
  7514  048E  022D               	subwf	??_efgtoa^(0+128),w
  7515  048F  1D03               	skipz
  7516  0490  2C93               	goto	u8405
  7517  0491  0845               	movf	efgtoa@m^(0+128),w
  7518  0492  025C               	subwf	efgtoa@i^(0+128),w
  7519  0493                     u8405:	
  7520  0493  1C03               	skipc
  7521  0494  2C96               	goto	u8401
  7522  0495  2C97               	goto	u8400
  7523  0496                     u8401:	
  7524  0496  2BC4               	goto	l6303
  7525  0497                     u8400:	
  7526  0497                     l6309:	
  7527                           
  7528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  7529  0497  3040               	movlw	64
  7530  0498  0020               	movlb	0	; select bank0
  7531  0499  00A9               	movwf	___flmul@b+3
  7532  049A  30A0               	movlw	160
  7533  049B  00A8               	movwf	___flmul@b+2
  7534  049C  3000               	movlw	0
  7535  049D  00A7               	movwf	___flmul@b+1
  7536  049E  3000               	movlw	0
  7537  049F  00A6               	movwf	___flmul@b
  7538  04A0  0021               	movlb	1	; select bank1
  7539  04A1  0869               	movf	(efgtoa@u+3)^(0+128),w
  7540  04A2  0020               	movlb	0	; select bank0
  7541  04A3  00AD               	movwf	___flmul@a+3
  7542  04A4  0021               	movlb	1	; select bank1
  7543  04A5  0868               	movf	(efgtoa@u+2)^(0+128),w
  7544  04A6  0020               	movlb	0	; select bank0
  7545  04A7  00AC               	movwf	___flmul@a+2
  7546  04A8  0021               	movlb	1	; select bank1
  7547  04A9  0867               	movf	(efgtoa@u+1)^(0+128),w
  7548  04AA  0020               	movlb	0	; select bank0
  7549  04AB  00AB               	movwf	___flmul@a+1
  7550  04AC  0021               	movlb	1	; select bank1
  7551  04AD  0866               	movf	efgtoa@u^(0+128),w
  7552  04AE  0020               	movlb	0	; select bank0
  7553  04AF  00AA               	movwf	___flmul@a
  7554  04B0  3195  25A9  3180   	fcall	___flmul
  7555  04B3  0020               	movlb	0	; select bank0
  7556  04B4  0829               	movf	?___flmul+3,w
  7557  04B5  0021               	movlb	1	; select bank1
  7558  04B6  00DB               	movwf	(efgtoa@l+3)^(0+128)
  7559  04B7  0020               	movlb	0	; select bank0
  7560  04B8  0828               	movf	?___flmul+2,w
  7561  04B9  0021               	movlb	1	; select bank1
  7562  04BA  00DA               	movwf	(efgtoa@l+2)^(0+128)
  7563  04BB  0020               	movlb	0	; select bank0
  7564  04BC  0827               	movf	?___flmul+1,w
  7565  04BD  0021               	movlb	1	; select bank1
  7566  04BE  00D9               	movwf	(efgtoa@l+1)^(0+128)
  7567  04BF  0020               	movlb	0	; select bank0
  7568  04C0  0826               	movf	?___flmul,w
  7569  04C1  0021               	movlb	1	; select bank1
  7570  04C2  00D8               	movwf	efgtoa@l^(0+128)
  7571                           
  7572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  7573  04C3  0857               	movf	(efgtoa@h+3)^(0+128),w
  7574  04C4  0020               	movlb	0	; select bank0
  7575  04C5  00C3               	movwf	___flge@ff1+3
  7576  04C6  0021               	movlb	1	; select bank1
  7577  04C7  0856               	movf	(efgtoa@h+2)^(0+128),w
  7578  04C8  0020               	movlb	0	; select bank0
  7579  04C9  00C2               	movwf	___flge@ff1+2
  7580  04CA  0021               	movlb	1	; select bank1
  7581  04CB  0855               	movf	(efgtoa@h+1)^(0+128),w
  7582  04CC  0020               	movlb	0	; select bank0
  7583  04CD  00C1               	movwf	___flge@ff1+1
  7584  04CE  0021               	movlb	1	; select bank1
  7585  04CF  0854               	movf	efgtoa@h^(0+128),w
  7586  04D0  0020               	movlb	0	; select bank0
  7587  04D1  00C0               	movwf	___flge@ff1
  7588  04D2  0021               	movlb	1	; select bank1
  7589  04D3  085B               	movf	(efgtoa@l+3)^(0+128),w
  7590  04D4  0020               	movlb	0	; select bank0
  7591  04D5  00C7               	movwf	___flge@ff2+3
  7592  04D6  0021               	movlb	1	; select bank1
  7593  04D7  085A               	movf	(efgtoa@l+2)^(0+128),w
  7594  04D8  0020               	movlb	0	; select bank0
  7595  04D9  00C6               	movwf	___flge@ff2+2
  7596  04DA  0021               	movlb	1	; select bank1
  7597  04DB  0859               	movf	(efgtoa@l+1)^(0+128),w
  7598  04DC  0020               	movlb	0	; select bank0
  7599  04DD  00C5               	movwf	___flge@ff2+1
  7600  04DE  0021               	movlb	1	; select bank1
  7601  04DF  0858               	movf	efgtoa@l^(0+128),w
  7602  04E0  0020               	movlb	0	; select bank0
  7603  04E1  00C4               	movwf	___flge@ff2
  7604  04E2  3199  2189  3180   	fcall	___flge
  7605  04E5  1803               	btfsc	3,0
  7606  04E6  2CE8               	goto	u8411
  7607  04E7  2CE9               	goto	u8410
  7608  04E8                     u8411:	
  7609  04E8  2CF3               	goto	l6313
  7610  04E9                     u8410:	
  7611  04E9                     l6311:	
  7612                           
  7613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  7614  04E9  3000               	movlw	0
  7615  04EA  0021               	movlb	1	; select bank1
  7616  04EB  00DB               	movwf	(efgtoa@l+3)^(0+128)
  7617  04EC  3000               	movlw	0
  7618  04ED  00DA               	movwf	(efgtoa@l+2)^(0+128)
  7619  04EE  3000               	movlw	0
  7620  04EF  00D9               	movwf	(efgtoa@l+1)^(0+128)
  7621  04F0  3000               	movlw	0
  7622  04F1  00D8               	movwf	efgtoa@l^(0+128)
  7623                           
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  7625  04F2  2D18               	goto	l6319
  7626  04F3                     l6313:	
  7627                           
  7628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  7629  04F3  0021               	movlb	1	; select bank1
  7630  04F4  0857               	movf	(efgtoa@h+3)^(0+128),w
  7631  04F5  00F4               	movwf	___fleq@ff1+3
  7632  04F6  0856               	movf	(efgtoa@h+2)^(0+128),w
  7633  04F7  00F3               	movwf	___fleq@ff1+2
  7634  04F8  0855               	movf	(efgtoa@h+1)^(0+128),w
  7635  04F9  00F2               	movwf	___fleq@ff1+1
  7636  04FA  0854               	movf	efgtoa@h^(0+128),w
  7637  04FB  00F1               	movwf	___fleq@ff1
  7638  04FC  085B               	movf	(efgtoa@l+3)^(0+128),w
  7639  04FD  00F8               	movwf	___fleq@ff2+3
  7640  04FE  085A               	movf	(efgtoa@l+2)^(0+128),w
  7641  04FF  00F7               	movwf	___fleq@ff2+2
  7642  0500  0859               	movf	(efgtoa@l+1)^(0+128),w
  7643  0501  00F6               	movwf	___fleq@ff2+1
  7644  0502  0858               	movf	efgtoa@l^(0+128),w
  7645  0503  00F5               	movwf	___fleq@ff2
  7646  0504  31A3  23CF  3180   	fcall	___fleq
  7647  0507  1C03               	btfss	3,0
  7648  0508  2D0A               	goto	u8421
  7649  0509  2D0B               	goto	u8420
  7650  050A                     u8421:	
  7651  050A  2D18               	goto	l6319
  7652  050B                     u8420:	
  7653  050B                     l6315:	
  7654  050B  0021               	movlb	1	; select bank1
  7655  050C  1849               	btfsc	efgtoa@d^(0+128),0
  7656  050D  2D0F               	goto	u8431
  7657  050E  2D10               	goto	u8430
  7658  050F                     u8431:	
  7659  050F  2D18               	goto	l6319
  7660  0510                     u8430:	
  7661  0510                     l6317:	
  7662                           
  7663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  7664  0510  3000               	movlw	0
  7665  0511  00DB               	movwf	(efgtoa@l+3)^(0+128)
  7666  0512  3000               	movlw	0
  7667  0513  00DA               	movwf	(efgtoa@l+2)^(0+128)
  7668  0514  3000               	movlw	0
  7669  0515  00D9               	movwf	(efgtoa@l+1)^(0+128)
  7670  0516  3000               	movlw	0
  7671  0517  00D8               	movwf	efgtoa@l^(0+128)
  7672  0518                     l6319:	
  7673                           
  7674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  7675  0518  0021               	movlb	1	; select bank1
  7676  0519  085B               	movf	(efgtoa@l+3)^(0+128),w
  7677  051A  0020               	movlb	0	; select bank0
  7678  051B  00DD               	movwf	___fladd@b+3
  7679  051C  0021               	movlb	1	; select bank1
  7680  051D  085A               	movf	(efgtoa@l+2)^(0+128),w
  7681  051E  0020               	movlb	0	; select bank0
  7682  051F  00DC               	movwf	___fladd@b+2
  7683  0520  0021               	movlb	1	; select bank1
  7684  0521  0859               	movf	(efgtoa@l+1)^(0+128),w
  7685  0522  0020               	movlb	0	; select bank0
  7686  0523  00DB               	movwf	___fladd@b+1
  7687  0524  0021               	movlb	1	; select bank1
  7688  0525  0858               	movf	efgtoa@l^(0+128),w
  7689  0526  0020               	movlb	0	; select bank0
  7690  0527  00DA               	movwf	___fladd@b
  7691  0528  0021               	movlb	1	; select bank1
  7692  0529  0861               	movf	(efgtoa@g+3)^(0+128),w
  7693  052A  0020               	movlb	0	; select bank0
  7694  052B  00E1               	movwf	___fladd@a+3
  7695  052C  0021               	movlb	1	; select bank1
  7696  052D  0860               	movf	(efgtoa@g+2)^(0+128),w
  7697  052E  0020               	movlb	0	; select bank0
  7698  052F  00E0               	movwf	___fladd@a+2
  7699  0530  0021               	movlb	1	; select bank1
  7700  0531  085F               	movf	(efgtoa@g+1)^(0+128),w
  7701  0532  0020               	movlb	0	; select bank0
  7702  0533  00DF               	movwf	___fladd@a+1
  7703  0534  0021               	movlb	1	; select bank1
  7704  0535  085E               	movf	efgtoa@g^(0+128),w
  7705  0536  0020               	movlb	0	; select bank0
  7706  0537  00DE               	movwf	___fladd@a
  7707  0538  3193  2371  3180   	fcall	___fladd
  7708  053B  0020               	movlb	0	; select bank0
  7709  053C  085D               	movf	?___fladd+3,w
  7710  053D  0021               	movlb	1	; select bank1
  7711  053E  00D7               	movwf	(efgtoa@h+3)^(0+128)
  7712  053F  0020               	movlb	0	; select bank0
  7713  0540  085C               	movf	?___fladd+2,w
  7714  0541  0021               	movlb	1	; select bank1
  7715  0542  00D6               	movwf	(efgtoa@h+2)^(0+128)
  7716  0543  0020               	movlb	0	; select bank0
  7717  0544  085B               	movf	?___fladd+1,w
  7718  0545  0021               	movlb	1	; select bank1
  7719  0546  00D5               	movwf	(efgtoa@h+1)^(0+128)
  7720  0547  0020               	movlb	0	; select bank0
  7721  0548  085A               	movf	?___fladd,w
  7722  0549  0021               	movlb	1	; select bank1
  7723  054A  00D4               	movwf	efgtoa@h^(0+128)
  7724  054B                     l6321:	
  7725                           
  7726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  7727  054B  0834               	movf	(efgtoa@ou+3)^(0+128),w
  7728  054C  00E9               	movwf	(efgtoa@u+3)^(0+128)
  7729  054D  0833               	movf	(efgtoa@ou+2)^(0+128),w
  7730  054E  00E8               	movwf	(efgtoa@u+2)^(0+128)
  7731  054F  0832               	movf	(efgtoa@ou+1)^(0+128),w
  7732  0550  00E7               	movwf	(efgtoa@u+1)^(0+128)
  7733  0551  0831               	movf	efgtoa@ou^(0+128),w
  7734  0552  00E6               	movwf	efgtoa@u^(0+128)
  7735  0553                     l6323:	
  7736                           
  7737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  7738  0553  3065               	movlw	101
  7739  0554  0650               	xorwf	efgtoa@nmode^(0+128),w
  7740  0555  1903               	btfsc	3,2
  7741  0556  2D58               	goto	u8441
  7742  0557  2D59               	goto	u8440
  7743  0558                     u8441:	
  7744  0558  2D5E               	goto	l6327
  7745  0559                     u8440:	
  7746  0559                     l6325:	
  7747  0559  0863               	movf	(efgtoa@e+1)^(0+128),w
  7748  055A  00C8               	movwf	(efgtoa@ne+1)^(0+128)
  7749  055B  0862               	movf	efgtoa@e^(0+128),w
  7750  055C  00C7               	movwf	efgtoa@ne^(0+128)
  7751  055D  2D60               	goto	l729
  7752  055E                     l6327:	
  7753  055E  01C7               	clrf	efgtoa@ne^(0+128)
  7754  055F  01C8               	clrf	(efgtoa@ne+1)^(0+128)
  7755  0560                     l729:	
  7756                           
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  7758  0560  01C3               	clrf	efgtoa@pp^(0+128)
  7759  0561  01C4               	clrf	(efgtoa@pp+1)^(0+128)
  7760                           
  7761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  7762  0562  01C1               	clrf	efgtoa@t^(0+128)
  7763  0563  01C2               	clrf	(efgtoa@t+1)^(0+128)
  7764                           
  7765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  7766  0564  01DC               	clrf	efgtoa@i^(0+128)
  7767  0565  01DD               	clrf	(efgtoa@i+1)^(0+128)
  7768                           
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7770  0566  2E99               	goto	l6377
  7771  0567                     l6329:	
  7772                           
  7773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  7774  0567  0021               	movlb	1	; select bank1
  7775  0568  0869               	movf	(efgtoa@u+3)^(0+128),w
  7776  0569  0020               	movlb	0	; select bank0
  7777  056A  00C3               	movwf	___fldiv@a+3
  7778  056B  0021               	movlb	1	; select bank1
  7779  056C  0868               	movf	(efgtoa@u+2)^(0+128),w
  7780  056D  0020               	movlb	0	; select bank0
  7781  056E  00C2               	movwf	___fldiv@a+2
  7782  056F  0021               	movlb	1	; select bank1
  7783  0570  0867               	movf	(efgtoa@u+1)^(0+128),w
  7784  0571  0020               	movlb	0	; select bank0
  7785  0572  00C1               	movwf	___fldiv@a+1
  7786  0573  0021               	movlb	1	; select bank1
  7787  0574  0866               	movf	efgtoa@u^(0+128),w
  7788  0575  0020               	movlb	0	; select bank0
  7789  0576  00C0               	movwf	___fldiv@a
  7790  0577  0021               	movlb	1	; select bank1
  7791  0578  0857               	movf	(efgtoa@h+3)^(0+128),w
  7792  0579  0020               	movlb	0	; select bank0
  7793  057A  00C7               	movwf	___fldiv@b+3
  7794  057B  0021               	movlb	1	; select bank1
  7795  057C  0856               	movf	(efgtoa@h+2)^(0+128),w
  7796  057D  0020               	movlb	0	; select bank0
  7797  057E  00C6               	movwf	___fldiv@b+2
  7798  057F  0021               	movlb	1	; select bank1
  7799  0580  0855               	movf	(efgtoa@h+1)^(0+128),w
  7800  0581  0020               	movlb	0	; select bank0
  7801  0582  00C5               	movwf	___fldiv@b+1
  7802  0583  0021               	movlb	1	; select bank1
  7803  0584  0854               	movf	efgtoa@h^(0+128),w
  7804  0585  0020               	movlb	0	; select bank0
  7805  0586  00C4               	movwf	___fldiv@b
  7806  0587  3188  2016  3180   	fcall	___fldiv
  7807  058A  0020               	movlb	0	; select bank0
  7808  058B  0843               	movf	?___fldiv+3,w
  7809  058C  00DD               	movwf	floorf@x+3
  7810  058D  0842               	movf	?___fldiv+2,w
  7811  058E  00DC               	movwf	floorf@x+2
  7812  058F  0841               	movf	?___fldiv+1,w
  7813  0590  00DB               	movwf	floorf@x+1
  7814  0591  0840               	movf	?___fldiv,w
  7815  0592  00DA               	movwf	floorf@x
  7816  0593  319C  24EB  3180   	fcall	_floorf
  7817  0596  0020               	movlb	0	; select bank0
  7818  0597  085D               	movf	?_floorf+3,w
  7819  0598  0021               	movlb	1	; select bank1
  7820  0599  00DB               	movwf	(efgtoa@l+3)^(0+128)
  7821  059A  0020               	movlb	0	; select bank0
  7822  059B  085C               	movf	?_floorf+2,w
  7823  059C  0021               	movlb	1	; select bank1
  7824  059D  00DA               	movwf	(efgtoa@l+2)^(0+128)
  7825  059E  0020               	movlb	0	; select bank0
  7826  059F  085B               	movf	?_floorf+1,w
  7827  05A0  0021               	movlb	1	; select bank1
  7828  05A1  00D9               	movwf	(efgtoa@l+1)^(0+128)
  7829  05A2  0020               	movlb	0	; select bank0
  7830  05A3  085A               	movf	?_floorf,w
  7831  05A4  0021               	movlb	1	; select bank1
  7832  05A5  00D8               	movwf	efgtoa@l^(0+128)
  7833                           
  7834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  7835  05A6  085B               	movf	(efgtoa@l+3)^(0+128),w
  7836  05A7  00F4               	movwf	___fltol@f1+3
  7837  05A8  085A               	movf	(efgtoa@l+2)^(0+128),w
  7838  05A9  00F3               	movwf	___fltol@f1+2
  7839  05AA  0859               	movf	(efgtoa@l+1)^(0+128),w
  7840  05AB  00F2               	movwf	___fltol@f1+1
  7841  05AC  0858               	movf	efgtoa@l^(0+128),w
  7842  05AD  00F1               	movwf	___fltol@f1
  7843  05AE  3198  2096  3180   	fcall	___fltol
  7844  05B1  0872               	movf	?___fltol+1,w
  7845  05B2  0021               	movlb	1	; select bank1
  7846  05B3  00CA               	movwf	(efgtoa@d+1)^(0+128)
  7847  05B4  0871               	movf	?___fltol,w
  7848  05B5  00C9               	movwf	efgtoa@d^(0+128)
  7849  05B6                     l6331:	
  7850                           
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7852  05B6  0022               	movlb	2	; select bank2
  7853  05B7  1A62               	btfsc	_flags^(0+256),4
  7854  05B8  2DBA               	goto	u8451
  7855  05B9  2DBB               	goto	u8450
  7856  05BA                     u8451:	
  7857  05BA  2DD1               	goto	l6341
  7858  05BB                     u8450:	
  7859  05BB                     l6333:	
  7860  05BB  0021               	movlb	1	; select bank1
  7861  05BC  0849               	movf	efgtoa@d^(0+128),w
  7862  05BD  044A               	iorwf	(efgtoa@d+1)^(0+128),w
  7863  05BE  1D03               	btfss	3,2
  7864  05BF  2DC1               	goto	u8461
  7865  05C0  2DC2               	goto	u8460
  7866  05C1                     u8461:	
  7867  05C1  2DD1               	goto	l6341
  7868  05C2                     u8460:	
  7869  05C2                     l6335:	
  7870  05C2  3067               	movlw	103
  7871  05C3  0653               	xorwf	efgtoa@mode^(0+128),w
  7872  05C4  1D03               	btfss	3,2
  7873  05C5  2DC7               	goto	u8471
  7874  05C6  2DC8               	goto	u8470
  7875  05C7                     u8471:	
  7876  05C7  2DD1               	goto	l6341
  7877  05C8                     u8470:	
  7878  05C8                     l6337:	
  7879  05C8  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  7880  05C9  2DCB               	goto	u8481
  7881  05CA  2DCC               	goto	u8480
  7882  05CB                     u8481:	
  7883  05CB  2DD1               	goto	l6341
  7884  05CC                     u8480:	
  7885  05CC                     l6339:	
  7886                           
  7887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  7888  05CC  3001               	movlw	1
  7889  05CD  07C1               	addwf	efgtoa@t^(0+128),f
  7890  05CE  3000               	movlw	0
  7891  05CF  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  7892                           
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  7894  05D0  2E1F               	goto	l6369
  7895  05D1                     l6341:	
  7896                           
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  7898  05D1  0021               	movlb	1	; select bank1
  7899  05D2  0843               	movf	efgtoa@pp^(0+128),w
  7900  05D3  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  7901  05D4  1D03               	btfss	3,2
  7902  05D5  2DD7               	goto	u8491
  7903  05D6  2DD8               	goto	u8490
  7904  05D7                     u8491:	
  7905  05D7  2E07               	goto	l6361
  7906  05D8                     u8490:	
  7907  05D8                     l6343:	
  7908  05D8  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  7909  05D9  2DDB               	goto	u8501
  7910  05DA  2DDC               	goto	u8500
  7911  05DB                     u8501:	
  7912  05DB  2E07               	goto	l6361
  7913  05DC                     u8500:	
  7914  05DC                     l6345:	
  7915                           
  7916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  7917  05DC  302E               	movlw	46
  7918  05DD  00AD               	movwf	??_efgtoa^(0+128)
  7919  05DE  0864               	movf	efgtoa@n^(0+128),w
  7920  05DF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7921  05E0  0086               	movwf	6
  7922  05E1  3002               	movlw	2	; select bank4/5
  7923  05E2  0087               	movwf	7
  7924  05E3  082D               	movf	??_efgtoa^(0+128),w
  7925  05E4  0081               	movwf	1
  7926  05E5                     l6347:	
  7927  05E5  3001               	movlw	1
  7928  05E6  07E4               	addwf	efgtoa@n^(0+128),f
  7929  05E7  3000               	movlw	0
  7930  05E8  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  7931  05E9                     l6349:	
  7932                           
  7933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  7934  05E9  30FF               	movlw	255
  7935  05EA  07D1               	addwf	efgtoa@w^(0+128),f
  7936  05EB  30FF               	movlw	255
  7937  05EC  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  7938  05ED                     l6351:	
  7939                           
  7940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  7941  05ED  3001               	movlw	1
  7942  05EE  00C3               	movwf	efgtoa@pp^(0+128)
  7943  05EF  3000               	movlw	0
  7944  05F0  00C4               	movwf	(efgtoa@pp^(0+128)+1)
  7945  05F1  2E07               	goto	l6361
  7946  05F2                     l6353:	
  7947                           
  7948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  7949  05F2  3030               	movlw	48
  7950  05F3  00AD               	movwf	??_efgtoa^(0+128)
  7951  05F4  0864               	movf	efgtoa@n^(0+128),w
  7952  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7953  05F6  0086               	movwf	6
  7954  05F7  3002               	movlw	2	; select bank4/5
  7955  05F8  0087               	movwf	7
  7956  05F9  082D               	movf	??_efgtoa^(0+128),w
  7957  05FA  0081               	movwf	1
  7958  05FB                     l6355:	
  7959  05FB  3001               	movlw	1
  7960  05FC  07E4               	addwf	efgtoa@n^(0+128),f
  7961  05FD  3000               	movlw	0
  7962  05FE  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  7963  05FF                     l6357:	
  7964                           
  7965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  7966  05FF  30FF               	movlw	255
  7967  0600  07D1               	addwf	efgtoa@w^(0+128),f
  7968  0601  30FF               	movlw	255
  7969  0602  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  7970  0603                     l6359:	
  7971                           
  7972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  7973  0603  30FF               	movlw	255
  7974  0604  07C1               	addwf	efgtoa@t^(0+128),f
  7975  0605  30FF               	movlw	255
  7976  0606  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  7977  0607                     l6361:	
  7978                           
  7979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  7980  0607  0841               	movf	efgtoa@t^(0+128),w
  7981  0608  0442               	iorwf	(efgtoa@t+1)^(0+128),w
  7982  0609  1D03               	btfss	3,2
  7983  060A  2E0C               	goto	u8511
  7984  060B  2E0D               	goto	u8510
  7985  060C                     u8511:	
  7986  060C  2DF2               	goto	l6353
  7987  060D                     u8510:	
  7988  060D                     l6363:	
  7989                           
  7990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  7991  060D  0849               	movf	efgtoa@d^(0+128),w
  7992  060E  3E30               	addlw	48
  7993  060F  00AD               	movwf	??_efgtoa^(0+128)
  7994  0610  0864               	movf	efgtoa@n^(0+128),w
  7995  0611  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7996  0612  0086               	movwf	6
  7997  0613  3002               	movlw	2	; select bank4/5
  7998  0614  0087               	movwf	7
  7999  0615  082D               	movf	??_efgtoa^(0+128),w
  8000  0616  0081               	movwf	1
  8001  0617                     l6365:	
  8002  0617  3001               	movlw	1
  8003  0618  07E4               	addwf	efgtoa@n^(0+128),f
  8004  0619  3000               	movlw	0
  8005  061A  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  8006  061B                     l6367:	
  8007                           
  8008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  8009  061B  30FF               	movlw	255
  8010  061C  07D1               	addwf	efgtoa@w^(0+128),f
  8011  061D  30FF               	movlw	255
  8012  061E  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  8013  061F                     l6369:	
  8014                           
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  8016  061F  085B               	movf	(efgtoa@l+3)^(0+128),w
  8017  0620  0020               	movlb	0	; select bank0
  8018  0621  00AD               	movwf	___flmul@a+3
  8019  0622  0021               	movlb	1	; select bank1
  8020  0623  085A               	movf	(efgtoa@l+2)^(0+128),w
  8021  0624  0020               	movlb	0	; select bank0
  8022  0625  00AC               	movwf	___flmul@a+2
  8023  0626  0021               	movlb	1	; select bank1
  8024  0627  0859               	movf	(efgtoa@l+1)^(0+128),w
  8025  0628  0020               	movlb	0	; select bank0
  8026  0629  00AB               	movwf	___flmul@a+1
  8027  062A  0021               	movlb	1	; select bank1
  8028  062B  0858               	movf	efgtoa@l^(0+128),w
  8029  062C  0020               	movlb	0	; select bank0
  8030  062D  00AA               	movwf	___flmul@a
  8031  062E  0021               	movlb	1	; select bank1
  8032  062F  0869               	movf	(efgtoa@u+3)^(0+128),w
  8033  0630  0020               	movlb	0	; select bank0
  8034  0631  00A9               	movwf	___flmul@b+3
  8035  0632  0021               	movlb	1	; select bank1
  8036  0633  0868               	movf	(efgtoa@u+2)^(0+128),w
  8037  0634  0020               	movlb	0	; select bank0
  8038  0635  00A8               	movwf	___flmul@b+2
  8039  0636  0021               	movlb	1	; select bank1
  8040  0637  0867               	movf	(efgtoa@u+1)^(0+128),w
  8041  0638  0020               	movlb	0	; select bank0
  8042  0639  00A7               	movwf	___flmul@b+1
  8043  063A  0021               	movlb	1	; select bank1
  8044  063B  0866               	movf	efgtoa@u^(0+128),w
  8045  063C  0020               	movlb	0	; select bank0
  8046  063D  00A6               	movwf	___flmul@b
  8047  063E  3195  25A9  3180   	fcall	___flmul
  8048  0641  0020               	movlb	0	; select bank0
  8049  0642  0829               	movf	?___flmul+3,w
  8050  0643  0021               	movlb	1	; select bank1
  8051  0644  00A3               	movwf	(___flsub@a+3)^(0+128)
  8052  0645  0020               	movlb	0	; select bank0
  8053  0646  0828               	movf	?___flmul+2,w
  8054  0647  0021               	movlb	1	; select bank1
  8055  0648  00A2               	movwf	(___flsub@a+2)^(0+128)
  8056  0649  0020               	movlb	0	; select bank0
  8057  064A  0827               	movf	?___flmul+1,w
  8058  064B  0021               	movlb	1	; select bank1
  8059  064C  00A1               	movwf	(___flsub@a+1)^(0+128)
  8060  064D  0020               	movlb	0	; select bank0
  8061  064E  0826               	movf	?___flmul,w
  8062  064F  0021               	movlb	1	; select bank1
  8063  0650  00A0               	movwf	___flsub@a^(0+128)
  8064  0651  0857               	movf	(efgtoa@h+3)^(0+128),w
  8065  0652  00A7               	movwf	(___flsub@b+3)^(0+128)
  8066  0653  0856               	movf	(efgtoa@h+2)^(0+128),w
  8067  0654  00A6               	movwf	(___flsub@b+2)^(0+128)
  8068  0655  0855               	movf	(efgtoa@h+1)^(0+128),w
  8069  0656  00A5               	movwf	(___flsub@b+1)^(0+128)
  8070  0657  0854               	movf	efgtoa@h^(0+128),w
  8071  0658  00A4               	movwf	___flsub@b^(0+128)
  8072  0659  3187  27BF  3180   	fcall	___flsub
  8073  065C  0021               	movlb	1	; select bank1
  8074  065D  0823               	movf	(?___flsub+3)^(0+128),w
  8075  065E  00D7               	movwf	(efgtoa@h+3)^(0+128)
  8076  065F  0822               	movf	(?___flsub+2)^(0+128),w
  8077  0660  00D6               	movwf	(efgtoa@h+2)^(0+128)
  8078  0661  0821               	movf	(?___flsub+1)^(0+128),w
  8079  0662  00D5               	movwf	(efgtoa@h+1)^(0+128)
  8080  0663  0820               	movf	?___flsub^(0+128),w
  8081  0664  00D4               	movwf	efgtoa@h^(0+128)
  8082  0665                     l6371:	
  8083                           
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  8085  0665  3041               	movlw	65
  8086  0666  0020               	movlb	0	; select bank0
  8087  0667  00C3               	movwf	___fldiv@a+3
  8088  0668  3020               	movlw	32
  8089  0669  00C2               	movwf	___fldiv@a+2
  8090  066A  3000               	movlw	0
  8091  066B  00C1               	movwf	___fldiv@a+1
  8092  066C  3000               	movlw	0
  8093  066D  00C0               	movwf	___fldiv@a
  8094  066E  0021               	movlb	1	; select bank1
  8095  066F  0869               	movf	(efgtoa@u+3)^(0+128),w
  8096  0670  0020               	movlb	0	; select bank0
  8097  0671  00C7               	movwf	___fldiv@b+3
  8098  0672  0021               	movlb	1	; select bank1
  8099  0673  0868               	movf	(efgtoa@u+2)^(0+128),w
  8100  0674  0020               	movlb	0	; select bank0
  8101  0675  00C6               	movwf	___fldiv@b+2
  8102  0676  0021               	movlb	1	; select bank1
  8103  0677  0867               	movf	(efgtoa@u+1)^(0+128),w
  8104  0678  0020               	movlb	0	; select bank0
  8105  0679  00C5               	movwf	___fldiv@b+1
  8106  067A  0021               	movlb	1	; select bank1
  8107  067B  0866               	movf	efgtoa@u^(0+128),w
  8108  067C  0020               	movlb	0	; select bank0
  8109  067D  00C4               	movwf	___fldiv@b
  8110  067E  3188  2016  3180   	fcall	___fldiv
  8111  0681  0020               	movlb	0	; select bank0
  8112  0682  0843               	movf	?___fldiv+3,w
  8113  0683  0021               	movlb	1	; select bank1
  8114  0684  00E9               	movwf	(efgtoa@u+3)^(0+128)
  8115  0685  0020               	movlb	0	; select bank0
  8116  0686  0842               	movf	?___fldiv+2,w
  8117  0687  0021               	movlb	1	; select bank1
  8118  0688  00E8               	movwf	(efgtoa@u+2)^(0+128)
  8119  0689  0020               	movlb	0	; select bank0
  8120  068A  0841               	movf	?___fldiv+1,w
  8121  068B  0021               	movlb	1	; select bank1
  8122  068C  00E7               	movwf	(efgtoa@u+1)^(0+128)
  8123  068D  0020               	movlb	0	; select bank0
  8124  068E  0840               	movf	?___fldiv,w
  8125  068F  0021               	movlb	1	; select bank1
  8126  0690  00E6               	movwf	efgtoa@u^(0+128)
  8127  0691                     l6373:	
  8128                           
  8129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  8130  0691  30FF               	movlw	255
  8131  0692  07C7               	addwf	efgtoa@ne^(0+128),f
  8132  0693  30FF               	movlw	255
  8133  0694  3DC8               	addwfc	(efgtoa@ne+1)^(0+128),f
  8134  0695                     l6375:	
  8135                           
  8136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  8137  0695  3001               	movlw	1
  8138  0696  07DC               	addwf	efgtoa@i^(0+128),f
  8139  0697  3000               	movlw	0
  8140  0698  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  8141  0699                     l6377:	
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8144  0699  085D               	movf	(efgtoa@i+1)^(0+128),w
  8145  069A  3A80               	xorlw	128
  8146  069B  00AD               	movwf	??_efgtoa^(0+128)
  8147  069C  0846               	movf	(efgtoa@m+1)^(0+128),w
  8148  069D  3A80               	xorlw	128
  8149  069E  022D               	subwf	??_efgtoa^(0+128),w
  8150  069F  1D03               	skipz
  8151  06A0  2EA3               	goto	u8525
  8152  06A1  0845               	movf	efgtoa@m^(0+128),w
  8153  06A2  025C               	subwf	efgtoa@i^(0+128),w
  8154  06A3                     u8525:	
  8155  06A3  1803               	skipnc
  8156  06A4  2EA6               	goto	u8521
  8157  06A5  2EA7               	goto	u8520
  8158  06A6                     u8521:	
  8159  06A6  2EB5               	goto	l6381
  8160  06A7                     u8520:	
  8161  06A7                     l6379:	
  8162  06A7  0021               	movlb	1	; select bank1
  8163  06A8  0865               	movf	(efgtoa@n+1)^(0+128),w
  8164  06A9  3A80               	xorlw	128
  8165  06AA  00AD               	movwf	??_efgtoa^(0+128)
  8166  06AB  3080               	movlw	128
  8167  06AC  022D               	subwf	??_efgtoa^(0+128),w
  8168  06AD  1D03               	skipz
  8169  06AE  2EB1               	goto	u8535
  8170  06AF  304B               	movlw	75
  8171  06B0  0264               	subwf	efgtoa@n^(0+128),w
  8172  06B1                     u8535:	
  8173  06B1  1C03               	skipc
  8174  06B2  2EB4               	goto	u8531
  8175  06B3  2EB5               	goto	u8530
  8176  06B4                     u8531:	
  8177  06B4  2D67               	goto	l6329
  8178  06B5                     u8530:	
  8179  06B5                     l6381:	
  8180                           
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  8182  06B5  0021               	movlb	1	; select bank1
  8183  06B6  0843               	movf	efgtoa@pp^(0+128),w
  8184  06B7  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  8185  06B8  1D03               	btfss	3,2
  8186  06B9  2EBB               	goto	u8541
  8187  06BA  2EBC               	goto	u8540
  8188  06BB                     u8541:	
  8189  06BB  2ECF               	goto	l6389
  8190  06BC                     u8540:	
  8191  06BC                     l6383:	
  8192  06BC  0022               	movlb	2	; select bank2
  8193  06BD  1E62               	btfss	_flags^(0+256),4
  8194  06BE  2EC0               	goto	u8551
  8195  06BF  2EC1               	goto	u8550
  8196  06C0                     u8551:	
  8197  06C0  2ECF               	goto	l6389
  8198  06C1                     u8550:	
  8199  06C1                     l6385:	
  8200                           
  8201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  8202  06C1  302E               	movlw	46
  8203  06C2  0021               	movlb	1	; select bank1
  8204  06C3  00AD               	movwf	??_efgtoa^(0+128)
  8205  06C4  0864               	movf	efgtoa@n^(0+128),w
  8206  06C5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8207  06C6  0086               	movwf	6
  8208  06C7  3002               	movlw	2	; select bank4/5
  8209  06C8  0087               	movwf	7
  8210  06C9  082D               	movf	??_efgtoa^(0+128),w
  8211  06CA  0081               	movwf	1
  8212  06CB                     l6387:	
  8213  06CB  3001               	movlw	1
  8214  06CC  07E4               	addwf	efgtoa@n^(0+128),f
  8215  06CD  3000               	movlw	0
  8216  06CE  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  8217  06CF                     l6389:	
  8218                           
  8219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  8220  06CF  0021               	movlb	1	; select bank1
  8221  06D0  0864               	movf	efgtoa@n^(0+128),w
  8222  06D1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8223  06D2  0086               	movwf	6
  8224  06D3  3002               	movlw	2	; select bank4/5
  8225  06D4  0087               	movwf	7
  8226  06D5  0181               	clrf	1
  8227  06D6                     l6391:	
  8228                           
  8229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  8230  06D6  3065               	movlw	101
  8231  06D7  0650               	xorwf	efgtoa@nmode^(0+128),w
  8232  06D8  1D03               	btfss	3,2
  8233  06D9  2EDB               	goto	u8561
  8234  06DA  2EDC               	goto	u8560
  8235  06DB                     u8561:	
  8236  06DB  2FA3               	goto	l6451
  8237  06DC                     u8560:	
  8238  06DC                     l6393:	
  8239                           
  8240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  8241  06DC  304F               	movlw	79
  8242  06DD  00DC               	movwf	efgtoa@i^(0+128)
  8243  06DE  3000               	movlw	0
  8244  06DF  00DD               	movwf	(efgtoa@i^(0+128)+1)
  8245  06E0                     l6395:	
  8246                           
  8247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  8248  06E0  085C               	movf	efgtoa@i^(0+128),w
  8249  06E1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8250  06E2  0086               	movwf	6
  8251  06E3  3002               	movlw	2	; select bank4/5
  8252  06E4  0087               	movwf	7
  8253  06E5  0181               	clrf	1
  8254  06E6                     l6397:	
  8255                           
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  8257  06E6  01CC               	clrf	efgtoa@sign^(0+128)
  8258  06E7  01CD               	clrf	(efgtoa@sign+1)^(0+128)
  8259  06E8                     l6399:	
  8260                           
  8261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  8262  06E8  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  8263  06E9  2EEB               	goto	u8571
  8264  06EA  2EEC               	goto	u8570
  8265  06EB                     u8571:	
  8266  06EB  2EF5               	goto	l6405
  8267  06EC                     u8570:	
  8268  06EC                     l6401:	
  8269                           
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  8271  06EC  3001               	movlw	1
  8272  06ED  00CC               	movwf	efgtoa@sign^(0+128)
  8273  06EE  3000               	movlw	0
  8274  06EF  00CD               	movwf	(efgtoa@sign^(0+128)+1)
  8275  06F0                     l6403:	
  8276                           
  8277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  8278  06F0  09E2               	comf	efgtoa@e^(0+128),f
  8279  06F1  09E3               	comf	(efgtoa@e+1)^(0+128),f
  8280  06F2  0AE2               	incf	efgtoa@e^(0+128),f
  8281  06F3  1903               	skipnz
  8282  06F4  0AE3               	incf	(efgtoa@e+1)^(0+128),f
  8283  06F5                     l6405:	
  8284                           
  8285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  8286  06F5  3002               	movlw	2
  8287  06F6  00CE               	movwf	efgtoa@p^(0+128)
  8288  06F7  3000               	movlw	0
  8289  06F8  00CF               	movwf	(efgtoa@p^(0+128)+1)
  8290                           
  8291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8292  06F9  2F2D               	goto	l6417
  8293  06FA                     l6407:	
  8294                           
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  8296  06FA  30FF               	movlw	255
  8297  06FB  0021               	movlb	1	; select bank1
  8298  06FC  07DC               	addwf	efgtoa@i^(0+128),f
  8299  06FD  30FF               	movlw	255
  8300  06FE  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  8301  06FF                     l6409:	
  8302                           
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  8304  06FF  300A               	movlw	10
  8305  0700  00F1               	movwf	___awmod@divisor
  8306  0701  3000               	movlw	0
  8307  0702  00F2               	movwf	___awmod@divisor+1
  8308  0703  0863               	movf	(efgtoa@e+1)^(0+128),w
  8309  0704  00F4               	movwf	___awmod@dividend+1
  8310  0705  0862               	movf	efgtoa@e^(0+128),w
  8311  0706  00F3               	movwf	___awmod@dividend
  8312  0707  31A4  24BD  3180   	fcall	___awmod
  8313  070A  0871               	movf	?___awmod,w
  8314  070B  3E30               	addlw	48
  8315  070C  0021               	movlb	1	; select bank1
  8316  070D  00AD               	movwf	??_efgtoa^(0+128)
  8317  070E  085C               	movf	efgtoa@i^(0+128),w
  8318  070F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8319  0710  0086               	movwf	6
  8320  0711  3002               	movlw	2	; select bank4/5
  8321  0712  0087               	movwf	7
  8322  0713  082D               	movf	??_efgtoa^(0+128),w
  8323  0714  0081               	movwf	1
  8324  0715                     l6411:	
  8325                           
  8326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  8327  0715  300A               	movlw	10
  8328  0716  00F1               	movwf	___awdiv@divisor
  8329  0717  3000               	movlw	0
  8330  0718  00F2               	movwf	___awdiv@divisor+1
  8331  0719  0863               	movf	(efgtoa@e+1)^(0+128),w
  8332  071A  00F4               	movwf	___awdiv@dividend+1
  8333  071B  0862               	movf	efgtoa@e^(0+128),w
  8334  071C  00F3               	movwf	___awdiv@dividend
  8335  071D  31A6  2672  3180   	fcall	___awdiv
  8336  0720  0872               	movf	?___awdiv+1,w
  8337  0721  0021               	movlb	1	; select bank1
  8338  0722  00E3               	movwf	(efgtoa@e+1)^(0+128)
  8339  0723  0871               	movf	?___awdiv,w
  8340  0724  00E2               	movwf	efgtoa@e^(0+128)
  8341  0725                     l6413:	
  8342                           
  8343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  8344  0725  30FF               	movlw	255
  8345  0726  07CE               	addwf	efgtoa@p^(0+128),f
  8346  0727  30FF               	movlw	255
  8347  0728  3DCF               	addwfc	(efgtoa@p+1)^(0+128),f
  8348  0729                     l6415:	
  8349                           
  8350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  8351  0729  30FF               	movlw	255
  8352  072A  07D1               	addwf	efgtoa@w^(0+128),f
  8353  072B  30FF               	movlw	255
  8354  072C  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  8355  072D                     l6417:	
  8356                           
  8357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8358  072D  0862               	movf	efgtoa@e^(0+128),w
  8359  072E  0463               	iorwf	(efgtoa@e+1)^(0+128),w
  8360  072F  1D03               	btfss	3,2
  8361  0730  2F32               	goto	u8581
  8362  0731  2F33               	goto	u8580
  8363  0732                     u8581:	
  8364  0732  2EFA               	goto	l6407
  8365  0733                     u8580:	
  8366  0733                     l6419:	
  8367  0733  084F               	movf	(efgtoa@p+1)^(0+128),w
  8368  0734  3A80               	xorlw	128
  8369  0735  00AD               	movwf	??_efgtoa^(0+128)
  8370  0736  3080               	movlw	128
  8371  0737  022D               	subwf	??_efgtoa^(0+128),w
  8372  0738  1D03               	skipz
  8373  0739  2F3C               	goto	u8595
  8374  073A  3001               	movlw	1
  8375  073B  024E               	subwf	efgtoa@p^(0+128),w
  8376  073C                     u8595:	
  8377  073C  1803               	skipnc
  8378  073D  2F3F               	goto	u8591
  8379  073E  2F40               	goto	u8590
  8380  073F                     u8591:	
  8381  073F  2EFA               	goto	l6407
  8382  0740                     u8590:	
  8383  0740                     l6421:	
  8384                           
  8385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  8386  0740  30FF               	movlw	255
  8387  0741  0021               	movlb	1	; select bank1
  8388  0742  07DC               	addwf	efgtoa@i^(0+128),f
  8389  0743  30FF               	movlw	255
  8390  0744  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  8391  0745                     l6423:	
  8392                           
  8393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  8394  0745  084C               	movf	efgtoa@sign^(0+128),w
  8395  0746  044D               	iorwf	(efgtoa@sign+1)^(0+128),w
  8396  0747  1D03               	btfss	3,2
  8397  0748  2F4A               	goto	u8601
  8398  0749  2F4B               	goto	u8600
  8399  074A                     u8601:	
  8400  074A  2F50               	goto	l6427
  8401  074B                     u8600:	
  8402  074B                     l6425:	
  8403  074B  302B               	movlw	43
  8404  074C  00BB               	movwf	_efgtoa$559^(0+128)
  8405  074D  3000               	movlw	0
  8406  074E  00BC               	movwf	(_efgtoa$559^(0+128)+1)
  8407  074F  2F54               	goto	l6429
  8408  0750                     l6427:	
  8409  0750  302D               	movlw	45
  8410  0751  00BB               	movwf	_efgtoa$559^(0+128)
  8411  0752  3000               	movlw	0
  8412  0753  00BC               	movwf	(_efgtoa$559^(0+128)+1)
  8413  0754                     l6429:	
  8414  0754  083B               	movf	_efgtoa$559^(0+128),w
  8415  0755  00AD               	movwf	??_efgtoa^(0+128)
  8416  0756  085C               	movf	efgtoa@i^(0+128),w
  8417  0757  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8418  0758  0086               	movwf	6
  8419  0759  3002               	movlw	2	; select bank4/5
  8420  075A  0087               	movwf	7
  8421  075B  082D               	movf	??_efgtoa^(0+128),w
  8422  075C  0081               	movwf	1
  8423  075D                     l6431:	
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  8426  075D  30FF               	movlw	255
  8427  075E  07D1               	addwf	efgtoa@w^(0+128),f
  8428  075F  30FF               	movlw	255
  8429  0760  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  8430  0761                     l6433:	
  8431                           
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8433  0761  30FF               	movlw	255
  8434  0762  07DC               	addwf	efgtoa@i^(0+128),f
  8435  0763  30FF               	movlw	255
  8436  0764  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  8437  0765                     l6435:	
  8438  0765  082C               	movf	efgtoa@c^(0+128),w
  8439  0766  3EBF               	addlw	191
  8440  0767  00AD               	movwf	??_efgtoa^(0+128)
  8441  0768  30FF               	movlw	255
  8442  0769  1803               	skipnc
  8443  076A  3000               	movlw	0
  8444  076B  00AE               	movwf	(??_efgtoa^(0+128)+1)
  8445  076C  3000               	movlw	0
  8446  076D  022E               	subwf	(??_efgtoa+1)^(0+128),w
  8447  076E  301A               	movlw	26
  8448  076F  1903               	skipnz
  8449  0770  022D               	subwf	??_efgtoa^(0+128),w
  8450  0771  1C03               	skipc
  8451  0772  2F74               	goto	u8611
  8452  0773  2F76               	goto	u8610
  8453  0774                     u8611:	
  8454  0774  3001               	movlw	1
  8455  0775  2F77               	goto	u8620
  8456  0776                     u8610:	
  8457  0776  3000               	movlw	0
  8458  0777                     u8620:	
  8459  0777  00AF               	movwf	(??_efgtoa+2)^(0+128)
  8460  0778  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  8461  0779  082F               	movf	(??_efgtoa+2)^(0+128),w
  8462  077A  00BF               	movwf	_efgtoa$561^(0+128)
  8463  077B  0830               	movf	(??_efgtoa+3)^(0+128),w
  8464  077C  00C0               	movwf	(_efgtoa$561+1)^(0+128)
  8465  077D                     l6439:	
  8466  077D  083F               	movf	_efgtoa$561^(0+128),w
  8467  077E  0440               	iorwf	(_efgtoa$561+1)^(0+128),w
  8468  077F  1D03               	btfss	3,2
  8469  0780  2F82               	goto	u8631
  8470  0781  2F83               	goto	u8630
  8471  0782                     u8631:	
  8472  0782  2F88               	goto	l6443
  8473  0783                     u8630:	
  8474  0783                     l6441:	
  8475  0783  3065               	movlw	101
  8476  0784  00BD               	movwf	_efgtoa$560^(0+128)
  8477  0785  3000               	movlw	0
  8478  0786  00BE               	movwf	(_efgtoa$560^(0+128)+1)
  8479  0787  2F8C               	goto	l6445
  8480  0788                     l6443:	
  8481  0788  3045               	movlw	69
  8482  0789  00BD               	movwf	_efgtoa$560^(0+128)
  8483  078A  3000               	movlw	0
  8484  078B  00BE               	movwf	(_efgtoa$560^(0+128)+1)
  8485  078C                     l6445:	
  8486  078C  083D               	movf	_efgtoa$560^(0+128),w
  8487  078D  00AD               	movwf	??_efgtoa^(0+128)
  8488  078E  085C               	movf	efgtoa@i^(0+128),w
  8489  078F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8490  0790  0086               	movwf	6
  8491  0791  3002               	movlw	2	; select bank4/5
  8492  0792  0087               	movwf	7
  8493  0793  082D               	movf	??_efgtoa^(0+128),w
  8494  0794  0081               	movwf	1
  8495  0795                     l6447:	
  8496                           
  8497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  8498  0795  30FF               	movlw	255
  8499  0796  07D1               	addwf	efgtoa@w^(0+128),f
  8500  0797  30FF               	movlw	255
  8501  0798  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  8502  0799                     l6449:	
  8503                           
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  8505  0799  085C               	movf	efgtoa@i^(0+128),w
  8506  079A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8507  079B  00F1               	movwf	strcpy@src
  8508  079C  3002               	movlw	2
  8509  079D  00F2               	movwf	strcpy@src+1
  8510  079E  0864               	movf	efgtoa@n^(0+128),w
  8511  079F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8512  07A0  31A2  220C  3180   	fcall	_strcpy
  8513  07A3                     l6451:	
  8514                           
  8515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  8516  07A3  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8517  07A4  0021               	movlb	1	; select bank1
  8518  07A5  00AD               	movwf	??_efgtoa^(0+128)
  8519  07A6  082D               	movf	??_efgtoa^(0+128),w
  8520  07A7  0020               	movlb	0	; select bank0
  8521  07A8  00A7               	movwf	pad@buf
  8522  07A9  0021               	movlb	1	; select bank1
  8523  07AA  0852               	movf	(efgtoa@w+1)^(0+128),w
  8524  07AB  0020               	movlb	0	; select bank0
  8525  07AC  00A9               	movwf	pad@p+1
  8526  07AD  0021               	movlb	1	; select bank1
  8527  07AE  0851               	movf	efgtoa@w^(0+128),w
  8528  07AF  0020               	movlb	0	; select bank0
  8529  07B0  00A8               	movwf	pad@p
  8530  07B1  0021               	movlb	1	; select bank1
  8531  07B2  084B               	movf	efgtoa@fp^(0+128),w
  8532  07B3  31A5  25BE  3180   	fcall	_pad
  8533  07B6  0020               	movlb	0	; select bank0
  8534  07B7  0828               	movf	?_pad+1,w
  8535  07B8  0021               	movlb	1	; select bank1
  8536  07B9  00A9               	movwf	(?_efgtoa+1)^(0+128)
  8537  07BA  0020               	movlb	0	; select bank0
  8538  07BB  0827               	movf	?_pad,w
  8539  07BC  0021               	movlb	1	; select bank1
  8540  07BD  00A8               	movwf	?_efgtoa^(0+128)
  8541  07BE                     l685:	
  8542  07BE  0008               	return
  8543  07BF                     __end_of_efgtoa:	
  8544                           
  8545                           	psect	text17
  8546  2250                     __ptext17:	
  8547 ;; *************** function _tolower *****************
  8548 ;; Defined at:
  8549 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  c               2    7[COMMON] int 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  2    7[COMMON] int 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        8 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    2
  8570 ;; This function calls:
  8571 ;;		_isupper
  8572 ;; This function is called by:
  8573 ;;		_efgtoa
  8574 ;;		_vfpfcnvrt
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function _tolower
  8580  2250                     _tolower:	
  8581  2250                     l6083:	
  8582                           ;incstack = 0
  8583                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8584                           
  8585  2250  0877               	movf	tolower@c,w
  8586  2251  3EBF               	addlw	191
  8587  2252  0020               	movlb	0	; select bank0
  8588  2253  00A0               	movwf	??_tolower
  8589  2254  30FF               	movlw	255
  8590  2255  3D78               	addwfc	tolower@c+1,w
  8591  2256  00A1               	movwf	??_tolower+1
  8592  2257  3000               	movlw	0
  8593  2258  0221               	subwf	??_tolower+1,w
  8594  2259  301A               	movlw	26
  8595  225A  1903               	skipnz
  8596  225B  0220               	subwf	??_tolower,w
  8597  225C  1C03               	skipc
  8598  225D  2A5F               	goto	u7901
  8599  225E  2A61               	goto	u7900
  8600  225F                     u7901:	
  8601  225F  3001               	movlw	1
  8602  2260  2A62               	goto	u7910
  8603  2261                     u7900:	
  8604  2261  3000               	movlw	0
  8605  2262                     u7910:	
  8606  2262  00A2               	movwf	??_tolower+2
  8607  2263  01A3               	clrf	??_tolower+3
  8608  2264  0822               	movf	??_tolower+2,w
  8609  2265  00F9               	movwf	_tolower$1018
  8610  2266  0823               	movf	??_tolower+3,w
  8611  2267  00FA               	movwf	_tolower$1018+1
  8612  2268                     l6087:	
  8613  2268  0879               	movf	_tolower$1018,w
  8614  2269  047A               	iorwf	_tolower$1018+1,w
  8615  226A  1903               	btfsc	3,2
  8616  226B  2A6D               	goto	u7921
  8617  226C  2A6E               	goto	u7920
  8618  226D                     u7921:	
  8619  226D  2A75               	goto	l1389
  8620  226E                     u7920:	
  8621  226E                     l6089:	
  8622  226E  3020               	movlw	32
  8623  226F  0477               	iorwf	tolower@c,w
  8624  2270  00F7               	movwf	?_tolower
  8625  2271  3000               	movlw	0
  8626  2272  0478               	iorwf	tolower@c+1,w
  8627  2273  00F8               	movwf	?_tolower+1
  8628  2274  2A75               	goto	l1394
  8629  2275                     l1389:	
  8630  2275                     l1394:	
  8631  2275  0008               	return
  8632  2276                     __end_of_tolower:	
  8633                           
  8634                           	psect	text18
  8635  214A                     __ptext18:	
  8636 ;; *************** function _isupper *****************
  8637 ;; Defined at:
  8638 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;  c               2    1[COMMON] int 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  2    1[COMMON] int 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;Total ram usage:        6 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    1
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_efgtoa
  8663 ;;		_vfpfcnvrt
  8664 ;;		_tolower
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _isupper
  8670  214A                     _isupper:	
  8671  214A                     l6057:	
  8672                           ;incstack = 0
  8673                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8674                           
  8675  214A  0871               	movf	isupper@c,w
  8676  214B  3EBF               	addlw	191
  8677  214C  00F3               	movwf	??_isupper
  8678  214D  30FF               	movlw	255
  8679  214E  3D72               	addwfc	isupper@c+1,w
  8680  214F  00F4               	movwf	??_isupper+1
  8681  2150  3000               	movlw	0
  8682  2151  0274               	subwf	??_isupper+1,w
  8683  2152  301A               	movlw	26
  8684  2153  1903               	skipnz
  8685  2154  0273               	subwf	??_isupper,w
  8686  2155  1C03               	skipc
  8687  2156  2958               	goto	u7841
  8688  2157  295A               	goto	u7840
  8689  2158                     u7841:	
  8690  2158  3001               	movlw	1
  8691  2159  295B               	goto	u7850
  8692  215A                     u7840:	
  8693  215A  3000               	movlw	0
  8694  215B                     u7850:	
  8695  215B  00F5               	movwf	??_isupper+2
  8696  215C  01F6               	clrf	??_isupper+3
  8697  215D  0875               	movf	??_isupper+2,w
  8698  215E  00F1               	movwf	?_isupper
  8699  215F  0876               	movf	??_isupper+3,w
  8700  2160  00F2               	movwf	?_isupper+1
  8701  2161                     l1330:	
  8702  2161  0008               	return
  8703  2162                     __end_of_isupper:	
  8704                           
  8705                           	psect	text19
  8706  220C                     __ptext19:	
  8707 ;; *************** function _strcpy *****************
  8708 ;; Defined at:
  8709 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  dest            1    wreg     PTR unsigned char 
  8712 ;;		 -> dbuf(80), 
  8713 ;;  src             2    1[COMMON] PTR const unsigned char 
  8714 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
  8715 ;;		 -> dbuf(80), 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;  dest            1    8[COMMON] PTR unsigned char 
  8718 ;;		 -> dbuf(80), 
  8719 ;;  s               2    5[COMMON] PTR const unsigned char 
  8720 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
  8721 ;;		 -> dbuf(80), 
  8722 ;;  d               1    7[COMMON] PTR unsigned char 
  8723 ;;		 -> dbuf(80), 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      PTR unsigned char 
  8726 ;; Registers used:
  8727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;Total ram usage:        8 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_efgtoa
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function _strcpy
  8749  220C                     _strcpy:	
  8750                           
  8751                           ;incstack = 0
  8752                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8753                           ;strcpy@dest stored from wreg
  8754  220C  00F8               	movwf	strcpy@dest
  8755  220D                     l4023:	
  8756  220D  0872               	movf	strcpy@src+1,w
  8757  220E  00F6               	movwf	strcpy@s+1
  8758  220F  0871               	movf	strcpy@src,w
  8759  2210  00F5               	movwf	strcpy@s
  8760  2211  0878               	movf	strcpy@dest,w
  8761  2212  00F3               	movwf	??_strcpy
  8762  2213  0873               	movf	??_strcpy,w
  8763  2214  00F7               	movwf	strcpy@d
  8764  2215                     l4025:	
  8765  2215  0877               	movf	strcpy@d,w
  8766  2216  0086               	movwf	6
  8767  2217  3002               	movlw	2	; select bank4/5
  8768  2218  0087               	movwf	7
  8769  2219  0AF7               	incf	strcpy@d,f
  8770  221A  0876               	movf	strcpy@s+1,w
  8771  221B  00F4               	movwf	??_strcpy+1
  8772  221C  0875               	movf	strcpy@s,w
  8773  221D  00F3               	movwf	??_strcpy
  8774  221E  0AF5               	incf	strcpy@s,f
  8775  221F  1903               	skipnz
  8776  2220  0AF6               	incf	strcpy@s+1,f
  8777  2221  0873               	movf	??_strcpy,w
  8778  2222  0084               	movwf	4
  8779  2223  0874               	movf	??_strcpy+1,w
  8780  2224  0085               	movwf	5
  8781  2225  0800               	movf	0,w	;code access
  8782  2226  3FC0               	movwi [0]fsr1
  8783  2227  0889               	movf	9,f
  8784  2228  1D03               	btfss	3,2
  8785  2229  2A2B               	goto	u4591
  8786  222A  2A2C               	goto	u4590
  8787  222B                     u4591:	
  8788  222B  2A15               	goto	l4025
  8789  222C                     u4590:	
  8790  222C                     l1369:	
  8791  222C  0008               	return
  8792  222D                     __end_of_strcpy:	
  8793                           
  8794                           	psect	text20
  8795  1CEB                     __ptext20:	
  8796 ;; *************** function _floorf *****************
  8797 ;; Defined at:
  8798 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  x               4   58[BANK0 ] float 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  u               4   74[BANK0 ] struct .
  8803 ;;  m               4   68[BANK0 ] unsigned long 
  8804 ;;  e               2   72[BANK0 ] int 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  4   58[BANK0 ] float 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;Total ram usage:       20 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_efgtoa
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           
  8829                           ;psect for function _floorf
  8830  1CEB                     _floorf:	
  8831  1CEB                     l4037:	
  8832                           ;incstack = 0
  8833                           ; Regs used in _floorf: [wreg+status,2+status,0]
  8834                           
  8835  1CEB  0023               	movlb	3	; select bank3
  8836  1CEC  0823               	movf	(floorf@F524+3)^(0+384),w
  8837  1CED  0020               	movlb	0	; select bank0
  8838  1CEE  00ED               	movwf	floorf@u+3
  8839  1CEF  0023               	movlb	3	; select bank3
  8840  1CF0  0822               	movf	(floorf@F524+2)^(0+384),w
  8841  1CF1  0020               	movlb	0	; select bank0
  8842  1CF2  00EC               	movwf	floorf@u+2
  8843  1CF3  0023               	movlb	3	; select bank3
  8844  1CF4  0821               	movf	(floorf@F524+1)^(0+384),w
  8845  1CF5  0020               	movlb	0	; select bank0
  8846  1CF6  00EB               	movwf	floorf@u+1
  8847  1CF7  0023               	movlb	3	; select bank3
  8848  1CF8  0820               	movf	floorf@F524^(0+384),w
  8849  1CF9  0020               	movlb	0	; select bank0
  8850  1CFA  00EA               	movwf	floorf@u
  8851  1CFB  085D               	movf	floorf@x+3,w
  8852  1CFC  00ED               	movwf	floorf@u+3
  8853  1CFD  085C               	movf	floorf@x+2,w
  8854  1CFE  00EC               	movwf	floorf@u+2
  8855  1CFF  085B               	movf	floorf@x+1,w
  8856  1D00  00EB               	movwf	floorf@u+1
  8857  1D01  085A               	movf	floorf@x,w
  8858  1D02  00EA               	movwf	floorf@u
  8859  1D03                     l4039:	
  8860  1D03  086A               	movf	floorf@u,w
  8861  1D04  00DE               	movwf	??_floorf
  8862  1D05  086B               	movf	floorf@u+1,w
  8863  1D06  00DF               	movwf	??_floorf+1
  8864  1D07  086C               	movf	floorf@u+2,w
  8865  1D08  00E0               	movwf	??_floorf+2
  8866  1D09  086D               	movf	floorf@u+3,w
  8867  1D0A  00E1               	movwf	??_floorf+3
  8868  1D0B  3017               	movlw	23
  8869  1D0C                     u4635:	
  8870  1D0C  36E1               	lsrf	??_floorf+3,f
  8871  1D0D  0CE0               	rrf	??_floorf+2,f
  8872  1D0E  0CDF               	rrf	??_floorf+1,f
  8873  1D0F  0CDE               	rrf	??_floorf,f
  8874  1D10                     u4630:	
  8875  1D10  0B89               	decfsz	9,f
  8876  1D11  2D0C               	goto	u4635
  8877  1D12  30FF               	movlw	255
  8878  1D13  055E               	andwf	??_floorf,w
  8879  1D14  00E2               	movwf	??_floorf+4
  8880  1D15  3000               	movlw	0
  8881  1D16  055F               	andwf	??_floorf+1,w
  8882  1D17  00E3               	movwf	??_floorf+5
  8883  1D18  0862               	movf	??_floorf+4,w
  8884  1D19  3E81               	addlw	129
  8885  1D1A  00E8               	movwf	floorf@e
  8886  1D1B  30FF               	movlw	255
  8887  1D1C  3D63               	addwfc	??_floorf+5,w
  8888  1D1D  00E9               	movwf	floorf@e+1
  8889  1D1E                     l4041:	
  8890  1D1E  0869               	movf	floorf@e+1,w
  8891  1D1F  3A80               	xorlw	128
  8892  1D20  00DE               	movwf	??_floorf
  8893  1D21  3080               	movlw	128
  8894  1D22  025E               	subwf	??_floorf,w
  8895  1D23  1D03               	skipz
  8896  1D24  2D27               	goto	u4645
  8897  1D25  3017               	movlw	23
  8898  1D26  0268               	subwf	floorf@e,w
  8899  1D27                     u4645:	
  8900  1D27  1C03               	skipc
  8901  1D28  2D2A               	goto	u4641
  8902  1D29  2D2B               	goto	u4640
  8903  1D2A                     u4641:	
  8904  1D2A  2D2C               	goto	l1305
  8905  1D2B                     u4640:	
  8906  1D2B                     l4043:	
  8907  1D2B  2DD5               	goto	l1306
  8908  1D2C                     l1305:	
  8909  1D2C  0020               	movlb	0	; select bank0
  8910  1D2D  1BE9               	btfsc	floorf@e+1,7
  8911  1D2E  2D30               	goto	u4651
  8912  1D2F  2D31               	goto	u4650
  8913  1D30                     u4651:	
  8914  1D30  2D8E               	goto	l4057
  8915  1D31                     u4650:	
  8916  1D31                     l4045:	
  8917  1D31  30FF               	movlw	255
  8918  1D32  00DE               	movwf	??_floorf
  8919  1D33  30FF               	movlw	255
  8920  1D34  00DF               	movwf	??_floorf+1
  8921  1D35  307F               	movlw	127
  8922  1D36  00E0               	movwf	??_floorf+2
  8923  1D37  3000               	movlw	0
  8924  1D38  00E1               	movwf	??_floorf+3
  8925  1D39  0A68               	incf	floorf@e,w
  8926  1D3A  2D3F               	goto	u4660
  8927  1D3B                     u4665:	
  8928  1D3B  37E1               	asrf	??_floorf+3,f
  8929  1D3C  0CE0               	rrf	??_floorf+2,f
  8930  1D3D  0CDF               	rrf	??_floorf+1,f
  8931  1D3E  0CDE               	rrf	??_floorf,f
  8932  1D3F                     u4660:	
  8933  1D3F  0B89               	decfsz	9,f
  8934  1D40  2D3B               	goto	u4665
  8935  1D41  0861               	movf	??_floorf+3,w
  8936  1D42  00E7               	movwf	floorf@m+3
  8937  1D43  0860               	movf	??_floorf+2,w
  8938  1D44  00E6               	movwf	floorf@m+2
  8939  1D45  085F               	movf	??_floorf+1,w
  8940  1D46  00E5               	movwf	floorf@m+1
  8941  1D47  085E               	movf	??_floorf,w
  8942  1D48  00E4               	movwf	floorf@m
  8943  1D49                     l4047:	
  8944  1D49  086A               	movf	floorf@u,w
  8945  1D4A  0564               	andwf	floorf@m,w
  8946  1D4B  00DE               	movwf	??_floorf
  8947  1D4C  086B               	movf	floorf@u+1,w
  8948  1D4D  0565               	andwf	floorf@m+1,w
  8949  1D4E  00DF               	movwf	??_floorf+1
  8950  1D4F  086C               	movf	floorf@u+2,w
  8951  1D50  0566               	andwf	floorf@m+2,w
  8952  1D51  00E0               	movwf	??_floorf+2
  8953  1D52  086D               	movf	floorf@u+3,w
  8954  1D53  0567               	andwf	floorf@m+3,w
  8955  1D54  00E1               	movwf	??_floorf+3
  8956  1D55  0861               	movf	??_floorf+3,w
  8957  1D56  0460               	iorwf	??_floorf+2,w
  8958  1D57  045F               	iorwf	??_floorf+1,w
  8959  1D58  045E               	iorwf	??_floorf,w
  8960  1D59  1D03               	skipz
  8961  1D5A  2D5C               	goto	u4671
  8962  1D5B  2D5D               	goto	u4670
  8963  1D5C                     u4671:	
  8964  1D5C  2D5E               	goto	l4051
  8965  1D5D                     u4670:	
  8966  1D5D  2D2B               	goto	l4043
  8967  1D5E                     l4051:	
  8968  1D5E  086A               	movf	floorf@u,w
  8969  1D5F  00DE               	movwf	??_floorf
  8970  1D60  086B               	movf	floorf@u+1,w
  8971  1D61  00DF               	movwf	??_floorf+1
  8972  1D62  086C               	movf	floorf@u+2,w
  8973  1D63  00E0               	movwf	??_floorf+2
  8974  1D64  086D               	movf	floorf@u+3,w
  8975  1D65  00E1               	movwf	??_floorf+3
  8976  1D66  301F               	movlw	31
  8977  1D67                     u4685:	
  8978  1D67  36E1               	lsrf	??_floorf+3,f
  8979  1D68  0CE0               	rrf	??_floorf+2,f
  8980  1D69  0CDF               	rrf	??_floorf+1,f
  8981  1D6A  0CDE               	rrf	??_floorf,f
  8982  1D6B                     u4680:	
  8983  1D6B  0B89               	decfsz	9,f
  8984  1D6C  2D67               	goto	u4685
  8985  1D6D  0861               	movf	??_floorf+3,w
  8986  1D6E  0460               	iorwf	??_floorf+2,w
  8987  1D6F  045F               	iorwf	??_floorf+1,w
  8988  1D70  045E               	iorwf	??_floorf,w
  8989  1D71  1903               	skipnz
  8990  1D72  2D74               	goto	u4691
  8991  1D73  2D75               	goto	u4690
  8992  1D74                     u4691:	
  8993  1D74  2D7D               	goto	l4055
  8994  1D75                     u4690:	
  8995  1D75                     l4053:	
  8996  1D75  0864               	movf	floorf@m,w
  8997  1D76  07EA               	addwf	floorf@u,f
  8998  1D77  0865               	movf	floorf@m+1,w
  8999  1D78  3DEB               	addwfc	floorf@u+1,f
  9000  1D79  0866               	movf	floorf@m+2,w
  9001  1D7A  3DEC               	addwfc	floorf@u+2,f
  9002  1D7B  0867               	movf	floorf@m+3,w
  9003  1D7C  3DED               	addwfc	floorf@u+3,f
  9004  1D7D                     l4055:	
  9005  1D7D  0964               	comf	floorf@m,w
  9006  1D7E  00DE               	movwf	??_floorf
  9007  1D7F  0965               	comf	floorf@m+1,w
  9008  1D80  00DF               	movwf	??_floorf+1
  9009  1D81  0966               	comf	floorf@m+2,w
  9010  1D82  00E0               	movwf	??_floorf+2
  9011  1D83  0967               	comf	floorf@m+3,w
  9012  1D84  00E1               	movwf	??_floorf+3
  9013  1D85  085E               	movf	??_floorf,w
  9014  1D86  05EA               	andwf	floorf@u,f
  9015  1D87  085F               	movf	??_floorf+1,w
  9016  1D88  05EB               	andwf	floorf@u+1,f
  9017  1D89  0860               	movf	??_floorf+2,w
  9018  1D8A  05EC               	andwf	floorf@u+2,f
  9019  1D8B  0861               	movf	??_floorf+3,w
  9020  1D8C  05ED               	andwf	floorf@u+3,f
  9021  1D8D  2DCD               	goto	l1310
  9022  1D8E                     l4057:	
  9023  1D8E  086A               	movf	floorf@u,w
  9024  1D8F  00DE               	movwf	??_floorf
  9025  1D90  086B               	movf	floorf@u+1,w
  9026  1D91  00DF               	movwf	??_floorf+1
  9027  1D92  086C               	movf	floorf@u+2,w
  9028  1D93  00E0               	movwf	??_floorf+2
  9029  1D94  086D               	movf	floorf@u+3,w
  9030  1D95  00E1               	movwf	??_floorf+3
  9031  1D96  301F               	movlw	31
  9032  1D97                     u4705:	
  9033  1D97  36E1               	lsrf	??_floorf+3,f
  9034  1D98  0CE0               	rrf	??_floorf+2,f
  9035  1D99  0CDF               	rrf	??_floorf+1,f
  9036  1D9A  0CDE               	rrf	??_floorf,f
  9037  1D9B                     u4700:	
  9038  1D9B  0B89               	decfsz	9,f
  9039  1D9C  2D97               	goto	u4705
  9040  1D9D  0861               	movf	??_floorf+3,w
  9041  1D9E  0460               	iorwf	??_floorf+2,w
  9042  1D9F  045F               	iorwf	??_floorf+1,w
  9043  1DA0  045E               	iorwf	??_floorf,w
  9044  1DA1  1D03               	skipz
  9045  1DA2  2DA4               	goto	u4711
  9046  1DA3  2DA5               	goto	u4710
  9047  1DA4                     u4711:	
  9048  1DA4  2DAE               	goto	l4061
  9049  1DA5                     u4710:	
  9050  1DA5                     l4059:	
  9051  1DA5  3000               	movlw	0
  9052  1DA6  00ED               	movwf	floorf@u+3
  9053  1DA7  3000               	movlw	0
  9054  1DA8  00EC               	movwf	floorf@u+2
  9055  1DA9  3000               	movlw	0
  9056  1DAA  00EB               	movwf	floorf@u+1
  9057  1DAB  3000               	movlw	0
  9058  1DAC  00EA               	movwf	floorf@u
  9059  1DAD  2DCD               	goto	l1310
  9060  1DAE                     l4061:	
  9061  1DAE  086A               	movf	floorf@u,w
  9062  1DAF  00DE               	movwf	??_floorf
  9063  1DB0  086B               	movf	floorf@u+1,w
  9064  1DB1  00DF               	movwf	??_floorf+1
  9065  1DB2  086C               	movf	floorf@u+2,w
  9066  1DB3  00E0               	movwf	??_floorf+2
  9067  1DB4  086D               	movf	floorf@u+3,w
  9068  1DB5  00E1               	movwf	??_floorf+3
  9069  1DB6  3001               	movlw	1
  9070  1DB7                     u4725:	
  9071  1DB7  35DE               	lslf	??_floorf,f
  9072  1DB8  0DDF               	rlf	??_floorf+1,f
  9073  1DB9  0DE0               	rlf	??_floorf+2,f
  9074  1DBA  0DE1               	rlf	??_floorf+3,f
  9075  1DBB                     u4720:	
  9076  1DBB  0B89               	decfsz	9,f
  9077  1DBC  2DB7               	goto	u4725
  9078  1DBD  0861               	movf	??_floorf+3,w
  9079  1DBE  0460               	iorwf	??_floorf+2,w
  9080  1DBF  045F               	iorwf	??_floorf+1,w
  9081  1DC0  045E               	iorwf	??_floorf,w
  9082  1DC1  1903               	skipnz
  9083  1DC2  2DC4               	goto	u4731
  9084  1DC3  2DC5               	goto	u4730
  9085  1DC4                     u4731:	
  9086  1DC4  2DCD               	goto	l1310
  9087  1DC5                     u4730:	
  9088  1DC5                     l4063:	
  9089  1DC5  30BF               	movlw	191
  9090  1DC6  00ED               	movwf	floorf@u+3
  9091  1DC7  3080               	movlw	128
  9092  1DC8  00EC               	movwf	floorf@u+2
  9093  1DC9  3000               	movlw	0
  9094  1DCA  00EB               	movwf	floorf@u+1
  9095  1DCB  3000               	movlw	0
  9096  1DCC  00EA               	movwf	floorf@u
  9097  1DCD                     l1310:	
  9098  1DCD  086D               	movf	floorf@u+3,w
  9099  1DCE  00DD               	movwf	?_floorf+3
  9100  1DCF  086C               	movf	floorf@u+2,w
  9101  1DD0  00DC               	movwf	?_floorf+2
  9102  1DD1  086B               	movf	floorf@u+1,w
  9103  1DD2  00DB               	movwf	?_floorf+1
  9104  1DD3  086A               	movf	floorf@u,w
  9105  1DD4  00DA               	movwf	?_floorf
  9106  1DD5                     l1306:	
  9107  1DD5  0008               	return
  9108  1DD6                     __end_of_floorf:	
  9109                           
  9110                           	psect	text21
  9111  190A                     __ptext21:	
  9112 ;; *************** function ___fpclassifyf *****************
  9113 ;; Defined at:
  9114 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  x               4    1[COMMON] float 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  u               4    2[BANK0 ] struct .
  9119 ;;  e               2    0[BANK0 ] int 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    1[COMMON] int 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;Total ram usage:       16 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    1
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_efgtoa
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function ___fpclassifyf
  9145  190A                     ___fpclassifyf:	
  9146  190A                     l3999:	
  9147                           ;incstack = 0
  9148                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  9149                           
  9150  190A  0023               	movlb	3	; select bank3
  9151  190B  082B               	movf	(___fpclassifyf@F463+3)^(0+384),w
  9152  190C  0020               	movlb	0	; select bank0
  9153  190D  00A5               	movwf	___fpclassifyf@u+3
  9154  190E  0023               	movlb	3	; select bank3
  9155  190F  082A               	movf	(___fpclassifyf@F463+2)^(0+384),w
  9156  1910  0020               	movlb	0	; select bank0
  9157  1911  00A4               	movwf	___fpclassifyf@u+2
  9158  1912  0023               	movlb	3	; select bank3
  9159  1913  0829               	movf	(___fpclassifyf@F463+1)^(0+384),w
  9160  1914  0020               	movlb	0	; select bank0
  9161  1915  00A3               	movwf	___fpclassifyf@u+1
  9162  1916  0023               	movlb	3	; select bank3
  9163  1917  0828               	movf	___fpclassifyf@F463^(0+384),w
  9164  1918  0020               	movlb	0	; select bank0
  9165  1919  00A2               	movwf	___fpclassifyf@u
  9166  191A  0874               	movf	___fpclassifyf@x+3,w
  9167  191B  00A5               	movwf	___fpclassifyf@u+3
  9168  191C  0873               	movf	___fpclassifyf@x+2,w
  9169  191D  00A4               	movwf	___fpclassifyf@u+2
  9170  191E  0872               	movf	___fpclassifyf@x+1,w
  9171  191F  00A3               	movwf	___fpclassifyf@u+1
  9172  1920  0871               	movf	___fpclassifyf@x,w
  9173  1921  00A2               	movwf	___fpclassifyf@u
  9174  1922                     l4001:	
  9175  1922  0822               	movf	___fpclassifyf@u,w
  9176  1923  00F5               	movwf	??___fpclassifyf
  9177  1924  0823               	movf	___fpclassifyf@u+1,w
  9178  1925  00F6               	movwf	??___fpclassifyf+1
  9179  1926  0824               	movf	___fpclassifyf@u+2,w
  9180  1927  00F7               	movwf	??___fpclassifyf+2
  9181  1928  0825               	movf	___fpclassifyf@u+3,w
  9182  1929  00F8               	movwf	??___fpclassifyf+3
  9183  192A  3017               	movlw	23
  9184  192B                     u4515:	
  9185  192B  36F8               	lsrf	??___fpclassifyf+3,f
  9186  192C  0CF7               	rrf	??___fpclassifyf+2,f
  9187  192D  0CF6               	rrf	??___fpclassifyf+1,f
  9188  192E  0CF5               	rrf	??___fpclassifyf,f
  9189  192F                     u4510:	
  9190  192F  0B89               	decfsz	9,f
  9191  1930  292B               	goto	u4515
  9192  1931  30FF               	movlw	255
  9193  1932  0575               	andwf	??___fpclassifyf,w
  9194  1933  00A0               	movwf	___fpclassifyf@e
  9195  1934  3000               	movlw	0
  9196  1935  0576               	andwf	??___fpclassifyf+1,w
  9197  1936  00A1               	movwf	___fpclassifyf@e+1
  9198  1937                     l4003:	
  9199  1937  0820               	movf	___fpclassifyf@e,w
  9200  1938  0421               	iorwf	___fpclassifyf@e+1,w
  9201  1939  1D03               	btfss	3,2
  9202  193A  293C               	goto	u4521
  9203  193B  293D               	goto	u4520
  9204  193C                     u4521:	
  9205  193C  295E               	goto	l4013
  9206  193D                     u4520:	
  9207  193D                     l4005:	
  9208  193D  0822               	movf	___fpclassifyf@u,w
  9209  193E  00F5               	movwf	??___fpclassifyf
  9210  193F  0823               	movf	___fpclassifyf@u+1,w
  9211  1940  00F6               	movwf	??___fpclassifyf+1
  9212  1941  0824               	movf	___fpclassifyf@u+2,w
  9213  1942  00F7               	movwf	??___fpclassifyf+2
  9214  1943  0825               	movf	___fpclassifyf@u+3,w
  9215  1944  00F8               	movwf	??___fpclassifyf+3
  9216  1945  3001               	movlw	1
  9217  1946                     u4535:	
  9218  1946  35F5               	lslf	??___fpclassifyf,f
  9219  1947  0DF6               	rlf	??___fpclassifyf+1,f
  9220  1948  0DF7               	rlf	??___fpclassifyf+2,f
  9221  1949  0DF8               	rlf	??___fpclassifyf+3,f
  9222  194A                     u4530:	
  9223  194A  0B89               	decfsz	9,f
  9224  194B  2946               	goto	u4535
  9225  194C  0878               	movf	??___fpclassifyf+3,w
  9226  194D  0477               	iorwf	??___fpclassifyf+2,w
  9227  194E  0476               	iorwf	??___fpclassifyf+1,w
  9228  194F  0475               	iorwf	??___fpclassifyf,w
  9229  1950  1D03               	skipz
  9230  1951  2953               	goto	u4541
  9231  1952  2954               	goto	u4540
  9232  1953                     u4541:	
  9233  1953  2959               	goto	l4009
  9234  1954                     u4540:	
  9235  1954                     l4007:	
  9236  1954  3002               	movlw	2
  9237  1955  00F1               	movwf	?___fpclassifyf
  9238  1956  3000               	movlw	0
  9239  1957  00F2               	movwf	?___fpclassifyf+1
  9240  1958  2988               	goto	l1256
  9241  1959                     l4009:	
  9242  1959  3003               	movlw	3
  9243  195A  00F1               	movwf	?___fpclassifyf
  9244  195B  3000               	movlw	0
  9245  195C  00F2               	movwf	?___fpclassifyf+1
  9246  195D  2988               	goto	l1256
  9247  195E                     l4013:	
  9248  195E  0A20               	incf	___fpclassifyf@e,w
  9249  195F  0421               	iorwf	___fpclassifyf@e+1,w
  9250  1960  1D03               	btfss	3,2
  9251  1961  2963               	goto	u4551
  9252  1962  2964               	goto	u4550
  9253  1963                     u4551:	
  9254  1963  2984               	goto	l4019
  9255  1964                     u4550:	
  9256  1964                     l4015:	
  9257  1964  0822               	movf	___fpclassifyf@u,w
  9258  1965  00F5               	movwf	??___fpclassifyf
  9259  1966  0823               	movf	___fpclassifyf@u+1,w
  9260  1967  00F6               	movwf	??___fpclassifyf+1
  9261  1968  0824               	movf	___fpclassifyf@u+2,w
  9262  1969  00F7               	movwf	??___fpclassifyf+2
  9263  196A  0825               	movf	___fpclassifyf@u+3,w
  9264  196B  00F8               	movwf	??___fpclassifyf+3
  9265  196C  3009               	movlw	9
  9266  196D                     u4565:	
  9267  196D  35F5               	lslf	??___fpclassifyf,f
  9268  196E  0DF6               	rlf	??___fpclassifyf+1,f
  9269  196F  0DF7               	rlf	??___fpclassifyf+2,f
  9270  1970  0DF8               	rlf	??___fpclassifyf+3,f
  9271  1971                     u4560:	
  9272  1971  0B89               	decfsz	9,f
  9273  1972  296D               	goto	u4565
  9274  1973  0878               	movf	??___fpclassifyf+3,w
  9275  1974  0477               	iorwf	??___fpclassifyf+2,w
  9276  1975  0476               	iorwf	??___fpclassifyf+1,w
  9277  1976  0475               	iorwf	??___fpclassifyf,w
  9278  1977  1903               	skipnz
  9279  1978  297A               	goto	u4571
  9280  1979  297C               	goto	u4570
  9281  197A                     u4571:	
  9282  197A  3001               	movlw	1
  9283  197B  297D               	goto	u4580
  9284  197C                     u4570:	
  9285  197C  3000               	movlw	0
  9286  197D                     u4580:	
  9287  197D  00F9               	movwf	??___fpclassifyf+4
  9288  197E  01FA               	clrf	??___fpclassifyf+5
  9289  197F  0879               	movf	??___fpclassifyf+4,w
  9290  1980  00F1               	movwf	?___fpclassifyf
  9291  1981  087A               	movf	??___fpclassifyf+5,w
  9292  1982  00F2               	movwf	?___fpclassifyf+1
  9293  1983  2988               	goto	l1256
  9294  1984                     l4019:	
  9295  1984  3004               	movlw	4
  9296  1985  00F1               	movwf	?___fpclassifyf
  9297  1986  3000               	movlw	0
  9298  1987  00F2               	movwf	?___fpclassifyf+1
  9299  1988                     l1256:	
  9300  1988  0008               	return
  9301  1989                     __end_of___fpclassifyf:	
  9302                           
  9303                           	psect	text22
  9304  1896                     __ptext22:	
  9305 ;; *************** function ___fltol *****************
  9306 ;; Defined at:
  9307 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  f1              4    1[COMMON] int 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  exp1            1   11[COMMON] unsigned char 
  9312 ;;  sign1           1   10[COMMON] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  4    1[COMMON] long 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9324 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9325 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;Total ram usage:       11 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_lcd_update
  9333 ;;		_efgtoa
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           
  9338                           ;psect for function ___fltol
  9339  1896                     ___fltol:	
  9340  1896                     l4275:	
  9341                           ;incstack = 0
  9342                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9343                           
  9344  1896  1003               	clrc
  9345  1897  0D73               	rlf	___fltol@f1+2,w
  9346  1898  0D74               	rlf	___fltol@f1+3,w
  9347  1899  00F5               	movwf	??___fltol
  9348  189A  0875               	movf	??___fltol,w
  9349  189B  00FB               	movwf	___fltol@exp1
  9350  189C  087B               	movf	___fltol@exp1,w
  9351  189D  1D03               	btfss	3,2
  9352  189E  28A0               	goto	u5291
  9353  189F  28A1               	goto	u5290
  9354  18A0                     u5291:	
  9355  18A0  28AA               	goto	l4281
  9356  18A1                     u5290:	
  9357  18A1                     l4277:	
  9358  18A1  3000               	movlw	0
  9359  18A2  00F4               	movwf	?___fltol+3
  9360  18A3  3000               	movlw	0
  9361  18A4  00F3               	movwf	?___fltol+2
  9362  18A5  3000               	movlw	0
  9363  18A6  00F2               	movwf	?___fltol+1
  9364  18A7  3000               	movlw	0
  9365  18A8  00F1               	movwf	?___fltol
  9366  18A9  2909               	goto	l990
  9367  18AA                     l4281:	
  9368  18AA  0871               	movf	___fltol@f1,w
  9369  18AB  00F5               	movwf	??___fltol
  9370  18AC  0872               	movf	___fltol@f1+1,w
  9371  18AD  00F6               	movwf	??___fltol+1
  9372  18AE  0873               	movf	___fltol@f1+2,w
  9373  18AF  00F7               	movwf	??___fltol+2
  9374  18B0  0874               	movf	___fltol@f1+3,w
  9375  18B1  00F8               	movwf	??___fltol+3
  9376  18B2  301F               	movlw	31
  9377  18B3                     u5305:	
  9378  18B3  36F8               	lsrf	??___fltol+3,f
  9379  18B4  0CF7               	rrf	??___fltol+2,f
  9380  18B5  0CF6               	rrf	??___fltol+1,f
  9381  18B6  0CF5               	rrf	??___fltol,f
  9382  18B7                     u5300:	
  9383  18B7  0B89               	decfsz	9,f
  9384  18B8  28B3               	goto	u5305
  9385  18B9  0875               	movf	??___fltol,w
  9386  18BA  00F9               	movwf	??___fltol+4
  9387  18BB  0879               	movf	??___fltol+4,w
  9388  18BC  00FA               	movwf	___fltol@sign1
  9389  18BD                     l4283:	
  9390  18BD  17F3               	bsf	___fltol@f1+2,7
  9391  18BE                     l4285:	
  9392  18BE  30FF               	movlw	255
  9393  18BF  05F1               	andwf	___fltol@f1,f
  9394  18C0  30FF               	movlw	255
  9395  18C1  05F2               	andwf	___fltol@f1+1,f
  9396  18C2  30FF               	movlw	255
  9397  18C3  05F3               	andwf	___fltol@f1+2,f
  9398  18C4  3000               	movlw	0
  9399  18C5  05F4               	andwf	___fltol@f1+3,f
  9400  18C6                     l4287:	
  9401  18C6  3096               	movlw	150
  9402  18C7  02FB               	subwf	___fltol@exp1,f
  9403  18C8                     l4289:	
  9404  18C8  1FFB               	btfss	___fltol@exp1,7
  9405  18C9  28CB               	goto	u5311
  9406  18CA  28CC               	goto	u5310
  9407  18CB                     u5311:	
  9408  18CB  28E4               	goto	l4299
  9409  18CC                     u5310:	
  9410  18CC                     l4291:	
  9411  18CC  087B               	movf	___fltol@exp1,w
  9412  18CD  3A80               	xorlw	128
  9413  18CE  3E97               	addlw	151
  9414  18CF  1803               	skipnc
  9415  18D0  28D2               	goto	u5321
  9416  18D1  28D3               	goto	u5320
  9417  18D2                     u5321:	
  9418  18D2  28D4               	goto	l4297
  9419  18D3                     u5320:	
  9420  18D3  28A1               	goto	l4277
  9421  18D4                     l4297:	
  9422  18D4  3001               	movlw	1
  9423  18D5                     u5335:	
  9424  18D5  36F4               	lsrf	___fltol@f1+3,f
  9425  18D6  0CF3               	rrf	___fltol@f1+2,f
  9426  18D7  0CF2               	rrf	___fltol@f1+1,f
  9427  18D8  0CF1               	rrf	___fltol@f1,f
  9428  18D9  0B89               	decfsz	9,f
  9429  18DA  28D5               	goto	u5335
  9430  18DB  3001               	movlw	1
  9431  18DC  00F5               	movwf	??___fltol
  9432  18DD  0875               	movf	??___fltol,w
  9433  18DE  07FB               	addwf	___fltol@exp1,f
  9434  18DF  1D03               	btfss	3,2
  9435  18E0  28E2               	goto	u5341
  9436  18E1  28E3               	goto	u5340
  9437  18E2                     u5341:	
  9438  18E2  28D4               	goto	l4297
  9439  18E3                     u5340:	
  9440  18E3  28F9               	goto	l4307
  9441  18E4                     l4299:	
  9442  18E4  3020               	movlw	32
  9443  18E5  027B               	subwf	___fltol@exp1,w
  9444  18E6  1C03               	skipc
  9445  18E7  28E9               	goto	u5351
  9446  18E8  28EA               	goto	u5350
  9447  18E9                     u5351:	
  9448  18E9  28F4               	goto	l997
  9449  18EA                     u5350:	
  9450  18EA  28A1               	goto	l4277
  9451  18EB                     l4305:	
  9452  18EB  3001               	movlw	1
  9453  18EC                     u5365:	
  9454  18EC  35F1               	lslf	___fltol@f1,f
  9455  18ED  0DF2               	rlf	___fltol@f1+1,f
  9456  18EE  0DF3               	rlf	___fltol@f1+2,f
  9457  18EF  0DF4               	rlf	___fltol@f1+3,f
  9458  18F0  0B89               	decfsz	9,f
  9459  18F1  28EC               	goto	u5365
  9460  18F2  3001               	movlw	1
  9461  18F3  02FB               	subwf	___fltol@exp1,f
  9462  18F4                     l997:	
  9463  18F4  087B               	movf	___fltol@exp1,w
  9464  18F5  1D03               	btfss	3,2
  9465  18F6  28F8               	goto	u5371
  9466  18F7  28F9               	goto	u5370
  9467  18F8                     u5371:	
  9468  18F8  28EB               	goto	l4305
  9469  18F9                     u5370:	
  9470  18F9                     l4307:	
  9471  18F9  087A               	movf	___fltol@sign1,w
  9472  18FA  1903               	btfsc	3,2
  9473  18FB  28FD               	goto	u5381
  9474  18FC  28FE               	goto	u5380
  9475  18FD                     u5381:	
  9476  18FD  2909               	goto	l1000
  9477  18FE                     u5380:	
  9478  18FE                     l4309:	
  9479  18FE  09F1               	comf	___fltol@f1,f
  9480  18FF  09F2               	comf	___fltol@f1+1,f
  9481  1900  09F3               	comf	___fltol@f1+2,f
  9482  1901  09F4               	comf	___fltol@f1+3,f
  9483  1902  0AF1               	incf	___fltol@f1,f
  9484  1903  1903               	skipnz
  9485  1904  0AF2               	incf	___fltol@f1+1,f
  9486  1905  1903               	skipnz
  9487  1906  0AF3               	incf	___fltol@f1+2,f
  9488  1907  1903               	skipnz
  9489  1908  0AF4               	incf	___fltol@f1+3,f
  9490  1909                     l1000:	
  9491  1909                     l990:	
  9492  1909  0008               	return
  9493  190A                     __end_of___fltol:	
  9494                           
  9495                           	psect	text23
  9496  07BF                     __ptext23:	
  9497 ;; *************** function ___flsub *****************
  9498 ;; Defined at:
  9499 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  a               4    0[BANK1 ] long 
  9502 ;;  b               4    4[BANK1 ] long 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  4    0[BANK1 ] long 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        8 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    2
  9521 ;; This function calls:
  9522 ;;		___fladd
  9523 ;; This function is called by:
  9524 ;;		_lcd_update
  9525 ;;		_efgtoa
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function ___flsub
  9531  07BF                     ___flsub:	
  9532  07BF                     l4311:	
  9533                           ;incstack = 0
  9534                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9535                           
  9536  07BF  3080               	movlw	128
  9537  07C0  0021               	movlb	1	; select bank1
  9538  07C1  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  9539  07C2                     l4313:	
  9540  07C2  0827               	movf	(___flsub@b+3)^(0+128),w
  9541  07C3  0020               	movlb	0	; select bank0
  9542  07C4  00DD               	movwf	___fladd@b+3
  9543  07C5  0021               	movlb	1	; select bank1
  9544  07C6  0826               	movf	(___flsub@b+2)^(0+128),w
  9545  07C7  0020               	movlb	0	; select bank0
  9546  07C8  00DC               	movwf	___fladd@b+2
  9547  07C9  0021               	movlb	1	; select bank1
  9548  07CA  0825               	movf	(___flsub@b+1)^(0+128),w
  9549  07CB  0020               	movlb	0	; select bank0
  9550  07CC  00DB               	movwf	___fladd@b+1
  9551  07CD  0021               	movlb	1	; select bank1
  9552  07CE  0824               	movf	___flsub@b^(0+128),w
  9553  07CF  0020               	movlb	0	; select bank0
  9554  07D0  00DA               	movwf	___fladd@b
  9555  07D1  0021               	movlb	1	; select bank1
  9556  07D2  0823               	movf	(___flsub@a+3)^(0+128),w
  9557  07D3  0020               	movlb	0	; select bank0
  9558  07D4  00E1               	movwf	___fladd@a+3
  9559  07D5  0021               	movlb	1	; select bank1
  9560  07D6  0822               	movf	(___flsub@a+2)^(0+128),w
  9561  07D7  0020               	movlb	0	; select bank0
  9562  07D8  00E0               	movwf	___fladd@a+2
  9563  07D9  0021               	movlb	1	; select bank1
  9564  07DA  0821               	movf	(___flsub@a+1)^(0+128),w
  9565  07DB  0020               	movlb	0	; select bank0
  9566  07DC  00DF               	movwf	___fladd@a+1
  9567  07DD  0021               	movlb	1	; select bank1
  9568  07DE  0820               	movf	___flsub@a^(0+128),w
  9569  07DF  0020               	movlb	0	; select bank0
  9570  07E0  00DE               	movwf	___fladd@a
  9571  07E1  3193  2371  3187   	fcall	___fladd
  9572  07E4  0020               	movlb	0	; select bank0
  9573  07E5  085D               	movf	?___fladd+3,w
  9574  07E6  0021               	movlb	1	; select bank1
  9575  07E7  00A3               	movwf	(?___flsub+3)^(0+128)
  9576  07E8  0020               	movlb	0	; select bank0
  9577  07E9  085C               	movf	?___fladd+2,w
  9578  07EA  0021               	movlb	1	; select bank1
  9579  07EB  00A2               	movwf	(?___flsub+2)^(0+128)
  9580  07EC  0020               	movlb	0	; select bank0
  9581  07ED  085B               	movf	?___fladd+1,w
  9582  07EE  0021               	movlb	1	; select bank1
  9583  07EF  00A1               	movwf	(?___flsub+1)^(0+128)
  9584  07F0  0020               	movlb	0	; select bank0
  9585  07F1  085A               	movf	?___fladd,w
  9586  07F2  0021               	movlb	1	; select bank1
  9587  07F3  00A0               	movwf	?___flsub^(0+128)
  9588  07F4                     l1143:	
  9589  07F4  0008               	return
  9590  07F5                     __end_of___flsub:	
  9591                           
  9592                           	psect	text24
  9593  1371                     __ptext24:	
  9594 ;; *************** function ___fladd *****************
  9595 ;; Defined at:
  9596 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  b               4   58[BANK0 ] long 
  9599 ;;  a               4   62[BANK0 ] long 
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  grs             1   77[BANK0 ] unsigned char 
  9602 ;;  bexp            1   76[BANK0 ] unsigned char 
  9603 ;;  aexp            1   75[BANK0 ] unsigned char 
  9604 ;;  signs           1   74[BANK0 ] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  4   58[BANK0 ] unsigned char 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;Total ram usage:       20 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    1
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_read_volt
  9625 ;;		_efgtoa
  9626 ;;		___flsub
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function ___fladd
  9632  1371                     ___fladd:	
  9633  1371                     l3765:	
  9634                           ;incstack = 0
  9635                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9636                           
  9637  1371  0020               	movlb	0	; select bank0
  9638  1372  085D               	movf	___fladd@b+3,w
  9639  1373  3980               	andlw	128
  9640  1374  00E2               	movwf	??___fladd
  9641  1375  0862               	movf	??___fladd,w
  9642  1376  00EA               	movwf	___fladd@signs
  9643  1377                     l3767:	
  9644  1377  355D               	lslf	___fladd@b+3,w
  9645  1378  00E2               	movwf	??___fladd
  9646  1379  0862               	movf	??___fladd,w
  9647  137A  00EC               	movwf	___fladd@bexp
  9648  137B                     l3769:	
  9649  137B  1FDC               	btfss	___fladd@b+2,7
  9650  137C  2B7E               	goto	u4001
  9651  137D  2B7F               	goto	u4000
  9652  137E                     u4001:	
  9653  137E  2B80               	goto	l3773
  9654  137F                     u4000:	
  9655  137F                     l3771:	
  9656  137F  146C               	bsf	___fladd@bexp,0
  9657  1380                     l3773:	
  9658  1380  086C               	movf	___fladd@bexp,w
  9659  1381  1903               	btfsc	3,2
  9660  1382  2B84               	goto	u4011
  9661  1383  2B85               	goto	u4010
  9662  1384                     u4011:	
  9663  1384  2B95               	goto	l3783
  9664  1385                     u4010:	
  9665  1385                     l3775:	
  9666  1385  0A6C               	incf	___fladd@bexp,w
  9667  1386  1D03               	btfss	3,2
  9668  1387  2B89               	goto	u4021
  9669  1388  2B8A               	goto	u4020
  9670  1389                     u4021:	
  9671  1389  2B92               	goto	l3779
  9672  138A                     u4020:	
  9673  138A                     l3777:	
  9674  138A  3000               	movlw	0
  9675  138B  00DD               	movwf	___fladd@b+3
  9676  138C  3000               	movlw	0
  9677  138D  00DC               	movwf	___fladd@b+2
  9678  138E  3000               	movlw	0
  9679  138F  00DB               	movwf	___fladd@b+1
  9680  1390  3000               	movlw	0
  9681  1391  00DA               	movwf	___fladd@b
  9682  1392                     l3779:	
  9683  1392  17DC               	bsf	___fladd@b+2,7
  9684  1393                     l3781:	
  9685  1393  01DD               	clrf	___fladd@b+3
  9686  1394  2B9D               	goto	l3785
  9687  1395                     l3783:	
  9688  1395  3000               	movlw	0
  9689  1396  00DD               	movwf	___fladd@b+3
  9690  1397  3000               	movlw	0
  9691  1398  00DC               	movwf	___fladd@b+2
  9692  1399  3000               	movlw	0
  9693  139A  00DB               	movwf	___fladd@b+1
  9694  139B  3000               	movlw	0
  9695  139C  00DA               	movwf	___fladd@b
  9696  139D                     l3785:	
  9697  139D  0861               	movf	___fladd@a+3,w
  9698  139E  3980               	andlw	128
  9699  139F  00E2               	movwf	??___fladd
  9700  13A0  0862               	movf	??___fladd,w
  9701  13A1  00EB               	movwf	___fladd@aexp
  9702  13A2                     l3787:	
  9703  13A2  086B               	movf	___fladd@aexp,w
  9704  13A3  066A               	xorwf	___fladd@signs,w
  9705  13A4  1903               	skipnz
  9706  13A5  2BA7               	goto	u4031
  9707  13A6  2BA8               	goto	u4030
  9708  13A7                     u4031:	
  9709  13A7  2BA9               	goto	l3791
  9710  13A8                     u4030:	
  9711  13A8                     l3789:	
  9712  13A8  176A               	bsf	___fladd@signs,6
  9713  13A9                     l3791:	
  9714  13A9  3561               	lslf	___fladd@a+3,w
  9715  13AA  00E2               	movwf	??___fladd
  9716  13AB  0862               	movf	??___fladd,w
  9717  13AC  00EB               	movwf	___fladd@aexp
  9718  13AD                     l3793:	
  9719  13AD  1FE0               	btfss	___fladd@a+2,7
  9720  13AE  2BB0               	goto	u4041
  9721  13AF  2BB1               	goto	u4040
  9722  13B0                     u4041:	
  9723  13B0  2BB2               	goto	l3797
  9724  13B1                     u4040:	
  9725  13B1                     l3795:	
  9726  13B1  146B               	bsf	___fladd@aexp,0
  9727  13B2                     l3797:	
  9728  13B2  086B               	movf	___fladd@aexp,w
  9729  13B3  1903               	btfsc	3,2
  9730  13B4  2BB6               	goto	u4051
  9731  13B5  2BB7               	goto	u4050
  9732  13B6                     u4051:	
  9733  13B6  2BC7               	goto	l3807
  9734  13B7                     u4050:	
  9735  13B7                     l3799:	
  9736  13B7  0A6B               	incf	___fladd@aexp,w
  9737  13B8  1D03               	btfss	3,2
  9738  13B9  2BBB               	goto	u4061
  9739  13BA  2BBC               	goto	u4060
  9740  13BB                     u4061:	
  9741  13BB  2BC4               	goto	l3803
  9742  13BC                     u4060:	
  9743  13BC                     l3801:	
  9744  13BC  3000               	movlw	0
  9745  13BD  00E1               	movwf	___fladd@a+3
  9746  13BE  3000               	movlw	0
  9747  13BF  00E0               	movwf	___fladd@a+2
  9748  13C0  3000               	movlw	0
  9749  13C1  00DF               	movwf	___fladd@a+1
  9750  13C2  3000               	movlw	0
  9751  13C3  00DE               	movwf	___fladd@a
  9752  13C4                     l3803:	
  9753  13C4  17E0               	bsf	___fladd@a+2,7
  9754  13C5                     l3805:	
  9755  13C5  01E1               	clrf	___fladd@a+3
  9756  13C6  2BCF               	goto	l1097
  9757  13C7                     l3807:	
  9758  13C7  3000               	movlw	0
  9759  13C8  00E1               	movwf	___fladd@a+3
  9760  13C9  3000               	movlw	0
  9761  13CA  00E0               	movwf	___fladd@a+2
  9762  13CB  3000               	movlw	0
  9763  13CC  00DF               	movwf	___fladd@a+1
  9764  13CD  3000               	movlw	0
  9765  13CE  00DE               	movwf	___fladd@a
  9766  13CF                     l1097:	
  9767  13CF  086C               	movf	___fladd@bexp,w
  9768  13D0  026B               	subwf	___fladd@aexp,w
  9769  13D1  1803               	skipnc
  9770  13D2  2BD4               	goto	u4071
  9771  13D3  2BD5               	goto	u4070
  9772  13D4                     u4071:	
  9773  13D4  2C19               	goto	l3843
  9774  13D5                     u4070:	
  9775  13D5                     l3809:	
  9776  13D5  1F6A               	btfss	___fladd@signs,6
  9777  13D6  2BD8               	goto	u4081
  9778  13D7  2BD9               	goto	u4080
  9779  13D8                     u4081:	
  9780  13D8  2BDD               	goto	l3813
  9781  13D9                     u4080:	
  9782  13D9                     l3811:	
  9783  13D9  3080               	movlw	128
  9784  13DA  00E2               	movwf	??___fladd
  9785  13DB  0862               	movf	??___fladd,w
  9786  13DC  06EA               	xorwf	___fladd@signs,f
  9787  13DD                     l3813:	
  9788  13DD  086C               	movf	___fladd@bexp,w
  9789  13DE  00E2               	movwf	??___fladd
  9790  13DF  0862               	movf	??___fladd,w
  9791  13E0  00ED               	movwf	___fladd@grs
  9792  13E1                     l3815:	
  9793  13E1  086B               	movf	___fladd@aexp,w
  9794  13E2  00E2               	movwf	??___fladd
  9795  13E3  0862               	movf	??___fladd,w
  9796  13E4  00EC               	movwf	___fladd@bexp
  9797  13E5                     l3817:	
  9798  13E5  086D               	movf	___fladd@grs,w
  9799  13E6  00E2               	movwf	??___fladd
  9800  13E7  0862               	movf	??___fladd,w
  9801  13E8  00EB               	movwf	___fladd@aexp
  9802  13E9                     l3819:	
  9803  13E9  085A               	movf	___fladd@b,w
  9804  13EA  00E2               	movwf	??___fladd
  9805  13EB  0862               	movf	??___fladd,w
  9806  13EC  00ED               	movwf	___fladd@grs
  9807  13ED                     l3821:	
  9808  13ED  085E               	movf	___fladd@a,w
  9809  13EE  00E2               	movwf	??___fladd
  9810  13EF  0862               	movf	??___fladd,w
  9811  13F0  00DA               	movwf	___fladd@b
  9812  13F1                     l3823:	
  9813  13F1  086D               	movf	___fladd@grs,w
  9814  13F2  00E2               	movwf	??___fladd
  9815  13F3  0862               	movf	??___fladd,w
  9816  13F4  00DE               	movwf	___fladd@a
  9817  13F5                     l3825:	
  9818  13F5  085B               	movf	___fladd@b+1,w
  9819  13F6  00E2               	movwf	??___fladd
  9820  13F7  0862               	movf	??___fladd,w
  9821  13F8  00ED               	movwf	___fladd@grs
  9822  13F9                     l3827:	
  9823  13F9  085F               	movf	___fladd@a+1,w
  9824  13FA  00E2               	movwf	??___fladd
  9825  13FB  0862               	movf	??___fladd,w
  9826  13FC  00DB               	movwf	___fladd@b+1
  9827  13FD                     l3829:	
  9828  13FD  086D               	movf	___fladd@grs,w
  9829  13FE  00E2               	movwf	??___fladd
  9830  13FF  0862               	movf	??___fladd,w
  9831  1400  00DF               	movwf	___fladd@a+1
  9832  1401                     l3831:	
  9833  1401  085C               	movf	___fladd@b+2,w
  9834  1402  00E2               	movwf	??___fladd
  9835  1403  0862               	movf	??___fladd,w
  9836  1404  00ED               	movwf	___fladd@grs
  9837  1405                     l3833:	
  9838  1405  0860               	movf	___fladd@a+2,w
  9839  1406  00E2               	movwf	??___fladd
  9840  1407  0862               	movf	??___fladd,w
  9841  1408  00DC               	movwf	___fladd@b+2
  9842  1409                     l3835:	
  9843  1409  086D               	movf	___fladd@grs,w
  9844  140A  00E2               	movwf	??___fladd
  9845  140B  0862               	movf	??___fladd,w
  9846  140C  00E0               	movwf	___fladd@a+2
  9847  140D                     l3837:	
  9848  140D  085D               	movf	___fladd@b+3,w
  9849  140E  00E2               	movwf	??___fladd
  9850  140F  0862               	movf	??___fladd,w
  9851  1410  00ED               	movwf	___fladd@grs
  9852  1411                     l3839:	
  9853  1411  0861               	movf	___fladd@a+3,w
  9854  1412  00E2               	movwf	??___fladd
  9855  1413  0862               	movf	??___fladd,w
  9856  1414  00DD               	movwf	___fladd@b+3
  9857  1415                     l3841:	
  9858  1415  086D               	movf	___fladd@grs,w
  9859  1416  00E2               	movwf	??___fladd
  9860  1417  0862               	movf	??___fladd,w
  9861  1418  00E1               	movwf	___fladd@a+3
  9862  1419                     l3843:	
  9863  1419  01ED               	clrf	___fladd@grs
  9864  141A                     l3845:	
  9865  141A  086B               	movf	___fladd@aexp,w
  9866  141B  00E2               	movwf	??___fladd
  9867  141C  01E3               	clrf	??___fladd+1
  9868  141D  0863               	movf	??___fladd+1,w
  9869  141E  00E5               	movwf	??___fladd+3
  9870  141F  086C               	movf	___fladd@bexp,w
  9871  1420  0262               	subwf	??___fladd,w
  9872  1421  00E4               	movwf	??___fladd+2
  9873  1422  1C03               	skipc
  9874  1423  03E5               	decf	??___fladd+3,f
  9875  1424  0865               	movf	??___fladd+3,w
  9876  1425  3A80               	xorlw	128
  9877  1426  00E6               	movwf	??___fladd+4
  9878  1427  3080               	movlw	128
  9879  1428  0266               	subwf	??___fladd+4,w
  9880  1429  1D03               	skipz
  9881  142A  2C2D               	goto	u4095
  9882  142B  301A               	movlw	26
  9883  142C  0264               	subwf	??___fladd+2,w
  9884  142D                     u4095:	
  9885  142D  1C03               	skipc
  9886  142E  2C30               	goto	u4091
  9887  142F  2C31               	goto	u4090
  9888  1430                     u4091:	
  9889  1430  2C69               	goto	l3861
  9890  1431                     u4090:	
  9891  1431                     l3847:	
  9892  1431  0020               	movlb	0	; select bank0
  9893  1432  085D               	movf	___fladd@b+3,w
  9894  1433  045C               	iorwf	___fladd@b+2,w
  9895  1434  045B               	iorwf	___fladd@b+1,w
  9896  1435  045A               	iorwf	___fladd@b,w
  9897  1436  1D03               	skipz
  9898  1437  2C39               	goto	u4101
  9899  1438  2C3B               	goto	u4100
  9900  1439                     u4101:	
  9901  1439  3001               	movlw	1
  9902  143A  2C3C               	goto	u4110
  9903  143B                     u4100:	
  9904  143B  3000               	movlw	0
  9905  143C                     u4110:	
  9906  143C  00E2               	movwf	??___fladd
  9907  143D  0862               	movf	??___fladd,w
  9908  143E  00ED               	movwf	___fladd@grs
  9909  143F  3000               	movlw	0
  9910  1440  00DD               	movwf	___fladd@b+3
  9911  1441  3000               	movlw	0
  9912  1442  00DC               	movwf	___fladd@b+2
  9913  1443  3000               	movlw	0
  9914  1444  00DB               	movwf	___fladd@b+1
  9915  1445  3000               	movlw	0
  9916  1446  00DA               	movwf	___fladd@b
  9917  1447  086B               	movf	___fladd@aexp,w
  9918  1448  00E2               	movwf	??___fladd
  9919  1449  0862               	movf	??___fladd,w
  9920  144A  00EC               	movwf	___fladd@bexp
  9921  144B  2C70               	goto	l1101
  9922  144C                     l1103:	
  9923  144C  1C6D               	btfss	___fladd@grs,0
  9924  144D  2C4F               	goto	u4121
  9925  144E  2C50               	goto	u4120
  9926  144F                     u4121:	
  9927  144F  2C56               	goto	l3851
  9928  1450                     u4120:	
  9929  1450                     l3849:	
  9930  1450  366D               	lsrf	___fladd@grs,w
  9931  1451  3801               	iorlw	1
  9932  1452  00E2               	movwf	??___fladd
  9933  1453  0862               	movf	??___fladd,w
  9934  1454  00ED               	movwf	___fladd@grs
  9935  1455  2C58               	goto	l3853
  9936  1456                     l3851:	
  9937  1456  1003               	clrc
  9938  1457  0CED               	rrf	___fladd@grs,f
  9939  1458                     l3853:	
  9940  1458  1C5A               	btfss	___fladd@b,0
  9941  1459  2C5B               	goto	u4131
  9942  145A  2C5C               	goto	u4130
  9943  145B                     u4131:	
  9944  145B  2C5D               	goto	l3857
  9945  145C                     u4130:	
  9946  145C                     l3855:	
  9947  145C  17ED               	bsf	___fladd@grs,7
  9948  145D                     l3857:	
  9949  145D  3001               	movlw	1
  9950  145E  00E2               	movwf	??___fladd
  9951  145F                     u4145:	
  9952  145F  37DD               	asrf	___fladd@b+3,f
  9953  1460  0CDC               	rrf	___fladd@b+2,f
  9954  1461  0CDB               	rrf	___fladd@b+1,f
  9955  1462  0CDA               	rrf	___fladd@b,f
  9956  1463  0BE2               	decfsz	??___fladd& (0+127),f
  9957  1464  2C5F               	goto	u4145
  9958  1465                     l3859:	
  9959  1465  3001               	movlw	1
  9960  1466  00E2               	movwf	??___fladd
  9961  1467  0862               	movf	??___fladd,w
  9962  1468  07EC               	addwf	___fladd@bexp,f
  9963  1469                     l3861:	
  9964  1469  0020               	movlb	0	; select bank0
  9965  146A  086B               	movf	___fladd@aexp,w
  9966  146B  026C               	subwf	___fladd@bexp,w
  9967  146C  1C03               	skipc
  9968  146D  2C6F               	goto	u4151
  9969  146E  2C70               	goto	u4150
  9970  146F                     u4151:	
  9971  146F  2C4C               	goto	l1103
  9972  1470                     u4150:	
  9973  1470                     l1101:	
  9974  1470  1B6A               	btfsc	___fladd@signs,6
  9975  1471  2C73               	goto	u4161
  9976  1472  2C74               	goto	u4160
  9977  1473                     u4161:	
  9978  1473  2CAC               	goto	l3887
  9979  1474                     u4160:	
  9980  1474                     l3863:	
  9981  1474  086C               	movf	___fladd@bexp,w
  9982  1475  1D03               	btfss	3,2
  9983  1476  2C78               	goto	u4171
  9984  1477  2C79               	goto	u4170
  9985  1478                     u4171:	
  9986  1478  2C82               	goto	l3869
  9987  1479                     u4170:	
  9988  1479                     l3865:	
  9989  1479  3000               	movlw	0
  9990  147A  00DD               	movwf	?___fladd+3
  9991  147B  3000               	movlw	0
  9992  147C  00DC               	movwf	?___fladd+2
  9993  147D  3000               	movlw	0
  9994  147E  00DB               	movwf	?___fladd+1
  9995  147F  3000               	movlw	0
  9996  1480  00DA               	movwf	?___fladd
  9997  1481  2DA8               	goto	l1110
  9998  1482                     l3869:	
  9999  1482  085E               	movf	___fladd@a,w
 10000  1483  07DA               	addwf	___fladd@b,f
 10001  1484  085F               	movf	___fladd@a+1,w
 10002  1485  3DDB               	addwfc	___fladd@b+1,f
 10003  1486  0860               	movf	___fladd@a+2,w
 10004  1487  3DDC               	addwfc	___fladd@b+2,f
 10005  1488  0861               	movf	___fladd@a+3,w
 10006  1489  3DDD               	addwfc	___fladd@b+3,f
 10007  148A                     l3871:	
 10008  148A  1C5D               	btfss	___fladd@b+3,0
 10009  148B  2C8D               	goto	u4181
 10010  148C  2C8E               	goto	u4180
 10011  148D                     u4181:	
 10012  148D  2D38               	goto	l3921
 10013  148E                     u4180:	
 10014  148E                     l3873:	
 10015  148E  1C6D               	btfss	___fladd@grs,0
 10016  148F  2C91               	goto	u4191
 10017  1490  2C92               	goto	u4190
 10018  1491                     u4191:	
 10019  1491  2C98               	goto	l3877
 10020  1492                     u4190:	
 10021  1492                     l3875:	
 10022  1492  366D               	lsrf	___fladd@grs,w
 10023  1493  3801               	iorlw	1
 10024  1494  00E2               	movwf	??___fladd
 10025  1495  0862               	movf	??___fladd,w
 10026  1496  00ED               	movwf	___fladd@grs
 10027  1497  2C9A               	goto	l3879
 10028  1498                     l3877:	
 10029  1498  1003               	clrc
 10030  1499  0CED               	rrf	___fladd@grs,f
 10031  149A                     l3879:	
 10032  149A  1C5A               	btfss	___fladd@b,0
 10033  149B  2C9D               	goto	u4201
 10034  149C  2C9E               	goto	u4200
 10035  149D                     u4201:	
 10036  149D  2C9F               	goto	l3883
 10037  149E                     u4200:	
 10038  149E                     l3881:	
 10039  149E  17ED               	bsf	___fladd@grs,7
 10040  149F                     l3883:	
 10041  149F  3001               	movlw	1
 10042  14A0  00E2               	movwf	??___fladd
 10043  14A1                     u4215:	
 10044  14A1  37DD               	asrf	___fladd@b+3,f
 10045  14A2  0CDC               	rrf	___fladd@b+2,f
 10046  14A3  0CDB               	rrf	___fladd@b+1,f
 10047  14A4  0CDA               	rrf	___fladd@b,f
 10048  14A5  0BE2               	decfsz	??___fladd& (0+127),f
 10049  14A6  2CA1               	goto	u4215
 10050  14A7                     l3885:	
 10051  14A7  3001               	movlw	1
 10052  14A8  00E2               	movwf	??___fladd
 10053  14A9  0862               	movf	??___fladd,w
 10054  14AA  07EC               	addwf	___fladd@bexp,f
 10055  14AB  2D38               	goto	l3921
 10056  14AC                     l3887:	
 10057  14AC  085D               	movf	___fladd@b+3,w
 10058  14AD  3A80               	xorlw	128
 10059  14AE  00E2               	movwf	??___fladd
 10060  14AF  0861               	movf	___fladd@a+3,w
 10061  14B0  3A80               	xorlw	128
 10062  14B1  0262               	subwf	??___fladd,w
 10063  14B2  1D03               	skipz
 10064  14B3  2CBE               	goto	u4223
 10065  14B4  0860               	movf	___fladd@a+2,w
 10066  14B5  025C               	subwf	___fladd@b+2,w
 10067  14B6  1D03               	skipz
 10068  14B7  2CBE               	goto	u4223
 10069  14B8  085F               	movf	___fladd@a+1,w
 10070  14B9  025B               	subwf	___fladd@b+1,w
 10071  14BA  1D03               	skipz
 10072  14BB  2CBE               	goto	u4223
 10073  14BC  085E               	movf	___fladd@a,w
 10074  14BD  025A               	subwf	___fladd@b,w
 10075  14BE                     u4223:	
 10076  14BE  1803               	skipnc
 10077  14BF  2CC1               	goto	u4221
 10078  14C0  2CC2               	goto	u4220
 10079  14C1                     u4221:	
 10080  14C1  2CFA               	goto	l3897
 10081  14C2                     u4220:	
 10082  14C2                     l3889:	
 10083  14C2  30FF               	movlw	255
 10084  14C3  00E2               	movwf	??___fladd
 10085  14C4  30FF               	movlw	255
 10086  14C5  00E3               	movwf	??___fladd+1
 10087  14C6  30FF               	movlw	255
 10088  14C7  00E4               	movwf	??___fladd+2
 10089  14C8  30FF               	movlw	255
 10090  14C9  00E5               	movwf	??___fladd+3
 10091  14CA  085A               	movf	___fladd@b,w
 10092  14CB  025E               	subwf	___fladd@a,w
 10093  14CC  00E6               	movwf	??___fladd+4
 10094  14CD  085B               	movf	___fladd@b+1,w
 10095  14CE  3B5F               	subwfb	___fladd@a+1,w
 10096  14CF  00E7               	movwf	??___fladd+5
 10097  14D0  085C               	movf	___fladd@b+2,w
 10098  14D1  3B60               	subwfb	___fladd@a+2,w
 10099  14D2  00E8               	movwf	??___fladd+6
 10100  14D3  085D               	movf	___fladd@b+3,w
 10101  14D4  3B61               	subwfb	___fladd@a+3,w
 10102  14D5  00E9               	movwf	??___fladd+7
 10103  14D6  0866               	movf	??___fladd+4,w
 10104  14D7  07E2               	addwf	??___fladd,f
 10105  14D8  0867               	movf	??___fladd+5,w
 10106  14D9  3DE3               	addwfc	??___fladd+1,f
 10107  14DA  0868               	movf	??___fladd+6,w
 10108  14DB  3DE4               	addwfc	??___fladd+2,f
 10109  14DC  0869               	movf	??___fladd+7,w
 10110  14DD  3DE5               	addwfc	??___fladd+3,f
 10111  14DE  0865               	movf	??___fladd+3,w
 10112  14DF  00DD               	movwf	___fladd@b+3
 10113  14E0  0864               	movf	??___fladd+2,w
 10114  14E1  00DC               	movwf	___fladd@b+2
 10115  14E2  0863               	movf	??___fladd+1,w
 10116  14E3  00DB               	movwf	___fladd@b+1
 10117  14E4  0862               	movf	??___fladd,w
 10118  14E5  00DA               	movwf	___fladd@b
 10119  14E6                     l3891:	
 10120  14E6  3080               	movlw	128
 10121  14E7  00E2               	movwf	??___fladd
 10122  14E8  0862               	movf	??___fladd,w
 10123  14E9  06EA               	xorwf	___fladd@signs,f
 10124  14EA  09ED               	comf	___fladd@grs,f
 10125  14EB  0AED               	incf	___fladd@grs,f
 10126  14EC                     l3893:	
 10127  14EC  086D               	movf	___fladd@grs,w
 10128  14ED  1D03               	btfss	3,2
 10129  14EE  2CF0               	goto	u4231
 10130  14EF  2CF1               	goto	u4230
 10131  14F0                     u4231:	
 10132  14F0  2D02               	goto	l1118
 10133  14F1                     u4230:	
 10134  14F1                     l3895:	
 10135  14F1  3001               	movlw	1
 10136  14F2  07DA               	addwf	___fladd@b,f
 10137  14F3  3000               	movlw	0
 10138  14F4  3DDB               	addwfc	___fladd@b+1,f
 10139  14F5  3000               	movlw	0
 10140  14F6  3DDC               	addwfc	___fladd@b+2,f
 10141  14F7  3000               	movlw	0
 10142  14F8  3DDD               	addwfc	___fladd@b+3,f
 10143  14F9  2D02               	goto	l1118
 10144  14FA                     l3897:	
 10145  14FA  085E               	movf	___fladd@a,w
 10146  14FB  02DA               	subwf	___fladd@b,f
 10147  14FC  085F               	movf	___fladd@a+1,w
 10148  14FD  3BDB               	subwfb	___fladd@b+1,f
 10149  14FE  0860               	movf	___fladd@a+2,w
 10150  14FF  3BDC               	subwfb	___fladd@b+2,f
 10151  1500  0861               	movf	___fladd@a+3,w
 10152  1501  3BDD               	subwfb	___fladd@b+3,f
 10153  1502                     l1118:	
 10154  1502  085D               	movf	___fladd@b+3,w
 10155  1503  045C               	iorwf	___fladd@b+2,w
 10156  1504  045B               	iorwf	___fladd@b+1,w
 10157  1505  045A               	iorwf	___fladd@b,w
 10158  1506  1D03               	skipz
 10159  1507  2D09               	goto	u4241
 10160  1508  2D0A               	goto	u4240
 10161  1509                     u4241:	
 10162  1509  2D34               	goto	l3919
 10163  150A                     u4240:	
 10164  150A                     l3899:	
 10165  150A  086D               	movf	___fladd@grs,w
 10166  150B  1D03               	btfss	3,2
 10167  150C  2D0E               	goto	u4251
 10168  150D  2D0F               	goto	u4250
 10169  150E                     u4251:	
 10170  150E  2D34               	goto	l3919
 10171  150F                     u4250:	
 10172  150F                     l3901:	
 10173  150F  3000               	movlw	0
 10174  1510  00DD               	movwf	?___fladd+3
 10175  1511  3000               	movlw	0
 10176  1512  00DC               	movwf	?___fladd+2
 10177  1513  3000               	movlw	0
 10178  1514  00DB               	movwf	?___fladd+1
 10179  1515  3000               	movlw	0
 10180  1516  00DA               	movwf	?___fladd
 10181  1517  2DA8               	goto	l1110
 10182  1518                     l3905:	
 10183  1518  3001               	movlw	1
 10184  1519                     u4265:	
 10185  1519  35DA               	lslf	___fladd@b,f
 10186  151A  0DDB               	rlf	___fladd@b+1,f
 10187  151B  0DDC               	rlf	___fladd@b+2,f
 10188  151C  0DDD               	rlf	___fladd@b+3,f
 10189  151D  0B89               	decfsz	9,f
 10190  151E  2D19               	goto	u4265
 10191  151F                     l3907:	
 10192  151F  1FED               	btfss	___fladd@grs,7
 10193  1520  2D22               	goto	u4271
 10194  1521  2D23               	goto	u4270
 10195  1522                     u4271:	
 10196  1522  2D24               	goto	l1122
 10197  1523                     u4270:	
 10198  1523                     l3909:	
 10199  1523  145A               	bsf	___fladd@b,0
 10200  1524                     l1122:	
 10201  1524  1C6D               	btfss	___fladd@grs,0
 10202  1525  2D27               	goto	u4281
 10203  1526  2D28               	goto	u4280
 10204  1527                     u4281:	
 10205  1527  2D2B               	goto	l3913
 10206  1528                     u4280:	
 10207  1528                     l3911:	
 10208  1528  1403               	setc
 10209  1529  0DED               	rlf	___fladd@grs,f
 10210  152A  2D2D               	goto	l3915
 10211  152B                     l3913:	
 10212  152B  1003               	clrc
 10213  152C  0DED               	rlf	___fladd@grs,f
 10214  152D                     l3915:	
 10215  152D  086C               	movf	___fladd@bexp,w
 10216  152E  1903               	btfsc	3,2
 10217  152F  2D31               	goto	u4291
 10218  1530  2D32               	goto	u4290
 10219  1531                     u4291:	
 10220  1531  2D34               	goto	l3919
 10221  1532                     u4290:	
 10222  1532                     l3917:	
 10223  1532  3001               	movlw	1
 10224  1533  02EC               	subwf	___fladd@bexp,f
 10225  1534                     l3919:	
 10226  1534  1FDC               	btfss	___fladd@b+2,7
 10227  1535  2D37               	goto	u4301
 10228  1536  2D38               	goto	u4300
 10229  1537                     u4301:	
 10230  1537  2D18               	goto	l3905
 10231  1538                     u4300:	
 10232  1538                     l3921:	
 10233  1538  01EB               	clrf	___fladd@aexp
 10234  1539                     l3923:	
 10235  1539  1FED               	btfss	___fladd@grs,7
 10236  153A  2D3C               	goto	u4311
 10237  153B  2D3D               	goto	u4310
 10238  153C                     u4311:	
 10239  153C  2D4B               	goto	l3931
 10240  153D                     u4310:	
 10241  153D                     l3925:	
 10242  153D  086D               	movf	___fladd@grs,w
 10243  153E  397F               	andlw	127
 10244  153F  1903               	btfsc	3,2
 10245  1540  2D42               	goto	u4321
 10246  1541  2D43               	goto	u4320
 10247  1542                     u4321:	
 10248  1542  2D46               	goto	l1128
 10249  1543                     u4320:	
 10250  1543                     l3927:	
 10251  1543  01EB               	clrf	___fladd@aexp
 10252  1544  0AEB               	incf	___fladd@aexp,f
 10253  1545  2D4B               	goto	l3931
 10254  1546                     l1128:	
 10255  1546  1C5A               	btfss	___fladd@b,0
 10256  1547  2D49               	goto	u4331
 10257  1548  2D4A               	goto	u4330
 10258  1549                     u4331:	
 10259  1549  2D4B               	goto	l3931
 10260  154A                     u4330:	
 10261  154A  2D43               	goto	l3927
 10262  154B                     l3931:	
 10263  154B  086B               	movf	___fladd@aexp,w
 10264  154C  1903               	btfsc	3,2
 10265  154D  2D4F               	goto	u4341
 10266  154E  2D50               	goto	u4340
 10267  154F                     u4341:	
 10268  154F  2D7D               	goto	l1131
 10269  1550                     u4340:	
 10270  1550                     l3933:	
 10271  1550  3001               	movlw	1
 10272  1551  07DA               	addwf	___fladd@b,f
 10273  1552  3000               	movlw	0
 10274  1553  3DDB               	addwfc	___fladd@b+1,f
 10275  1554  3000               	movlw	0
 10276  1555  3DDC               	addwfc	___fladd@b+2,f
 10277  1556  3000               	movlw	0
 10278  1557  3DDD               	addwfc	___fladd@b+3,f
 10279  1558                     l3935:	
 10280  1558  1C5D               	btfss	___fladd@b+3,0
 10281  1559  2D5B               	goto	u4351
 10282  155A  2D5C               	goto	u4350
 10283  155B                     u4351:	
 10284  155B  2D7D               	goto	l1131
 10285  155C                     u4350:	
 10286  155C                     l3937:	
 10287  155C  085A               	movf	___fladd@b,w
 10288  155D  00E2               	movwf	??___fladd
 10289  155E  085B               	movf	___fladd@b+1,w
 10290  155F  00E3               	movwf	??___fladd+1
 10291  1560  085C               	movf	___fladd@b+2,w
 10292  1561  00E4               	movwf	??___fladd+2
 10293  1562  085D               	movf	___fladd@b+3,w
 10294  1563  00E5               	movwf	??___fladd+3
 10295  1564  3001               	movlw	1
 10296  1565  00E6               	movwf	??___fladd+4
 10297  1566                     u4365:	
 10298  1566  37E5               	asrf	??___fladd+3,f
 10299  1567  0CE4               	rrf	??___fladd+2,f
 10300  1568  0CE3               	rrf	??___fladd+1,f
 10301  1569  0CE2               	rrf	??___fladd,f
 10302  156A                     u4360:	
 10303  156A  0BE6               	decfsz	??___fladd+4,f
 10304  156B  2D66               	goto	u4365
 10305  156C  0865               	movf	??___fladd+3,w
 10306  156D  00DD               	movwf	___fladd@b+3
 10307  156E  0864               	movf	??___fladd+2,w
 10308  156F  00DC               	movwf	___fladd@b+2
 10309  1570  0863               	movf	??___fladd+1,w
 10310  1571  00DB               	movwf	___fladd@b+1
 10311  1572  0862               	movf	??___fladd,w
 10312  1573  00DA               	movwf	___fladd@b
 10313  1574  0A6C               	incf	___fladd@bexp,w
 10314  1575  1903               	btfsc	3,2
 10315  1576  2D78               	goto	u4371
 10316  1577  2D79               	goto	u4370
 10317  1578                     u4371:	
 10318  1578  2D7D               	goto	l1131
 10319  1579                     u4370:	
 10320  1579                     l3939:	
 10321  1579  3001               	movlw	1
 10322  157A  00E2               	movwf	??___fladd
 10323  157B  0862               	movf	??___fladd,w
 10324  157C  07EC               	addwf	___fladd@bexp,f
 10325  157D                     l1131:	
 10326  157D  0A6C               	incf	___fladd@bexp,w
 10327  157E  1903               	btfsc	3,2
 10328  157F  2D81               	goto	u4381
 10329  1580  2D82               	goto	u4380
 10330  1581                     u4381:	
 10331  1581  2D87               	goto	l3943
 10332  1582                     u4380:	
 10333  1582                     l3941:	
 10334  1582  086C               	movf	___fladd@bexp,w
 10335  1583  1D03               	btfss	3,2
 10336  1584  2D86               	goto	u4391
 10337  1585  2D87               	goto	u4390
 10338  1586                     u4391:	
 10339  1586  2D95               	goto	l3949
 10340  1587                     u4390:	
 10341  1587                     l3943:	
 10342  1587  3000               	movlw	0
 10343  1588  00DD               	movwf	___fladd@b+3
 10344  1589  3000               	movlw	0
 10345  158A  00DC               	movwf	___fladd@b+2
 10346  158B  3000               	movlw	0
 10347  158C  00DB               	movwf	___fladd@b+1
 10348  158D  3000               	movlw	0
 10349  158E  00DA               	movwf	___fladd@b
 10350  158F                     l3945:	
 10351  158F  086C               	movf	___fladd@bexp,w
 10352  1590  1D03               	btfss	3,2
 10353  1591  2D93               	goto	u4401
 10354  1592  2D94               	goto	u4400
 10355  1593                     u4401:	
 10356  1593  2D95               	goto	l3949
 10357  1594                     u4400:	
 10358  1594                     l3947:	
 10359  1594  01EA               	clrf	___fladd@signs
 10360  1595                     l3949:	
 10361  1595  1C6C               	btfss	___fladd@bexp,0
 10362  1596  2D98               	goto	u4411
 10363  1597  2D99               	goto	u4410
 10364  1598                     u4411:	
 10365  1598  2D9B               	goto	l3953
 10366  1599                     u4410:	
 10367  1599                     l3951:	
 10368  1599  17DC               	bsf	___fladd@b+2,7
 10369  159A  2D9F               	goto	l1139
 10370  159B                     l3953:	
 10371  159B  307F               	movlw	127
 10372  159C  00E2               	movwf	??___fladd
 10373  159D  0862               	movf	??___fladd,w
 10374  159E  05DC               	andwf	___fladd@b+2,f
 10375  159F                     l1139:	
 10376  159F  366C               	lsrf	___fladd@bexp,w
 10377  15A0  00E2               	movwf	??___fladd
 10378  15A1  0862               	movf	??___fladd,w
 10379  15A2  00DD               	movwf	___fladd@b+3
 10380  15A3                     l3955:	
 10381  15A3  1FEA               	btfss	___fladd@signs,7
 10382  15A4  2DA6               	goto	u4421
 10383  15A5  2DA7               	goto	u4420
 10384  15A6                     u4421:	
 10385  15A6  2DA8               	goto	l1140
 10386  15A7                     u4420:	
 10387  15A7                     l3957:	
 10388  15A7  17DD               	bsf	___fladd@b+3,7
 10389  15A8                     l1140:	
 10390  15A8                     l1110:	
 10391  15A8  0008               	return
 10392  15A9                     __end_of___fladd:	
 10393                           
 10394                           	psect	text25
 10395  07F5                     __ptext25:	
 10396 ;; *************** function ___flneg *****************
 10397 ;; Defined at:
 10398 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  f1              4    1[COMMON] unsigned char 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;		None
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  4    1[COMMON] unsigned char 
 10405 ;; Registers used:
 10406 ;;		wreg
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;Total ram usage:        4 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:    1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_efgtoa
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           
 10427                           ;psect for function ___flneg
 10428  07F5                     ___flneg:	
 10429  07F5                     l4267:	
 10430                           ;incstack = 0
 10431                           ; Regs used in ___flneg: [wreg]
 10432                           
 10433  07F5  0874               	movf	___flneg@f1+3,w
 10434  07F6  0473               	iorwf	___flneg@f1+2,w
 10435  07F7  0472               	iorwf	___flneg@f1+1,w
 10436  07F8  0471               	iorwf	___flneg@f1,w
 10437  07F9  1903               	skipnz
 10438  07FA  2FFC               	goto	u5281
 10439  07FB  2FFD               	goto	u5280
 10440  07FC                     u5281:	
 10441  07FC  2FFF               	goto	l4271
 10442  07FD                     u5280:	
 10443  07FD                     l4269:	
 10444  07FD  3080               	movlw	128
 10445  07FE  06F4               	xorwf	___flneg@f1+3,f
 10446  07FF                     l4271:	
 10447  07FF                     l986:	
 10448  07FF  0008               	return
 10449  0800                     __end_of___flneg:	
 10450                           
 10451                           	psect	text26
 10452  1989                     __ptext26:	
 10453 ;; *************** function ___flge *****************
 10454 ;; Defined at:
 10455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  ff1             4   32[BANK0 ] unsigned char 
 10458 ;;  ff2             4   36[BANK0 ] unsigned char 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;		None               void
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:       12 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:    1
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_lcd_update
 10481 ;;		_pwm_con
 10482 ;;		_power_con
 10483 ;;		_check_overload
 10484 ;;		_efgtoa
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           
 10489                           ;psect for function ___flge
 10490  1989                     ___flge:	
 10491  1989                     l4247:	
 10492                           ;incstack = 0
 10493                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10494                           
 10495  1989  3000               	movlw	0
 10496  198A  0020               	movlb	0	; select bank0
 10497  198B  0540               	andwf	___flge@ff1,w
 10498  198C  00C8               	movwf	??___flge
 10499  198D  3000               	movlw	0
 10500  198E  0541               	andwf	___flge@ff1+1,w
 10501  198F  00C9               	movwf	??___flge+1
 10502  1990  3080               	movlw	128
 10503  1991  0542               	andwf	___flge@ff1+2,w
 10504  1992  00CA               	movwf	??___flge+2
 10505  1993  307F               	movlw	127
 10506  1994  0543               	andwf	___flge@ff1+3,w
 10507  1995  00CB               	movwf	??___flge+3
 10508  1996  084B               	movf	??___flge+3,w
 10509  1997  044A               	iorwf	??___flge+2,w
 10510  1998  0449               	iorwf	??___flge+1,w
 10511  1999  0448               	iorwf	??___flge,w
 10512  199A  1D03               	skipz
 10513  199B  299D               	goto	u5231
 10514  199C  299E               	goto	u5230
 10515  199D                     u5231:	
 10516  199D  29A6               	goto	l974
 10517  199E                     u5230:	
 10518  199E                     l4249:	
 10519  199E  3000               	movlw	0
 10520  199F  00C3               	movwf	___flge@ff1+3
 10521  19A0  3000               	movlw	0
 10522  19A1  00C2               	movwf	___flge@ff1+2
 10523  19A2  3000               	movlw	0
 10524  19A3  00C1               	movwf	___flge@ff1+1
 10525  19A4  3000               	movlw	0
 10526  19A5  00C0               	movwf	___flge@ff1
 10527  19A6                     l974:	
 10528  19A6  3000               	movlw	0
 10529  19A7  0544               	andwf	___flge@ff2,w
 10530  19A8  00C8               	movwf	??___flge
 10531  19A9  3000               	movlw	0
 10532  19AA  0545               	andwf	___flge@ff2+1,w
 10533  19AB  00C9               	movwf	??___flge+1
 10534  19AC  3080               	movlw	128
 10535  19AD  0546               	andwf	___flge@ff2+2,w
 10536  19AE  00CA               	movwf	??___flge+2
 10537  19AF  307F               	movlw	127
 10538  19B0  0547               	andwf	___flge@ff2+3,w
 10539  19B1  00CB               	movwf	??___flge+3
 10540  19B2  084B               	movf	??___flge+3,w
 10541  19B3  044A               	iorwf	??___flge+2,w
 10542  19B4  0449               	iorwf	??___flge+1,w
 10543  19B5  0448               	iorwf	??___flge,w
 10544  19B6  1D03               	skipz
 10545  19B7  29B9               	goto	u5241
 10546  19B8  29BA               	goto	u5240
 10547  19B9                     u5241:	
 10548  19B9  29C2               	goto	l4253
 10549  19BA                     u5240:	
 10550  19BA                     l4251:	
 10551  19BA  3000               	movlw	0
 10552  19BB  00C7               	movwf	___flge@ff2+3
 10553  19BC  3000               	movlw	0
 10554  19BD  00C6               	movwf	___flge@ff2+2
 10555  19BE  3000               	movlw	0
 10556  19BF  00C5               	movwf	___flge@ff2+1
 10557  19C0  3000               	movlw	0
 10558  19C1  00C4               	movwf	___flge@ff2
 10559  19C2                     l4253:	
 10560  19C2  1FC3               	btfss	___flge@ff1+3,7
 10561  19C3  29C5               	goto	u5251
 10562  19C4  29C6               	goto	u5250
 10563  19C5                     u5251:	
 10564  19C5  29DE               	goto	l4257
 10565  19C6                     u5250:	
 10566  19C6                     l4255:	
 10567  19C6  3000               	movlw	0
 10568  19C7  00C8               	movwf	??___flge
 10569  19C8  3000               	movlw	0
 10570  19C9  00C9               	movwf	??___flge+1
 10571  19CA  3000               	movlw	0
 10572  19CB  00CA               	movwf	??___flge+2
 10573  19CC  3080               	movlw	128
 10574  19CD  00CB               	movwf	??___flge+3
 10575  19CE  0840               	movf	___flge@ff1,w
 10576  19CF  02C8               	subwf	??___flge,f
 10577  19D0  0841               	movf	___flge@ff1+1,w
 10578  19D1  3BC9               	subwfb	??___flge+1,f
 10579  19D2  0842               	movf	___flge@ff1+2,w
 10580  19D3  3BCA               	subwfb	??___flge+2,f
 10581  19D4  0843               	movf	___flge@ff1+3,w
 10582  19D5  3BCB               	subwfb	??___flge+3,f
 10583  19D6  084B               	movf	??___flge+3,w
 10584  19D7  00C3               	movwf	___flge@ff1+3
 10585  19D8  084A               	movf	??___flge+2,w
 10586  19D9  00C2               	movwf	___flge@ff1+2
 10587  19DA  0849               	movf	??___flge+1,w
 10588  19DB  00C1               	movwf	___flge@ff1+1
 10589  19DC  0848               	movf	??___flge,w
 10590  19DD  00C0               	movwf	___flge@ff1
 10591  19DE                     l4257:	
 10592  19DE  1FC7               	btfss	___flge@ff2+3,7
 10593  19DF  29E1               	goto	u5261
 10594  19E0  29E2               	goto	u5260
 10595  19E1                     u5261:	
 10596  19E1  29FA               	goto	l977
 10597  19E2                     u5260:	
 10598  19E2                     l4259:	
 10599  19E2  3000               	movlw	0
 10600  19E3  00C8               	movwf	??___flge
 10601  19E4  3000               	movlw	0
 10602  19E5  00C9               	movwf	??___flge+1
 10603  19E6  3000               	movlw	0
 10604  19E7  00CA               	movwf	??___flge+2
 10605  19E8  3080               	movlw	128
 10606  19E9  00CB               	movwf	??___flge+3
 10607  19EA  0844               	movf	___flge@ff2,w
 10608  19EB  02C8               	subwf	??___flge,f
 10609  19EC  0845               	movf	___flge@ff2+1,w
 10610  19ED  3BC9               	subwfb	??___flge+1,f
 10611  19EE  0846               	movf	___flge@ff2+2,w
 10612  19EF  3BCA               	subwfb	??___flge+2,f
 10613  19F0  0847               	movf	___flge@ff2+3,w
 10614  19F1  3BCB               	subwfb	??___flge+3,f
 10615  19F2  084B               	movf	??___flge+3,w
 10616  19F3  00C7               	movwf	___flge@ff2+3
 10617  19F4  084A               	movf	??___flge+2,w
 10618  19F5  00C6               	movwf	___flge@ff2+2
 10619  19F6  0849               	movf	??___flge+1,w
 10620  19F7  00C5               	movwf	___flge@ff2+1
 10621  19F8  0848               	movf	??___flge,w
 10622  19F9  00C4               	movwf	___flge@ff2
 10623  19FA                     l977:	
 10624  19FA  3080               	movlw	128
 10625  19FB  06C3               	xorwf	___flge@ff1+3,f
 10626  19FC  3080               	movlw	128
 10627  19FD  06C7               	xorwf	___flge@ff2+3,f
 10628  19FE  0847               	movf	___flge@ff2+3,w
 10629  19FF  0243               	subwf	___flge@ff1+3,w
 10630  1A00  1D03               	skipz
 10631  1A01  2A0C               	goto	u5275
 10632  1A02  0846               	movf	___flge@ff2+2,w
 10633  1A03  0242               	subwf	___flge@ff1+2,w
 10634  1A04  1D03               	skipz
 10635  1A05  2A0C               	goto	u5275
 10636  1A06  0845               	movf	___flge@ff2+1,w
 10637  1A07  0241               	subwf	___flge@ff1+1,w
 10638  1A08  1D03               	skipz
 10639  1A09  2A0C               	goto	u5275
 10640  1A0A  0844               	movf	___flge@ff2,w
 10641  1A0B  0240               	subwf	___flge@ff1,w
 10642  1A0C                     u5275:	
 10643  1A0C  1803               	skipnc
 10644  1A0D  2A0F               	goto	u5271
 10645  1A0E  2A10               	goto	u5270
 10646  1A0F                     u5271:	
 10647  1A0F  2A12               	goto	l4263
 10648  1A10                     u5270:	
 10649  1A10                     l4261:	
 10650  1A10  1003               	clrc
 10651  1A11  2A13               	goto	l982
 10652  1A12                     l4263:	
 10653  1A12  1403               	setc
 10654  1A13                     l982:	
 10655  1A13  0008               	return
 10656  1A14                     __end_of___flge:	
 10657                           
 10658                           	psect	text27
 10659  23CF                     __ptext27:	
 10660 ;; *************** function ___fleq *****************
 10661 ;; Defined at:
 10662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  ff1             4    1[COMMON] unsigned char 
 10665 ;;  ff2             4    5[COMMON] unsigned char 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;		None
 10668 ;; Return value:  Size  Location     Type
 10669 ;;		None               void
 10670 ;; Registers used:
 10671 ;;		wreg, status,2, status,0
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10677 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10680 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;Total ram usage:       12 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    1
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_efgtoa
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           
 10692                           ;psect for function ___fleq
 10693  23CF                     ___fleq:	
 10694  23CF                     l6093:	
 10695                           ;incstack = 0
 10696                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10697                           
 10698  23CF  3000               	movlw	0
 10699  23D0  0571               	andwf	___fleq@ff1,w
 10700  23D1  0020               	movlb	0	; select bank0
 10701  23D2  00A0               	movwf	??___fleq
 10702  23D3  3000               	movlw	0
 10703  23D4  0572               	andwf	___fleq@ff1+1,w
 10704  23D5  00A1               	movwf	??___fleq+1
 10705  23D6  3080               	movlw	128
 10706  23D7  0573               	andwf	___fleq@ff1+2,w
 10707  23D8  00A2               	movwf	??___fleq+2
 10708  23D9  307F               	movlw	127
 10709  23DA  0574               	andwf	___fleq@ff1+3,w
 10710  23DB  00A3               	movwf	??___fleq+3
 10711  23DC  0823               	movf	??___fleq+3,w
 10712  23DD  0422               	iorwf	??___fleq+2,w
 10713  23DE  0421               	iorwf	??___fleq+1,w
 10714  23DF  0420               	iorwf	??___fleq,w
 10715  23E0  1D03               	skipz
 10716  23E1  2BE3               	goto	u7931
 10717  23E2  2BE4               	goto	u7930
 10718  23E3                     u7931:	
 10719  23E3  2BEC               	goto	l965
 10720  23E4                     u7930:	
 10721  23E4                     l6095:	
 10722  23E4  3000               	movlw	0
 10723  23E5  00F4               	movwf	___fleq@ff1+3
 10724  23E6  3000               	movlw	0
 10725  23E7  00F3               	movwf	___fleq@ff1+2
 10726  23E8  3000               	movlw	0
 10727  23E9  00F2               	movwf	___fleq@ff1+1
 10728  23EA  3000               	movlw	0
 10729  23EB  00F1               	movwf	___fleq@ff1
 10730  23EC                     l965:	
 10731  23EC  3000               	movlw	0
 10732  23ED  0575               	andwf	___fleq@ff2,w
 10733  23EE  00A0               	movwf	??___fleq
 10734  23EF  3000               	movlw	0
 10735  23F0  0576               	andwf	___fleq@ff2+1,w
 10736  23F1  00A1               	movwf	??___fleq+1
 10737  23F2  3080               	movlw	128
 10738  23F3  0577               	andwf	___fleq@ff2+2,w
 10739  23F4  00A2               	movwf	??___fleq+2
 10740  23F5  307F               	movlw	127
 10741  23F6  0578               	andwf	___fleq@ff2+3,w
 10742  23F7  00A3               	movwf	??___fleq+3
 10743  23F8  0823               	movf	??___fleq+3,w
 10744  23F9  0422               	iorwf	??___fleq+2,w
 10745  23FA  0421               	iorwf	??___fleq+1,w
 10746  23FB  0420               	iorwf	??___fleq,w
 10747  23FC  1D03               	skipz
 10748  23FD  2BFF               	goto	u7941
 10749  23FE  2C00               	goto	u7940
 10750  23FF                     u7941:	
 10751  23FF  2C08               	goto	l966
 10752  2400                     u7940:	
 10753  2400                     l6097:	
 10754  2400  3000               	movlw	0
 10755  2401  00F8               	movwf	___fleq@ff2+3
 10756  2402  3000               	movlw	0
 10757  2403  00F7               	movwf	___fleq@ff2+2
 10758  2404  3000               	movlw	0
 10759  2405  00F6               	movwf	___fleq@ff2+1
 10760  2406  3000               	movlw	0
 10761  2407  00F5               	movwf	___fleq@ff2
 10762  2408                     l966:	
 10763  2408  0878               	movf	___fleq@ff2+3,w
 10764  2409  0674               	xorwf	___fleq@ff1+3,w
 10765  240A  1D03               	skipz
 10766  240B  2C16               	goto	u7955
 10767  240C  0877               	movf	___fleq@ff2+2,w
 10768  240D  0673               	xorwf	___fleq@ff1+2,w
 10769  240E  1D03               	skipz
 10770  240F  2C16               	goto	u7955
 10771  2410  0876               	movf	___fleq@ff2+1,w
 10772  2411  0672               	xorwf	___fleq@ff1+1,w
 10773  2412  1D03               	skipz
 10774  2413  2C16               	goto	u7955
 10775  2414  0875               	movf	___fleq@ff2,w
 10776  2415  0671               	xorwf	___fleq@ff1,w
 10777  2416                     u7955:	
 10778  2416  1903               	skipnz
 10779  2417  2C19               	goto	u7951
 10780  2418  2C1A               	goto	u7950
 10781  2419                     u7951:	
 10782  2419  2C1C               	goto	l6101
 10783  241A                     u7950:	
 10784  241A                     l6099:	
 10785  241A  1003               	clrc
 10786  241B  2C1D               	goto	l971
 10787  241C                     l6101:	
 10788  241C  1403               	setc
 10789  241D                     l971:	
 10790  241D  0008               	return
 10791  241E                     __end_of___fleq:	
 10792                           
 10793                           	psect	text28
 10794  24BD                     __ptext28:	
 10795 ;; *************** function ___awmod *****************
 10796 ;; Defined at:
 10797 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  divisor         2    1[COMMON] int 
 10800 ;;  dividend        2    3[COMMON] int 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  sign            1    7[COMMON] unsigned char 
 10803 ;;  counter         1    6[COMMON] unsigned char 
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  2    1[COMMON] int 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;Total ram usage:        7 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_efgtoa
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function ___awmod
 10829  24BD                     ___awmod:	
 10830  24BD                     l4197:	
 10831                           ;incstack = 0
 10832                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10833                           
 10834  24BD  01F7               	clrf	___awmod@sign
 10835  24BE                     l4199:	
 10836  24BE  1FF4               	btfss	___awmod@dividend+1,7
 10837  24BF  2CC1               	goto	u5111
 10838  24C0  2CC2               	goto	u5110
 10839  24C1                     u5111:	
 10840  24C1  2CC9               	goto	l4205
 10841  24C2                     u5110:	
 10842  24C2                     l4201:	
 10843  24C2  09F3               	comf	___awmod@dividend,f
 10844  24C3  09F4               	comf	___awmod@dividend+1,f
 10845  24C4  0AF3               	incf	___awmod@dividend,f
 10846  24C5  1903               	skipnz
 10847  24C6  0AF4               	incf	___awmod@dividend+1,f
 10848  24C7                     l4203:	
 10849  24C7  01F7               	clrf	___awmod@sign
 10850  24C8  0AF7               	incf	___awmod@sign,f
 10851  24C9                     l4205:	
 10852  24C9  1FF2               	btfss	___awmod@divisor+1,7
 10853  24CA  2CCC               	goto	u5121
 10854  24CB  2CCD               	goto	u5120
 10855  24CC                     u5121:	
 10856  24CC  2CD2               	goto	l4209
 10857  24CD                     u5120:	
 10858  24CD                     l4207:	
 10859  24CD  09F1               	comf	___awmod@divisor,f
 10860  24CE  09F2               	comf	___awmod@divisor+1,f
 10861  24CF  0AF1               	incf	___awmod@divisor,f
 10862  24D0  1903               	skipnz
 10863  24D1  0AF2               	incf	___awmod@divisor+1,f
 10864  24D2                     l4209:	
 10865  24D2  0871               	movf	___awmod@divisor,w
 10866  24D3  0472               	iorwf	___awmod@divisor+1,w
 10867  24D4  1903               	btfsc	3,2
 10868  24D5  2CD7               	goto	u5131
 10869  24D6  2CD8               	goto	u5130
 10870  24D7                     u5131:	
 10871  24D7  2D01               	goto	l4227
 10872  24D8                     u5130:	
 10873  24D8                     l4211:	
 10874  24D8  01F6               	clrf	___awmod@counter
 10875  24D9  0AF6               	incf	___awmod@counter,f
 10876  24DA  2CE4               	goto	l4217
 10877  24DB                     l4213:	
 10878  24DB  3001               	movlw	1
 10879  24DC                     u5145:	
 10880  24DC  35F1               	lslf	___awmod@divisor,f
 10881  24DD  0DF2               	rlf	___awmod@divisor+1,f
 10882  24DE  0B89               	decfsz	9,f
 10883  24DF  2CDC               	goto	u5145
 10884  24E0                     l4215:	
 10885  24E0  3001               	movlw	1
 10886  24E1  00F5               	movwf	??___awmod
 10887  24E2  0875               	movf	??___awmod,w
 10888  24E3  07F6               	addwf	___awmod@counter,f
 10889  24E4                     l4217:	
 10890  24E4  1FF2               	btfss	___awmod@divisor+1,7
 10891  24E5  2CE7               	goto	u5151
 10892  24E6  2CE8               	goto	u5150
 10893  24E7                     u5151:	
 10894  24E7  2CDB               	goto	l4213
 10895  24E8                     u5150:	
 10896  24E8                     l4219:	
 10897  24E8  0872               	movf	___awmod@divisor+1,w
 10898  24E9  0274               	subwf	___awmod@dividend+1,w
 10899  24EA  1D03               	skipz
 10900  24EB  2CEE               	goto	u5165
 10901  24EC  0871               	movf	___awmod@divisor,w
 10902  24ED  0273               	subwf	___awmod@dividend,w
 10903  24EE                     u5165:	
 10904  24EE  1C03               	skipc
 10905  24EF  2CF1               	goto	u5161
 10906  24F0  2CF2               	goto	u5160
 10907  24F1                     u5161:	
 10908  24F1  2CF6               	goto	l4223
 10909  24F2                     u5160:	
 10910  24F2                     l4221:	
 10911  24F2  0871               	movf	___awmod@divisor,w
 10912  24F3  02F3               	subwf	___awmod@dividend,f
 10913  24F4  0872               	movf	___awmod@divisor+1,w
 10914  24F5  3BF4               	subwfb	___awmod@dividend+1,f
 10915  24F6                     l4223:	
 10916  24F6  3001               	movlw	1
 10917  24F7                     u5175:	
 10918  24F7  36F2               	lsrf	___awmod@divisor+1,f
 10919  24F8  0CF1               	rrf	___awmod@divisor,f
 10920  24F9  0B89               	decfsz	9,f
 10921  24FA  2CF7               	goto	u5175
 10922  24FB                     l4225:	
 10923  24FB  3001               	movlw	1
 10924  24FC  02F6               	subwf	___awmod@counter,f
 10925  24FD  1D03               	btfss	3,2
 10926  24FE  2D00               	goto	u5181
 10927  24FF  2D01               	goto	u5180
 10928  2500                     u5181:	
 10929  2500  2CE8               	goto	l4219
 10930  2501                     u5180:	
 10931  2501                     l4227:	
 10932  2501  0877               	movf	___awmod@sign,w
 10933  2502  1903               	btfsc	3,2
 10934  2503  2D05               	goto	u5191
 10935  2504  2D06               	goto	u5190
 10936  2505                     u5191:	
 10937  2505  2D0B               	goto	l4231
 10938  2506                     u5190:	
 10939  2506                     l4229:	
 10940  2506  09F3               	comf	___awmod@dividend,f
 10941  2507  09F4               	comf	___awmod@dividend+1,f
 10942  2508  0AF3               	incf	___awmod@dividend,f
 10943  2509  1903               	skipnz
 10944  250A  0AF4               	incf	___awmod@dividend+1,f
 10945  250B                     l4231:	
 10946  250B  0874               	movf	___awmod@dividend+1,w
 10947  250C  00F2               	movwf	?___awmod+1
 10948  250D  0873               	movf	___awmod@dividend,w
 10949  250E  00F1               	movwf	?___awmod
 10950  250F                     l962:	
 10951  250F  0008               	return
 10952  2510                     __end_of___awmod:	
 10953                           
 10954                           	psect	text29
 10955  2672                     __ptext29:	
 10956 ;; *************** function ___awdiv *****************
 10957 ;; Defined at:
 10958 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  divisor         2    1[COMMON] int 
 10961 ;;  dividend        2    3[COMMON] int 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  quotient        2    8[COMMON] int 
 10964 ;;  sign            1    7[COMMON] unsigned char 
 10965 ;;  counter         1    6[COMMON] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  2    1[COMMON] int 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;Total ram usage:        9 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:    1
 10982 ;; This function calls:
 10983 ;;		Nothing
 10984 ;; This function is called by:
 10985 ;;		_efgtoa
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           
 10990                           ;psect for function ___awdiv
 10991  2672                     ___awdiv:	
 10992  2672                     l4153:	
 10993                           ;incstack = 0
 10994                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10995                           
 10996  2672  01F7               	clrf	___awdiv@sign
 10997  2673                     l4155:	
 10998  2673  1FF2               	btfss	___awdiv@divisor+1,7
 10999  2674  2E76               	goto	u5011
 11000  2675  2E77               	goto	u5010
 11001  2676                     u5011:	
 11002  2676  2E7E               	goto	l4161
 11003  2677                     u5010:	
 11004  2677                     l4157:	
 11005  2677  09F1               	comf	___awdiv@divisor,f
 11006  2678  09F2               	comf	___awdiv@divisor+1,f
 11007  2679  0AF1               	incf	___awdiv@divisor,f
 11008  267A  1903               	skipnz
 11009  267B  0AF2               	incf	___awdiv@divisor+1,f
 11010  267C                     l4159:	
 11011  267C  01F7               	clrf	___awdiv@sign
 11012  267D  0AF7               	incf	___awdiv@sign,f
 11013  267E                     l4161:	
 11014  267E  1FF4               	btfss	___awdiv@dividend+1,7
 11015  267F  2E81               	goto	u5021
 11016  2680  2E82               	goto	u5020
 11017  2681                     u5021:	
 11018  2681  2E8B               	goto	l4167
 11019  2682                     u5020:	
 11020  2682                     l4163:	
 11021  2682  09F3               	comf	___awdiv@dividend,f
 11022  2683  09F4               	comf	___awdiv@dividend+1,f
 11023  2684  0AF3               	incf	___awdiv@dividend,f
 11024  2685  1903               	skipnz
 11025  2686  0AF4               	incf	___awdiv@dividend+1,f
 11026  2687                     l4165:	
 11027  2687  3001               	movlw	1
 11028  2688  00F5               	movwf	??___awdiv
 11029  2689  0875               	movf	??___awdiv,w
 11030  268A  06F7               	xorwf	___awdiv@sign,f
 11031  268B                     l4167:	
 11032  268B  01F8               	clrf	___awdiv@quotient
 11033  268C  01F9               	clrf	___awdiv@quotient+1
 11034  268D                     l4169:	
 11035  268D  0871               	movf	___awdiv@divisor,w
 11036  268E  0472               	iorwf	___awdiv@divisor+1,w
 11037  268F  1903               	btfsc	3,2
 11038  2690  2E92               	goto	u5031
 11039  2691  2E93               	goto	u5030
 11040  2692                     u5031:	
 11041  2692  2EC2               	goto	l4189
 11042  2693                     u5030:	
 11043  2693                     l4171:	
 11044  2693  01F6               	clrf	___awdiv@counter
 11045  2694  0AF6               	incf	___awdiv@counter,f
 11046  2695  2E9F               	goto	l4177
 11047  2696                     l4173:	
 11048  2696  3001               	movlw	1
 11049  2697                     u5045:	
 11050  2697  35F1               	lslf	___awdiv@divisor,f
 11051  2698  0DF2               	rlf	___awdiv@divisor+1,f
 11052  2699  0B89               	decfsz	9,f
 11053  269A  2E97               	goto	u5045
 11054  269B                     l4175:	
 11055  269B  3001               	movlw	1
 11056  269C  00F5               	movwf	??___awdiv
 11057  269D  0875               	movf	??___awdiv,w
 11058  269E  07F6               	addwf	___awdiv@counter,f
 11059  269F                     l4177:	
 11060  269F  1FF2               	btfss	___awdiv@divisor+1,7
 11061  26A0  2EA2               	goto	u5051
 11062  26A1  2EA3               	goto	u5050
 11063  26A2                     u5051:	
 11064  26A2  2E96               	goto	l4173
 11065  26A3                     u5050:	
 11066  26A3                     l4179:	
 11067  26A3  3001               	movlw	1
 11068  26A4                     u5065:	
 11069  26A4  35F8               	lslf	___awdiv@quotient,f
 11070  26A5  0DF9               	rlf	___awdiv@quotient+1,f
 11071  26A6  0B89               	decfsz	9,f
 11072  26A7  2EA4               	goto	u5065
 11073  26A8  0872               	movf	___awdiv@divisor+1,w
 11074  26A9  0274               	subwf	___awdiv@dividend+1,w
 11075  26AA  1D03               	skipz
 11076  26AB  2EAE               	goto	u5075
 11077  26AC  0871               	movf	___awdiv@divisor,w
 11078  26AD  0273               	subwf	___awdiv@dividend,w
 11079  26AE                     u5075:	
 11080  26AE  1C03               	skipc
 11081  26AF  2EB1               	goto	u5071
 11082  26B0  2EB2               	goto	u5070
 11083  26B1                     u5071:	
 11084  26B1  2EB7               	goto	l4185
 11085  26B2                     u5070:	
 11086  26B2                     l4181:	
 11087  26B2  0871               	movf	___awdiv@divisor,w
 11088  26B3  02F3               	subwf	___awdiv@dividend,f
 11089  26B4  0872               	movf	___awdiv@divisor+1,w
 11090  26B5  3BF4               	subwfb	___awdiv@dividend+1,f
 11091  26B6                     l4183:	
 11092  26B6  1478               	bsf	___awdiv@quotient,0
 11093  26B7                     l4185:	
 11094  26B7  3001               	movlw	1
 11095  26B8                     u5085:	
 11096  26B8  36F2               	lsrf	___awdiv@divisor+1,f
 11097  26B9  0CF1               	rrf	___awdiv@divisor,f
 11098  26BA  0B89               	decfsz	9,f
 11099  26BB  2EB8               	goto	u5085
 11100  26BC                     l4187:	
 11101  26BC  3001               	movlw	1
 11102  26BD  02F6               	subwf	___awdiv@counter,f
 11103  26BE  1D03               	btfss	3,2
 11104  26BF  2EC1               	goto	u5091
 11105  26C0  2EC2               	goto	u5090
 11106  26C1                     u5091:	
 11107  26C1  2EA3               	goto	l4179
 11108  26C2                     u5090:	
 11109  26C2                     l4189:	
 11110  26C2  0877               	movf	___awdiv@sign,w
 11111  26C3  1903               	btfsc	3,2
 11112  26C4  2EC6               	goto	u5101
 11113  26C5  2EC7               	goto	u5100
 11114  26C6                     u5101:	
 11115  26C6  2ECC               	goto	l4193
 11116  26C7                     u5100:	
 11117  26C7                     l4191:	
 11118  26C7  09F8               	comf	___awdiv@quotient,f
 11119  26C8  09F9               	comf	___awdiv@quotient+1,f
 11120  26C9  0AF8               	incf	___awdiv@quotient,f
 11121  26CA  1903               	skipnz
 11122  26CB  0AF9               	incf	___awdiv@quotient+1,f
 11123  26CC                     l4193:	
 11124  26CC  0879               	movf	___awdiv@quotient+1,w
 11125  26CD  00F2               	movwf	?___awdiv+1
 11126  26CE  0878               	movf	___awdiv@quotient,w
 11127  26CF  00F1               	movwf	?___awdiv
 11128  26D0                     l949:	
 11129  26D0  0008               	return
 11130  26D1                     __end_of___awdiv:	
 11131                           
 11132                           	psect	text30
 11133  106E                     __ptext30:	
 11134 ;; *************** function _dtoa *****************
 11135 ;; Defined at:
 11136 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  fp              1    wreg     PTR struct _IO_FILE
 11139 ;;		 -> sprintf@f(5), 
 11140 ;;  d               8   16[BANK0 ] long long 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11143 ;;		 -> sprintf@f(5), 
 11144 ;;  n               8   36[BANK0 ] long long 
 11145 ;;  i               2   44[BANK0 ] int 
 11146 ;;  s               2   34[BANK0 ] int 
 11147 ;;  w               2   32[BANK0 ] int 
 11148 ;;  p               2   30[BANK0 ] int 
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  2   16[BANK0 ] int 
 11151 ;; Registers used:
 11152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;Total ram usage:       30 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    5
 11165 ;; This function calls:
 11166 ;;		___aodiv
 11167 ;;		___aomod
 11168 ;;		_abs
 11169 ;;		_pad
 11170 ;; This function is called by:
 11171 ;;		_vfpfcnvrt
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           
 11176                           ;psect for function _dtoa
 11177  106E                     _dtoa:	
 11178                           
 11179                           ;incstack = 0
 11180                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11181                           ;dtoa@fp stored from wreg
 11182  106E  0020               	movlb	0	; select bank0
 11183  106F  00BB               	movwf	dtoa@fp
 11184  1070                     l6105:	
 11185                           
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11187  1070  0830               	movf	dtoa@d,w
 11188  1071  00C4               	movwf	dtoa@n
 11189  1072  0831               	movf	dtoa@d+1,w
 11190  1073  00C5               	movwf	dtoa@n+1
 11191  1074  0832               	movf	dtoa@d+2,w
 11192  1075  00C6               	movwf	dtoa@n+2
 11193  1076  0833               	movf	dtoa@d+3,w
 11194  1077  00C7               	movwf	dtoa@n+3
 11195  1078  0834               	movf	dtoa@d+4,w
 11196  1079  00C8               	movwf	dtoa@n+4
 11197  107A  0835               	movf	dtoa@d+5,w
 11198  107B  00C9               	movwf	dtoa@n+5
 11199  107C  0836               	movf	dtoa@d+6,w
 11200  107D  00CA               	movwf	dtoa@n+6
 11201  107E  0837               	movf	dtoa@d+7,w
 11202  107F  00CB               	movwf	dtoa@n+7
 11203  1080                     l6107:	
 11204                           
 11205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11206  1080  3044               	movlw	low dtoa@n
 11207  1081  0086               	movwf	6
 11208  1082  3000               	movlw	high dtoa@n
 11209  1083  0087               	movwf	7
 11210  1084  3F47               	moviw [7]fsr1
 11211  1085  00B8               	movwf	??_dtoa
 11212  1086  1BB8               	btfsc	??_dtoa,7
 11213  1087  2889               	goto	u7961
 11214  1088  288B               	goto	u7960
 11215  1089                     u7961:	
 11216  1089  3001               	movlw	1
 11217  108A  288C               	goto	u7970
 11218  108B                     u7960:	
 11219  108B  3000               	movlw	0
 11220  108C                     u7970:	
 11221  108C  0020               	movlb	0	; select bank0
 11222  108D  00B9               	movwf	??_dtoa+1
 11223  108E  01BA               	clrf	??_dtoa+2
 11224  108F  0839               	movf	??_dtoa+1,w
 11225  1090  00C2               	movwf	dtoa@s
 11226  1091  083A               	movf	??_dtoa+2,w
 11227  1092  00C3               	movwf	dtoa@s+1
 11228  1093                     l6109:	
 11229                           
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11231  1093  0842               	movf	dtoa@s,w
 11232  1094  0443               	iorwf	dtoa@s+1,w
 11233  1095  1903               	btfsc	3,2
 11234  1096  2898               	goto	u7981
 11235  1097  2899               	goto	u7980
 11236  1098                     u7981:	
 11237  1098  28B7               	goto	l644
 11238  1099                     u7980:	
 11239  1099                     l6111:	
 11240                           
 11241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11242  1099  09C4               	comf	dtoa@n,f
 11243  109A  09C5               	comf	dtoa@n+1,f
 11244  109B  09C6               	comf	dtoa@n+2,f
 11245  109C  09C7               	comf	dtoa@n+3,f
 11246  109D  09C8               	comf	dtoa@n+4,f
 11247  109E  09C9               	comf	dtoa@n+5,f
 11248  109F  09CA               	comf	dtoa@n+6,f
 11249  10A0  09CB               	comf	dtoa@n+7,f
 11250  10A1  0AC4               	incf	dtoa@n,f
 11251  10A2  1D03               	skipz
 11252  10A3  28B7               	goto	u799lld
 11253  10A4  0AC5               	incf	dtoa@n+1,f
 11254  10A5  1D03               	skipz
 11255  10A6  28B7               	goto	u799lld
 11256  10A7  0AC6               	incf	dtoa@n+2,f
 11257  10A8  1D03               	skipz
 11258  10A9  28B7               	goto	u799lld
 11259  10AA  0AC7               	incf	dtoa@n+3,f
 11260  10AB  1D03               	skipz
 11261  10AC  28B7               	goto	u799lld
 11262  10AD  0AC8               	incf	dtoa@n+4,f
 11263  10AE  1D03               	skipz
 11264  10AF  28B7               	goto	u799lld
 11265  10B0  0AC9               	incf	dtoa@n+5,f
 11266  10B1  1D03               	skipz
 11267  10B2  28B7               	goto	u799lld
 11268  10B3  0ACA               	incf	dtoa@n+6,f
 11269  10B4  1D03               	skipz
 11270  10B5  28B7               	goto	u799lld
 11271  10B6  0ACB               	incf	dtoa@n+7,f
 11272  10B7                     u799lld:	
 11273  10B7                     l644:	
 11274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
 11275                           
 11276                           
 11277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11278  10B7  0022               	movlb	2	; select bank2
 11279  10B8  1BE1               	btfsc	(_prec+1)^(0+256),7
 11280  10B9  28BB               	goto	u8001
 11281  10BA  28BC               	goto	u8000
 11282  10BB                     u8001:	
 11283  10BB  28C0               	goto	l645
 11284  10BC                     u8000:	
 11285  10BC                     l6113:	
 11286                           
 11287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11288  10BC  30FD               	movlw	253
 11289  10BD  05E2               	andwf	_flags^(0+256),f
 11290  10BE  30FF               	movlw	255
 11291  10BF  05E3               	andwf	(_flags+1)^(0+256),f
 11292  10C0                     l645:	
 11293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
 11294                           
 11295                           
 11296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11297  10C0  0861               	movf	(_prec+1)^(0+256),w
 11298  10C1  3A80               	xorlw	128
 11299  10C2  0020               	movlb	0	; select bank0
 11300  10C3  00B8               	movwf	??_dtoa
 11301  10C4  3080               	movlw	128
 11302  10C5  0238               	subwf	??_dtoa,w
 11303  10C6  1D03               	skipz
 11304  10C7  28CB               	goto	u8015
 11305  10C8  3001               	movlw	1
 11306  10C9  0022               	movlb	2	; select bank2
 11307  10CA  0260               	subwf	_prec^(0+256),w
 11308  10CB                     u8015:	
 11309  10CB  1803               	skipnc
 11310  10CC  28CE               	goto	u8011
 11311  10CD  28CF               	goto	u8010
 11312  10CE                     u8011:	
 11313  10CE  28D5               	goto	l6117
 11314  10CF                     u8010:	
 11315  10CF                     l6115:	
 11316  10CF  3001               	movlw	1
 11317  10D0  0020               	movlb	0	; select bank0
 11318  10D1  00BE               	movwf	dtoa@p
 11319  10D2  3000               	movlw	0
 11320  10D3  00BF               	movwf	dtoa@p+1
 11321  10D4  28DD               	goto	l649
 11322  10D5                     l6117:	
 11323  10D5  0022               	movlb	2	; select bank2
 11324  10D6  0861               	movf	(_prec+1)^(0+256),w
 11325  10D7  0020               	movlb	0	; select bank0
 11326  10D8  00BF               	movwf	dtoa@p+1
 11327  10D9  0022               	movlb	2	; select bank2
 11328  10DA  0860               	movf	_prec^(0+256),w
 11329  10DB  0020               	movlb	0	; select bank0
 11330  10DC  00BE               	movwf	dtoa@p
 11331  10DD                     l649:	
 11332                           
 11333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11334  10DD  0023               	movlb	3	; select bank3
 11335  10DE  0837               	movf	(_width+1)^(0+384),w
 11336  10DF  0020               	movlb	0	; select bank0
 11337  10E0  00C1               	movwf	dtoa@w+1
 11338  10E1  0023               	movlb	3	; select bank3
 11339  10E2  0836               	movf	_width^(0+384),w
 11340  10E3  0020               	movlb	0	; select bank0
 11341  10E4  00C0               	movwf	dtoa@w
 11342  10E5                     l6119:	
 11343                           
 11344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11345  10E5  0842               	movf	dtoa@s,w
 11346  10E6  0443               	iorwf	dtoa@s+1,w
 11347  10E7  1D03               	btfss	3,2
 11348  10E8  28EA               	goto	u8021
 11349  10E9  28EB               	goto	u8020
 11350  10EA                     u8021:	
 11351  10EA  28F0               	goto	l6123
 11352  10EB                     u8020:	
 11353  10EB                     l6121:	
 11354  10EB  0022               	movlb	2	; select bank2
 11355  10EC  1D62               	btfss	_flags^(0+256),2
 11356  10ED  28EF               	goto	u8031
 11357  10EE  28F0               	goto	u8030
 11358  10EF                     u8031:	
 11359  10EF  28F5               	goto	l650
 11360  10F0                     u8030:	
 11361  10F0                     l6123:	
 11362                           
 11363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11364  10F0  30FF               	movlw	255
 11365  10F1  0020               	movlb	0	; select bank0
 11366  10F2  07C0               	addwf	dtoa@w,f
 11367  10F3  30FF               	movlw	255
 11368  10F4  3DC1               	addwfc	dtoa@w+1,f
 11369  10F5                     l650:	
 11370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
 11371                           
 11372                           
 11373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 11374  10F5  304F               	movlw	79
 11375  10F6  0020               	movlb	0	; select bank0
 11376  10F7  00CC               	movwf	dtoa@i
 11377  10F8  3000               	movlw	0
 11378  10F9  00CD               	movwf	dtoa@i+1
 11379  10FA                     l6125:	
 11380                           
 11381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 11382  10FA  0024               	movlb	4	; select bank4
 11383  10FB  01EF               	clrf	(_dbuf^(0+512)+79)
 11384                           
 11385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11386  10FC  2966               	goto	l653
 11387  10FD                     l6127:	
 11388                           
 11389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 11390  10FD  30FF               	movlw	255
 11391  10FE  0020               	movlb	0	; select bank0
 11392  10FF  07CC               	addwf	dtoa@i,f
 11393  1100  30FF               	movlw	255
 11394  1101  3DCD               	addwfc	dtoa@i+1,f
 11395  1102                     l6129:	
 11396                           
 11397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 11398  1102  300A               	movlw	10
 11399  1103  00A0               	movwf	___aomod@divisor
 11400  1104  01A1               	clrf	___aomod@divisor+1
 11401  1105  01A2               	clrf	___aomod@divisor+2
 11402  1106  01A3               	clrf	___aomod@divisor+3
 11403  1107  01A4               	clrf	___aomod@divisor+4
 11404  1108  01A5               	clrf	___aomod@divisor+5
 11405  1109  01A6               	clrf	___aomod@divisor+6
 11406  110A  01A7               	clrf	___aomod@divisor+7
 11407  110B  0844               	movf	dtoa@n,w
 11408  110C  00A8               	movwf	___aomod@dividend
 11409  110D  0845               	movf	dtoa@n+1,w
 11410  110E  00A9               	movwf	___aomod@dividend+1
 11411  110F  0846               	movf	dtoa@n+2,w
 11412  1110  00AA               	movwf	___aomod@dividend+2
 11413  1111  0847               	movf	dtoa@n+3,w
 11414  1112  00AB               	movwf	___aomod@dividend+3
 11415  1113  0848               	movf	dtoa@n+4,w
 11416  1114  00AC               	movwf	___aomod@dividend+4
 11417  1115  0849               	movf	dtoa@n+5,w
 11418  1116  00AD               	movwf	___aomod@dividend+5
 11419  1117  084A               	movf	dtoa@n+6,w
 11420  1118  00AE               	movwf	___aomod@dividend+6
 11421  1119  084B               	movf	dtoa@n+7,w
 11422  111A  00AF               	movwf	___aomod@dividend+7
 11423  111B  319C  2401  3190   	fcall	___aomod
 11424  111E  0020               	movlb	0	; select bank0
 11425  111F  0821               	movf	?___aomod+1,w
 11426  1120  00F5               	movwf	abs@a+1
 11427  1121  0820               	movf	?___aomod,w
 11428  1122  00F4               	movwf	abs@a
 11429  1123  31A1  217B  3190   	fcall	_abs
 11430  1126  0874               	movf	?_abs,w
 11431  1127  3E30               	addlw	48
 11432  1128  0020               	movlb	0	; select bank0
 11433  1129  00B8               	movwf	??_dtoa
 11434  112A  084C               	movf	dtoa@i,w
 11435  112B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11436  112C  0086               	movwf	6
 11437  112D  3002               	movlw	2	; select bank4/5
 11438  112E  0087               	movwf	7
 11439  112F  0838               	movf	??_dtoa,w
 11440  1130  0081               	movwf	1
 11441  1131                     l6131:	
 11442                           
 11443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 11444  1131  30FF               	movlw	255
 11445  1132  07BE               	addwf	dtoa@p,f
 11446  1133  30FF               	movlw	255
 11447  1134  3DBF               	addwfc	dtoa@p+1,f
 11448  1135                     l6133:	
 11449                           
 11450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 11451  1135  30FF               	movlw	255
 11452  1136  07C0               	addwf	dtoa@w,f
 11453  1137  30FF               	movlw	255
 11454  1138  3DC1               	addwfc	dtoa@w+1,f
 11455  1139                     l6135:	
 11456                           
 11457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 11458  1139  300A               	movlw	10
 11459  113A  00A0               	movwf	___aodiv@divisor
 11460  113B  01A1               	clrf	___aodiv@divisor+1
 11461  113C  01A2               	clrf	___aodiv@divisor+2
 11462  113D  01A3               	clrf	___aodiv@divisor+3
 11463  113E  01A4               	clrf	___aodiv@divisor+4
 11464  113F  01A5               	clrf	___aodiv@divisor+5
 11465  1140  01A6               	clrf	___aodiv@divisor+6
 11466  1141  01A7               	clrf	___aodiv@divisor+7
 11467  1142  0844               	movf	dtoa@n,w
 11468  1143  00A8               	movwf	___aodiv@dividend
 11469  1144  0845               	movf	dtoa@n+1,w
 11470  1145  00A9               	movwf	___aodiv@dividend+1
 11471  1146  0846               	movf	dtoa@n+2,w
 11472  1147  00AA               	movwf	___aodiv@dividend+2
 11473  1148  0847               	movf	dtoa@n+3,w
 11474  1149  00AB               	movwf	___aodiv@dividend+3
 11475  114A  0848               	movf	dtoa@n+4,w
 11476  114B  00AC               	movwf	___aodiv@dividend+4
 11477  114C  0849               	movf	dtoa@n+5,w
 11478  114D  00AD               	movwf	___aodiv@dividend+5
 11479  114E  084A               	movf	dtoa@n+6,w
 11480  114F  00AE               	movwf	___aodiv@dividend+6
 11481  1150  084B               	movf	dtoa@n+7,w
 11482  1151  00AF               	movwf	___aodiv@dividend+7
 11483  1152  319D  25D6  3190   	fcall	___aodiv
 11484  1155  0020               	movlb	0	; select bank0
 11485  1156  0820               	movf	?___aodiv,w
 11486  1157  00C4               	movwf	dtoa@n
 11487  1158  0821               	movf	?___aodiv+1,w
 11488  1159  00C5               	movwf	dtoa@n+1
 11489  115A  0822               	movf	?___aodiv+2,w
 11490  115B  00C6               	movwf	dtoa@n+2
 11491  115C  0823               	movf	?___aodiv+3,w
 11492  115D  00C7               	movwf	dtoa@n+3
 11493  115E  0824               	movf	?___aodiv+4,w
 11494  115F  00C8               	movwf	dtoa@n+4
 11495  1160  0825               	movf	?___aodiv+5,w
 11496  1161  00C9               	movwf	dtoa@n+5
 11497  1162  0826               	movf	?___aodiv+6,w
 11498  1163  00CA               	movwf	dtoa@n+6
 11499  1164  0827               	movf	?___aodiv+7,w
 11500  1165  00CB               	movwf	dtoa@n+7
 11501  1166                     l653:	
 11502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
 11503                           
 11504                           
 11505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11506  1166  0020               	movlb	0	; select bank0
 11507  1167  084D               	movf	dtoa@i+1,w
 11508  1168  3A80               	xorlw	128
 11509  1169  00B8               	movwf	??_dtoa
 11510  116A  3080               	movlw	128
 11511  116B  0238               	subwf	??_dtoa,w
 11512  116C  1D03               	skipz
 11513  116D  2970               	goto	u8045
 11514  116E  3001               	movlw	1
 11515  116F  024C               	subwf	dtoa@i,w
 11516  1170                     u8045:	
 11517  1170  1C03               	skipc
 11518  1171  2973               	goto	u8041
 11519  1172  2974               	goto	u8040
 11520  1173                     u8041:	
 11521  1173  29A1               	goto	l6145
 11522  1174                     u8040:	
 11523  1174                     l6137:	
 11524  1174  0020               	movlb	0	; select bank0
 11525  1175  0844               	movf	dtoa@n,w
 11526  1176  0445               	iorwf	dtoa@n+1,w
 11527  1177  0446               	iorwf	dtoa@n+2,w
 11528  1178  0447               	iorwf	dtoa@n+3,w
 11529  1179  0448               	iorwf	dtoa@n+4,w
 11530  117A  0449               	iorwf	dtoa@n+5,w
 11531  117B  044A               	iorwf	dtoa@n+6,w
 11532  117C  044B               	iorwf	dtoa@n+7,w
 11533  117D  1D03               	skipz
 11534  117E  2980               	goto	u8051
 11535  117F  2981               	goto	u8050
 11536  1180                     u8051:	
 11537  1180  28FD               	goto	l6127
 11538  1181                     u8050:	
 11539  1181                     l6139:	
 11540  1181  083F               	movf	dtoa@p+1,w
 11541  1182  3A80               	xorlw	128
 11542  1183  00B8               	movwf	??_dtoa
 11543  1184  3080               	movlw	128
 11544  1185  0238               	subwf	??_dtoa,w
 11545  1186  1D03               	skipz
 11546  1187  298A               	goto	u8065
 11547  1188  3001               	movlw	1
 11548  1189  023E               	subwf	dtoa@p,w
 11549  118A                     u8065:	
 11550  118A  1803               	skipnc
 11551  118B  298D               	goto	u8061
 11552  118C  298E               	goto	u8060
 11553  118D                     u8061:	
 11554  118D  28FD               	goto	l6127
 11555  118E                     u8060:	
 11556  118E                     l6141:	
 11557  118E  0020               	movlb	0	; select bank0
 11558  118F  0841               	movf	dtoa@w+1,w
 11559  1190  3A80               	xorlw	128
 11560  1191  00B8               	movwf	??_dtoa
 11561  1192  3080               	movlw	128
 11562  1193  0238               	subwf	??_dtoa,w
 11563  1194  1D03               	skipz
 11564  1195  2998               	goto	u8075
 11565  1196  3001               	movlw	1
 11566  1197  0240               	subwf	dtoa@w,w
 11567  1198                     u8075:	
 11568  1198  1C03               	skipc
 11569  1199  299B               	goto	u8071
 11570  119A  299C               	goto	u8070
 11571  119B                     u8071:	
 11572  119B  29A1               	goto	l6145
 11573  119C                     u8070:	
 11574  119C                     l6143:	
 11575  119C  0022               	movlb	2	; select bank2
 11576  119D  18E2               	btfsc	_flags^(0+256),1
 11577  119E  29A0               	goto	u8081
 11578  119F  29A1               	goto	u8080
 11579  11A0                     u8081:	
 11580  11A0  28FD               	goto	l6127
 11581  11A1                     u8080:	
 11582  11A1                     l6145:	
 11583                           
 11584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 11585  11A1  0020               	movlb	0	; select bank0
 11586  11A2  0842               	movf	dtoa@s,w
 11587  11A3  0443               	iorwf	dtoa@s+1,w
 11588  11A4  1D03               	btfss	3,2
 11589  11A5  29A7               	goto	u8091
 11590  11A6  29A8               	goto	u8090
 11591  11A7                     u8091:	
 11592  11A7  29AD               	goto	l6149
 11593  11A8                     u8090:	
 11594  11A8                     l6147:	
 11595  11A8  0022               	movlb	2	; select bank2
 11596  11A9  1D62               	btfss	_flags^(0+256),2
 11597  11AA  29AC               	goto	u8101
 11598  11AB  29AD               	goto	u8100
 11599  11AC                     u8101:	
 11600  11AC  29CA               	goto	l6159
 11601  11AD                     u8100:	
 11602  11AD                     l6149:	
 11603                           
 11604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 11605  11AD  30FF               	movlw	255
 11606  11AE  0020               	movlb	0	; select bank0
 11607  11AF  07CC               	addwf	dtoa@i,f
 11608  11B0  30FF               	movlw	255
 11609  11B1  3DCD               	addwfc	dtoa@i+1,f
 11610  11B2                     l6151:	
 11611                           
 11612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 11613  11B2  0842               	movf	dtoa@s,w
 11614  11B3  0443               	iorwf	dtoa@s+1,w
 11615  11B4  1D03               	btfss	3,2
 11616  11B5  29B7               	goto	u8111
 11617  11B6  29B8               	goto	u8110
 11618  11B7                     u8111:	
 11619  11B7  29BD               	goto	l6155
 11620  11B8                     u8110:	
 11621  11B8                     l6153:	
 11622  11B8  302B               	movlw	43
 11623  11B9  00BC               	movwf	_dtoa$526
 11624  11BA  3000               	movlw	0
 11625  11BB  00BD               	movwf	_dtoa$526+1
 11626  11BC  29C1               	goto	l6157
 11627  11BD                     l6155:	
 11628  11BD  302D               	movlw	45
 11629  11BE  00BC               	movwf	_dtoa$526
 11630  11BF  3000               	movlw	0
 11631  11C0  00BD               	movwf	_dtoa$526+1
 11632  11C1                     l6157:	
 11633  11C1  083C               	movf	_dtoa$526,w
 11634  11C2  00B8               	movwf	??_dtoa
 11635  11C3  084C               	movf	dtoa@i,w
 11636  11C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11637  11C5  0086               	movwf	6
 11638  11C6  3002               	movlw	2	; select bank4/5
 11639  11C7  0087               	movwf	7
 11640  11C8  0838               	movf	??_dtoa,w
 11641  11C9  0081               	movwf	1
 11642  11CA                     l6159:	
 11643                           
 11644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 11645  11CA  0020               	movlb	0	; select bank0
 11646  11CB  084C               	movf	dtoa@i,w
 11647  11CC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11648  11CD  00B8               	movwf	??_dtoa
 11649  11CE  0838               	movf	??_dtoa,w
 11650  11CF  00A7               	movwf	pad@buf
 11651  11D0  0841               	movf	dtoa@w+1,w
 11652  11D1  00A9               	movwf	pad@p+1
 11653  11D2  0840               	movf	dtoa@w,w
 11654  11D3  00A8               	movwf	pad@p
 11655  11D4  083B               	movf	dtoa@fp,w
 11656  11D5  31A5  25BE  3190   	fcall	_pad
 11657  11D8  0020               	movlb	0	; select bank0
 11658  11D9  0828               	movf	?_pad+1,w
 11659  11DA  00B1               	movwf	?_dtoa+1
 11660  11DB  0827               	movf	?_pad,w
 11661  11DC  00B0               	movwf	?_dtoa
 11662  11DD                     l667:	
 11663  11DD  0008               	return
 11664  11DE                     __end_of_dtoa:	
 11665                           
 11666                           	psect	text31
 11667  25BE                     __ptext31:	
 11668 ;; *************** function _pad *****************
 11669 ;; Defined at:
 11670 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;  fp              1    wreg     PTR struct _IO_FILE
 11673 ;;		 -> sprintf@f(5), 
 11674 ;;  buf             1    7[BANK0 ] PTR unsigned char 
 11675 ;;		 -> dbuf(80), 
 11676 ;;  p               2    8[BANK0 ] int 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
 11679 ;;		 -> sprintf@f(5), 
 11680 ;;  w               2   12[BANK0 ] int 
 11681 ;;  i               2   10[BANK0 ] int 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  2    7[BANK0 ] int 
 11684 ;; Registers used:
 11685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11691 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;Total ram usage:        9 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    4
 11698 ;; This function calls:
 11699 ;;		_fputc
 11700 ;;		_fputs
 11701 ;;		_strlen
 11702 ;; This function is called by:
 11703 ;;		_dtoa
 11704 ;;		_efgtoa
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           
 11709                           ;psect for function _pad
 11710  25BE                     _pad:	
 11711                           
 11712                           ;incstack = 0
 11713                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11714                           ;pad@fp stored from wreg
 11715  25BE  0020               	movlb	0	; select bank0
 11716  25BF  00AE               	movwf	pad@fp
 11717  25C0                     l6061:	
 11718                           
 11719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11720  25C0  0022               	movlb	2	; select bank2
 11721  25C1  1C62               	btfss	_flags^(0+256),0
 11722  25C2  2DC4               	goto	u7861
 11723  25C3  2DC5               	goto	u7860
 11724  25C4                     u7861:	
 11725  25C4  2DCE               	goto	l6065
 11726  25C5                     u7860:	
 11727  25C5                     l6063:	
 11728                           
 11729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11730  25C5  0020               	movlb	0	; select bank0
 11731  25C6  082E               	movf	pad@fp,w
 11732  25C7  00FA               	movwf	??_pad
 11733  25C8  087A               	movf	??_pad,w
 11734  25C9  00F9               	movwf	fputs@fp
 11735  25CA  0827               	movf	pad@buf,w
 11736  25CB  31A2  229F  31A5   	fcall	_fputs
 11737  25CE                     l6065:	
 11738                           
 11739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11740  25CE  0020               	movlb	0	; select bank0
 11741  25CF  1BA9               	btfsc	pad@p+1,7
 11742  25D0  2DD2               	goto	u7871
 11743  25D1  2DD3               	goto	u7870
 11744  25D2                     u7871:	
 11745  25D2  2DD8               	goto	l6069
 11746  25D3                     u7870:	
 11747  25D3                     l6067:	
 11748  25D3  0829               	movf	pad@p+1,w
 11749  25D4  00AD               	movwf	pad@w+1
 11750  25D5  0828               	movf	pad@p,w
 11751  25D6  00AC               	movwf	pad@w
 11752  25D7  2DDA               	goto	l636
 11753  25D8                     l6069:	
 11754  25D8  01AC               	clrf	pad@w
 11755  25D9  01AD               	clrf	pad@w+1
 11756  25DA                     l636:	
 11757                           
 11758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11759  25DA  01AA               	clrf	pad@i
 11760  25DB  01AB               	clrf	pad@i+1
 11761                           
 11762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11763  25DC  2DEE               	goto	l6075
 11764  25DD                     l6071:	
 11765                           
 11766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11767  25DD  3020               	movlw	32
 11768  25DE  00F1               	movwf	fputc@c
 11769  25DF  3000               	movlw	0
 11770  25E0  00F2               	movwf	fputc@c+1
 11771  25E1  0020               	movlb	0	; select bank0
 11772  25E2  082E               	movf	pad@fp,w
 11773  25E3  00FA               	movwf	??_pad
 11774  25E4  087A               	movf	??_pad,w
 11775  25E5  00F3               	movwf	fputc@fp
 11776  25E6  31A5  2510  31A5   	fcall	_fputc
 11777  25E9                     l6073:	
 11778                           
 11779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11780  25E9  3001               	movlw	1
 11781  25EA  0020               	movlb	0	; select bank0
 11782  25EB  07AA               	addwf	pad@i,f
 11783  25EC  3000               	movlw	0
 11784  25ED  3DAB               	addwfc	pad@i+1,f
 11785  25EE                     l6075:	
 11786                           
 11787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11788  25EE  082B               	movf	pad@i+1,w
 11789  25EF  3A80               	xorlw	128
 11790  25F0  00FA               	movwf	??_pad
 11791  25F1  082D               	movf	pad@w+1,w
 11792  25F2  3A80               	xorlw	128
 11793  25F3  027A               	subwf	??_pad,w
 11794  25F4  1D03               	skipz
 11795  25F5  2DF8               	goto	u7885
 11796  25F6  082C               	movf	pad@w,w
 11797  25F7  022A               	subwf	pad@i,w
 11798  25F8                     u7885:	
 11799  25F8  1C03               	skipc
 11800  25F9  2DFB               	goto	u7881
 11801  25FA  2DFC               	goto	u7880
 11802  25FB                     u7881:	
 11803  25FB  2DDD               	goto	l6071
 11804  25FC                     u7880:	
 11805  25FC                     l639:	
 11806                           
 11807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11808  25FC  0022               	movlb	2	; select bank2
 11809  25FD  1862               	btfsc	_flags^(0+256),0
 11810  25FE  2E00               	goto	u7891
 11811  25FF  2E01               	goto	u7890
 11812  2600                     u7891:	
 11813  2600  2E0A               	goto	l6079
 11814  2601                     u7890:	
 11815  2601                     l6077:	
 11816                           
 11817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11818  2601  0020               	movlb	0	; select bank0
 11819  2602  082E               	movf	pad@fp,w
 11820  2603  00FA               	movwf	??_pad
 11821  2604  087A               	movf	??_pad,w
 11822  2605  00F9               	movwf	fputs@fp
 11823  2606  0827               	movf	pad@buf,w
 11824  2607  31A2  229F  31A5   	fcall	_fputs
 11825  260A                     l6079:	
 11826                           
 11827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11828  260A  0020               	movlb	0	; select bank0
 11829  260B  0827               	movf	pad@buf,w
 11830  260C  31A1  2195  31A5   	fcall	_strlen
 11831  260F  0020               	movlb	0	; select bank0
 11832  2610  082C               	movf	pad@w,w
 11833  2611  0771               	addwf	?_strlen,w
 11834  2612  00A7               	movwf	?_pad
 11835  2613  082D               	movf	pad@w+1,w
 11836  2614  3D72               	addwfc	?_strlen+1,w
 11837  2615  00A8               	movwf	?_pad+1
 11838  2616                     l641:	
 11839  2616  0008               	return
 11840  2617                     __end_of_pad:	
 11841                           
 11842                           	psect	text32
 11843  2195                     __ptext32:	
 11844 ;; *************** function _strlen *****************
 11845 ;; Defined at:
 11846 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;  s               1    wreg     PTR const unsigned char 
 11849 ;;		 -> dbuf(80), 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  s               1    5[COMMON] PTR const unsigned char 
 11852 ;;		 -> dbuf(80), 
 11853 ;;  a               1    4[COMMON] PTR const unsigned char 
 11854 ;;		 -> dbuf(80), 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  2    1[COMMON] unsigned int 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;Total ram usage:        5 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:    1
 11871 ;; This function calls:
 11872 ;;		Nothing
 11873 ;; This function is called by:
 11874 ;;		_pad
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           
 11879                           ;psect for function _strlen
 11880  2195                     _strlen:	
 11881                           
 11882                           ;incstack = 0
 11883                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11884                           ;strlen@s stored from wreg
 11885  2195  00F5               	movwf	strlen@s
 11886  2196                     l3751:	
 11887  2196  0875               	movf	strlen@s,w
 11888  2197  00F3               	movwf	??_strlen
 11889  2198  0873               	movf	??_strlen,w
 11890  2199  00F4               	movwf	strlen@a
 11891  219A  299F               	goto	l3755
 11892  219B                     l3753:	
 11893  219B  3001               	movlw	1
 11894  219C  00F3               	movwf	??_strlen
 11895  219D  0873               	movf	??_strlen,w
 11896  219E  07F5               	addwf	strlen@s,f
 11897  219F                     l3755:	
 11898  219F  0875               	movf	strlen@s,w
 11899  21A0  0086               	movwf	6
 11900  21A1  3002               	movlw	2	; select bank4/5
 11901  21A2  0087               	movwf	7
 11902  21A3  0801               	movf	1,w
 11903  21A4  1D03               	btfss	3,2
 11904  21A5  29A7               	goto	u3971
 11905  21A6  29A8               	goto	u3970
 11906  21A7                     u3971:	
 11907  21A7  299B               	goto	l3753
 11908  21A8                     u3970:	
 11909  21A8                     l3757:	
 11910  21A8  0874               	movf	strlen@a,w
 11911  21A9  0275               	subwf	strlen@s,w
 11912  21AA  00F1               	movwf	?_strlen
 11913  21AB  01F2               	clrf	?_strlen+1
 11914  21AC  1BF1               	btfsc	?_strlen,7
 11915  21AD  03F2               	decf	?_strlen+1,f
 11916  21AE                     l1375:	
 11917  21AE  0008               	return
 11918  21AF                     __end_of_strlen:	
 11919                           
 11920                           	psect	text33
 11921  229F                     __ptext33:	
 11922 ;; *************** function _fputs *****************
 11923 ;; Defined at:
 11924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  s               1    wreg     PTR const unsigned char 
 11927 ;;		 -> dbuf(80), 
 11928 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
 11929 ;;		 -> sprintf@f(5), 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 11932 ;;		 -> dbuf(80), 
 11933 ;;  i               2    4[BANK0 ] int 
 11934 ;;  c               1    3[BANK0 ] unsigned char 
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  2    9[COMMON] int 
 11937 ;; Registers used:
 11938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11944 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;Total ram usage:        8 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    3
 11951 ;; This function calls:
 11952 ;;		_fputc
 11953 ;; This function is called by:
 11954 ;;		_pad
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           
 11959                           ;psect for function _fputs
 11960  229F                     _fputs:	
 11961                           
 11962                           ;incstack = 0
 11963                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11964                           ;fputs@s stored from wreg
 11965  229F  0020               	movlb	0	; select bank0
 11966  22A0  00A6               	movwf	fputs@s
 11967  22A1                     l6049:	
 11968  22A1  01A4               	clrf	fputs@i
 11969  22A2  01A5               	clrf	fputs@i+1
 11970  22A3  2AB7               	goto	l6055
 11971  22A4                     l6051:	
 11972  22A4  0823               	movf	fputs@c,w
 11973  22A5  00A0               	movwf	??_fputs
 11974  22A6  01A1               	clrf	??_fputs+1
 11975  22A7  0820               	movf	??_fputs,w
 11976  22A8  00F1               	movwf	fputc@c
 11977  22A9  0821               	movf	??_fputs+1,w
 11978  22AA  00F2               	movwf	fputc@c+1
 11979  22AB  0879               	movf	fputs@fp,w
 11980  22AC  00A2               	movwf	??_fputs+2
 11981  22AD  0822               	movf	??_fputs+2,w
 11982  22AE  00F3               	movwf	fputc@fp
 11983  22AF  31A5  2510  31A2   	fcall	_fputc
 11984  22B2                     l6053:	
 11985  22B2  3001               	movlw	1
 11986  22B3  0020               	movlb	0	; select bank0
 11987  22B4  07A4               	addwf	fputs@i,f
 11988  22B5  3000               	movlw	0
 11989  22B6  3DA5               	addwfc	fputs@i+1,f
 11990  22B7                     l6055:	
 11991  22B7  0824               	movf	fputs@i,w
 11992  22B8  0726               	addwf	fputs@s,w
 11993  22B9  00A0               	movwf	??_fputs
 11994  22BA  0820               	movf	??_fputs,w
 11995  22BB  0086               	movwf	6
 11996  22BC  3002               	movlw	2	; select bank4/5
 11997  22BD  0087               	movwf	7
 11998  22BE  0801               	movf	1,w
 11999  22BF  00A1               	movwf	??_fputs+1
 12000  22C0  0821               	movf	??_fputs+1,w
 12001  22C1  00A3               	movwf	fputs@c
 12002  22C2  0823               	movf	fputs@c,w
 12003  22C3  1D03               	btfss	3,2
 12004  22C4  2AC6               	goto	u7831
 12005  22C5  2AC7               	goto	u7830
 12006  22C6                     u7831:	
 12007  22C6  2AA4               	goto	l6051
 12008  22C7                     u7830:	
 12009  22C7                     l1353:	
 12010  22C7  0008               	return
 12011  22C8                     __end_of_fputs:	
 12012                           
 12013                           	psect	text34
 12014  2510                     __ptext34:	
 12015 ;; *************** function _fputc *****************
 12016 ;; Defined at:
 12017 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  c               2    1[COMMON] int 
 12020 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
 12021 ;;		 -> sprintf@f(5), 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  2    1[COMMON] int 
 12026 ;; Registers used:
 12027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:        8 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; Hardware stack levels required when called:    2
 12040 ;; This function calls:
 12041 ;;		_putch
 12042 ;; This function is called by:
 12043 ;;		_pad
 12044 ;;		_vfpfcnvrt
 12045 ;;		_fputs
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           
 12050                           ;psect for function _fputc
 12051  2510                     _fputc:	
 12052  2510                     l3727:	
 12053                           ;incstack = 0
 12054                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12055                           
 12056  2510  0873               	movf	fputc@fp,w
 12057  2511  1903               	btfsc	3,2
 12058  2512  2D14               	goto	u3921
 12059  2513  2D15               	goto	u3920
 12060  2514                     u3921:	
 12061  2514  2D1A               	goto	l3731
 12062  2515                     u3920:	
 12063  2515                     l3729:	
 12064  2515  0873               	movf	fputc@fp,w
 12065  2516  1D03               	btfss	3,2
 12066  2517  2D19               	goto	u3931
 12067  2518  2D1A               	goto	u3930
 12068  2519                     u3931:	
 12069  2519  2D1F               	goto	l3733
 12070  251A                     u3930:	
 12071  251A                     l3731:	
 12072  251A  0871               	movf	fputc@c,w
 12073  251B  3180  2003  31A5   	fcall	_putch
 12074  251E  2D65               	goto	l1345
 12075  251F                     l3733:	
 12076  251F  0873               	movf	fputc@fp,w
 12077  2520  3E03               	addlw	3
 12078  2521  0086               	movwf	6
 12079  2522  3001               	movlw	1	; select bank2/3
 12080  2523  0087               	movwf	7
 12081  2524  0016               	moviw fsr1++
 12082  2525  0401               	iorwf	1,w
 12083  2526  1903               	btfsc	3,2
 12084  2527  2D29               	goto	u3941
 12085  2528  2D2A               	goto	u3940
 12086  2529                     u3941:	
 12087  2529  2D49               	goto	l3737
 12088  252A                     u3940:	
 12089  252A                     l3735:	
 12090  252A  0873               	movf	fputc@fp,w
 12091  252B  3E03               	addlw	3
 12092  252C  0086               	movwf	6
 12093  252D  3001               	movlw	1	; select bank2/3
 12094  252E  0087               	movwf	7
 12095  252F  3F40               	moviw [0]fsr1
 12096  2530  00F4               	movwf	??_fputc
 12097  2531  3F41               	moviw [1]fsr1
 12098  2532  00F5               	movwf	??_fputc+1
 12099  2533  0A73               	incf	fputc@fp,w
 12100  2534  0086               	movwf	6
 12101  2535  3001               	movlw	1	; select bank2/3
 12102  2536  0087               	movwf	7
 12103  2537  3F40               	moviw [0]fsr1
 12104  2538  00F6               	movwf	??_fputc+2
 12105  2539  3F41               	moviw [1]fsr1
 12106  253A  00F7               	movwf	??_fputc+3
 12107  253B  0877               	movf	??_fputc+3,w
 12108  253C  3A80               	xorlw	128
 12109  253D  00F8               	movwf	??_fputc+4
 12110  253E  0875               	movf	??_fputc+1,w
 12111  253F  3A80               	xorlw	128
 12112  2540  0278               	subwf	??_fputc+4,w
 12113  2541  1D03               	skipz
 12114  2542  2D45               	goto	u3955
 12115  2543  0874               	movf	??_fputc,w
 12116  2544  0276               	subwf	??_fputc+2,w
 12117  2545                     u3955:	
 12118  2545  1803               	skipnc
 12119  2546  2D48               	goto	u3951
 12120  2547  2D49               	goto	u3950
 12121  2548                     u3951:	
 12122  2548  2D65               	goto	l1345
 12123  2549                     u3950:	
 12124  2549                     l3737:	
 12125  2549  0871               	movf	fputc@c,w
 12126  254A  00F4               	movwf	??_fputc
 12127  254B  0873               	movf	fputc@fp,w
 12128  254C  0086               	movwf	6
 12129  254D  3001               	movlw	1	; select bank2/3
 12130  254E  0087               	movwf	7
 12131  254F  0A73               	incf	fputc@fp,w
 12132  2550  0084               	movwf	4
 12133  2551  3001               	movlw	1	; select bank2/3
 12134  2552  0085               	movwf	5
 12135  2553  0800               	movf	0,w
 12136  2554  0701               	addwf	1,w
 12137  2555  00F5               	movwf	??_fputc+1
 12138  2556  0875               	movf	??_fputc+1,w
 12139  2557  0086               	movwf	6
 12140  2558  3001               	movlw	1	; select bank2/3
 12141  2559  0087               	movwf	7
 12142  255A  0874               	movf	??_fputc,w
 12143  255B  0081               	movwf	1
 12144  255C                     l3739:	
 12145  255C  0A73               	incf	fputc@fp,w
 12146  255D  0086               	movwf	6
 12147  255E  3001               	movlw	1	; select bank2/3
 12148  255F  0087               	movwf	7
 12149  2560  3001               	movlw	1
 12150  2561  0781               	addwf	1,f
 12151  2562  3141               	addfsr 1,1
 12152  2563  1803               	skipnc
 12153  2564  0A81               	incf	1,f
 12154  2565                     l1345:	
 12155  2565  0008               	return
 12156  2566                     __end_of_fputc:	
 12157                           
 12158                           	psect	text35
 12159  0003                     __ptext35:	
 12160 ;; *************** function _putch *****************
 12161 ;; Defined at:
 12162 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  c               1    wreg     unsigned char 
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;  c               1    0[COMMON] unsigned char 
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  1    wreg      void 
 12169 ;; Registers used:
 12170 ;;		wreg
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;Total ram usage:        0 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; Hardware stack levels required when called:    1
 12183 ;; This function calls:
 12184 ;;		Nothing
 12185 ;; This function is called by:
 12186 ;;		_fputc
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           
 12191                           ;psect for function _putch
 12192  0003                     _putch:	
 12193  0003                     l1363:	
 12194                           ;incstack = 0
 12195                           ; Regs used in _putch: [wreg]
 12196                           
 12197  0003  0008               	return
 12198  0004                     __end_of_putch:	
 12199                           
 12200                           	psect	text36
 12201  217B                     __ptext36:	
 12202 ;; *************** function _abs *****************
 12203 ;; Defined at:
 12204 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  a               2    4[COMMON] int 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  2    4[COMMON] int 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;Total ram usage:        4 bytes
 12223 ;; Hardware stack levels used:    1
 12224 ;; Hardware stack levels required when called:    1
 12225 ;; This function calls:
 12226 ;;		Nothing
 12227 ;; This function is called by:
 12228 ;;		_dtoa
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           
 12233                           ;psect for function _abs
 12234  217B                     _abs:	
 12235  217B                     l3995:	
 12236                           ;incstack = 0
 12237                           ; Regs used in _abs: [wreg+status,2+status,0]
 12238                           
 12239  217B  0875               	movf	abs@a+1,w
 12240  217C  3A80               	xorlw	128
 12241  217D  00F6               	movwf	??_abs
 12242  217E  3080               	movlw	128
 12243  217F  0276               	subwf	??_abs,w
 12244  2180  1D03               	skipz
 12245  2181  2984               	goto	u4505
 12246  2182  3001               	movlw	1
 12247  2183  0274               	subwf	abs@a,w
 12248  2184                     u4505:	
 12249  2184  1803               	skipnc
 12250  2185  2987               	goto	u4501
 12251  2186  2988               	goto	u4500
 12252  2187                     u4501:	
 12253  2187  2994               	goto	l1261
 12254  2188                     u4500:	
 12255  2188                     l3997:	
 12256  2188  0974               	comf	abs@a,w
 12257  2189  00F6               	movwf	??_abs
 12258  218A  0975               	comf	abs@a+1,w
 12259  218B  00F7               	movwf	??_abs+1
 12260  218C  0AF6               	incf	??_abs,f
 12261  218D  1903               	skipnz
 12262  218E  0AF7               	incf	??_abs+1,f
 12263  218F  0876               	movf	??_abs,w
 12264  2190  00F4               	movwf	?_abs
 12265  2191  0877               	movf	??_abs+1,w
 12266  2192  00F5               	movwf	?_abs+1
 12267  2193  2994               	goto	l1264
 12268  2194                     l1261:	
 12269  2194                     l1264:	
 12270  2194  0008               	return
 12271  2195                     __end_of_abs:	
 12272                           
 12273                           	psect	text37
 12274  1C01                     __ptext37:	
 12275 ;; *************** function ___aomod *****************
 12276 ;; Defined at:
 12277 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;  divisor         8    0[BANK0 ] long long 
 12280 ;;  dividend        8    8[BANK0 ] long long 
 12281 ;; Auto vars:     Size  Location     Type
 12282 ;;  sign            1    3[COMMON] unsigned char 
 12283 ;;  counter         1    2[COMMON] unsigned char 
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  8    0[BANK0 ] long long 
 12286 ;; Registers used:
 12287 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12293 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;Total ram usage:       19 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:    1
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_dtoa
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           
 12308                           ;psect for function ___aomod
 12309  1C01                     ___aomod:	
 12310  1C01                     l4123:	
 12311                           ;incstack = 0
 12312                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12313                           
 12314  1C01  01F3               	clrf	___aomod@sign
 12315  1C02                     l4125:	
 12316  1C02  3028               	movlw	low ___aomod@dividend
 12317  1C03  0086               	movwf	6
 12318  1C04  3000               	movlw	high ___aomod@dividend
 12319  1C05  0087               	movwf	7
 12320  1C06  3F47               	moviw [7]fsr1
 12321  1C07  00F1               	movwf	??___aomod
 12322  1C08  1FF1               	btfss	??___aomod,7
 12323  1C09  2C0B               	goto	u4911
 12324  1C0A  2C0C               	goto	u4910
 12325  1C0B                     u4911:	
 12326  1C0B  2C2D               	goto	l4129
 12327  1C0C                     u4910:	
 12328  1C0C                     l4127:	
 12329  1C0C  0020               	movlb	0	; select bank0
 12330  1C0D  09A8               	comf	___aomod@dividend,f
 12331  1C0E  09A9               	comf	___aomod@dividend+1,f
 12332  1C0F  09AA               	comf	___aomod@dividend+2,f
 12333  1C10  09AB               	comf	___aomod@dividend+3,f
 12334  1C11  09AC               	comf	___aomod@dividend+4,f
 12335  1C12  09AD               	comf	___aomod@dividend+5,f
 12336  1C13  09AE               	comf	___aomod@dividend+6,f
 12337  1C14  09AF               	comf	___aomod@dividend+7,f
 12338  1C15  0AA8               	incf	___aomod@dividend,f
 12339  1C16  1D03               	skipz
 12340  1C17  2C2B               	goto	u492lld
 12341  1C18  0AA9               	incf	___aomod@dividend+1,f
 12342  1C19  1D03               	skipz
 12343  1C1A  2C2B               	goto	u492lld
 12344  1C1B  0AAA               	incf	___aomod@dividend+2,f
 12345  1C1C  1D03               	skipz
 12346  1C1D  2C2B               	goto	u492lld
 12347  1C1E  0AAB               	incf	___aomod@dividend+3,f
 12348  1C1F  1D03               	skipz
 12349  1C20  2C2B               	goto	u492lld
 12350  1C21  0AAC               	incf	___aomod@dividend+4,f
 12351  1C22  1D03               	skipz
 12352  1C23  2C2B               	goto	u492lld
 12353  1C24  0AAD               	incf	___aomod@dividend+5,f
 12354  1C25  1D03               	skipz
 12355  1C26  2C2B               	goto	u492lld
 12356  1C27  0AAE               	incf	___aomod@dividend+6,f
 12357  1C28  1D03               	skipz
 12358  1C29  2C2B               	goto	u492lld
 12359  1C2A  0AAF               	incf	___aomod@dividend+7,f
 12360  1C2B                     u492lld:	
 12361  1C2B  01F3               	clrf	___aomod@sign
 12362  1C2C  0AF3               	incf	___aomod@sign,f
 12363  1C2D                     l4129:	
 12364  1C2D  3020               	movlw	low ___aomod@divisor
 12365  1C2E  0086               	movwf	6
 12366  1C2F  3000               	movlw	high ___aomod@divisor
 12367  1C30  0087               	movwf	7
 12368  1C31  3F47               	moviw [7]fsr1
 12369  1C32  00F1               	movwf	??___aomod
 12370  1C33  1FF1               	btfss	??___aomod,7
 12371  1C34  2C36               	goto	u4931
 12372  1C35  2C37               	goto	u4930
 12373  1C36                     u4931:	
 12374  1C36  2C56               	goto	l4133
 12375  1C37                     u4930:	
 12376  1C37                     l4131:	
 12377  1C37  0020               	movlb	0	; select bank0
 12378  1C38  09A0               	comf	___aomod@divisor,f
 12379  1C39  09A1               	comf	___aomod@divisor+1,f
 12380  1C3A  09A2               	comf	___aomod@divisor+2,f
 12381  1C3B  09A3               	comf	___aomod@divisor+3,f
 12382  1C3C  09A4               	comf	___aomod@divisor+4,f
 12383  1C3D  09A5               	comf	___aomod@divisor+5,f
 12384  1C3E  09A6               	comf	___aomod@divisor+6,f
 12385  1C3F  09A7               	comf	___aomod@divisor+7,f
 12386  1C40  0AA0               	incf	___aomod@divisor,f
 12387  1C41  1D03               	skipz
 12388  1C42  2C56               	goto	u494lld
 12389  1C43  0AA1               	incf	___aomod@divisor+1,f
 12390  1C44  1D03               	skipz
 12391  1C45  2C56               	goto	u494lld
 12392  1C46  0AA2               	incf	___aomod@divisor+2,f
 12393  1C47  1D03               	skipz
 12394  1C48  2C56               	goto	u494lld
 12395  1C49  0AA3               	incf	___aomod@divisor+3,f
 12396  1C4A  1D03               	skipz
 12397  1C4B  2C56               	goto	u494lld
 12398  1C4C  0AA4               	incf	___aomod@divisor+4,f
 12399  1C4D  1D03               	skipz
 12400  1C4E  2C56               	goto	u494lld
 12401  1C4F  0AA5               	incf	___aomod@divisor+5,f
 12402  1C50  1D03               	skipz
 12403  1C51  2C56               	goto	u494lld
 12404  1C52  0AA6               	incf	___aomod@divisor+6,f
 12405  1C53  1D03               	skipz
 12406  1C54  2C56               	goto	u494lld
 12407  1C55  0AA7               	incf	___aomod@divisor+7,f
 12408  1C56                     u494lld:	
 12409  1C56                     l4133:	
 12410  1C56  0020               	movlb	0	; select bank0
 12411  1C57  0820               	movf	___aomod@divisor,w
 12412  1C58  0421               	iorwf	___aomod@divisor+1,w
 12413  1C59  0422               	iorwf	___aomod@divisor+2,w
 12414  1C5A  0423               	iorwf	___aomod@divisor+3,w
 12415  1C5B  0424               	iorwf	___aomod@divisor+4,w
 12416  1C5C  0425               	iorwf	___aomod@divisor+5,w
 12417  1C5D  0426               	iorwf	___aomod@divisor+6,w
 12418  1C5E  0427               	iorwf	___aomod@divisor+7,w
 12419  1C5F  1903               	skipnz
 12420  1C60  2C62               	goto	u4951
 12421  1C61  2C63               	goto	u4950
 12422  1C62                     u4951:	
 12423  1C62  2CB6               	goto	l4149
 12424  1C63                     u4950:	
 12425  1C63                     l4135:	
 12426  1C63  01F2               	clrf	___aomod@counter
 12427  1C64  0AF2               	incf	___aomod@counter,f
 12428  1C65  2C72               	goto	l4141
 12429  1C66                     l4137:	
 12430  1C66  35A0               	lslf	___aomod@divisor,f
 12431  1C67  0DA1               	rlf	___aomod@divisor+1,f
 12432  1C68  0DA2               	rlf	___aomod@divisor+2,f
 12433  1C69  0DA3               	rlf	___aomod@divisor+3,f
 12434  1C6A  0DA4               	rlf	___aomod@divisor+4,f
 12435  1C6B  0DA5               	rlf	___aomod@divisor+5,f
 12436  1C6C  0DA6               	rlf	___aomod@divisor+6,f
 12437  1C6D  0DA7               	rlf	___aomod@divisor+7,f
 12438  1C6E                     l4139:	
 12439  1C6E  3001               	movlw	1
 12440  1C6F  00F1               	movwf	??___aomod
 12441  1C70  0871               	movf	??___aomod,w
 12442  1C71  07F2               	addwf	___aomod@counter,f
 12443  1C72                     l4141:	
 12444  1C72  1FA7               	btfss	___aomod@divisor+7,7
 12445  1C73  2C75               	goto	u4961
 12446  1C74  2C76               	goto	u4960
 12447  1C75                     u4961:	
 12448  1C75  2C66               	goto	l4137
 12449  1C76                     u4960:	
 12450  1C76                     l4143:	
 12451  1C76  0827               	movf	___aomod@divisor+7,w
 12452  1C77  022F               	subwf	___aomod@dividend+7,w
 12453  1C78  1D03               	skipz
 12454  1C79  2C94               	goto	u4975
 12455  1C7A  0826               	movf	___aomod@divisor+6,w
 12456  1C7B  022E               	subwf	___aomod@dividend+6,w
 12457  1C7C  1D03               	skipz
 12458  1C7D  2C94               	goto	u4975
 12459  1C7E  0825               	movf	___aomod@divisor+5,w
 12460  1C7F  022D               	subwf	___aomod@dividend+5,w
 12461  1C80  1D03               	skipz
 12462  1C81  2C94               	goto	u4975
 12463  1C82  0824               	movf	___aomod@divisor+4,w
 12464  1C83  022C               	subwf	___aomod@dividend+4,w
 12465  1C84  1D03               	skipz
 12466  1C85  2C94               	goto	u4975
 12467  1C86  0823               	movf	___aomod@divisor+3,w
 12468  1C87  022B               	subwf	___aomod@dividend+3,w
 12469  1C88  1D03               	skipz
 12470  1C89  2C94               	goto	u4975
 12471  1C8A  0822               	movf	___aomod@divisor+2,w
 12472  1C8B  022A               	subwf	___aomod@dividend+2,w
 12473  1C8C  1D03               	skipz
 12474  1C8D  2C94               	goto	u4975
 12475  1C8E  0821               	movf	___aomod@divisor+1,w
 12476  1C8F  0229               	subwf	___aomod@dividend+1,w
 12477  1C90  1D03               	skipz
 12478  1C91  2C94               	goto	u4975
 12479  1C92  0820               	movf	___aomod@divisor,w
 12480  1C93  0228               	subwf	___aomod@dividend,w
 12481  1C94                     u4975:	
 12482  1C94  1C03               	skipc
 12483  1C95  2C97               	goto	u4971
 12484  1C96  2C98               	goto	u4970
 12485  1C97                     u4971:	
 12486  1C97  2CA8               	goto	l4147
 12487  1C98                     u4970:	
 12488  1C98                     l4145:	
 12489  1C98  0820               	movf	___aomod@divisor,w
 12490  1C99  02A8               	subwf	___aomod@dividend,f
 12491  1C9A  0821               	movf	___aomod@divisor+1,w
 12492  1C9B  3BA9               	subwfb	___aomod@dividend+1,f
 12493  1C9C  0822               	movf	___aomod@divisor+2,w
 12494  1C9D  3BAA               	subwfb	___aomod@dividend+2,f
 12495  1C9E  0823               	movf	___aomod@divisor+3,w
 12496  1C9F  3BAB               	subwfb	___aomod@dividend+3,f
 12497  1CA0  0824               	movf	___aomod@divisor+4,w
 12498  1CA1  3BAC               	subwfb	___aomod@dividend+4,f
 12499  1CA2  0825               	movf	___aomod@divisor+5,w
 12500  1CA3  3BAD               	subwfb	___aomod@dividend+5,f
 12501  1CA4  0826               	movf	___aomod@divisor+6,w
 12502  1CA5  3BAE               	subwfb	___aomod@dividend+6,f
 12503  1CA6  0827               	movf	___aomod@divisor+7,w
 12504  1CA7  3BAF               	subwfb	___aomod@dividend+7,f
 12505  1CA8                     l4147:	
 12506  1CA8  36A7               	lsrf	___aomod@divisor+7,f
 12507  1CA9  0CA6               	rrf	___aomod@divisor+6,f
 12508  1CAA  0CA5               	rrf	___aomod@divisor+5,f
 12509  1CAB  0CA4               	rrf	___aomod@divisor+4,f
 12510  1CAC  0CA3               	rrf	___aomod@divisor+3,f
 12511  1CAD  0CA2               	rrf	___aomod@divisor+2,f
 12512  1CAE  0CA1               	rrf	___aomod@divisor+1,f
 12513  1CAF  0CA0               	rrf	___aomod@divisor,f
 12514  1CB0  3001               	movlw	1
 12515  1CB1  02F2               	subwf	___aomod@counter,f
 12516  1CB2  1D03               	btfss	3,2
 12517  1CB3  2CB5               	goto	u4981
 12518  1CB4  2CB6               	goto	u4980
 12519  1CB5                     u4981:	
 12520  1CB5  2C76               	goto	l4143
 12521  1CB6                     u4980:	
 12522  1CB6                     l4149:	
 12523  1CB6  0873               	movf	___aomod@sign,w
 12524  1CB7  1903               	btfsc	3,2
 12525  1CB8  2CBA               	goto	u4991
 12526  1CB9  2CBB               	goto	u4990
 12527  1CBA                     u4991:	
 12528  1CBA  2CD9               	goto	l909
 12529  1CBB                     u4990:	
 12530  1CBB                     l4151:	
 12531  1CBB  09A8               	comf	___aomod@dividend,f
 12532  1CBC  09A9               	comf	___aomod@dividend+1,f
 12533  1CBD  09AA               	comf	___aomod@dividend+2,f
 12534  1CBE  09AB               	comf	___aomod@dividend+3,f
 12535  1CBF  09AC               	comf	___aomod@dividend+4,f
 12536  1CC0  09AD               	comf	___aomod@dividend+5,f
 12537  1CC1  09AE               	comf	___aomod@dividend+6,f
 12538  1CC2  09AF               	comf	___aomod@dividend+7,f
 12539  1CC3  0AA8               	incf	___aomod@dividend,f
 12540  1CC4  1D03               	skipz
 12541  1CC5  2CD9               	goto	u500lld
 12542  1CC6  0AA9               	incf	___aomod@dividend+1,f
 12543  1CC7  1D03               	skipz
 12544  1CC8  2CD9               	goto	u500lld
 12545  1CC9  0AAA               	incf	___aomod@dividend+2,f
 12546  1CCA  1D03               	skipz
 12547  1CCB  2CD9               	goto	u500lld
 12548  1CCC  0AAB               	incf	___aomod@dividend+3,f
 12549  1CCD  1D03               	skipz
 12550  1CCE  2CD9               	goto	u500lld
 12551  1CCF  0AAC               	incf	___aomod@dividend+4,f
 12552  1CD0  1D03               	skipz
 12553  1CD1  2CD9               	goto	u500lld
 12554  1CD2  0AAD               	incf	___aomod@dividend+5,f
 12555  1CD3  1D03               	skipz
 12556  1CD4  2CD9               	goto	u500lld
 12557  1CD5  0AAE               	incf	___aomod@dividend+6,f
 12558  1CD6  1D03               	skipz
 12559  1CD7  2CD9               	goto	u500lld
 12560  1CD8  0AAF               	incf	___aomod@dividend+7,f
 12561  1CD9                     u500lld:	
 12562  1CD9                     l909:	
 12563  1CD9  0020               	movlb	0	; select bank0
 12564  1CDA  0828               	movf	___aomod@dividend,w
 12565  1CDB  00A0               	movwf	?___aomod
 12566  1CDC  0829               	movf	___aomod@dividend+1,w
 12567  1CDD  00A1               	movwf	?___aomod+1
 12568  1CDE  082A               	movf	___aomod@dividend+2,w
 12569  1CDF  00A2               	movwf	?___aomod+2
 12570  1CE0  082B               	movf	___aomod@dividend+3,w
 12571  1CE1  00A3               	movwf	?___aomod+3
 12572  1CE2  082C               	movf	___aomod@dividend+4,w
 12573  1CE3  00A4               	movwf	?___aomod+4
 12574  1CE4  082D               	movf	___aomod@dividend+5,w
 12575  1CE5  00A5               	movwf	?___aomod+5
 12576  1CE6  082E               	movf	___aomod@dividend+6,w
 12577  1CE7  00A6               	movwf	?___aomod+6
 12578  1CE8  082F               	movf	___aomod@dividend+7,w
 12579  1CE9  00A7               	movwf	?___aomod+7
 12580  1CEA                     l910:	
 12581  1CEA  0008               	return
 12582  1CEB                     __end_of___aomod:	
 12583                           
 12584                           	psect	text38
 12585  1DD6                     __ptext38:	
 12586 ;; *************** function ___aodiv *****************
 12587 ;; Defined at:
 12588 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  divisor         8    0[BANK0 ] long long 
 12591 ;;  dividend        8    8[BANK0 ] long long 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  quotient        8    4[COMMON] long long 
 12594 ;;  sign            1    3[COMMON] unsigned char 
 12595 ;;  counter         1    2[COMMON] unsigned char 
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  8    0[BANK0 ] long long 
 12598 ;; Registers used:
 12599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12600 ;; Tracked objects:
 12601 ;;		On entry : 0/0
 12602 ;;		On exit  : 0/0
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12605 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;Total ram usage:       27 bytes
 12610 ;; Hardware stack levels used:    1
 12611 ;; Hardware stack levels required when called:    1
 12612 ;; This function calls:
 12613 ;;		Nothing
 12614 ;; This function is called by:
 12615 ;;		_dtoa
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           
 12620                           ;psect for function ___aodiv
 12621  1DD6                     ___aodiv:	
 12622  1DD6                     l4085:	
 12623                           ;incstack = 0
 12624                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12625                           
 12626  1DD6  01F3               	clrf	___aodiv@sign
 12627  1DD7                     l4087:	
 12628  1DD7  3020               	movlw	low ___aodiv@divisor
 12629  1DD8  0086               	movwf	6
 12630  1DD9  3000               	movlw	high ___aodiv@divisor
 12631  1DDA  0087               	movwf	7
 12632  1DDB  3F47               	moviw [7]fsr1
 12633  1DDC  00F1               	movwf	??___aodiv
 12634  1DDD  1FF1               	btfss	??___aodiv,7
 12635  1DDE  2DE0               	goto	u4801
 12636  1DDF  2DE1               	goto	u4800
 12637  1DE0                     u4801:	
 12638  1DE0  2E02               	goto	l4091
 12639  1DE1                     u4800:	
 12640  1DE1                     l4089:	
 12641  1DE1  0020               	movlb	0	; select bank0
 12642  1DE2  09A0               	comf	___aodiv@divisor,f
 12643  1DE3  09A1               	comf	___aodiv@divisor+1,f
 12644  1DE4  09A2               	comf	___aodiv@divisor+2,f
 12645  1DE5  09A3               	comf	___aodiv@divisor+3,f
 12646  1DE6  09A4               	comf	___aodiv@divisor+4,f
 12647  1DE7  09A5               	comf	___aodiv@divisor+5,f
 12648  1DE8  09A6               	comf	___aodiv@divisor+6,f
 12649  1DE9  09A7               	comf	___aodiv@divisor+7,f
 12650  1DEA  0AA0               	incf	___aodiv@divisor,f
 12651  1DEB  1D03               	skipz
 12652  1DEC  2E00               	goto	u481lld
 12653  1DED  0AA1               	incf	___aodiv@divisor+1,f
 12654  1DEE  1D03               	skipz
 12655  1DEF  2E00               	goto	u481lld
 12656  1DF0  0AA2               	incf	___aodiv@divisor+2,f
 12657  1DF1  1D03               	skipz
 12658  1DF2  2E00               	goto	u481lld
 12659  1DF3  0AA3               	incf	___aodiv@divisor+3,f
 12660  1DF4  1D03               	skipz
 12661  1DF5  2E00               	goto	u481lld
 12662  1DF6  0AA4               	incf	___aodiv@divisor+4,f
 12663  1DF7  1D03               	skipz
 12664  1DF8  2E00               	goto	u481lld
 12665  1DF9  0AA5               	incf	___aodiv@divisor+5,f
 12666  1DFA  1D03               	skipz
 12667  1DFB  2E00               	goto	u481lld
 12668  1DFC  0AA6               	incf	___aodiv@divisor+6,f
 12669  1DFD  1D03               	skipz
 12670  1DFE  2E00               	goto	u481lld
 12671  1DFF  0AA7               	incf	___aodiv@divisor+7,f
 12672  1E00                     u481lld:	
 12673  1E00  01F3               	clrf	___aodiv@sign
 12674  1E01  0AF3               	incf	___aodiv@sign,f
 12675  1E02                     l4091:	
 12676  1E02  3028               	movlw	low ___aodiv@dividend
 12677  1E03  0086               	movwf	6
 12678  1E04  3000               	movlw	high ___aodiv@dividend
 12679  1E05  0087               	movwf	7
 12680  1E06  3F47               	moviw [7]fsr1
 12681  1E07  00F1               	movwf	??___aodiv
 12682  1E08  1FF1               	btfss	??___aodiv,7
 12683  1E09  2E0B               	goto	u4821
 12684  1E0A  2E0C               	goto	u4820
 12685  1E0B                     u4821:	
 12686  1E0B  2E2F               	goto	l4097
 12687  1E0C                     u4820:	
 12688  1E0C                     l4093:	
 12689  1E0C  0020               	movlb	0	; select bank0
 12690  1E0D  09A8               	comf	___aodiv@dividend,f
 12691  1E0E  09A9               	comf	___aodiv@dividend+1,f
 12692  1E0F  09AA               	comf	___aodiv@dividend+2,f
 12693  1E10  09AB               	comf	___aodiv@dividend+3,f
 12694  1E11  09AC               	comf	___aodiv@dividend+4,f
 12695  1E12  09AD               	comf	___aodiv@dividend+5,f
 12696  1E13  09AE               	comf	___aodiv@dividend+6,f
 12697  1E14  09AF               	comf	___aodiv@dividend+7,f
 12698  1E15  0AA8               	incf	___aodiv@dividend,f
 12699  1E16  1D03               	skipz
 12700  1E17  2E2B               	goto	u483lld
 12701  1E18  0AA9               	incf	___aodiv@dividend+1,f
 12702  1E19  1D03               	skipz
 12703  1E1A  2E2B               	goto	u483lld
 12704  1E1B  0AAA               	incf	___aodiv@dividend+2,f
 12705  1E1C  1D03               	skipz
 12706  1E1D  2E2B               	goto	u483lld
 12707  1E1E  0AAB               	incf	___aodiv@dividend+3,f
 12708  1E1F  1D03               	skipz
 12709  1E20  2E2B               	goto	u483lld
 12710  1E21  0AAC               	incf	___aodiv@dividend+4,f
 12711  1E22  1D03               	skipz
 12712  1E23  2E2B               	goto	u483lld
 12713  1E24  0AAD               	incf	___aodiv@dividend+5,f
 12714  1E25  1D03               	skipz
 12715  1E26  2E2B               	goto	u483lld
 12716  1E27  0AAE               	incf	___aodiv@dividend+6,f
 12717  1E28  1D03               	skipz
 12718  1E29  2E2B               	goto	u483lld
 12719  1E2A  0AAF               	incf	___aodiv@dividend+7,f
 12720  1E2B                     u483lld:	
 12721  1E2B                     l4095:	
 12722  1E2B  3001               	movlw	1
 12723  1E2C  00F1               	movwf	??___aodiv
 12724  1E2D  0871               	movf	??___aodiv,w
 12725  1E2E  06F3               	xorwf	___aodiv@sign,f
 12726  1E2F                     l4097:	
 12727  1E2F  3074               	movlw	low ___aodiv@quotient
 12728  1E30  0086               	movwf	6
 12729  1E31  3000               	movlw	high ___aodiv@quotient
 12730  1E32  0087               	movwf	7
 12731  1E33  3008               	movlw	8
 12732  1E34  00F1               	movwf	??___aodiv
 12733  1E35  3000               	movlw	0
 12734  1E36                     u4840:	
 12735  1E36  001E               	movwi fsr1++
 12736  1E37  0BF1               	decfsz	??___aodiv,f
 12737  1E38  2E36               	goto	u4840
 12738  1E39                     l4099:	
 12739  1E39  0020               	movlb	0	; select bank0
 12740  1E3A  0820               	movf	___aodiv@divisor,w
 12741  1E3B  0421               	iorwf	___aodiv@divisor+1,w
 12742  1E3C  0422               	iorwf	___aodiv@divisor+2,w
 12743  1E3D  0423               	iorwf	___aodiv@divisor+3,w
 12744  1E3E  0424               	iorwf	___aodiv@divisor+4,w
 12745  1E3F  0425               	iorwf	___aodiv@divisor+5,w
 12746  1E40  0426               	iorwf	___aodiv@divisor+6,w
 12747  1E41  0427               	iorwf	___aodiv@divisor+7,w
 12748  1E42  1903               	skipnz
 12749  1E43  2E45               	goto	u4851
 12750  1E44  2E46               	goto	u4850
 12751  1E45                     u4851:	
 12752  1E45  2EA2               	goto	l4119
 12753  1E46                     u4850:	
 12754  1E46                     l4101:	
 12755  1E46  01F2               	clrf	___aodiv@counter
 12756  1E47  0AF2               	incf	___aodiv@counter,f
 12757  1E48  2E55               	goto	l4107
 12758  1E49                     l4103:	
 12759  1E49  35A0               	lslf	___aodiv@divisor,f
 12760  1E4A  0DA1               	rlf	___aodiv@divisor+1,f
 12761  1E4B  0DA2               	rlf	___aodiv@divisor+2,f
 12762  1E4C  0DA3               	rlf	___aodiv@divisor+3,f
 12763  1E4D  0DA4               	rlf	___aodiv@divisor+4,f
 12764  1E4E  0DA5               	rlf	___aodiv@divisor+5,f
 12765  1E4F  0DA6               	rlf	___aodiv@divisor+6,f
 12766  1E50  0DA7               	rlf	___aodiv@divisor+7,f
 12767  1E51                     l4105:	
 12768  1E51  3001               	movlw	1
 12769  1E52  00F1               	movwf	??___aodiv
 12770  1E53  0871               	movf	??___aodiv,w
 12771  1E54  07F2               	addwf	___aodiv@counter,f
 12772  1E55                     l4107:	
 12773  1E55  1FA7               	btfss	___aodiv@divisor+7,7
 12774  1E56  2E58               	goto	u4861
 12775  1E57  2E59               	goto	u4860
 12776  1E58                     u4861:	
 12777  1E58  2E49               	goto	l4103
 12778  1E59                     u4860:	
 12779  1E59                     l4109:	
 12780  1E59  35F4               	lslf	___aodiv@quotient,f
 12781  1E5A  0DF5               	rlf	___aodiv@quotient+1,f
 12782  1E5B  0DF6               	rlf	___aodiv@quotient+2,f
 12783  1E5C  0DF7               	rlf	___aodiv@quotient+3,f
 12784  1E5D  0DF8               	rlf	___aodiv@quotient+4,f
 12785  1E5E  0DF9               	rlf	___aodiv@quotient+5,f
 12786  1E5F  0DFA               	rlf	___aodiv@quotient+6,f
 12787  1E60  0DFB               	rlf	___aodiv@quotient+7,f
 12788  1E61                     l4111:	
 12789  1E61  0827               	movf	___aodiv@divisor+7,w
 12790  1E62  022F               	subwf	___aodiv@dividend+7,w
 12791  1E63  1D03               	skipz
 12792  1E64  2E7F               	goto	u4875
 12793  1E65  0826               	movf	___aodiv@divisor+6,w
 12794  1E66  022E               	subwf	___aodiv@dividend+6,w
 12795  1E67  1D03               	skipz
 12796  1E68  2E7F               	goto	u4875
 12797  1E69  0825               	movf	___aodiv@divisor+5,w
 12798  1E6A  022D               	subwf	___aodiv@dividend+5,w
 12799  1E6B  1D03               	skipz
 12800  1E6C  2E7F               	goto	u4875
 12801  1E6D  0824               	movf	___aodiv@divisor+4,w
 12802  1E6E  022C               	subwf	___aodiv@dividend+4,w
 12803  1E6F  1D03               	skipz
 12804  1E70  2E7F               	goto	u4875
 12805  1E71  0823               	movf	___aodiv@divisor+3,w
 12806  1E72  022B               	subwf	___aodiv@dividend+3,w
 12807  1E73  1D03               	skipz
 12808  1E74  2E7F               	goto	u4875
 12809  1E75  0822               	movf	___aodiv@divisor+2,w
 12810  1E76  022A               	subwf	___aodiv@dividend+2,w
 12811  1E77  1D03               	skipz
 12812  1E78  2E7F               	goto	u4875
 12813  1E79  0821               	movf	___aodiv@divisor+1,w
 12814  1E7A  0229               	subwf	___aodiv@dividend+1,w
 12815  1E7B  1D03               	skipz
 12816  1E7C  2E7F               	goto	u4875
 12817  1E7D  0820               	movf	___aodiv@divisor,w
 12818  1E7E  0228               	subwf	___aodiv@dividend,w
 12819  1E7F                     u4875:	
 12820  1E7F  1C03               	skipc
 12821  1E80  2E82               	goto	u4871
 12822  1E81  2E83               	goto	u4870
 12823  1E82                     u4871:	
 12824  1E82  2E94               	goto	l4117
 12825  1E83                     u4870:	
 12826  1E83                     l4113:	
 12827  1E83  0820               	movf	___aodiv@divisor,w
 12828  1E84  02A8               	subwf	___aodiv@dividend,f
 12829  1E85  0821               	movf	___aodiv@divisor+1,w
 12830  1E86  3BA9               	subwfb	___aodiv@dividend+1,f
 12831  1E87  0822               	movf	___aodiv@divisor+2,w
 12832  1E88  3BAA               	subwfb	___aodiv@dividend+2,f
 12833  1E89  0823               	movf	___aodiv@divisor+3,w
 12834  1E8A  3BAB               	subwfb	___aodiv@dividend+3,f
 12835  1E8B  0824               	movf	___aodiv@divisor+4,w
 12836  1E8C  3BAC               	subwfb	___aodiv@dividend+4,f
 12837  1E8D  0825               	movf	___aodiv@divisor+5,w
 12838  1E8E  3BAD               	subwfb	___aodiv@dividend+5,f
 12839  1E8F  0826               	movf	___aodiv@divisor+6,w
 12840  1E90  3BAE               	subwfb	___aodiv@dividend+6,f
 12841  1E91  0827               	movf	___aodiv@divisor+7,w
 12842  1E92  3BAF               	subwfb	___aodiv@dividend+7,f
 12843  1E93                     l4115:	
 12844  1E93  1474               	bsf	___aodiv@quotient,0
 12845  1E94                     l4117:	
 12846  1E94  36A7               	lsrf	___aodiv@divisor+7,f
 12847  1E95  0CA6               	rrf	___aodiv@divisor+6,f
 12848  1E96  0CA5               	rrf	___aodiv@divisor+5,f
 12849  1E97  0CA4               	rrf	___aodiv@divisor+4,f
 12850  1E98  0CA3               	rrf	___aodiv@divisor+3,f
 12851  1E99  0CA2               	rrf	___aodiv@divisor+2,f
 12852  1E9A  0CA1               	rrf	___aodiv@divisor+1,f
 12853  1E9B  0CA0               	rrf	___aodiv@divisor,f
 12854  1E9C  3001               	movlw	1
 12855  1E9D  02F2               	subwf	___aodiv@counter,f
 12856  1E9E  1D03               	btfss	3,2
 12857  1E9F  2EA1               	goto	u4881
 12858  1EA0  2EA2               	goto	u4880
 12859  1EA1                     u4881:	
 12860  1EA1  2E59               	goto	l4109
 12861  1EA2                     u4880:	
 12862  1EA2                     l4119:	
 12863  1EA2  0873               	movf	___aodiv@sign,w
 12864  1EA3  1903               	btfsc	3,2
 12865  1EA4  2EA6               	goto	u4891
 12866  1EA5  2EA7               	goto	u4890
 12867  1EA6                     u4891:	
 12868  1EA6  2EC5               	goto	l896
 12869  1EA7                     u4890:	
 12870  1EA7                     l4121:	
 12871  1EA7  09F4               	comf	___aodiv@quotient,f
 12872  1EA8  09F5               	comf	___aodiv@quotient+1,f
 12873  1EA9  09F6               	comf	___aodiv@quotient+2,f
 12874  1EAA  09F7               	comf	___aodiv@quotient+3,f
 12875  1EAB  09F8               	comf	___aodiv@quotient+4,f
 12876  1EAC  09F9               	comf	___aodiv@quotient+5,f
 12877  1EAD  09FA               	comf	___aodiv@quotient+6,f
 12878  1EAE  09FB               	comf	___aodiv@quotient+7,f
 12879  1EAF  0AF4               	incf	___aodiv@quotient,f
 12880  1EB0  1D03               	skipz
 12881  1EB1  2EC5               	goto	u490lld
 12882  1EB2  0AF5               	incf	___aodiv@quotient+1,f
 12883  1EB3  1D03               	skipz
 12884  1EB4  2EC5               	goto	u490lld
 12885  1EB5  0AF6               	incf	___aodiv@quotient+2,f
 12886  1EB6  1D03               	skipz
 12887  1EB7  2EC5               	goto	u490lld
 12888  1EB8  0AF7               	incf	___aodiv@quotient+3,f
 12889  1EB9  1D03               	skipz
 12890  1EBA  2EC5               	goto	u490lld
 12891  1EBB  0AF8               	incf	___aodiv@quotient+4,f
 12892  1EBC  1D03               	skipz
 12893  1EBD  2EC5               	goto	u490lld
 12894  1EBE  0AF9               	incf	___aodiv@quotient+5,f
 12895  1EBF  1D03               	skipz
 12896  1EC0  2EC5               	goto	u490lld
 12897  1EC1  0AFA               	incf	___aodiv@quotient+6,f
 12898  1EC2  1D03               	skipz
 12899  1EC3  2EC5               	goto	u490lld
 12900  1EC4  0AFB               	incf	___aodiv@quotient+7,f
 12901  1EC5                     u490lld:	
 12902  1EC5                     l896:	
 12903  1EC5  0874               	movf	___aodiv@quotient,w
 12904  1EC6  0020               	movlb	0	; select bank0
 12905  1EC7  00A0               	movwf	?___aodiv
 12906  1EC8  0875               	movf	___aodiv@quotient+1,w
 12907  1EC9  00A1               	movwf	?___aodiv+1
 12908  1ECA  0876               	movf	___aodiv@quotient+2,w
 12909  1ECB  00A2               	movwf	?___aodiv+2
 12910  1ECC  0877               	movf	___aodiv@quotient+3,w
 12911  1ECD  00A3               	movwf	?___aodiv+3
 12912  1ECE  0878               	movf	___aodiv@quotient+4,w
 12913  1ECF  00A4               	movwf	?___aodiv+4
 12914  1ED0  0879               	movf	___aodiv@quotient+5,w
 12915  1ED1  00A5               	movwf	?___aodiv+5
 12916  1ED2  087A               	movf	___aodiv@quotient+6,w
 12917  1ED3  00A6               	movwf	?___aodiv+6
 12918  1ED4  087B               	movf	___aodiv@quotient+7,w
 12919  1ED5  00A7               	movwf	?___aodiv+7
 12920  1ED6                     l897:	
 12921  1ED6  0008               	return
 12922  1ED7                     __end_of___aodiv:	
 12923                           
 12924                           	psect	text39
 12925  1B52                     __ptext39:	
 12926 ;; *************** function _atoi *****************
 12927 ;; Defined at:
 12928 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;  s               2    7[COMMON] PTR const unsigned char 
 12931 ;;		 -> STR_2(5), STR_1(3), 
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;  n               2   11[BANK0 ] int 
 12934 ;;  neg             2    4[BANK0 ] int 
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  2    7[COMMON] int 
 12937 ;; Registers used:
 12938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:       15 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    2
 12951 ;; This function calls:
 12952 ;;		___wmul
 12953 ;;		_isdigit
 12954 ;;		_isspace
 12955 ;; This function is called by:
 12956 ;;		_vfpfcnvrt
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960                           
 12961                           ;psect for function _atoi
 12962  1B52                     _atoi:	
 12963  1B52                     l6455:	
 12964                           ;incstack = 0
 12965                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12966                           
 12967  1B52  0020               	movlb	0	; select bank0
 12968  1B53  01AB               	clrf	atoi@n
 12969  1B54  01AC               	clrf	atoi@n+1
 12970  1B55  01A4               	clrf	atoi@neg
 12971  1B56  01A5               	clrf	atoi@neg+1
 12972  1B57  2B5C               	goto	l6459
 12973  1B58                     l6457:	
 12974  1B58  3001               	movlw	1
 12975  1B59  07F7               	addwf	atoi@s,f
 12976  1B5A  3000               	movlw	0
 12977  1B5B  3DF8               	addwfc	atoi@s+1,f
 12978  1B5C                     l6459:	
 12979  1B5C  01AA               	clrf	_atoi$892
 12980  1B5D  0AAA               	incf	_atoi$892,f
 12981  1B5E                     l6461:	
 12982  1B5E  0877               	movf	atoi@s,w
 12983  1B5F  0084               	movwf	4
 12984  1B60  0878               	movf	atoi@s+1,w
 12985  1B61  0085               	movwf	5
 12986  1B62  0012               	moviw fsr0++
 12987  1B63  3A20               	xorlw	32
 12988  1B64  1903               	btfsc	3,2
 12989  1B65  2B67               	goto	u8641
 12990  1B66  2B68               	goto	u8640
 12991  1B67                     u8641:	
 12992  1B67  2B7D               	goto	l6467
 12993  1B68                     u8640:	
 12994  1B68                     l6463:	
 12995  1B68  0877               	movf	atoi@s,w
 12996  1B69  0084               	movwf	4
 12997  1B6A  0878               	movf	atoi@s+1,w
 12998  1B6B  0085               	movwf	5
 12999  1B6C  0800               	movf	0,w	;code access
 13000  1B6D  3EF7               	addlw	247
 13001  1B6E  00A0               	movwf	??_atoi
 13002  1B6F  30FF               	movlw	255
 13003  1B70  1803               	skipnc
 13004  1B71  3000               	movlw	0
 13005  1B72  00A1               	movwf	??_atoi+1
 13006  1B73  3000               	movlw	0
 13007  1B74  0221               	subwf	??_atoi+1,w
 13008  1B75  3005               	movlw	5
 13009  1B76  1903               	skipnz
 13010  1B77  0220               	subwf	??_atoi,w
 13011  1B78  1C03               	skipc
 13012  1B79  2B7B               	goto	u8651
 13013  1B7A  2B7C               	goto	u8650
 13014  1B7B                     u8651:	
 13015  1B7B  2B7D               	goto	l6467
 13016  1B7C                     u8650:	
 13017  1B7C                     l6465:	
 13018  1B7C  01AA               	clrf	_atoi$892
 13019  1B7D                     l6467:	
 13020  1B7D  082A               	movf	_atoi$892,w
 13021  1B7E  00A0               	movwf	??_atoi
 13022  1B7F  01A1               	clrf	??_atoi+1
 13023  1B80  0820               	movf	??_atoi,w
 13024  1B81  00A6               	movwf	_atoi$891
 13025  1B82  0821               	movf	??_atoi+1,w
 13026  1B83  00A7               	movwf	_atoi$891+1
 13027  1B84                     l6471:	
 13028  1B84  0826               	movf	_atoi$891,w
 13029  1B85  0427               	iorwf	_atoi$891+1,w
 13030  1B86  1D03               	btfss	3,2
 13031  1B87  2B89               	goto	u8661
 13032  1B88  2B8A               	goto	u8660
 13033  1B89                     u8661:	
 13034  1B89  2B58               	goto	l6457
 13035  1B8A                     u8660:	
 13036  1B8A  2B94               	goto	l6475
 13037  1B8B                     l6473:	
 13038  1B8B  3001               	movlw	1
 13039  1B8C  00A4               	movwf	atoi@neg
 13040  1B8D  3000               	movlw	0
 13041  1B8E  00A5               	movwf	atoi@neg+1
 13042  1B8F                     l1282:	
 13043  1B8F  3001               	movlw	1
 13044  1B90  07F7               	addwf	atoi@s,f
 13045  1B91  3000               	movlw	0
 13046  1B92  3DF8               	addwfc	atoi@s+1,f
 13047  1B93  2BC8               	goto	l6481
 13048  1B94                     l6475:	
 13049  1B94  0877               	movf	atoi@s,w
 13050  1B95  0084               	movwf	4
 13051  1B96  0878               	movf	atoi@s+1,w
 13052  1B97  0085               	movwf	5
 13053  1B98  0800               	movf	0,w	;code access
 13054  1B99  00A0               	movwf	??_atoi
 13055  1B9A  01A1               	clrf	??_atoi+1
 13056                           
 13057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13058                           ; Switch size 1, requested type "simple"
 13059                           ; Number of cases is 1, Range of values is 0 to 0
 13060                           ; switch strategies available:
 13061                           ; Name         Instructions Cycles
 13062                           ; simple_byte            4     3 (average)
 13063                           ; direct_byte            8     6 (fixed)
 13064                           ; jumptable            260     6 (fixed)
 13065                           ;	Chosen strategy is simple_byte
 13066  1B9B  0821               	movf	??_atoi+1,w
 13067  1B9C  3A00               	xorlw	0	; case 0
 13068  1B9D  1903               	skipnz
 13069  1B9E  2BA0               	goto	l7051
 13070  1B9F  2BC8               	goto	l6481
 13071  1BA0                     l7051:	
 13072                           
 13073                           ; Switch size 1, requested type "simple"
 13074                           ; Number of cases is 2, Range of values is 43 to 45
 13075                           ; switch strategies available:
 13076                           ; Name         Instructions Cycles
 13077                           ; simple_byte            7     4 (average)
 13078                           ; direct_byte           15     9 (fixed)
 13079                           ; jumptable            263     9 (fixed)
 13080                           ;	Chosen strategy is simple_byte
 13081  1BA0  0820               	movf	??_atoi,w
 13082  1BA1  3A2B               	xorlw	43	; case 43
 13083  1BA2  1903               	skipnz
 13084  1BA3  2B8F               	goto	l1282
 13085  1BA4  3A06               	xorlw	6	; case 45
 13086  1BA5  1903               	skipnz
 13087  1BA6  2B8B               	goto	l6473
 13088  1BA7  2BC8               	goto	l6481
 13089  1BA8                     l6477:	
 13090  1BA8  0877               	movf	atoi@s,w
 13091  1BA9  0084               	movwf	4
 13092  1BAA  0878               	movf	atoi@s+1,w
 13093  1BAB  0085               	movwf	5
 13094  1BAC  0800               	movf	0,w	;code access
 13095  1BAD  00A0               	movwf	??_atoi
 13096  1BAE  082C               	movf	atoi@n+1,w
 13097  1BAF  00F2               	movwf	___wmul@multiplier+1
 13098  1BB0  082B               	movf	atoi@n,w
 13099  1BB1  00F1               	movwf	___wmul@multiplier
 13100  1BB2  300A               	movlw	10
 13101  1BB3  00F3               	movwf	___wmul@multiplicand
 13102  1BB4  3000               	movlw	0
 13103  1BB5  00F4               	movwf	___wmul@multiplicand+1
 13104  1BB6  31A1  21CC  319B   	fcall	___wmul
 13105  1BB9  0872               	movf	?___wmul+1,w
 13106  1BBA  0020               	movlb	0	; select bank0
 13107  1BBB  00A2               	movwf	??_atoi+2
 13108  1BBC  0820               	movf	??_atoi,w
 13109  1BBD  0271               	subwf	?___wmul,w
 13110  1BBE  00A1               	movwf	??_atoi+1
 13111  1BBF  1C03               	skipc
 13112  1BC0  03A2               	decf	??_atoi+2,f
 13113  1BC1  0821               	movf	??_atoi+1,w
 13114  1BC2  3E30               	addlw	48
 13115  1BC3  00AB               	movwf	atoi@n
 13116  1BC4  3000               	movlw	0
 13117  1BC5  3D22               	addwfc	??_atoi+2,w
 13118  1BC6  00AC               	movwf	atoi@n+1
 13119  1BC7  2B8F               	goto	l1282
 13120  1BC8                     l6481:	
 13121  1BC8  0877               	movf	atoi@s,w
 13122  1BC9  0084               	movwf	4
 13123  1BCA  0878               	movf	atoi@s+1,w
 13124  1BCB  0085               	movwf	5
 13125  1BCC  0800               	movf	0,w	;code access
 13126  1BCD  3ED0               	addlw	208
 13127  1BCE  00A0               	movwf	??_atoi
 13128  1BCF  30FF               	movlw	255
 13129  1BD0  1803               	skipnc
 13130  1BD1  3000               	movlw	0
 13131  1BD2  00A1               	movwf	??_atoi+1
 13132  1BD3  3000               	movlw	0
 13133  1BD4  0221               	subwf	??_atoi+1,w
 13134  1BD5  300A               	movlw	10
 13135  1BD6  1903               	skipnz
 13136  1BD7  0220               	subwf	??_atoi,w
 13137  1BD8  1C03               	skipc
 13138  1BD9  2BDB               	goto	u8671
 13139  1BDA  2BDD               	goto	u8670
 13140  1BDB                     u8671:	
 13141  1BDB  3001               	movlw	1
 13142  1BDC  2BDE               	goto	u8680
 13143  1BDD                     u8670:	
 13144  1BDD  3000               	movlw	0
 13145  1BDE                     u8680:	
 13146  1BDE  00A2               	movwf	??_atoi+2
 13147  1BDF  01A3               	clrf	??_atoi+3
 13148  1BE0  0822               	movf	??_atoi+2,w
 13149  1BE1  00A8               	movwf	_atoi$893
 13150  1BE2  0823               	movf	??_atoi+3,w
 13151  1BE3  00A9               	movwf	_atoi$893+1
 13152  1BE4                     l6485:	
 13153  1BE4  0828               	movf	_atoi$893,w
 13154  1BE5  0429               	iorwf	_atoi$893+1,w
 13155  1BE6  1D03               	btfss	3,2
 13156  1BE7  2BE9               	goto	u8691
 13157  1BE8  2BEA               	goto	u8690
 13158  1BE9                     u8691:	
 13159  1BE9  2BA8               	goto	l6477
 13160  1BEA                     u8690:	
 13161  1BEA                     l6487:	
 13162  1BEA  0824               	movf	atoi@neg,w
 13163  1BEB  0425               	iorwf	atoi@neg+1,w
 13164  1BEC  1D03               	btfss	3,2
 13165  1BED  2BEF               	goto	u8701
 13166  1BEE  2BF0               	goto	u8700
 13167  1BEF                     u8701:	
 13168  1BEF  2BFC               	goto	l6491
 13169  1BF0                     u8700:	
 13170  1BF0                     l6489:	
 13171  1BF0  092B               	comf	atoi@n,w
 13172  1BF1  00A0               	movwf	??_atoi
 13173  1BF2  092C               	comf	atoi@n+1,w
 13174  1BF3  00A1               	movwf	??_atoi+1
 13175  1BF4  0AA0               	incf	??_atoi,f
 13176  1BF5  1903               	skipnz
 13177  1BF6  0AA1               	incf	??_atoi+1,f
 13178  1BF7  0820               	movf	??_atoi,w
 13179  1BF8  00F7               	movwf	?_atoi
 13180  1BF9  0821               	movf	??_atoi+1,w
 13181  1BFA  00F8               	movwf	?_atoi+1
 13182  1BFB  2C00               	goto	l1295
 13183  1BFC                     l6491:	
 13184  1BFC  082C               	movf	atoi@n+1,w
 13185  1BFD  00F8               	movwf	?_atoi+1
 13186  1BFE  082B               	movf	atoi@n,w
 13187  1BFF  00F7               	movwf	?_atoi
 13188  1C00                     l1295:	
 13189  1C00  0008               	return
 13190  1C01                     __end_of_atoi:	
 13191                           
 13192                           	psect	text40
 13193  21EB                     __ptext40:	
 13194 ;; *************** function _isspace *****************
 13195 ;; Defined at:
 13196 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  c               2    1[COMMON] int 
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  2    1[COMMON] int 
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;Total ram usage:        5 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    1
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_atoi
 13221 ;; This function uses a non-reentrant model
 13222 ;;
 13223                           
 13224                           
 13225                           ;psect for function _isspace
 13226  21EB                     _isspace:	
 13227  21EB                     l4597:	
 13228                           ;incstack = 0
 13229                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13230                           
 13231  21EB  01F5               	clrf	_isspace$933
 13232  21EC  0AF5               	incf	_isspace$933,f
 13233  21ED                     l4599:	
 13234  21ED  3020               	movlw	32
 13235  21EE  0671               	xorwf	isspace@c,w
 13236  21EF  0472               	iorwf	isspace@c+1,w
 13237  21F0  1903               	btfsc	3,2
 13238  21F1  29F3               	goto	u5941
 13239  21F2  29F4               	goto	u5940
 13240  21F3                     u5941:	
 13241  21F3  2A04               	goto	l4605
 13242  21F4                     u5940:	
 13243  21F4                     l4601:	
 13244  21F4  0871               	movf	isspace@c,w
 13245  21F5  3EF7               	addlw	247
 13246  21F6  00F3               	movwf	??_isspace
 13247  21F7  30FF               	movlw	255
 13248  21F8  3D72               	addwfc	isspace@c+1,w
 13249  21F9  00F4               	movwf	??_isspace+1
 13250  21FA  3000               	movlw	0
 13251  21FB  0274               	subwf	??_isspace+1,w
 13252  21FC  3005               	movlw	5
 13253  21FD  1903               	skipnz
 13254  21FE  0273               	subwf	??_isspace,w
 13255  21FF  1C03               	skipc
 13256  2200  2A02               	goto	u5951
 13257  2201  2A03               	goto	u5950
 13258  2202                     u5951:	
 13259  2202  2A04               	goto	l4605
 13260  2203                     u5950:	
 13261  2203                     l4603:	
 13262  2203  01F5               	clrf	_isspace$933
 13263  2204                     l4605:	
 13264  2204  0875               	movf	_isspace$933,w
 13265  2205  00F3               	movwf	??_isspace
 13266  2206  01F4               	clrf	??_isspace+1
 13267  2207  0873               	movf	??_isspace,w
 13268  2208  00F1               	movwf	?_isspace
 13269  2209  0874               	movf	??_isspace+1,w
 13270  220A  00F2               	movwf	?_isspace+1
 13271  220B                     l1324:	
 13272  220B  0008               	return
 13273  220C                     __end_of_isspace:	
 13274                           
 13275                           	psect	text41
 13276  2132                     __ptext41:	
 13277 ;; *************** function _isdigit *****************
 13278 ;; Defined at:
 13279 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  c               2    1[COMMON] int 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  2    1[COMMON] int 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2, status,0
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13295 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13297 ;;Total ram usage:        6 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    1
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_vfpfcnvrt
 13304 ;;		_atoi
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           
 13309                           ;psect for function _isdigit
 13310  2132                     _isdigit:	
 13311  2132                     l4067:	
 13312                           ;incstack = 0
 13313                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13314                           
 13315  2132  0871               	movf	isdigit@c,w
 13316  2133  3ED0               	addlw	208
 13317  2134  00F3               	movwf	??_isdigit
 13318  2135  30FF               	movlw	255
 13319  2136  3D72               	addwfc	isdigit@c+1,w
 13320  2137  00F4               	movwf	??_isdigit+1
 13321  2138  3000               	movlw	0
 13322  2139  0274               	subwf	??_isdigit+1,w
 13323  213A  300A               	movlw	10
 13324  213B  1903               	skipnz
 13325  213C  0273               	subwf	??_isdigit,w
 13326  213D  1C03               	skipc
 13327  213E  2940               	goto	u4741
 13328  213F  2942               	goto	u4740
 13329  2140                     u4741:	
 13330  2140  3001               	movlw	1
 13331  2141  2943               	goto	u4750
 13332  2142                     u4740:	
 13333  2142  3000               	movlw	0
 13334  2143                     u4750:	
 13335  2143  00F5               	movwf	??_isdigit+2
 13336  2144  01F6               	clrf	??_isdigit+3
 13337  2145  0875               	movf	??_isdigit+2,w
 13338  2146  00F1               	movwf	?_isdigit
 13339  2147  0876               	movf	??_isdigit+3,w
 13340  2148  00F2               	movwf	?_isdigit+1
 13341  2149                     l1316:	
 13342  2149  0008               	return
 13343  214A                     __end_of_isdigit:	
 13344                           
 13345                           	psect	text42
 13346  21CC                     __ptext42:	
 13347 ;; *************** function ___wmul *****************
 13348 ;; Defined at:
 13349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 13350 ;; Parameters:    Size  Location     Type
 13351 ;;  multiplier      2    1[COMMON] unsigned int 
 13352 ;;  multiplicand    2    3[COMMON] unsigned int 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;  product         2    5[COMMON] unsigned int 
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  2    1[COMMON] unsigned int 
 13357 ;; Registers used:
 13358 ;;		wreg, status,2, status,0
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;Total ram usage:        6 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:    1
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_pwm_con
 13375 ;;		_atoi
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           
 13380                           ;psect for function ___wmul
 13381  21CC                     ___wmul:	
 13382  21CC                     l4071:	
 13383                           ;incstack = 0
 13384                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13385                           
 13386  21CC  01F5               	clrf	___wmul@product
 13387  21CD  01F6               	clrf	___wmul@product+1
 13388  21CE                     l4073:	
 13389  21CE  1C71               	btfss	___wmul@multiplier,0
 13390  21CF  29D1               	goto	u4761
 13391  21D0  29D2               	goto	u4760
 13392  21D1                     u4761:	
 13393  21D1  29D6               	goto	l796
 13394  21D2                     u4760:	
 13395  21D2                     l4075:	
 13396  21D2  0873               	movf	___wmul@multiplicand,w
 13397  21D3  07F5               	addwf	___wmul@product,f
 13398  21D4  0874               	movf	___wmul@multiplicand+1,w
 13399  21D5  3DF6               	addwfc	___wmul@product+1,f
 13400  21D6                     l796:	
 13401  21D6  3001               	movlw	1
 13402  21D7                     u4775:	
 13403  21D7  35F3               	lslf	___wmul@multiplicand,f
 13404  21D8  0DF4               	rlf	___wmul@multiplicand+1,f
 13405  21D9  0B89               	decfsz	9,f
 13406  21DA  29D7               	goto	u4775
 13407  21DB                     l4077:	
 13408  21DB  3001               	movlw	1
 13409  21DC                     u4785:	
 13410  21DC  36F2               	lsrf	___wmul@multiplier+1,f
 13411  21DD  0CF1               	rrf	___wmul@multiplier,f
 13412  21DE  0B89               	decfsz	9,f
 13413  21DF  29DC               	goto	u4785
 13414  21E0                     l4079:	
 13415  21E0  0871               	movf	___wmul@multiplier,w
 13416  21E1  0472               	iorwf	___wmul@multiplier+1,w
 13417  21E2  1D03               	btfss	3,2
 13418  21E3  29E5               	goto	u4791
 13419  21E4  29E6               	goto	u4790
 13420  21E5                     u4791:	
 13421  21E5  29CE               	goto	l4073
 13422  21E6                     u4790:	
 13423  21E6                     l4081:	
 13424  21E6  0876               	movf	___wmul@product+1,w
 13425  21E7  00F2               	movwf	?___wmul+1
 13426  21E8  0875               	movf	___wmul@product,w
 13427  21E9  00F1               	movwf	?___wmul
 13428  21EA                     l798:	
 13429  21EA  0008               	return
 13430  21EB                     __end_of___wmul:	
 13431                           
 13432                           	psect	text43
 13433  2276                     __ptext43:	
 13434 ;; *************** function _fabsf *****************
 13435 ;; Defined at:
 13436 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  x               4    8[BANK1 ] float 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  u               4   12[BANK1 ] struct .
 13441 ;; Return value:  Size  Location     Type
 13442 ;;                  4    8[BANK1 ] float 
 13443 ;; Registers used:
 13444 ;;		wreg
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13450 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;Total ram usage:        8 bytes
 13455 ;; Hardware stack levels used:    1
 13456 ;; Hardware stack levels required when called:    1
 13457 ;; This function calls:
 13458 ;;		Nothing
 13459 ;; This function is called by:
 13460 ;;		_lcd_update
 13461 ;; This function uses a non-reentrant model
 13462 ;;
 13463                           
 13464                           
 13465                           ;psect for function _fabsf
 13466  2276                     _fabsf:	
 13467  2276                     l5215:	
 13468                           ;incstack = 0
 13469                           ; Regs used in _fabsf: [wreg]
 13470                           
 13471  2276  0023               	movlb	3	; select bank3
 13472  2277  0827               	movf	(fabsf@F463+3)^(0+384),w
 13473  2278  0021               	movlb	1	; select bank1
 13474  2279  00AF               	movwf	(fabsf@u+3)^(0+128)
 13475  227A  0023               	movlb	3	; select bank3
 13476  227B  0826               	movf	(fabsf@F463+2)^(0+384),w
 13477  227C  0021               	movlb	1	; select bank1
 13478  227D  00AE               	movwf	(fabsf@u+2)^(0+128)
 13479  227E  0023               	movlb	3	; select bank3
 13480  227F  0825               	movf	(fabsf@F463+1)^(0+384),w
 13481  2280  0021               	movlb	1	; select bank1
 13482  2281  00AD               	movwf	(fabsf@u+1)^(0+128)
 13483  2282  0023               	movlb	3	; select bank3
 13484  2283  0824               	movf	fabsf@F463^(0+384),w
 13485  2284  0021               	movlb	1	; select bank1
 13486  2285  00AC               	movwf	fabsf@u^(0+128)
 13487  2286  082B               	movf	(fabsf@x+3)^(0+128),w
 13488  2287  00AF               	movwf	(fabsf@u+3)^(0+128)
 13489  2288  082A               	movf	(fabsf@x+2)^(0+128),w
 13490  2289  00AE               	movwf	(fabsf@u+2)^(0+128)
 13491  228A  0829               	movf	(fabsf@x+1)^(0+128),w
 13492  228B  00AD               	movwf	(fabsf@u+1)^(0+128)
 13493  228C  0828               	movf	fabsf@x^(0+128),w
 13494  228D  00AC               	movwf	fabsf@u^(0+128)
 13495  228E  30FF               	movlw	255
 13496  228F  05AC               	andwf	fabsf@u^(0+128),f
 13497  2290  30FF               	movlw	255
 13498  2291  05AD               	andwf	(fabsf@u+1)^(0+128),f
 13499  2292  30FF               	movlw	255
 13500  2293  05AE               	andwf	(fabsf@u+2)^(0+128),f
 13501  2294  307F               	movlw	127
 13502  2295  05AF               	andwf	(fabsf@u+3)^(0+128),f
 13503  2296  082F               	movf	(fabsf@u+3)^(0+128),w
 13504  2297  00AB               	movwf	(?_fabsf+3)^(0+128)
 13505  2298  082E               	movf	(fabsf@u+2)^(0+128),w
 13506  2299  00AA               	movwf	(?_fabsf+2)^(0+128)
 13507  229A  082D               	movf	(fabsf@u+1)^(0+128),w
 13508  229B  00A9               	movwf	(?_fabsf+1)^(0+128)
 13509  229C  082C               	movf	fabsf@u^(0+128),w
 13510  229D  00A8               	movwf	?_fabsf^(0+128)
 13511  229E                     l1300:	
 13512  229E  0008               	return
 13513  229F                     __end_of_fabsf:	
 13514                           
 13515                           	psect	text44
 13516  2731                     __ptext44:	
 13517 ;; *************** function _freq_count *****************
 13518 ;; Defined at:
 13519 ;;		line 661 in file "main.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2, status,0, pclath, cstack
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;Total ram usage:        3 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    3
 13540 ;; This function calls:
 13541 ;;		___fldiv
 13542 ;;		___flmul
 13543 ;;		___xxtofl
 13544 ;; This function is called by:
 13545 ;;		_process_loop
 13546 ;;		_maintenance
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           
 13551                           ;psect for function _freq_count
 13552  2731                     _freq_count:	
 13553  2731                     l6803:	
 13554                           ;incstack = 0
 13555                           ; Regs used in _freq_count: [wreg+status,2+status,0+pclath+cstack]
 13556                           
 13557                           
 13558                           ;main.c: 664:      period=CCPR1H<<8;
 13559  2731  0025               	movlb	5	; select bank5
 13560  2732  0812               	movf	18,w	;volatile
 13561  2733  0020               	movlb	0	; select bank0
 13562  2734  00DA               	movwf	??_freq_count
 13563  2735  01DB               	clrf	??_freq_count+1
 13564  2736  085A               	movf	??_freq_count,w
 13565  2737  00DB               	movwf	??_freq_count+1
 13566  2738  01DA               	clrf	??_freq_count
 13567  2739  085A               	movf	??_freq_count,w
 13568  273A  0023               	movlb	3	; select bank3
 13569  273B  00C6               	movwf	_period^(0+384)
 13570  273C  0020               	movlb	0	; select bank0
 13571  273D  085B               	movf	??_freq_count+1,w
 13572  273E  0023               	movlb	3	; select bank3
 13573  273F  00C7               	movwf	(_period+1)^(0+384)
 13574                           
 13575                           ;main.c: 665:      period|=CCPR1L;
 13576  2740  0025               	movlb	5	; select bank5
 13577  2741  0811               	movf	17,w	;volatile
 13578  2742  0020               	movlb	0	; select bank0
 13579  2743  00DA               	movwf	??_freq_count
 13580  2744  01DB               	clrf	??_freq_count+1
 13581  2745  085A               	movf	??_freq_count,w
 13582  2746  0023               	movlb	3	; select bank3
 13583  2747  04C6               	iorwf	_period^(0+384),f
 13584  2748  0020               	movlb	0	; select bank0
 13585  2749  085B               	movf	??_freq_count+1,w
 13586  274A  0023               	movlb	3	; select bank3
 13587  274B  04C7               	iorwf	(_period+1)^(0+384),f
 13588  274C                     l6805:	
 13589                           
 13590                           ;main.c: 667:     if (period!=0)
 13591  274C  0846               	movf	_period^(0+384),w
 13592  274D  0447               	iorwf	(_period+1)^(0+384),w
 13593  274E  1903               	btfsc	3,2
 13594  274F  2F51               	goto	u9021
 13595  2750  2F52               	goto	u9020
 13596  2751                     u9021:	
 13597  2751  2F96               	goto	l315
 13598  2752                     u9020:	
 13599  2752                     l6807:	
 13600                           
 13601                           ;main.c: 668:     {;main.c: 669:       frequency=1000/(period*0.164);
 13602  2752  303E               	movlw	62
 13603  2753  0020               	movlb	0	; select bank0
 13604  2754  00A9               	movwf	___flmul@b+3
 13605  2755  3027               	movlw	39
 13606  2756  00A8               	movwf	___flmul@b+2
 13607  2757  30EF               	movlw	239
 13608  2758  00A7               	movwf	___flmul@b+1
 13609  2759  309E               	movlw	158
 13610  275A  00A6               	movwf	___flmul@b
 13611  275B  0023               	movlb	3	; select bank3
 13612  275C  0846               	movf	_period^(0+384),w
 13613  275D  00F1               	movwf	___xxtofl@val
 13614  275E  0847               	movf	(_period+1)^(0+384),w
 13615  275F  00F2               	movwf	___xxtofl@val+1
 13616  2760  01F3               	clrf	___xxtofl@val+2
 13617  2761  01F4               	clrf	___xxtofl@val+3
 13618  2762  3000               	movlw	0
 13619  2763  319A  22A5  31A7   	fcall	___xxtofl
 13620  2766  0874               	movf	?___xxtofl+3,w
 13621  2767  0020               	movlb	0	; select bank0
 13622  2768  00AD               	movwf	___flmul@a+3
 13623  2769  0873               	movf	?___xxtofl+2,w
 13624  276A  00AC               	movwf	___flmul@a+2
 13625  276B  0872               	movf	?___xxtofl+1,w
 13626  276C  00AB               	movwf	___flmul@a+1
 13627  276D  0871               	movf	?___xxtofl,w
 13628  276E  00AA               	movwf	___flmul@a
 13629  276F  3195  25A9  31A7   	fcall	___flmul
 13630  2772  0020               	movlb	0	; select bank0
 13631  2773  0829               	movf	?___flmul+3,w
 13632  2774  00C3               	movwf	___fldiv@a+3
 13633  2775  0828               	movf	?___flmul+2,w
 13634  2776  00C2               	movwf	___fldiv@a+2
 13635  2777  0827               	movf	?___flmul+1,w
 13636  2778  00C1               	movwf	___fldiv@a+1
 13637  2779  0826               	movf	?___flmul,w
 13638  277A  00C0               	movwf	___fldiv@a
 13639  277B  3044               	movlw	68
 13640  277C  00C7               	movwf	___fldiv@b+3
 13641  277D  307A               	movlw	122
 13642  277E  00C6               	movwf	___fldiv@b+2
 13643  277F  3000               	movlw	0
 13644  2780  00C5               	movwf	___fldiv@b+1
 13645  2781  3000               	movlw	0
 13646  2782  00C4               	movwf	___fldiv@b
 13647  2783  3188  2016  31A7   	fcall	___fldiv
 13648  2786  0020               	movlb	0	; select bank0
 13649  2787  0843               	movf	?___fldiv+3,w
 13650  2788  0023               	movlb	3	; select bank3
 13651  2789  00B3               	movwf	(_frequency+3)^(0+384)
 13652  278A  0020               	movlb	0	; select bank0
 13653  278B  0842               	movf	?___fldiv+2,w
 13654  278C  0023               	movlb	3	; select bank3
 13655  278D  00B2               	movwf	(_frequency+2)^(0+384)
 13656  278E  0020               	movlb	0	; select bank0
 13657  278F  0841               	movf	?___fldiv+1,w
 13658  2790  0023               	movlb	3	; select bank3
 13659  2791  00B1               	movwf	(_frequency+1)^(0+384)
 13660  2792  0020               	movlb	0	; select bank0
 13661  2793  0840               	movf	?___fldiv,w
 13662  2794  0023               	movlb	3	; select bank3
 13663  2795  00B0               	movwf	_frequency^(0+384)
 13664  2796                     l315:	
 13665  2796  0008               	return
 13666  2797                     __end_of_freq_count:	
 13667                           
 13668                           	psect	text45
 13669  1AA5                     __ptext45:	
 13670 ;; *************** function ___xxtofl *****************
 13671 ;; Defined at:
 13672 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;  sign            1    wreg     unsigned char 
 13675 ;;  val             4    1[COMMON] long 
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  sign            1    0[BANK0 ] unsigned char 
 13678 ;;  arg             4    2[BANK0 ] unsigned long 
 13679 ;;  exp             1    1[BANK0 ] unsigned char 
 13680 ;; Return value:  Size  Location     Type
 13681 ;;                  4    1[COMMON] unsigned char 
 13682 ;; Registers used:
 13683 ;;		wreg, status,2, status,0
 13684 ;; Tracked objects:
 13685 ;;		On entry : 0/0
 13686 ;;		On exit  : 0/0
 13687 ;;		Unchanged: 0/0
 13688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;Total ram usage:       14 bytes
 13694 ;; Hardware stack levels used:    1
 13695 ;; Hardware stack levels required when called:    1
 13696 ;; This function calls:
 13697 ;;		Nothing
 13698 ;; This function is called by:
 13699 ;;		_read_volt
 13700 ;;		_freq_count
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           
 13705                           ;psect for function ___xxtofl
 13706  1AA5                     ___xxtofl:	
 13707                           
 13708                           ;incstack = 0
 13709                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13710                           ;___xxtofl@sign stored from wreg
 13711  1AA5  0020               	movlb	0	; select bank0
 13712  1AA6  00A0               	movwf	___xxtofl@sign
 13713  1AA7                     l5219:	
 13714  1AA7  0820               	movf	___xxtofl@sign,w
 13715  1AA8  1903               	btfsc	3,2
 13716  1AA9  2AAB               	goto	u7001
 13717  1AAA  2AAC               	goto	u7000
 13718  1AAB                     u7001:	
 13719  1AAB  2AC0               	goto	l5225
 13720  1AAC                     u7000:	
 13721  1AAC                     l5221:	
 13722  1AAC  1FF4               	btfss	___xxtofl@val+3,7
 13723  1AAD  2AAF               	goto	u7011
 13724  1AAE  2AB0               	goto	u7010
 13725  1AAF                     u7011:	
 13726  1AAF  2AC0               	goto	l5225
 13727  1AB0                     u7010:	
 13728  1AB0                     l5223:	
 13729  1AB0  0971               	comf	___xxtofl@val,w
 13730  1AB1  00A2               	movwf	___xxtofl@arg
 13731  1AB2  0972               	comf	___xxtofl@val+1,w
 13732  1AB3  00A3               	movwf	___xxtofl@arg+1
 13733  1AB4  0973               	comf	___xxtofl@val+2,w
 13734  1AB5  00A4               	movwf	___xxtofl@arg+2
 13735  1AB6  0974               	comf	___xxtofl@val+3,w
 13736  1AB7  00A5               	movwf	___xxtofl@arg+3
 13737  1AB8  0AA2               	incf	___xxtofl@arg,f
 13738  1AB9  1903               	skipnz
 13739  1ABA  0AA3               	incf	___xxtofl@arg+1,f
 13740  1ABB  1903               	skipnz
 13741  1ABC  0AA4               	incf	___xxtofl@arg+2,f
 13742  1ABD  1903               	skipnz
 13743  1ABE  0AA5               	incf	___xxtofl@arg+3,f
 13744  1ABF  2AC8               	goto	l1231
 13745  1AC0                     l5225:	
 13746  1AC0  0874               	movf	___xxtofl@val+3,w
 13747  1AC1  00A5               	movwf	___xxtofl@arg+3
 13748  1AC2  0873               	movf	___xxtofl@val+2,w
 13749  1AC3  00A4               	movwf	___xxtofl@arg+2
 13750  1AC4  0872               	movf	___xxtofl@val+1,w
 13751  1AC5  00A3               	movwf	___xxtofl@arg+1
 13752  1AC6  0871               	movf	___xxtofl@val,w
 13753  1AC7  00A2               	movwf	___xxtofl@arg
 13754  1AC8                     l1231:	
 13755  1AC8  0874               	movf	___xxtofl@val+3,w
 13756  1AC9  0473               	iorwf	___xxtofl@val+2,w
 13757  1ACA  0472               	iorwf	___xxtofl@val+1,w
 13758  1ACB  0471               	iorwf	___xxtofl@val,w
 13759  1ACC  1D03               	skipz
 13760  1ACD  2ACF               	goto	u7021
 13761  1ACE  2AD0               	goto	u7020
 13762  1ACF                     u7021:	
 13763  1ACF  2AD9               	goto	l5231
 13764  1AD0                     u7020:	
 13765  1AD0                     l5227:	
 13766  1AD0  3000               	movlw	0
 13767  1AD1  00F4               	movwf	?___xxtofl+3
 13768  1AD2  3000               	movlw	0
 13769  1AD3  00F3               	movwf	?___xxtofl+2
 13770  1AD4  3000               	movlw	0
 13771  1AD5  00F2               	movwf	?___xxtofl+1
 13772  1AD6  3000               	movlw	0
 13773  1AD7  00F1               	movwf	?___xxtofl
 13774  1AD8  2B51               	goto	l1233
 13775  1AD9                     l5231:	
 13776  1AD9  3096               	movlw	150
 13777  1ADA  00F5               	movwf	??___xxtofl
 13778  1ADB  0875               	movf	??___xxtofl,w
 13779  1ADC  00A1               	movwf	___xxtofl@exp
 13780  1ADD  2AE9               	goto	l5235
 13781  1ADE                     l5233:	
 13782  1ADE  3001               	movlw	1
 13783  1ADF  00F5               	movwf	??___xxtofl
 13784  1AE0  0875               	movf	??___xxtofl,w
 13785  1AE1  07A1               	addwf	___xxtofl@exp,f
 13786  1AE2  3001               	movlw	1
 13787  1AE3                     u7035:	
 13788  1AE3  36A5               	lsrf	___xxtofl@arg+3,f
 13789  1AE4  0CA4               	rrf	___xxtofl@arg+2,f
 13790  1AE5  0CA3               	rrf	___xxtofl@arg+1,f
 13791  1AE6  0CA2               	rrf	___xxtofl@arg,f
 13792  1AE7  0B89               	decfsz	9,f
 13793  1AE8  2AE3               	goto	u7035
 13794  1AE9                     l5235:	
 13795  1AE9  30FE               	movlw	254
 13796  1AEA  0525               	andwf	___xxtofl@arg+3,w
 13797  1AEB  1D03               	btfss	3,2
 13798  1AEC  2AEE               	goto	u7041
 13799  1AED  2AEF               	goto	u7040
 13800  1AEE                     u7041:	
 13801  1AEE  2ADE               	goto	l5233
 13802  1AEF                     u7040:	
 13803  1AEF  2B03               	goto	l1237
 13804  1AF0                     l5237:	
 13805  1AF0  3001               	movlw	1
 13806  1AF1  00F5               	movwf	??___xxtofl
 13807  1AF2  0875               	movf	??___xxtofl,w
 13808  1AF3  07A1               	addwf	___xxtofl@exp,f
 13809  1AF4                     l5239:	
 13810  1AF4  3001               	movlw	1
 13811  1AF5  07A2               	addwf	___xxtofl@arg,f
 13812  1AF6  3000               	movlw	0
 13813  1AF7  3DA3               	addwfc	___xxtofl@arg+1,f
 13814  1AF8  3000               	movlw	0
 13815  1AF9  3DA4               	addwfc	___xxtofl@arg+2,f
 13816  1AFA  3000               	movlw	0
 13817  1AFB  3DA5               	addwfc	___xxtofl@arg+3,f
 13818  1AFC                     l5241:	
 13819  1AFC  3001               	movlw	1
 13820  1AFD                     u7055:	
 13821  1AFD  36A5               	lsrf	___xxtofl@arg+3,f
 13822  1AFE  0CA4               	rrf	___xxtofl@arg+2,f
 13823  1AFF  0CA3               	rrf	___xxtofl@arg+1,f
 13824  1B00  0CA2               	rrf	___xxtofl@arg,f
 13825  1B01  0B89               	decfsz	9,f
 13826  1B02  2AFD               	goto	u7055
 13827  1B03                     l1237:	
 13828  1B03  30FF               	movlw	255
 13829  1B04  0525               	andwf	___xxtofl@arg+3,w
 13830  1B05  1D03               	btfss	3,2
 13831  1B06  2B08               	goto	u7061
 13832  1B07  2B09               	goto	u7060
 13833  1B08                     u7061:	
 13834  1B08  2AF0               	goto	l5237
 13835  1B09                     u7060:	
 13836  1B09  2B13               	goto	l5245
 13837  1B0A                     l5243:	
 13838  1B0A  3001               	movlw	1
 13839  1B0B  02A1               	subwf	___xxtofl@exp,f
 13840  1B0C  3001               	movlw	1
 13841  1B0D                     u7075:	
 13842  1B0D  35A2               	lslf	___xxtofl@arg,f
 13843  1B0E  0DA3               	rlf	___xxtofl@arg+1,f
 13844  1B0F  0DA4               	rlf	___xxtofl@arg+2,f
 13845  1B10  0DA5               	rlf	___xxtofl@arg+3,f
 13846  1B11  0B89               	decfsz	9,f
 13847  1B12  2B0D               	goto	u7075
 13848  1B13                     l5245:	
 13849  1B13  1BA4               	btfsc	___xxtofl@arg+2,7
 13850  1B14  2B16               	goto	u7081
 13851  1B15  2B17               	goto	u7080
 13852  1B16                     u7081:	
 13853  1B16  2B1D               	goto	l1244
 13854  1B17                     u7080:	
 13855  1B17                     l5247:	
 13856  1B17  3002               	movlw	2
 13857  1B18  0221               	subwf	___xxtofl@exp,w
 13858  1B19  1803               	skipnc
 13859  1B1A  2B1C               	goto	u7091
 13860  1B1B  2B1D               	goto	u7090
 13861  1B1C                     u7091:	
 13862  1B1C  2B0A               	goto	l5243
 13863  1B1D                     u7090:	
 13864  1B1D                     l1244:	
 13865  1B1D  1821               	btfsc	___xxtofl@exp,0
 13866  1B1E  2B20               	goto	u7101
 13867  1B1F  2B21               	goto	u7100
 13868  1B20                     u7101:	
 13869  1B20  2B29               	goto	l1245
 13870  1B21                     u7100:	
 13871  1B21                     l5249:	
 13872  1B21  30FF               	movlw	255
 13873  1B22  05A2               	andwf	___xxtofl@arg,f
 13874  1B23  30FF               	movlw	255
 13875  1B24  05A3               	andwf	___xxtofl@arg+1,f
 13876  1B25  307F               	movlw	127
 13877  1B26  05A4               	andwf	___xxtofl@arg+2,f
 13878  1B27  30FF               	movlw	255
 13879  1B28  05A5               	andwf	___xxtofl@arg+3,f
 13880  1B29                     l1245:	
 13881  1B29  1003               	clrc
 13882  1B2A  0CA1               	rrf	___xxtofl@exp,f
 13883  1B2B                     l5251:	
 13884  1B2B  0821               	movf	___xxtofl@exp,w
 13885  1B2C  00F5               	movwf	??___xxtofl
 13886  1B2D  01F6               	clrf	??___xxtofl+1
 13887  1B2E  01F7               	clrf	??___xxtofl+2
 13888  1B2F  01F8               	clrf	??___xxtofl+3
 13889  1B30  3018               	movlw	24
 13890  1B31                     u7115:	
 13891  1B31  35F5               	lslf	??___xxtofl,f
 13892  1B32  0DF6               	rlf	??___xxtofl+1,f
 13893  1B33  0DF7               	rlf	??___xxtofl+2,f
 13894  1B34  0DF8               	rlf	??___xxtofl+3,f
 13895  1B35                     u7110:	
 13896  1B35  0B89               	decfsz	9,f
 13897  1B36  2B31               	goto	u7115
 13898  1B37  0875               	movf	??___xxtofl,w
 13899  1B38  04A2               	iorwf	___xxtofl@arg,f
 13900  1B39  0876               	movf	??___xxtofl+1,w
 13901  1B3A  04A3               	iorwf	___xxtofl@arg+1,f
 13902  1B3B  0877               	movf	??___xxtofl+2,w
 13903  1B3C  04A4               	iorwf	___xxtofl@arg+2,f
 13904  1B3D  0878               	movf	??___xxtofl+3,w
 13905  1B3E  04A5               	iorwf	___xxtofl@arg+3,f
 13906  1B3F                     l5253:	
 13907  1B3F  0820               	movf	___xxtofl@sign,w
 13908  1B40  1903               	btfsc	3,2
 13909  1B41  2B43               	goto	u7121
 13910  1B42  2B44               	goto	u7120
 13911  1B43                     u7121:	
 13912  1B43  2B49               	goto	l5259
 13913  1B44                     u7120:	
 13914  1B44                     l5255:	
 13915  1B44  1FF4               	btfss	___xxtofl@val+3,7
 13916  1B45  2B47               	goto	u7131
 13917  1B46  2B48               	goto	u7130
 13918  1B47                     u7131:	
 13919  1B47  2B49               	goto	l5259
 13920  1B48                     u7130:	
 13921  1B48                     l5257:	
 13922  1B48  17A5               	bsf	___xxtofl@arg+3,7
 13923  1B49                     l5259:	
 13924  1B49  0825               	movf	___xxtofl@arg+3,w
 13925  1B4A  00F4               	movwf	?___xxtofl+3
 13926  1B4B  0824               	movf	___xxtofl@arg+2,w
 13927  1B4C  00F3               	movwf	?___xxtofl+2
 13928  1B4D  0823               	movf	___xxtofl@arg+1,w
 13929  1B4E  00F2               	movwf	?___xxtofl+1
 13930  1B4F  0822               	movf	___xxtofl@arg,w
 13931  1B50  00F1               	movwf	?___xxtofl
 13932  1B51                     l1233:	
 13933  1B51  0008               	return
 13934  1B52                     __end_of___xxtofl:	
 13935                           
 13936                           	psect	text46
 13937  15A9                     __ptext46:	
 13938 ;; *************** function ___flmul *****************
 13939 ;; Defined at:
 13940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;  b               4    6[BANK0 ] unsigned char 
 13943 ;;  a               4   10[BANK0 ] unsigned char 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  prod            4   26[BANK0 ] struct .
 13946 ;;  grs             4   20[BANK0 ] unsigned long 
 13947 ;;  temp            2   30[BANK0 ] struct .
 13948 ;;  bexp            1   25[BANK0 ] unsigned char 
 13949 ;;  aexp            1   24[BANK0 ] unsigned char 
 13950 ;;  sign            1   19[BANK0 ] unsigned char 
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  4    6[BANK0 ] unsigned char 
 13953 ;; Registers used:
 13954 ;;		wreg, status,2, status,0, pclath, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13961 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13962 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;Total ram usage:       26 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; Hardware stack levels required when called:    2
 13967 ;; This function calls:
 13968 ;;		__Umul8_16
 13969 ;; This function is called by:
 13970 ;;		_read_volt
 13971 ;;		_freq_count
 13972 ;;		_efgtoa
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           
 13977                           ;psect for function ___flmul
 13978  15A9                     ___flmul:	
 13979  15A9                     l4457:	
 13980                           ;incstack = 0
 13981                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13982                           
 13983  15A9  0020               	movlb	0	; select bank0
 13984  15AA  0829               	movf	___flmul@b+3,w
 13985  15AB  3980               	andlw	128
 13986  15AC  00AE               	movwf	??___flmul
 13987  15AD  082E               	movf	??___flmul,w
 13988  15AE  00B3               	movwf	___flmul@sign
 13989  15AF                     l4459:	
 13990  15AF  3529               	lslf	___flmul@b+3,w
 13991  15B0  00AE               	movwf	??___flmul
 13992  15B1  082E               	movf	??___flmul,w
 13993  15B2  00B9               	movwf	___flmul@bexp
 13994  15B3                     l4461:	
 13995  15B3  1FA8               	btfss	___flmul@b+2,7
 13996  15B4  2DB6               	goto	u5681
 13997  15B5  2DB7               	goto	u5680
 13998  15B6                     u5681:	
 13999  15B6  2DB8               	goto	l4465
 14000  15B7                     u5680:	
 14001  15B7                     l4463:	
 14002  15B7  1439               	bsf	___flmul@bexp,0
 14003  15B8                     l4465:	
 14004  15B8  0839               	movf	___flmul@bexp,w
 14005  15B9  1903               	btfsc	3,2
 14006  15BA  2DBC               	goto	u5691
 14007  15BB  2DBD               	goto	u5690
 14008  15BC                     u5691:	
 14009  15BC  2DCC               	goto	l4473
 14010  15BD                     u5690:	
 14011  15BD                     l4467:	
 14012  15BD  0A39               	incf	___flmul@bexp,w
 14013  15BE  1D03               	btfss	3,2
 14014  15BF  2DC1               	goto	u5701
 14015  15C0  2DC2               	goto	u5700
 14016  15C1                     u5701:	
 14017  15C1  2DCA               	goto	l4471
 14018  15C2                     u5700:	
 14019  15C2                     l4469:	
 14020  15C2  3000               	movlw	0
 14021  15C3  00A9               	movwf	___flmul@b+3
 14022  15C4  3000               	movlw	0
 14023  15C5  00A8               	movwf	___flmul@b+2
 14024  15C6  3000               	movlw	0
 14025  15C7  00A7               	movwf	___flmul@b+1
 14026  15C8  3000               	movlw	0
 14027  15C9  00A6               	movwf	___flmul@b
 14028  15CA                     l4471:	
 14029  15CA  17A8               	bsf	___flmul@b+2,7
 14030  15CB  2DD4               	goto	l4475
 14031  15CC                     l4473:	
 14032  15CC  3000               	movlw	0
 14033  15CD  00A9               	movwf	___flmul@b+3
 14034  15CE  3000               	movlw	0
 14035  15CF  00A8               	movwf	___flmul@b+2
 14036  15D0  3000               	movlw	0
 14037  15D1  00A7               	movwf	___flmul@b+1
 14038  15D2  3000               	movlw	0
 14039  15D3  00A6               	movwf	___flmul@b
 14040  15D4                     l4475:	
 14041  15D4  082D               	movf	___flmul@a+3,w
 14042  15D5  3980               	andlw	128
 14043  15D6  00AE               	movwf	??___flmul
 14044  15D7  082E               	movf	??___flmul,w
 14045  15D8  06B3               	xorwf	___flmul@sign,f
 14046  15D9                     l4477:	
 14047  15D9  352D               	lslf	___flmul@a+3,w
 14048  15DA  00AE               	movwf	??___flmul
 14049  15DB  082E               	movf	??___flmul,w
 14050  15DC  00B8               	movwf	___flmul@aexp
 14051  15DD                     l4479:	
 14052  15DD  1FAC               	btfss	___flmul@a+2,7
 14053  15DE  2DE0               	goto	u5711
 14054  15DF  2DE1               	goto	u5710
 14055  15E0                     u5711:	
 14056  15E0  2DE2               	goto	l4483
 14057  15E1                     u5710:	
 14058  15E1                     l4481:	
 14059  15E1  1438               	bsf	___flmul@aexp,0
 14060  15E2                     l4483:	
 14061  15E2  0838               	movf	___flmul@aexp,w
 14062  15E3  1903               	btfsc	3,2
 14063  15E4  2DE6               	goto	u5721
 14064  15E5  2DE7               	goto	u5720
 14065  15E6                     u5721:	
 14066  15E6  2DF6               	goto	l4491
 14067  15E7                     u5720:	
 14068  15E7                     l4485:	
 14069  15E7  0A38               	incf	___flmul@aexp,w
 14070  15E8  1D03               	btfss	3,2
 14071  15E9  2DEB               	goto	u5731
 14072  15EA  2DEC               	goto	u5730
 14073  15EB                     u5731:	
 14074  15EB  2DF4               	goto	l4489
 14075  15EC                     u5730:	
 14076  15EC                     l4487:	
 14077  15EC  3000               	movlw	0
 14078  15ED  00AD               	movwf	___flmul@a+3
 14079  15EE  3000               	movlw	0
 14080  15EF  00AC               	movwf	___flmul@a+2
 14081  15F0  3000               	movlw	0
 14082  15F1  00AB               	movwf	___flmul@a+1
 14083  15F2  3000               	movlw	0
 14084  15F3  00AA               	movwf	___flmul@a
 14085  15F4                     l4489:	
 14086  15F4  17AC               	bsf	___flmul@a+2,7
 14087  15F5  2DFE               	goto	l4493
 14088  15F6                     l4491:	
 14089  15F6  3000               	movlw	0
 14090  15F7  00AD               	movwf	___flmul@a+3
 14091  15F8  3000               	movlw	0
 14092  15F9  00AC               	movwf	___flmul@a+2
 14093  15FA  3000               	movlw	0
 14094  15FB  00AB               	movwf	___flmul@a+1
 14095  15FC  3000               	movlw	0
 14096  15FD  00AA               	movwf	___flmul@a
 14097  15FE                     l4493:	
 14098  15FE  0838               	movf	___flmul@aexp,w
 14099  15FF  1903               	btfsc	3,2
 14100  1600  2E02               	goto	u5741
 14101  1601  2E03               	goto	u5740
 14102  1602                     u5741:	
 14103  1602  2E08               	goto	l4497
 14104  1603                     u5740:	
 14105  1603                     l4495:	
 14106  1603  0839               	movf	___flmul@bexp,w
 14107  1604  1D03               	btfss	3,2
 14108  1605  2E07               	goto	u5751
 14109  1606  2E08               	goto	u5750
 14110  1607                     u5751:	
 14111  1607  2E11               	goto	l4501
 14112  1608                     u5750:	
 14113  1608                     l4497:	
 14114  1608  3000               	movlw	0
 14115  1609  00A9               	movwf	?___flmul+3
 14116  160A  3000               	movlw	0
 14117  160B  00A8               	movwf	?___flmul+2
 14118  160C  3000               	movlw	0
 14119  160D  00A7               	movwf	?___flmul+1
 14120  160E  3000               	movlw	0
 14121  160F  00A6               	movwf	?___flmul
 14122  1610  2FFF               	goto	l1193
 14123  1611                     l4501:	
 14124  1611  0826               	movf	___flmul@b,w
 14125  1612  00AE               	movwf	??___flmul
 14126  1613  082E               	movf	??___flmul,w
 14127  1614  00F1               	movwf	__Umul8_16@multiplicand
 14128  1615  082C               	movf	___flmul@a+2,w
 14129  1616  31A2  222D  3195   	fcall	__Umul8_16
 14130  1619  0872               	movf	?__Umul8_16+1,w
 14131  161A  0020               	movlb	0	; select bank0
 14132  161B  00BF               	movwf	___flmul@temp+1
 14133  161C  0871               	movf	?__Umul8_16,w
 14134  161D  00BE               	movwf	___flmul@temp
 14135  161E                     l4503:	
 14136  161E  083E               	movf	___flmul@temp,w
 14137  161F  00AE               	movwf	??___flmul
 14138  1620  01AF               	clrf	??___flmul+1
 14139  1621  01B0               	clrf	??___flmul+2
 14140  1622  01B1               	clrf	??___flmul+3
 14141  1623  0831               	movf	??___flmul+3,w
 14142  1624  00B7               	movwf	___flmul@grs+3
 14143  1625  0830               	movf	??___flmul+2,w
 14144  1626  00B6               	movwf	___flmul@grs+2
 14145  1627  082F               	movf	??___flmul+1,w
 14146  1628  00B5               	movwf	___flmul@grs+1
 14147  1629  082E               	movf	??___flmul,w
 14148  162A  00B4               	movwf	___flmul@grs
 14149  162B                     l4505:	
 14150  162B  083F               	movf	___flmul@temp+1,w
 14151  162C  00AE               	movwf	??___flmul
 14152  162D  01AF               	clrf	??___flmul+1
 14153  162E  01B0               	clrf	??___flmul+2
 14154  162F  01B1               	clrf	??___flmul+3
 14155  1630  0831               	movf	??___flmul+3,w
 14156  1631  00BD               	movwf	___flmul@prod+3
 14157  1632  0830               	movf	??___flmul+2,w
 14158  1633  00BC               	movwf	___flmul@prod+2
 14159  1634  082F               	movf	??___flmul+1,w
 14160  1635  00BB               	movwf	___flmul@prod+1
 14161  1636  082E               	movf	??___flmul,w
 14162  1637  00BA               	movwf	___flmul@prod
 14163  1638  0827               	movf	___flmul@b+1,w
 14164  1639  00AE               	movwf	??___flmul
 14165  163A  082E               	movf	??___flmul,w
 14166  163B  00F1               	movwf	__Umul8_16@multiplicand
 14167  163C  082B               	movf	___flmul@a+1,w
 14168  163D  31A2  222D  3195   	fcall	__Umul8_16
 14169  1640  0872               	movf	?__Umul8_16+1,w
 14170  1641  0020               	movlb	0	; select bank0
 14171  1642  00BF               	movwf	___flmul@temp+1
 14172  1643  0871               	movf	?__Umul8_16,w
 14173  1644  00BE               	movwf	___flmul@temp
 14174  1645                     l4507:	
 14175  1645  083E               	movf	___flmul@temp,w
 14176  1646  00AE               	movwf	??___flmul
 14177  1647  01AF               	clrf	??___flmul+1
 14178  1648  01B0               	clrf	??___flmul+2
 14179  1649  01B1               	clrf	??___flmul+3
 14180  164A  082E               	movf	??___flmul,w
 14181  164B  07B4               	addwf	___flmul@grs,f
 14182  164C  082F               	movf	??___flmul+1,w
 14183  164D  3DB5               	addwfc	___flmul@grs+1,f
 14184  164E  0830               	movf	??___flmul+2,w
 14185  164F  3DB6               	addwfc	___flmul@grs+2,f
 14186  1650  0831               	movf	??___flmul+3,w
 14187  1651  3DB7               	addwfc	___flmul@grs+3,f
 14188  1652                     l4509:	
 14189  1652  083F               	movf	___flmul@temp+1,w
 14190  1653  00AE               	movwf	??___flmul
 14191  1654  01AF               	clrf	??___flmul+1
 14192  1655  01B0               	clrf	??___flmul+2
 14193  1656  01B1               	clrf	??___flmul+3
 14194  1657  082E               	movf	??___flmul,w
 14195  1658  07BA               	addwf	___flmul@prod,f
 14196  1659  082F               	movf	??___flmul+1,w
 14197  165A  3DBB               	addwfc	___flmul@prod+1,f
 14198  165B  0830               	movf	??___flmul+2,w
 14199  165C  3DBC               	addwfc	___flmul@prod+2,f
 14200  165D  0831               	movf	??___flmul+3,w
 14201  165E  3DBD               	addwfc	___flmul@prod+3,f
 14202  165F  0828               	movf	___flmul@b+2,w
 14203  1660  00AE               	movwf	??___flmul
 14204  1661  082E               	movf	??___flmul,w
 14205  1662  00F1               	movwf	__Umul8_16@multiplicand
 14206  1663  082A               	movf	___flmul@a,w
 14207  1664  31A2  222D  3195   	fcall	__Umul8_16
 14208  1667  0872               	movf	?__Umul8_16+1,w
 14209  1668  0020               	movlb	0	; select bank0
 14210  1669  00BF               	movwf	___flmul@temp+1
 14211  166A  0871               	movf	?__Umul8_16,w
 14212  166B  00BE               	movwf	___flmul@temp
 14213  166C                     l4511:	
 14214  166C  083E               	movf	___flmul@temp,w
 14215  166D  00AE               	movwf	??___flmul
 14216  166E  01AF               	clrf	??___flmul+1
 14217  166F  01B0               	clrf	??___flmul+2
 14218  1670  01B1               	clrf	??___flmul+3
 14219  1671  082E               	movf	??___flmul,w
 14220  1672  07B4               	addwf	___flmul@grs,f
 14221  1673  082F               	movf	??___flmul+1,w
 14222  1674  3DB5               	addwfc	___flmul@grs+1,f
 14223  1675  0830               	movf	??___flmul+2,w
 14224  1676  3DB6               	addwfc	___flmul@grs+2,f
 14225  1677  0831               	movf	??___flmul+3,w
 14226  1678  3DB7               	addwfc	___flmul@grs+3,f
 14227  1679                     l4513:	
 14228  1679  083F               	movf	___flmul@temp+1,w
 14229  167A  00AE               	movwf	??___flmul
 14230  167B  01AF               	clrf	??___flmul+1
 14231  167C  01B0               	clrf	??___flmul+2
 14232  167D  01B1               	clrf	??___flmul+3
 14233  167E  082E               	movf	??___flmul,w
 14234  167F  07BA               	addwf	___flmul@prod,f
 14235  1680  082F               	movf	??___flmul+1,w
 14236  1681  3DBB               	addwfc	___flmul@prod+1,f
 14237  1682  0830               	movf	??___flmul+2,w
 14238  1683  3DBC               	addwfc	___flmul@prod+2,f
 14239  1684  0831               	movf	??___flmul+3,w
 14240  1685  3DBD               	addwfc	___flmul@prod+3,f
 14241  1686                     l4515:	
 14242  1686  3008               	movlw	8
 14243  1687                     u5765:	
 14244  1687  35B4               	lslf	___flmul@grs,f
 14245  1688  0DB5               	rlf	___flmul@grs+1,f
 14246  1689  0DB6               	rlf	___flmul@grs+2,f
 14247  168A  0DB7               	rlf	___flmul@grs+3,f
 14248  168B  0B89               	decfsz	9,f
 14249  168C  2E87               	goto	u5765
 14250  168D                     l4517:	
 14251  168D  0827               	movf	___flmul@b+1,w
 14252  168E  00AE               	movwf	??___flmul
 14253  168F  082E               	movf	??___flmul,w
 14254  1690  00F1               	movwf	__Umul8_16@multiplicand
 14255  1691  082A               	movf	___flmul@a,w
 14256  1692  31A2  222D  3195   	fcall	__Umul8_16
 14257  1695  0872               	movf	?__Umul8_16+1,w
 14258  1696  0020               	movlb	0	; select bank0
 14259  1697  00BF               	movwf	___flmul@temp+1
 14260  1698  0871               	movf	?__Umul8_16,w
 14261  1699  00BE               	movwf	___flmul@temp
 14262  169A                     l4519:	
 14263  169A  083E               	movf	___flmul@temp,w
 14264  169B  07B4               	addwf	___flmul@grs,f
 14265  169C  083F               	movf	___flmul@temp+1,w
 14266  169D  3DB5               	addwfc	___flmul@grs+1,f
 14267  169E  3000               	movlw	0
 14268  169F  3DB6               	addwfc	___flmul@grs+2,f
 14269  16A0  3DB7               	addwfc	___flmul@grs+3,f
 14270  16A1                     l4521:	
 14271  16A1  0826               	movf	___flmul@b,w
 14272  16A2  00AE               	movwf	??___flmul
 14273  16A3  082E               	movf	??___flmul,w
 14274  16A4  00F1               	movwf	__Umul8_16@multiplicand
 14275  16A5  082B               	movf	___flmul@a+1,w
 14276  16A6  31A2  222D  3195   	fcall	__Umul8_16
 14277  16A9  0872               	movf	?__Umul8_16+1,w
 14278  16AA  0020               	movlb	0	; select bank0
 14279  16AB  00BF               	movwf	___flmul@temp+1
 14280  16AC  0871               	movf	?__Umul8_16,w
 14281  16AD  00BE               	movwf	___flmul@temp
 14282  16AE                     l4523:	
 14283  16AE  083E               	movf	___flmul@temp,w
 14284  16AF  07B4               	addwf	___flmul@grs,f
 14285  16B0  083F               	movf	___flmul@temp+1,w
 14286  16B1  3DB5               	addwfc	___flmul@grs+1,f
 14287  16B2  3000               	movlw	0
 14288  16B3  3DB6               	addwfc	___flmul@grs+2,f
 14289  16B4  3DB7               	addwfc	___flmul@grs+3,f
 14290  16B5                     l4525:	
 14291  16B5  3008               	movlw	8
 14292  16B6                     u5775:	
 14293  16B6  35B4               	lslf	___flmul@grs,f
 14294  16B7  0DB5               	rlf	___flmul@grs+1,f
 14295  16B8  0DB6               	rlf	___flmul@grs+2,f
 14296  16B9  0DB7               	rlf	___flmul@grs+3,f
 14297  16BA  0B89               	decfsz	9,f
 14298  16BB  2EB6               	goto	u5775
 14299  16BC  0826               	movf	___flmul@b,w
 14300  16BD  00AE               	movwf	??___flmul
 14301  16BE  082E               	movf	??___flmul,w
 14302  16BF  00F1               	movwf	__Umul8_16@multiplicand
 14303  16C0  082A               	movf	___flmul@a,w
 14304  16C1  31A2  222D  3195   	fcall	__Umul8_16
 14305  16C4  0872               	movf	?__Umul8_16+1,w
 14306  16C5  0020               	movlb	0	; select bank0
 14307  16C6  00BF               	movwf	___flmul@temp+1
 14308  16C7  0871               	movf	?__Umul8_16,w
 14309  16C8  00BE               	movwf	___flmul@temp
 14310  16C9                     l4527:	
 14311  16C9  083E               	movf	___flmul@temp,w
 14312  16CA  07B4               	addwf	___flmul@grs,f
 14313  16CB  083F               	movf	___flmul@temp+1,w
 14314  16CC  3DB5               	addwfc	___flmul@grs+1,f
 14315  16CD  3000               	movlw	0
 14316  16CE  3DB6               	addwfc	___flmul@grs+2,f
 14317  16CF  3DB7               	addwfc	___flmul@grs+3,f
 14318  16D0                     l4529:	
 14319  16D0  0827               	movf	___flmul@b+1,w
 14320  16D1  00AE               	movwf	??___flmul
 14321  16D2  082E               	movf	??___flmul,w
 14322  16D3  00F1               	movwf	__Umul8_16@multiplicand
 14323  16D4  082C               	movf	___flmul@a+2,w
 14324  16D5  31A2  222D  3195   	fcall	__Umul8_16
 14325  16D8  0872               	movf	?__Umul8_16+1,w
 14326  16D9  0020               	movlb	0	; select bank0
 14327  16DA  00BF               	movwf	___flmul@temp+1
 14328  16DB  0871               	movf	?__Umul8_16,w
 14329  16DC  00BE               	movwf	___flmul@temp
 14330  16DD  083E               	movf	___flmul@temp,w
 14331  16DE  07BA               	addwf	___flmul@prod,f
 14332  16DF  083F               	movf	___flmul@temp+1,w
 14333  16E0  3DBB               	addwfc	___flmul@prod+1,f
 14334  16E1  3000               	movlw	0
 14335  16E2  3DBC               	addwfc	___flmul@prod+2,f
 14336  16E3  3DBD               	addwfc	___flmul@prod+3,f
 14337  16E4                     l4531:	
 14338  16E4  0828               	movf	___flmul@b+2,w
 14339  16E5  00AE               	movwf	??___flmul
 14340  16E6  082E               	movf	??___flmul,w
 14341  16E7  00F1               	movwf	__Umul8_16@multiplicand
 14342  16E8  082B               	movf	___flmul@a+1,w
 14343  16E9  31A2  222D  3195   	fcall	__Umul8_16
 14344  16EC  0872               	movf	?__Umul8_16+1,w
 14345  16ED  0020               	movlb	0	; select bank0
 14346  16EE  00BF               	movwf	___flmul@temp+1
 14347  16EF  0871               	movf	?__Umul8_16,w
 14348  16F0  00BE               	movwf	___flmul@temp
 14349  16F1                     l4533:	
 14350  16F1  083E               	movf	___flmul@temp,w
 14351  16F2  07BA               	addwf	___flmul@prod,f
 14352  16F3  083F               	movf	___flmul@temp+1,w
 14353  16F4  3DBB               	addwfc	___flmul@prod+1,f
 14354  16F5  3000               	movlw	0
 14355  16F6  3DBC               	addwfc	___flmul@prod+2,f
 14356  16F7  3DBD               	addwfc	___flmul@prod+3,f
 14357  16F8  0828               	movf	___flmul@b+2,w
 14358  16F9  00AE               	movwf	??___flmul
 14359  16FA  082E               	movf	??___flmul,w
 14360  16FB  00F1               	movwf	__Umul8_16@multiplicand
 14361  16FC  082C               	movf	___flmul@a+2,w
 14362  16FD  31A2  222D  3195   	fcall	__Umul8_16
 14363  1700  0872               	movf	?__Umul8_16+1,w
 14364  1701  0020               	movlb	0	; select bank0
 14365  1702  00BF               	movwf	___flmul@temp+1
 14366  1703  0871               	movf	?__Umul8_16,w
 14367  1704  00BE               	movwf	___flmul@temp
 14368  1705                     l4535:	
 14369  1705  083E               	movf	___flmul@temp,w
 14370  1706  00AE               	movwf	??___flmul
 14371  1707  083F               	movf	___flmul@temp+1,w
 14372  1708  00AF               	movwf	??___flmul+1
 14373  1709  01B0               	clrf	??___flmul+2
 14374  170A  01B1               	clrf	??___flmul+3
 14375  170B  3008               	movlw	8
 14376  170C                     u5785:	
 14377  170C  35AE               	lslf	??___flmul,f
 14378  170D  0DAF               	rlf	??___flmul+1,f
 14379  170E  0DB0               	rlf	??___flmul+2,f
 14380  170F  0DB1               	rlf	??___flmul+3,f
 14381  1710                     u5780:	
 14382  1710  0B89               	decfsz	9,f
 14383  1711  2F0C               	goto	u5785
 14384  1712  082E               	movf	??___flmul,w
 14385  1713  07BA               	addwf	___flmul@prod,f
 14386  1714  082F               	movf	??___flmul+1,w
 14387  1715  3DBB               	addwfc	___flmul@prod+1,f
 14388  1716  0830               	movf	??___flmul+2,w
 14389  1717  3DBC               	addwfc	___flmul@prod+2,f
 14390  1718  0831               	movf	??___flmul+3,w
 14391  1719  3DBD               	addwfc	___flmul@prod+3,f
 14392  171A                     l4537:	
 14393  171A  0834               	movf	___flmul@grs,w
 14394  171B  00AE               	movwf	??___flmul
 14395  171C  0835               	movf	___flmul@grs+1,w
 14396  171D  00AF               	movwf	??___flmul+1
 14397  171E  0836               	movf	___flmul@grs+2,w
 14398  171F  00B0               	movwf	??___flmul+2
 14399  1720  0837               	movf	___flmul@grs+3,w
 14400  1721  00B1               	movwf	??___flmul+3
 14401  1722  3018               	movlw	24
 14402  1723                     u5795:	
 14403  1723  36B1               	lsrf	??___flmul+3,f
 14404  1724  0CB0               	rrf	??___flmul+2,f
 14405  1725  0CAF               	rrf	??___flmul+1,f
 14406  1726  0CAE               	rrf	??___flmul,f
 14407  1727                     u5790:	
 14408  1727  0B89               	decfsz	9,f
 14409  1728  2F23               	goto	u5795
 14410  1729  082E               	movf	??___flmul,w
 14411  172A  07BA               	addwf	___flmul@prod,f
 14412  172B  082F               	movf	??___flmul+1,w
 14413  172C  3DBB               	addwfc	___flmul@prod+1,f
 14414  172D  0830               	movf	??___flmul+2,w
 14415  172E  3DBC               	addwfc	___flmul@prod+2,f
 14416  172F  0831               	movf	??___flmul+3,w
 14417  1730  3DBD               	addwfc	___flmul@prod+3,f
 14418  1731                     l4539:	
 14419  1731  3008               	movlw	8
 14420  1732                     u5805:	
 14421  1732  35B4               	lslf	___flmul@grs,f
 14422  1733  0DB5               	rlf	___flmul@grs+1,f
 14423  1734  0DB6               	rlf	___flmul@grs+2,f
 14424  1735  0DB7               	rlf	___flmul@grs+3,f
 14425  1736  0B89               	decfsz	9,f
 14426  1737  2F32               	goto	u5805
 14427  1738                     l4541:	
 14428  1738  0839               	movf	___flmul@bexp,w
 14429  1739  0738               	addwf	___flmul@aexp,w
 14430  173A  00AE               	movwf	??___flmul
 14431  173B  01AF               	clrf	??___flmul+1
 14432  173C  0DAF               	rlf	??___flmul+1,f
 14433  173D  082E               	movf	??___flmul,w
 14434  173E  3E82               	addlw	130
 14435  173F  00BE               	movwf	___flmul@temp
 14436  1740  30FF               	movlw	255
 14437  1741  3D2F               	addwfc	??___flmul+1,w
 14438  1742  00BF               	movwf	___flmul@temp+1
 14439  1743  2F5B               	goto	l4553
 14440  1744                     l4543:	
 14441  1744  3001               	movlw	1
 14442  1745                     u5815:	
 14443  1745  35BA               	lslf	___flmul@prod,f
 14444  1746  0DBB               	rlf	___flmul@prod+1,f
 14445  1747  0DBC               	rlf	___flmul@prod+2,f
 14446  1748  0DBD               	rlf	___flmul@prod+3,f
 14447  1749  0B89               	decfsz	9,f
 14448  174A  2F45               	goto	u5815
 14449  174B                     l4545:	
 14450  174B  1FB7               	btfss	___flmul@grs+3,7
 14451  174C  2F4E               	goto	u5821
 14452  174D  2F4F               	goto	u5820
 14453  174E                     u5821:	
 14454  174E  2F50               	goto	l4549
 14455  174F                     u5820:	
 14456  174F                     l4547:	
 14457  174F  143A               	bsf	___flmul@prod,0
 14458  1750                     l4549:	
 14459  1750  3001               	movlw	1
 14460  1751                     u5835:	
 14461  1751  35B4               	lslf	___flmul@grs,f
 14462  1752  0DB5               	rlf	___flmul@grs+1,f
 14463  1753  0DB6               	rlf	___flmul@grs+2,f
 14464  1754  0DB7               	rlf	___flmul@grs+3,f
 14465  1755  0B89               	decfsz	9,f
 14466  1756  2F51               	goto	u5835
 14467  1757                     l4551:	
 14468  1757  30FF               	movlw	255
 14469  1758  07BE               	addwf	___flmul@temp,f
 14470  1759  30FF               	movlw	255
 14471  175A  3DBF               	addwfc	___flmul@temp+1,f
 14472  175B                     l4553:	
 14473  175B  1FBC               	btfss	___flmul@prod+2,7
 14474  175C  2F5E               	goto	u5841
 14475  175D  2F5F               	goto	u5840
 14476  175E                     u5841:	
 14477  175E  2F44               	goto	l4543
 14478  175F                     u5840:	
 14479  175F                     l4555:	
 14480  175F  01B8               	clrf	___flmul@aexp
 14481  1760                     l4557:	
 14482  1760  1FB7               	btfss	___flmul@grs+3,7
 14483  1761  2F63               	goto	u5851
 14484  1762  2F64               	goto	u5850
 14485  1763                     u5851:	
 14486  1763  2F80               	goto	l4565
 14487  1764                     u5850:	
 14488  1764                     l4559:	
 14489  1764  30FF               	movlw	255
 14490  1765  0534               	andwf	___flmul@grs,w
 14491  1766  00AE               	movwf	??___flmul
 14492  1767  30FF               	movlw	255
 14493  1768  0535               	andwf	___flmul@grs+1,w
 14494  1769  00AF               	movwf	??___flmul+1
 14495  176A  30FF               	movlw	255
 14496  176B  0536               	andwf	___flmul@grs+2,w
 14497  176C  00B0               	movwf	??___flmul+2
 14498  176D  307F               	movlw	127
 14499  176E  0537               	andwf	___flmul@grs+3,w
 14500  176F  00B1               	movwf	??___flmul+3
 14501  1770  0831               	movf	??___flmul+3,w
 14502  1771  0430               	iorwf	??___flmul+2,w
 14503  1772  042F               	iorwf	??___flmul+1,w
 14504  1773  042E               	iorwf	??___flmul,w
 14505  1774  1903               	skipnz
 14506  1775  2F77               	goto	u5861
 14507  1776  2F78               	goto	u5860
 14508  1777                     u5861:	
 14509  1777  2F7B               	goto	l1199
 14510  1778                     u5860:	
 14511  1778                     l4561:	
 14512  1778  01B8               	clrf	___flmul@aexp
 14513  1779  0AB8               	incf	___flmul@aexp,f
 14514  177A  2F80               	goto	l4565
 14515  177B                     l1199:	
 14516  177B  1C3A               	btfss	___flmul@prod,0
 14517  177C  2F7E               	goto	u5871
 14518  177D  2F7F               	goto	u5870
 14519  177E                     u5871:	
 14520  177E  2F80               	goto	l4565
 14521  177F                     u5870:	
 14522  177F  2F78               	goto	l4561
 14523  1780                     l4565:	
 14524  1780  0838               	movf	___flmul@aexp,w
 14525  1781  1903               	btfsc	3,2
 14526  1782  2F84               	goto	u5881
 14527  1783  2F85               	goto	u5880
 14528  1784                     u5881:	
 14529  1784  2FAD               	goto	l4575
 14530  1785                     u5880:	
 14531  1785                     l4567:	
 14532  1785  3001               	movlw	1
 14533  1786  07BA               	addwf	___flmul@prod,f
 14534  1787  3000               	movlw	0
 14535  1788  3DBB               	addwfc	___flmul@prod+1,f
 14536  1789  3000               	movlw	0
 14537  178A  3DBC               	addwfc	___flmul@prod+2,f
 14538  178B  3000               	movlw	0
 14539  178C  3DBD               	addwfc	___flmul@prod+3,f
 14540  178D                     l4569:	
 14541  178D  1C3D               	btfss	___flmul@prod+3,0
 14542  178E  2F90               	goto	u5891
 14543  178F  2F91               	goto	u5890
 14544  1790                     u5891:	
 14545  1790  2FAD               	goto	l4575
 14546  1791                     u5890:	
 14547  1791                     l4571:	
 14548  1791  083A               	movf	___flmul@prod,w
 14549  1792  00AE               	movwf	??___flmul
 14550  1793  083B               	movf	___flmul@prod+1,w
 14551  1794  00AF               	movwf	??___flmul+1
 14552  1795  083C               	movf	___flmul@prod+2,w
 14553  1796  00B0               	movwf	??___flmul+2
 14554  1797  083D               	movf	___flmul@prod+3,w
 14555  1798  00B1               	movwf	??___flmul+3
 14556  1799  3001               	movlw	1
 14557  179A  00B2               	movwf	??___flmul+4
 14558  179B                     u5905:	
 14559  179B  37B1               	asrf	??___flmul+3,f
 14560  179C  0CB0               	rrf	??___flmul+2,f
 14561  179D  0CAF               	rrf	??___flmul+1,f
 14562  179E  0CAE               	rrf	??___flmul,f
 14563  179F                     u5900:	
 14564  179F  0BB2               	decfsz	??___flmul+4,f
 14565  17A0  2F9B               	goto	u5905
 14566  17A1  0831               	movf	??___flmul+3,w
 14567  17A2  00BD               	movwf	___flmul@prod+3
 14568  17A3  0830               	movf	??___flmul+2,w
 14569  17A4  00BC               	movwf	___flmul@prod+2
 14570  17A5  082F               	movf	??___flmul+1,w
 14571  17A6  00BB               	movwf	___flmul@prod+1
 14572  17A7  082E               	movf	??___flmul,w
 14573  17A8  00BA               	movwf	___flmul@prod
 14574  17A9                     l4573:	
 14575  17A9  3001               	movlw	1
 14576  17AA  07BE               	addwf	___flmul@temp,f
 14577  17AB  3000               	movlw	0
 14578  17AC  3DBF               	addwfc	___flmul@temp+1,f
 14579  17AD                     l4575:	
 14580  17AD  083F               	movf	___flmul@temp+1,w
 14581  17AE  3A80               	xorlw	128
 14582  17AF  00AE               	movwf	??___flmul
 14583  17B0  3080               	movlw	128
 14584  17B1  022E               	subwf	??___flmul,w
 14585  17B2  1D03               	skipz
 14586  17B3  2FB6               	goto	u5915
 14587  17B4  30FF               	movlw	255
 14588  17B5  023E               	subwf	___flmul@temp,w
 14589  17B6                     u5915:	
 14590  17B6  1C03               	skipc
 14591  17B7  2FB9               	goto	u5911
 14592  17B8  2FBA               	goto	u5910
 14593  17B9                     u5911:	
 14594  17B9  2FC4               	goto	l4579
 14595  17BA                     u5910:	
 14596  17BA                     l4577:	
 14597  17BA  307F               	movlw	127
 14598  17BB  0020               	movlb	0	; select bank0
 14599  17BC  00BD               	movwf	___flmul@prod+3
 14600  17BD  3080               	movlw	128
 14601  17BE  00BC               	movwf	___flmul@prod+2
 14602  17BF  3000               	movlw	0
 14603  17C0  00BB               	movwf	___flmul@prod+1
 14604  17C1  3000               	movlw	0
 14605  17C2  00BA               	movwf	___flmul@prod
 14606  17C3  2FF3               	goto	l1205
 14607  17C4                     l4579:	
 14608  17C4  0020               	movlb	0	; select bank0
 14609  17C5  083F               	movf	___flmul@temp+1,w
 14610  17C6  3A80               	xorlw	128
 14611  17C7  00AE               	movwf	??___flmul
 14612  17C8  3080               	movlw	128
 14613  17C9  022E               	subwf	??___flmul,w
 14614  17CA  1D03               	skipz
 14615  17CB  2FCE               	goto	u5925
 14616  17CC  3001               	movlw	1
 14617  17CD  023E               	subwf	___flmul@temp,w
 14618  17CE                     u5925:	
 14619  17CE  1803               	skipnc
 14620  17CF  2FD1               	goto	u5921
 14621  17D0  2FD2               	goto	u5920
 14622  17D1                     u5921:	
 14623  17D1  2FDD               	goto	l4585
 14624  17D2                     u5920:	
 14625  17D2                     l4581:	
 14626  17D2  3000               	movlw	0
 14627  17D3  0020               	movlb	0	; select bank0
 14628  17D4  00BD               	movwf	___flmul@prod+3
 14629  17D5  3000               	movlw	0
 14630  17D6  00BC               	movwf	___flmul@prod+2
 14631  17D7  3000               	movlw	0
 14632  17D8  00BB               	movwf	___flmul@prod+1
 14633  17D9  3000               	movlw	0
 14634  17DA  00BA               	movwf	___flmul@prod
 14635  17DB                     l4583:	
 14636  17DB  01B3               	clrf	___flmul@sign
 14637  17DC  2FF3               	goto	l1205
 14638  17DD                     l4585:	
 14639  17DD  0020               	movlb	0	; select bank0
 14640  17DE  083E               	movf	___flmul@temp,w
 14641  17DF  00AE               	movwf	??___flmul
 14642  17E0  082E               	movf	??___flmul,w
 14643  17E1  00B9               	movwf	___flmul@bexp
 14644  17E2  30FF               	movlw	255
 14645  17E3  05BA               	andwf	___flmul@prod,f
 14646  17E4  30FF               	movlw	255
 14647  17E5  05BB               	andwf	___flmul@prod+1,f
 14648  17E6  307F               	movlw	127
 14649  17E7  05BC               	andwf	___flmul@prod+2,f
 14650  17E8  3000               	movlw	0
 14651  17E9  05BD               	andwf	___flmul@prod+3,f
 14652  17EA                     l4587:	
 14653  17EA  1C39               	btfss	___flmul@bexp,0
 14654  17EB  2FED               	goto	u5931
 14655  17EC  2FEE               	goto	u5930
 14656  17ED                     u5931:	
 14657  17ED  2FEF               	goto	l4591
 14658  17EE                     u5930:	
 14659  17EE                     l4589:	
 14660  17EE  17BC               	bsf	___flmul@prod+2,7
 14661  17EF                     l4591:	
 14662  17EF  3639               	lsrf	___flmul@bexp,w
 14663  17F0  00AE               	movwf	??___flmul
 14664  17F1  082E               	movf	??___flmul,w
 14665  17F2  00BD               	movwf	___flmul@prod+3
 14666  17F3                     l1205:	
 14667  17F3  0833               	movf	___flmul@sign,w
 14668  17F4  00AE               	movwf	??___flmul
 14669  17F5  082E               	movf	??___flmul,w
 14670  17F6  04BD               	iorwf	___flmul@prod+3,f
 14671  17F7                     l4593:	
 14672  17F7  083D               	movf	___flmul@prod+3,w
 14673  17F8  00A9               	movwf	?___flmul+3
 14674  17F9  083C               	movf	___flmul@prod+2,w
 14675  17FA  00A8               	movwf	?___flmul+2
 14676  17FB  083B               	movf	___flmul@prod+1,w
 14677  17FC  00A7               	movwf	?___flmul+1
 14678  17FD  083A               	movf	___flmul@prod,w
 14679  17FE  00A6               	movwf	?___flmul
 14680  17FF                     l1193:	
 14681  17FF  0008               	return
 14682  1800                     __end_of___flmul:	
 14683                           
 14684                           	psect	text47
 14685  222D                     __ptext47:	
 14686 ;; *************** function __Umul8_16 *****************
 14687 ;; Defined at:
 14688 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;  multiplier      1    wreg     unsigned char 
 14691 ;;  multiplicand    1    1[COMMON] unsigned char 
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;  multiplier      1    9[COMMON] unsigned char 
 14694 ;;  word_mpld       2    7[COMMON] unsigned int 
 14695 ;;  product         2    5[COMMON] unsigned int 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  2    1[COMMON] unsigned int 
 14698 ;; Registers used:
 14699 ;;		wreg, status,2, status,0
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14708 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14709 ;;Total ram usage:        9 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    1
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		___flmul
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           
 14720                           ;psect for function __Umul8_16
 14721  222D                     __Umul8_16:	
 14722                           
 14723                           ;incstack = 0
 14724                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14725                           ;__Umul8_16@multiplier stored from wreg
 14726  222D  00F9               	movwf	__Umul8_16@multiplier
 14727  222E                     l3959:	
 14728  222E  01F5               	clrf	__Umul8_16@product
 14729  222F  01F6               	clrf	__Umul8_16@product+1
 14730  2230                     l3961:	
 14731  2230  0871               	movf	__Umul8_16@multiplicand,w
 14732  2231  00F3               	movwf	??__Umul8_16
 14733  2232  01F4               	clrf	??__Umul8_16+1
 14734  2233  0873               	movf	??__Umul8_16,w
 14735  2234  00F7               	movwf	__Umul8_16@word_mpld
 14736  2235  0874               	movf	??__Umul8_16+1,w
 14737  2236  00F8               	movwf	__Umul8_16@word_mpld+1
 14738  2237                     l3963:	
 14739  2237  1C79               	btfss	__Umul8_16@multiplier,0
 14740  2238  2A3A               	goto	u4431
 14741  2239  2A3B               	goto	u4430
 14742  223A                     u4431:	
 14743  223A  2A3F               	goto	l1401
 14744  223B                     u4430:	
 14745  223B                     l3965:	
 14746  223B  0877               	movf	__Umul8_16@word_mpld,w
 14747  223C  07F5               	addwf	__Umul8_16@product,f
 14748  223D  0878               	movf	__Umul8_16@word_mpld+1,w
 14749  223E  3DF6               	addwfc	__Umul8_16@product+1,f
 14750  223F                     l1401:	
 14751  223F  3001               	movlw	1
 14752  2240                     u4445:	
 14753  2240  35F7               	lslf	__Umul8_16@word_mpld,f
 14754  2241  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 14755  2242  0B89               	decfsz	9,f
 14756  2243  2A40               	goto	u4445
 14757  2244  1003               	clrc
 14758  2245  0CF9               	rrf	__Umul8_16@multiplier,f
 14759  2246                     l3967:	
 14760  2246  0879               	movf	__Umul8_16@multiplier,w
 14761  2247  1D03               	btfss	3,2
 14762  2248  2A4A               	goto	u4451
 14763  2249  2A4B               	goto	u4450
 14764  224A                     u4451:	
 14765  224A  2A37               	goto	l3963
 14766  224B                     u4450:	
 14767  224B                     l3969:	
 14768  224B  0876               	movf	__Umul8_16@product+1,w
 14769  224C  00F2               	movwf	?__Umul8_16+1
 14770  224D  0875               	movf	__Umul8_16@product,w
 14771  224E  00F1               	movwf	?__Umul8_16
 14772  224F                     l1403:	
 14773  224F  0008               	return
 14774  2250                     __end_of__Umul8_16:	
 14775                           
 14776                           	psect	text48
 14777  0816                     __ptext48:	
 14778 ;; *************** function ___fldiv *****************
 14779 ;; Defined at:
 14780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 14781 ;; Parameters:    Size  Location     Type
 14782 ;;  a               4   32[BANK0 ] unsigned int 
 14783 ;;  b               4   36[BANK0 ] unsigned int 
 14784 ;; Auto vars:     Size  Location     Type
 14785 ;;  grs             4   52[BANK0 ] unsigned long 
 14786 ;;  rem             4   45[BANK0 ] unsigned long 
 14787 ;;  new_exp         2   50[BANK0 ] int 
 14788 ;;  aexp            1   57[BANK0 ] unsigned char 
 14789 ;;  bexp            1   56[BANK0 ] unsigned char 
 14790 ;;  sign            1   49[BANK0 ] unsigned char 
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  4   32[BANK0 ] unsigned char 
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14800 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;Total ram usage:       26 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    1
 14807 ;; This function calls:
 14808 ;;		Nothing
 14809 ;; This function is called by:
 14810 ;;		_read_volt
 14811 ;;		_freq_count
 14812 ;;		_efgtoa
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           
 14817                           ;psect for function ___fldiv
 14818  0816                     ___fldiv:	
 14819  0816                     l4317:	
 14820                           ;incstack = 0
 14821                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 14822                           
 14823  0816  0020               	movlb	0	; select bank0
 14824  0817  0847               	movf	___fldiv@b+3,w
 14825  0818  3980               	andlw	128
 14826  0819  00C8               	movwf	??___fldiv
 14827  081A  0848               	movf	??___fldiv,w
 14828  081B  00D1               	movwf	___fldiv@sign
 14829  081C                     l4319:	
 14830  081C  3547               	lslf	___fldiv@b+3,w
 14831  081D  00C8               	movwf	??___fldiv
 14832  081E  0848               	movf	??___fldiv,w
 14833  081F  00D8               	movwf	___fldiv@bexp
 14834  0820                     l4321:	
 14835  0820  1FC6               	btfss	___fldiv@b+2,7
 14836  0821  2823               	goto	u5391
 14837  0822  2824               	goto	u5390
 14838  0823                     u5391:	
 14839  0823  2825               	goto	l4325
 14840  0824                     u5390:	
 14841  0824                     l4323:	
 14842  0824  1458               	bsf	___fldiv@bexp,0
 14843  0825                     l4325:	
 14844  0825  0858               	movf	___fldiv@bexp,w
 14845  0826  1903               	btfsc	3,2
 14846  0827  2829               	goto	u5401
 14847  0828  282A               	goto	u5400
 14848  0829                     u5401:	
 14849  0829  283A               	goto	l4335
 14850  082A                     u5400:	
 14851  082A                     l4327:	
 14852  082A  0A58               	incf	___fldiv@bexp,w
 14853  082B  1D03               	btfss	3,2
 14854  082C  282E               	goto	u5411
 14855  082D  282F               	goto	u5410
 14856  082E                     u5411:	
 14857  082E  2837               	goto	l4331
 14858  082F                     u5410:	
 14859  082F                     l4329:	
 14860  082F  3000               	movlw	0
 14861  0830  00C7               	movwf	___fldiv@b+3
 14862  0831  3000               	movlw	0
 14863  0832  00C6               	movwf	___fldiv@b+2
 14864  0833  3000               	movlw	0
 14865  0834  00C5               	movwf	___fldiv@b+1
 14866  0835  3000               	movlw	0
 14867  0836  00C4               	movwf	___fldiv@b
 14868  0837                     l4331:	
 14869  0837  17C6               	bsf	___fldiv@b+2,7
 14870  0838                     l4333:	
 14871  0838  01C7               	clrf	___fldiv@b+3
 14872  0839  2842               	goto	l4337
 14873  083A                     l4335:	
 14874  083A  3000               	movlw	0
 14875  083B  00C7               	movwf	___fldiv@b+3
 14876  083C  3000               	movlw	0
 14877  083D  00C6               	movwf	___fldiv@b+2
 14878  083E  3000               	movlw	0
 14879  083F  00C5               	movwf	___fldiv@b+1
 14880  0840  3000               	movlw	0
 14881  0841  00C4               	movwf	___fldiv@b
 14882  0842                     l4337:	
 14883  0842  0843               	movf	___fldiv@a+3,w
 14884  0843  3980               	andlw	128
 14885  0844  00C8               	movwf	??___fldiv
 14886  0845  0848               	movf	??___fldiv,w
 14887  0846  06D1               	xorwf	___fldiv@sign,f
 14888  0847                     l4339:	
 14889  0847  3543               	lslf	___fldiv@a+3,w
 14890  0848  00C8               	movwf	??___fldiv
 14891  0849  0848               	movf	??___fldiv,w
 14892  084A  00D9               	movwf	___fldiv@aexp
 14893  084B                     l4341:	
 14894  084B  1FC2               	btfss	___fldiv@a+2,7
 14895  084C  284E               	goto	u5421
 14896  084D  284F               	goto	u5420
 14897  084E                     u5421:	
 14898  084E  2850               	goto	l4345
 14899  084F                     u5420:	
 14900  084F                     l4343:	
 14901  084F  1459               	bsf	___fldiv@aexp,0
 14902  0850                     l4345:	
 14903  0850  0859               	movf	___fldiv@aexp,w
 14904  0851  1903               	btfsc	3,2
 14905  0852  2854               	goto	u5431
 14906  0853  2855               	goto	u5430
 14907  0854                     u5431:	
 14908  0854  2865               	goto	l4355
 14909  0855                     u5430:	
 14910  0855                     l4347:	
 14911  0855  0A59               	incf	___fldiv@aexp,w
 14912  0856  1D03               	btfss	3,2
 14913  0857  2859               	goto	u5441
 14914  0858  285A               	goto	u5440
 14915  0859                     u5441:	
 14916  0859  2862               	goto	l4351
 14917  085A                     u5440:	
 14918  085A                     l4349:	
 14919  085A  3000               	movlw	0
 14920  085B  00C3               	movwf	___fldiv@a+3
 14921  085C  3000               	movlw	0
 14922  085D  00C2               	movwf	___fldiv@a+2
 14923  085E  3000               	movlw	0
 14924  085F  00C1               	movwf	___fldiv@a+1
 14925  0860  3000               	movlw	0
 14926  0861  00C0               	movwf	___fldiv@a
 14927  0862                     l4351:	
 14928  0862  17C2               	bsf	___fldiv@a+2,7
 14929  0863                     l4353:	
 14930  0863  01C3               	clrf	___fldiv@a+3
 14931  0864  286D               	goto	l1153
 14932  0865                     l4355:	
 14933  0865  3000               	movlw	0
 14934  0866  00C3               	movwf	___fldiv@a+3
 14935  0867  3000               	movlw	0
 14936  0868  00C2               	movwf	___fldiv@a+2
 14937  0869  3000               	movlw	0
 14938  086A  00C1               	movwf	___fldiv@a+1
 14939  086B  3000               	movlw	0
 14940  086C  00C0               	movwf	___fldiv@a
 14941  086D                     l1153:	
 14942  086D  0843               	movf	___fldiv@a+3,w
 14943  086E  0442               	iorwf	___fldiv@a+2,w
 14944  086F  0441               	iorwf	___fldiv@a+1,w
 14945  0870  0440               	iorwf	___fldiv@a,w
 14946  0871  1D03               	skipz
 14947  0872  2874               	goto	u5451
 14948  0873  2875               	goto	u5450
 14949  0874                     u5451:	
 14950  0874  288E               	goto	l4365
 14951  0875                     u5450:	
 14952  0875                     l4357:	
 14953  0875  3000               	movlw	0
 14954  0876  00C7               	movwf	___fldiv@b+3
 14955  0877  3000               	movlw	0
 14956  0878  00C6               	movwf	___fldiv@b+2
 14957  0879  3000               	movlw	0
 14958  087A  00C5               	movwf	___fldiv@b+1
 14959  087B  3000               	movlw	0
 14960  087C  00C4               	movwf	___fldiv@b
 14961  087D  3080               	movlw	128
 14962  087E  04C6               	iorwf	___fldiv@b+2,f
 14963  087F  307F               	movlw	127
 14964  0880  04C7               	iorwf	___fldiv@b+3,f
 14965  0881                     l4359:	
 14966  0881  0851               	movf	___fldiv@sign,w
 14967  0882  00C8               	movwf	??___fldiv
 14968  0883  0848               	movf	??___fldiv,w
 14969  0884  04C7               	iorwf	___fldiv@b+3,f
 14970  0885                     l4361:	
 14971  0885  0847               	movf	___fldiv@b+3,w
 14972  0886  00C3               	movwf	?___fldiv+3
 14973  0887  0846               	movf	___fldiv@b+2,w
 14974  0888  00C2               	movwf	?___fldiv+2
 14975  0889  0845               	movf	___fldiv@b+1,w
 14976  088A  00C1               	movwf	?___fldiv+1
 14977  088B  0844               	movf	___fldiv@b,w
 14978  088C  00C0               	movwf	?___fldiv
 14979  088D  29C9               	goto	l1155
 14980  088E                     l4365:	
 14981  088E  0858               	movf	___fldiv@bexp,w
 14982  088F  1D03               	btfss	3,2
 14983  0890  2892               	goto	u5461
 14984  0891  2893               	goto	u5460
 14985  0892                     u5461:	
 14986  0892  289C               	goto	l4371
 14987  0893                     u5460:	
 14988  0893                     l4367:	
 14989  0893  3000               	movlw	0
 14990  0894  00C3               	movwf	?___fldiv+3
 14991  0895  3000               	movlw	0
 14992  0896  00C2               	movwf	?___fldiv+2
 14993  0897  3000               	movlw	0
 14994  0898  00C1               	movwf	?___fldiv+1
 14995  0899  3000               	movlw	0
 14996  089A  00C0               	movwf	?___fldiv
 14997  089B  29C9               	goto	l1155
 14998  089C                     l4371:	
 14999  089C  0858               	movf	___fldiv@bexp,w
 15000  089D  00C8               	movwf	??___fldiv
 15001  089E  01C9               	clrf	??___fldiv+1
 15002  089F  0849               	movf	??___fldiv+1,w
 15003  08A0  00CB               	movwf	??___fldiv+3
 15004  08A1  0859               	movf	___fldiv@aexp,w
 15005  08A2  0248               	subwf	??___fldiv,w
 15006  08A3  00CA               	movwf	??___fldiv+2
 15007  08A4  1C03               	skipc
 15008  08A5  03CB               	decf	??___fldiv+3,f
 15009  08A6  084A               	movf	??___fldiv+2,w
 15010  08A7  3E7F               	addlw	127
 15011  08A8  00D2               	movwf	___fldiv@new_exp
 15012  08A9  3000               	movlw	0
 15013  08AA  3D4B               	addwfc	??___fldiv+3,w
 15014  08AB  00D3               	movwf	___fldiv@new_exp+1
 15015  08AC                     l4373:	
 15016  08AC  0847               	movf	___fldiv@b+3,w
 15017  08AD  00D0               	movwf	___fldiv@rem+3
 15018  08AE  0846               	movf	___fldiv@b+2,w
 15019  08AF  00CF               	movwf	___fldiv@rem+2
 15020  08B0  0845               	movf	___fldiv@b+1,w
 15021  08B1  00CE               	movwf	___fldiv@rem+1
 15022  08B2  0844               	movf	___fldiv@b,w
 15023  08B3  00CD               	movwf	___fldiv@rem
 15024  08B4                     l4375:	
 15025  08B4  3000               	movlw	0
 15026  08B5  00C7               	movwf	___fldiv@b+3
 15027  08B6  3000               	movlw	0
 15028  08B7  00C6               	movwf	___fldiv@b+2
 15029  08B8  3000               	movlw	0
 15030  08B9  00C5               	movwf	___fldiv@b+1
 15031  08BA  3000               	movlw	0
 15032  08BB  00C4               	movwf	___fldiv@b
 15033  08BC                     l4377:	
 15034  08BC  3000               	movlw	0
 15035  08BD  00D7               	movwf	___fldiv@grs+3
 15036  08BE  3000               	movlw	0
 15037  08BF  00D6               	movwf	___fldiv@grs+2
 15038  08C0  3000               	movlw	0
 15039  08C1  00D5               	movwf	___fldiv@grs+1
 15040  08C2  3000               	movlw	0
 15041  08C3  00D4               	movwf	___fldiv@grs
 15042  08C4                     l4379:	
 15043  08C4  01D9               	clrf	___fldiv@aexp
 15044  08C5  2904               	goto	l4399
 15045  08C6                     l4381:	
 15046  08C6  0859               	movf	___fldiv@aexp,w
 15047  08C7  1903               	btfsc	3,2
 15048  08C8  28CA               	goto	u5471
 15049  08C9  28CB               	goto	u5470
 15050  08CA                     u5471:	
 15051  08CA  28E5               	goto	l4391
 15052  08CB                     u5470:	
 15053  08CB                     l4383:	
 15054  08CB  3001               	movlw	1
 15055  08CC                     u5485:	
 15056  08CC  35CD               	lslf	___fldiv@rem,f
 15057  08CD  0DCE               	rlf	___fldiv@rem+1,f
 15058  08CE  0DCF               	rlf	___fldiv@rem+2,f
 15059  08CF  0DD0               	rlf	___fldiv@rem+3,f
 15060  08D0  0B89               	decfsz	9,f
 15061  08D1  28CC               	goto	u5485
 15062  08D2  3001               	movlw	1
 15063  08D3                     u5495:	
 15064  08D3  35C4               	lslf	___fldiv@b,f
 15065  08D4  0DC5               	rlf	___fldiv@b+1,f
 15066  08D5  0DC6               	rlf	___fldiv@b+2,f
 15067  08D6  0DC7               	rlf	___fldiv@b+3,f
 15068  08D7  0B89               	decfsz	9,f
 15069  08D8  28D3               	goto	u5495
 15070  08D9                     l4385:	
 15071  08D9  1FD7               	btfss	___fldiv@grs+3,7
 15072  08DA  28DC               	goto	u5501
 15073  08DB  28DD               	goto	u5500
 15074  08DC                     u5501:	
 15075  08DC  28DE               	goto	l4389
 15076  08DD                     u5500:	
 15077  08DD                     l4387:	
 15078  08DD  1444               	bsf	___fldiv@b,0
 15079  08DE                     l4389:	
 15080  08DE  3001               	movlw	1
 15081  08DF                     u5515:	
 15082  08DF  35D4               	lslf	___fldiv@grs,f
 15083  08E0  0DD5               	rlf	___fldiv@grs+1,f
 15084  08E1  0DD6               	rlf	___fldiv@grs+2,f
 15085  08E2  0DD7               	rlf	___fldiv@grs+3,f
 15086  08E3  0B89               	decfsz	9,f
 15087  08E4  28DF               	goto	u5515
 15088  08E5                     l4391:	
 15089  08E5  0843               	movf	___fldiv@a+3,w
 15090  08E6  0250               	subwf	___fldiv@rem+3,w
 15091  08E7  1D03               	skipz
 15092  08E8  28F3               	goto	u5525
 15093  08E9  0842               	movf	___fldiv@a+2,w
 15094  08EA  024F               	subwf	___fldiv@rem+2,w
 15095  08EB  1D03               	skipz
 15096  08EC  28F3               	goto	u5525
 15097  08ED  0841               	movf	___fldiv@a+1,w
 15098  08EE  024E               	subwf	___fldiv@rem+1,w
 15099  08EF  1D03               	skipz
 15100  08F0  28F3               	goto	u5525
 15101  08F1  0840               	movf	___fldiv@a,w
 15102  08F2  024D               	subwf	___fldiv@rem,w
 15103  08F3                     u5525:	
 15104  08F3  1C03               	skipc
 15105  08F4  28F6               	goto	u5521
 15106  08F5  28F7               	goto	u5520
 15107  08F6                     u5521:	
 15108  08F6  2900               	goto	l4397
 15109  08F7                     u5520:	
 15110  08F7                     l4393:	
 15111  08F7  1757               	bsf	___fldiv@grs+3,6
 15112  08F8                     l4395:	
 15113  08F8  0840               	movf	___fldiv@a,w
 15114  08F9  02CD               	subwf	___fldiv@rem,f
 15115  08FA  0841               	movf	___fldiv@a+1,w
 15116  08FB  3BCE               	subwfb	___fldiv@rem+1,f
 15117  08FC  0842               	movf	___fldiv@a+2,w
 15118  08FD  3BCF               	subwfb	___fldiv@rem+2,f
 15119  08FE  0843               	movf	___fldiv@a+3,w
 15120  08FF  3BD0               	subwfb	___fldiv@rem+3,f
 15121  0900                     l4397:	
 15122  0900  3001               	movlw	1
 15123  0901  00C8               	movwf	??___fldiv
 15124  0902  0848               	movf	??___fldiv,w
 15125  0903  07D9               	addwf	___fldiv@aexp,f
 15126  0904                     l4399:	
 15127  0904  301A               	movlw	26
 15128  0905  0259               	subwf	___fldiv@aexp,w
 15129  0906  1C03               	skipc
 15130  0907  2909               	goto	u5531
 15131  0908  290A               	goto	u5530
 15132  0909                     u5531:	
 15133  0909  28C6               	goto	l4381
 15134  090A                     u5530:	
 15135  090A                     l4401:	
 15136  090A  0850               	movf	___fldiv@rem+3,w
 15137  090B  044F               	iorwf	___fldiv@rem+2,w
 15138  090C  044E               	iorwf	___fldiv@rem+1,w
 15139  090D  044D               	iorwf	___fldiv@rem,w
 15140  090E  1903               	skipnz
 15141  090F  2911               	goto	u5541
 15142  0910  2912               	goto	u5540
 15143  0911                     u5541:	
 15144  0911  292B               	goto	l4415
 15145  0912                     u5540:	
 15146  0912                     l4403:	
 15147  0912  1454               	bsf	___fldiv@grs,0
 15148  0913  292B               	goto	l4415
 15149  0914                     l4405:	
 15150  0914  3001               	movlw	1
 15151  0915                     u5555:	
 15152  0915  35C4               	lslf	___fldiv@b,f
 15153  0916  0DC5               	rlf	___fldiv@b+1,f
 15154  0917  0DC6               	rlf	___fldiv@b+2,f
 15155  0918  0DC7               	rlf	___fldiv@b+3,f
 15156  0919  0B89               	decfsz	9,f
 15157  091A  2915               	goto	u5555
 15158  091B                     l4407:	
 15159  091B  1FD7               	btfss	___fldiv@grs+3,7
 15160  091C  291E               	goto	u5561
 15161  091D  291F               	goto	u5560
 15162  091E                     u5561:	
 15163  091E  2920               	goto	l4411
 15164  091F                     u5560:	
 15165  091F                     l4409:	
 15166  091F  1444               	bsf	___fldiv@b,0
 15167  0920                     l4411:	
 15168  0920  3001               	movlw	1
 15169  0921                     u5575:	
 15170  0921  35D4               	lslf	___fldiv@grs,f
 15171  0922  0DD5               	rlf	___fldiv@grs+1,f
 15172  0923  0DD6               	rlf	___fldiv@grs+2,f
 15173  0924  0DD7               	rlf	___fldiv@grs+3,f
 15174  0925  0B89               	decfsz	9,f
 15175  0926  2921               	goto	u5575
 15176  0927                     l4413:	
 15177  0927  30FF               	movlw	255
 15178  0928  07D2               	addwf	___fldiv@new_exp,f
 15179  0929  30FF               	movlw	255
 15180  092A  3DD3               	addwfc	___fldiv@new_exp+1,f
 15181  092B                     l4415:	
 15182  092B  1FC6               	btfss	___fldiv@b+2,7
 15183  092C  292E               	goto	u5581
 15184  092D  292F               	goto	u5580
 15185  092E                     u5581:	
 15186  092E  2914               	goto	l4405
 15187  092F                     u5580:	
 15188  092F                     l4417:	
 15189  092F  01D9               	clrf	___fldiv@aexp
 15190  0930                     l4419:	
 15191  0930  1FD7               	btfss	___fldiv@grs+3,7
 15192  0931  2933               	goto	u5591
 15193  0932  2934               	goto	u5590
 15194  0933                     u5591:	
 15195  0933  2950               	goto	l4427
 15196  0934                     u5590:	
 15197  0934                     l4421:	
 15198  0934  30FF               	movlw	255
 15199  0935  0554               	andwf	___fldiv@grs,w
 15200  0936  00C8               	movwf	??___fldiv
 15201  0937  30FF               	movlw	255
 15202  0938  0555               	andwf	___fldiv@grs+1,w
 15203  0939  00C9               	movwf	??___fldiv+1
 15204  093A  30FF               	movlw	255
 15205  093B  0556               	andwf	___fldiv@grs+2,w
 15206  093C  00CA               	movwf	??___fldiv+2
 15207  093D  307F               	movlw	127
 15208  093E  0557               	andwf	___fldiv@grs+3,w
 15209  093F  00CB               	movwf	??___fldiv+3
 15210  0940  084B               	movf	??___fldiv+3,w
 15211  0941  044A               	iorwf	??___fldiv+2,w
 15212  0942  0449               	iorwf	??___fldiv+1,w
 15213  0943  0448               	iorwf	??___fldiv,w
 15214  0944  1903               	skipnz
 15215  0945  2947               	goto	u5601
 15216  0946  2948               	goto	u5600
 15217  0947                     u5601:	
 15218  0947  294B               	goto	l1169
 15219  0948                     u5600:	
 15220  0948                     l4423:	
 15221  0948  01D9               	clrf	___fldiv@aexp
 15222  0949  0AD9               	incf	___fldiv@aexp,f
 15223  094A  2950               	goto	l4427
 15224  094B                     l1169:	
 15225  094B  1C44               	btfss	___fldiv@b,0
 15226  094C  294E               	goto	u5611
 15227  094D  294F               	goto	u5610
 15228  094E                     u5611:	
 15229  094E  2950               	goto	l4427
 15230  094F                     u5610:	
 15231  094F  2948               	goto	l4423
 15232  0950                     l4427:	
 15233  0950  0859               	movf	___fldiv@aexp,w
 15234  0951  1903               	btfsc	3,2
 15235  0952  2954               	goto	u5621
 15236  0953  2955               	goto	u5620
 15237  0954                     u5621:	
 15238  0954  297D               	goto	l4437
 15239  0955                     u5620:	
 15240  0955                     l4429:	
 15241  0955  3001               	movlw	1
 15242  0956  07C4               	addwf	___fldiv@b,f
 15243  0957  3000               	movlw	0
 15244  0958  3DC5               	addwfc	___fldiv@b+1,f
 15245  0959  3000               	movlw	0
 15246  095A  3DC6               	addwfc	___fldiv@b+2,f
 15247  095B  3000               	movlw	0
 15248  095C  3DC7               	addwfc	___fldiv@b+3,f
 15249  095D                     l4431:	
 15250  095D  1C47               	btfss	___fldiv@b+3,0
 15251  095E  2960               	goto	u5631
 15252  095F  2961               	goto	u5630
 15253  0960                     u5631:	
 15254  0960  297D               	goto	l4437
 15255  0961                     u5630:	
 15256  0961                     l4433:	
 15257  0961  0844               	movf	___fldiv@b,w
 15258  0962  00C8               	movwf	??___fldiv
 15259  0963  0845               	movf	___fldiv@b+1,w
 15260  0964  00C9               	movwf	??___fldiv+1
 15261  0965  0846               	movf	___fldiv@b+2,w
 15262  0966  00CA               	movwf	??___fldiv+2
 15263  0967  0847               	movf	___fldiv@b+3,w
 15264  0968  00CB               	movwf	??___fldiv+3
 15265  0969  3001               	movlw	1
 15266  096A  00CC               	movwf	??___fldiv+4
 15267  096B                     u5645:	
 15268  096B  37CB               	asrf	??___fldiv+3,f
 15269  096C  0CCA               	rrf	??___fldiv+2,f
 15270  096D  0CC9               	rrf	??___fldiv+1,f
 15271  096E  0CC8               	rrf	??___fldiv,f
 15272  096F                     u5640:	
 15273  096F  0BCC               	decfsz	??___fldiv+4,f
 15274  0970  296B               	goto	u5645
 15275  0971  084B               	movf	??___fldiv+3,w
 15276  0972  00C7               	movwf	___fldiv@b+3
 15277  0973  084A               	movf	??___fldiv+2,w
 15278  0974  00C6               	movwf	___fldiv@b+2
 15279  0975  0849               	movf	??___fldiv+1,w
 15280  0976  00C5               	movwf	___fldiv@b+1
 15281  0977  0848               	movf	??___fldiv,w
 15282  0978  00C4               	movwf	___fldiv@b
 15283  0979                     l4435:	
 15284  0979  3001               	movlw	1
 15285  097A  07D2               	addwf	___fldiv@new_exp,f
 15286  097B  3000               	movlw	0
 15287  097C  3DD3               	addwfc	___fldiv@new_exp+1,f
 15288  097D                     l4437:	
 15289  097D  0853               	movf	___fldiv@new_exp+1,w
 15290  097E  3A80               	xorlw	128
 15291  097F  00C8               	movwf	??___fldiv
 15292  0980  3080               	movlw	128
 15293  0981  0248               	subwf	??___fldiv,w
 15294  0982  1D03               	skipz
 15295  0983  2986               	goto	u5655
 15296  0984  30FF               	movlw	255
 15297  0985  0252               	subwf	___fldiv@new_exp,w
 15298  0986                     u5655:	
 15299  0986  1C03               	skipc
 15300  0987  2989               	goto	u5651
 15301  0988  298A               	goto	u5650
 15302  0989                     u5651:	
 15303  0989  2997               	goto	l1174
 15304  098A                     u5650:	
 15305  098A                     l4439:	
 15306  098A  30FF               	movlw	255
 15307  098B  0020               	movlb	0	; select bank0
 15308  098C  00D2               	movwf	___fldiv@new_exp
 15309  098D  3000               	movlw	0
 15310  098E  00D3               	movwf	___fldiv@new_exp+1
 15311  098F  3000               	movlw	0
 15312  0990  00C7               	movwf	___fldiv@b+3
 15313  0991  3000               	movlw	0
 15314  0992  00C6               	movwf	___fldiv@b+2
 15315  0993  3000               	movlw	0
 15316  0994  00C5               	movwf	___fldiv@b+1
 15317  0995  3000               	movlw	0
 15318  0996  00C4               	movwf	___fldiv@b
 15319  0997                     l1174:	
 15320  0997  0020               	movlb	0	; select bank0
 15321  0998  0853               	movf	___fldiv@new_exp+1,w
 15322  0999  3A80               	xorlw	128
 15323  099A  00C8               	movwf	??___fldiv
 15324  099B  3080               	movlw	128
 15325  099C  0248               	subwf	??___fldiv,w
 15326  099D  1D03               	skipz
 15327  099E  29A1               	goto	u5665
 15328  099F  3001               	movlw	1
 15329  09A0  0252               	subwf	___fldiv@new_exp,w
 15330  09A1                     u5665:	
 15331  09A1  1803               	skipnc
 15332  09A2  29A4               	goto	u5661
 15333  09A3  29A5               	goto	u5660
 15334  09A4                     u5661:	
 15335  09A4  29B1               	goto	l1175
 15336  09A5                     u5660:	
 15337  09A5                     l4441:	
 15338  09A5  0020               	movlb	0	; select bank0
 15339  09A6  01D2               	clrf	___fldiv@new_exp
 15340  09A7  01D3               	clrf	___fldiv@new_exp+1
 15341  09A8                     l4443:	
 15342  09A8  3000               	movlw	0
 15343  09A9  00C7               	movwf	___fldiv@b+3
 15344  09AA  3000               	movlw	0
 15345  09AB  00C6               	movwf	___fldiv@b+2
 15346  09AC  3000               	movlw	0
 15347  09AD  00C5               	movwf	___fldiv@b+1
 15348  09AE  3000               	movlw	0
 15349  09AF  00C4               	movwf	___fldiv@b
 15350  09B0                     l4445:	
 15351  09B0  01D1               	clrf	___fldiv@sign
 15352  09B1                     l1175:	
 15353  09B1  0020               	movlb	0	; select bank0
 15354  09B2  0852               	movf	___fldiv@new_exp,w
 15355  09B3  00C8               	movwf	??___fldiv
 15356  09B4  0848               	movf	??___fldiv,w
 15357  09B5  00D8               	movwf	___fldiv@bexp
 15358  09B6                     l4447:	
 15359  09B6  1C58               	btfss	___fldiv@bexp,0
 15360  09B7  29B9               	goto	u5671
 15361  09B8  29BA               	goto	u5670
 15362  09B9                     u5671:	
 15363  09B9  29BC               	goto	l4451
 15364  09BA                     u5670:	
 15365  09BA                     l4449:	
 15366  09BA  17C6               	bsf	___fldiv@b+2,7
 15367  09BB  29C0               	goto	l1177
 15368  09BC                     l4451:	
 15369  09BC  307F               	movlw	127
 15370  09BD  00C8               	movwf	??___fldiv
 15371  09BE  0848               	movf	??___fldiv,w
 15372  09BF  05C6               	andwf	___fldiv@b+2,f
 15373  09C0                     l1177:	
 15374  09C0  3658               	lsrf	___fldiv@bexp,w
 15375  09C1  00C8               	movwf	??___fldiv
 15376  09C2  0848               	movf	??___fldiv,w
 15377  09C3  00C7               	movwf	___fldiv@b+3
 15378  09C4  0851               	movf	___fldiv@sign,w
 15379  09C5  00C8               	movwf	??___fldiv
 15380  09C6  0848               	movf	??___fldiv,w
 15381  09C7  04C7               	iorwf	___fldiv@b+3,f
 15382  09C8  2885               	goto	l4361
 15383  09C9                     l1155:	
 15384  09C9  0008               	return
 15385  09CA                     __end_of___fldiv:	
 15386                           
 15387                           	psect	text49
 15388  246D                     __ptext49:	
 15389 ;; *************** function _lcd_init *****************
 15390 ;; Defined at:
 15391 ;;		line 281 in file "main.c"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;		None
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;		None
 15396 ;; Return value:  Size  Location     Type
 15397 ;;                  1    wreg      void 
 15398 ;; Registers used:
 15399 ;;		wreg, status,2, status,0, pclath, cstack
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;Total ram usage:        1 bytes
 15410 ;; Hardware stack levels used:    1
 15411 ;; Hardware stack levels required when called:    3
 15412 ;; This function calls:
 15413 ;;		_data_write
 15414 ;;		_lcd_cmd
 15415 ;; This function is called by:
 15416 ;;		_main
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           
 15421                           ;psect for function _lcd_init
 15422  246D                     _lcd_init:	
 15423  246D                     l5711:	
 15424                           ;incstack = 0
 15425                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
 15426                           
 15427                           
 15428                           ;main.c: 283:      _delay((unsigned long)((30000)*(8000000/4000000.0)));
 15429  246D  304E               	movlw	78
 15430  246E  00F4               	movwf	??_lcd_init
 15431  246F  30EB               	movlw	235
 15432  2470                     u9377:	
 15433  2470  0B89               	decfsz	9,f
 15434  2471  2C70               	goto	u9377
 15435  2472  0BF4               	decfsz	??_lcd_init,f
 15436  2473  2C70               	goto	u9377
 15437  2474  0000               	nop
 15438  2475                     l5713:	
 15439                           
 15440                           ;main.c: 285:     data_write(0x03);
 15441  2475  3003               	movlw	3
 15442  2476  31A2  22C8  31A4   	fcall	_data_write
 15443  2479                     l5715:	
 15444                           
 15445                           ;main.c: 286:     _delay((unsigned long)((7000)*(8000000/4000000.0)));
 15446  2479  3013               	movlw	19
 15447  247A  00F4               	movwf	??_lcd_init
 15448  247B  302D               	movlw	45
 15449  247C                     u9387:	
 15450  247C  0B89               	decfsz	9,f
 15451  247D  2C7C               	goto	u9387
 15452  247E  0BF4               	decfsz	??_lcd_init,f
 15453  247F  2C7C               	goto	u9387
 15454  2480  0000               	nop
 15455                           
 15456                           ;main.c: 288:     data_write(0x03);
 15457  2481  3003               	movlw	3
 15458  2482  31A2  22C8  31A4   	fcall	_data_write
 15459  2485                     l5717:	
 15460                           
 15461                           ;main.c: 290:     _delay((unsigned long)((500)*(8000000/4000000.0)));
 15462  2485  30C8               	movlw	200
 15463  2486                     u9397:	
 15464  2486  3200               	nop2
 15465  2487  0B89               	decfsz	9,f
 15466  2488  2C86               	goto	u9397
 15467  2489                     l5719:	
 15468                           
 15469                           ;main.c: 292:     data_write(0x03);
 15470  2489  3003               	movlw	3
 15471  248A  31A2  22C8  31A4   	fcall	_data_write
 15472                           
 15473                           ;main.c: 293:     _delay((unsigned long)((850)*(8000000/4000000.0)));
 15474  248D  30F2               	movlw	242
 15475  248E                     u9407:	
 15476  248E  3200               	nop2
 15477  248F  3200               	nop2
 15478  2490  0B89               	decfsz	9,f
 15479  2491  2C8E               	goto	u9407
 15480  2492  3200               	nop2
 15481  2493  3200               	nop2
 15482  2494  3200               	nop2
 15483  2495                     l5721:	
 15484                           
 15485                           ;main.c: 295:     data_write(0x02);
 15486  2495  3002               	movlw	2
 15487  2496  31A2  22C8  31A4   	fcall	_data_write
 15488  2499                     l5723:	
 15489                           
 15490                           ;main.c: 296:     _delay((unsigned long)((400)*(8000000/4000000.0)));
 15491  2499  30A0               	movlw	160
 15492  249A                     u9417:	
 15493  249A  3200               	nop2
 15494  249B  0B89               	decfsz	9,f
 15495  249C  2C9A               	goto	u9417
 15496                           
 15497                           ;main.c: 298:     lcd_cmd(0x28);
 15498  249D  3028               	movlw	40
 15499  249E  31A1  2102  31A4   	fcall	_lcd_cmd
 15500  24A1                     l5725:	
 15501                           
 15502                           ;main.c: 299:     _delay((unsigned long)((300)*(8000000/4000000.0)));
 15503  24A1  30C8               	movlw	200
 15504  24A2                     u9427:	
 15505  24A2  0B89               	decfsz	9,f
 15506  24A3  2CA2               	goto	u9427
 15507  24A4                     l5727:	
 15508                           
 15509                           ;main.c: 300:     _delay((unsigned long)((300)*(8000000/4000000.0)));
 15510  24A4  30C8               	movlw	200
 15511  24A5                     u9437:	
 15512  24A5  0B89               	decfsz	9,f
 15513  24A6  2CA5               	goto	u9437
 15514                           
 15515                           ;main.c: 301:     lcd_cmd(0x0C);
 15516  24A7  300C               	movlw	12
 15517  24A8  31A1  2102  31A4   	fcall	_lcd_cmd
 15518  24AB                     l5729:	
 15519                           
 15520                           ;main.c: 302:     _delay((unsigned long)((300)*(8000000/4000000.0)));
 15521  24AB  30C8               	movlw	200
 15522  24AC                     u9447:	
 15523  24AC  0B89               	decfsz	9,f
 15524  24AD  2CAC               	goto	u9447
 15525  24AE                     l5731:	
 15526                           
 15527                           ;main.c: 303:     lcd_cmd(0x06);
 15528  24AE  3006               	movlw	6
 15529  24AF  31A1  2102  31A4   	fcall	_lcd_cmd
 15530                           
 15531                           ;main.c: 304:     _delay((unsigned long)((300)*(8000000/4000000.0)));
 15532  24B2  30C8               	movlw	200
 15533  24B3                     u9457:	
 15534  24B3  0B89               	decfsz	9,f
 15535  24B4  2CB3               	goto	u9457
 15536  24B5                     l5733:	
 15537                           
 15538                           ;main.c: 305:     lcd_cmd(0x80);
 15539  24B5  3080               	movlw	128
 15540  24B6  31A1  2102  31A4   	fcall	_lcd_cmd
 15541  24B9                     l5735:	
 15542                           
 15543                           ;main.c: 306:     _delay((unsigned long)((300)*(8000000/4000000.0)));
 15544  24B9  30C8               	movlw	200
 15545  24BA                     u9467:	
 15546  24BA  0B89               	decfsz	9,f
 15547  24BB  2CBA               	goto	u9467
 15548  24BC                     l245:	
 15549  24BC  0008               	return
 15550  24BD                     __end_of_lcd_init:	
 15551                           
 15552                           	psect	text50
 15553  1825                     __ptext50:	
 15554 ;; *************** function _init_setting *****************
 15555 ;; Defined at:
 15556 ;;		line 119 in file "main.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;		None
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;		None
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg, status,2
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15574 ;;Total ram usage:        0 bytes
 15575 ;; Hardware stack levels used:    1
 15576 ;; Hardware stack levels required when called:    1
 15577 ;; This function calls:
 15578 ;;		Nothing
 15579 ;; This function is called by:
 15580 ;;		_main
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           
 15585                           ;psect for function _init_setting
 15586  1825                     _init_setting:	
 15587  1825                     l5581:	
 15588                           ;incstack = 0
 15589                           ; Regs used in _init_setting: [wreg+status,2]
 15590                           
 15591                           
 15592                           ;main.c: 122:     OSCCON=0b01110000;
 15593  1825  3070               	movlw	112
 15594  1826  0021               	movlb	1	; select bank1
 15595  1827  0099               	movwf	25	;volatile
 15596  1828                     l5583:	
 15597                           
 15598                           ;main.c: 128:     TRISA0=0;
 15599  1828  100C               	bcf	12,0	;volatile
 15600  1829                     l5585:	
 15601                           
 15602                           ;main.c: 129:     TRISA1=0;
 15603  1829  108C               	bcf	12,1	;volatile
 15604  182A                     l5587:	
 15605                           
 15606                           ;main.c: 130:     TRISA2=0;
 15607  182A  110C               	bcf	12,2	;volatile
 15608  182B                     l5589:	
 15609                           
 15610                           ;main.c: 131:     TRISA3=0;
 15611  182B  118C               	bcf	12,3	;volatile
 15612  182C                     l5591:	
 15613                           
 15614                           ;main.c: 132:     TRISA4=0;
 15615  182C  120C               	bcf	12,4	;volatile
 15616  182D                     l5593:	
 15617                           
 15618                           ;main.c: 133:     TRISA5=0;
 15619  182D  128C               	bcf	12,5	;volatile
 15620  182E                     l5595:	
 15621                           
 15622                           ;main.c: 134:     TRISA6=0;
 15623  182E  130C               	bcf	12,6	;volatile
 15624  182F                     l5597:	
 15625                           
 15626                           ;main.c: 135:     TRISA7=0;
 15627  182F  138C               	bcf	12,7	;volatile
 15628  1830                     l5599:	
 15629                           
 15630                           ;main.c: 136:     ANSA0=0;
 15631  1830  0023               	movlb	3	; select bank3
 15632  1831  100C               	bcf	12,0	;volatile
 15633  1832                     l5601:	
 15634                           
 15635                           ;main.c: 137:     ANSA1=0;
 15636  1832  108C               	bcf	12,1	;volatile
 15637  1833                     l5603:	
 15638                           
 15639                           ;main.c: 138:     ANSA2=0;
 15640  1833  110C               	bcf	12,2	;volatile
 15641  1834                     l5605:	
 15642                           
 15643                           ;main.c: 139:     ANSA3=0;
 15644  1834  118C               	bcf	12,3	;volatile
 15645  1835                     l5607:	
 15646                           
 15647                           ;main.c: 140:     ANSA4=0;
 15648  1835  120C               	bcf	12,4	;volatile
 15649  1836                     l5609:	
 15650                           
 15651                           ;main.c: 141:     ANSA5=0;
 15652  1836  128C               	bcf	12,5	;volatile
 15653  1837                     l5611:	
 15654                           
 15655                           ;main.c: 143:     TRISC0=0;
 15656  1837  0021               	movlb	1	; select bank1
 15657  1838  100E               	bcf	14,0	;volatile
 15658  1839                     l5613:	
 15659                           
 15660                           ;main.c: 144:     TRISC1=0;
 15661  1839  108E               	bcf	14,1	;volatile
 15662  183A                     l5615:	
 15663                           
 15664                           ;main.c: 145:     TRISC2=1;
 15665  183A  150E               	bsf	14,2	;volatile
 15666  183B                     l5617:	
 15667                           
 15668                           ;main.c: 146:     TRISC3=0;
 15669  183B  118E               	bcf	14,3	;volatile
 15670  183C                     l5619:	
 15671                           
 15672                           ;main.c: 147:     TRISC4=1;
 15673  183C  160E               	bsf	14,4	;volatile
 15674  183D                     l5621:	
 15675                           
 15676                           ;main.c: 148:     TRISC5=1;
 15677  183D  168E               	bsf	14,5	;volatile
 15678  183E                     l5623:	
 15679                           
 15680                           ;main.c: 149:     TRISC6=1;
 15681  183E  170E               	bsf	14,6	;volatile
 15682  183F                     l5625:	
 15683                           
 15684                           ;main.c: 150:     TRISC7=1;
 15685  183F  178E               	bsf	14,7	;volatile
 15686  1840                     l5627:	
 15687                           
 15688                           ;main.c: 152:     TRISB0=1;
 15689  1840  140D               	bsf	13,0	;volatile
 15690  1841                     l5629:	
 15691                           
 15692                           ;main.c: 153:     TRISB1=1;
 15693  1841  148D               	bsf	13,1	;volatile
 15694  1842                     l5631:	
 15695                           
 15696                           ;main.c: 154:     TRISB2=0;
 15697  1842  110D               	bcf	13,2	;volatile
 15698  1843                     l5633:	
 15699                           
 15700                           ;main.c: 155:     TRISB3=1;
 15701  1843  158D               	bsf	13,3	;volatile
 15702  1844                     l5635:	
 15703                           
 15704                           ;main.c: 156:     TRISB5=1;
 15705  1844  168D               	bsf	13,5	;volatile
 15706  1845                     l5637:	
 15707                           
 15708                           ;main.c: 157:     ANSB0=0;
 15709  1845  0023               	movlb	3	; select bank3
 15710  1846  100D               	bcf	13,0	;volatile
 15711  1847                     l5639:	
 15712                           
 15713                           ;main.c: 158:     ANSB1=1;
 15714  1847  148D               	bsf	13,1	;volatile
 15715  1848                     l5641:	
 15716                           
 15717                           ;main.c: 159:     ANSB2=0;
 15718  1848  110D               	bcf	13,2	;volatile
 15719  1849                     l5643:	
 15720                           
 15721                           ;main.c: 160:     ANSB3=0;
 15722  1849  118D               	bcf	13,3	;volatile
 15723  184A                     l5645:	
 15724                           
 15725                           ;main.c: 161:     ANSB5=1;
 15726  184A  168D               	bsf	13,5	;volatile
 15727                           
 15728                           ;main.c: 164:     ADCON1=0b10100000;
 15729  184B  30A0               	movlw	160
 15730  184C  0021               	movlb	1	; select bank1
 15731  184D  009E               	movwf	30	;volatile
 15732  184E                     l5647:	
 15733                           
 15734                           ;main.c: 167:     ADIE=0;
 15735  184E  1311               	bcf	17,6	;volatile
 15736  184F                     l5649:	
 15737                           
 15738                           ;main.c: 168:     ADON=1;
 15739  184F  141D               	bsf	29,0	;volatile
 15740  1850                     l5651:	
 15741                           
 15742                           ;main.c: 172:     INTEDG =1;
 15743  1850  1715               	bsf	21,6	;volatile
 15744  1851                     l5653:	
 15745                           
 15746                           ;main.c: 173:     GIE =1;
 15747  1851  178B               	bsf	11,7	;volatile
 15748  1852                     l5655:	
 15749                           
 15750                           ;main.c: 174:     PEIE =1;
 15751  1852  170B               	bsf	11,6	;volatile
 15752  1853                     l5657:	
 15753                           
 15754                           ;main.c: 175:     INTF =0;
 15755  1853  108B               	bcf	11,1	;volatile
 15756  1854                     l5659:	
 15757                           
 15758                           ;main.c: 176:     INTE =1;
 15759  1854  160B               	bsf	11,4	;volatile
 15760                           
 15761                           ;main.c: 181:     T1CON=0b01000001;
 15762  1855  3041               	movlw	65
 15763  1856  0020               	movlb	0	; select bank0
 15764  1857  0098               	movwf	24	;volatile
 15765  1858                     l5661:	
 15766                           
 15767                           ;main.c: 182:     TMR1=0;
 15768  1858  0196               	clrf	22	;volatile
 15769  1859  0197               	clrf	23	;volatile
 15770  185A                     l5663:	
 15771                           
 15772                           ;main.c: 183:     TMR1GE=0;
 15773  185A  1399               	bcf	25,7	;volatile
 15774  185B                     l5665:	
 15775                           
 15776                           ;main.c: 184:     CCP1IE=1;
 15777  185B  0021               	movlb	1	; select bank1
 15778  185C  1511               	bsf	17,2	;volatile
 15779  185D                     l5667:	
 15780                           
 15781                           ;main.c: 185:     CCP1IF=0;
 15782  185D  0020               	movlb	0	; select bank0
 15783  185E  1111               	bcf	17,2	;volatile
 15784  185F                     l5669:	
 15785                           
 15786                           ;main.c: 189:     PR2=0xFF;
 15787  185F  30FF               	movlw	255
 15788  1860  009B               	movwf	27	;volatile
 15789  1861                     l5671:	
 15790                           
 15791                           ;main.c: 190:     CCP2CON=0b00001100;
 15792  1861  300C               	movlw	12
 15793  1862  0025               	movlb	5	; select bank5
 15794  1863  009A               	movwf	26	;volatile
 15795  1864                     l5673:	
 15796                           
 15797                           ;main.c: 191:     C2TSEL0=0;
 15798  1864  111E               	bcf	30,2	;volatile
 15799  1865                     l5675:	
 15800                           
 15801                           ;main.c: 192:     C2TSEL1=0;
 15802  1865  119E               	bcf	30,3	;volatile
 15803  1866                     l5677:	
 15804                           
 15805                           ;main.c: 195:     DC2B1=0;
 15806  1866  129A               	bcf	26,5	;volatile
 15807  1867                     l5679:	
 15808                           
 15809                           ;main.c: 196:     DC2B0=0;
 15810  1867  121A               	bcf	26,4	;volatile
 15811  1868                     l5681:	
 15812                           
 15813                           ;main.c: 197:     CCPR2L=0x00;
 15814  1868  0198               	clrf	24	;volatile
 15815  1869                     l5683:	
 15816                           
 15817                           ;main.c: 200:     TMR2IF=0;
 15818  1869  0020               	movlb	0	; select bank0
 15819  186A  1091               	bcf	17,1	;volatile
 15820  186B                     l5685:	
 15821                           
 15822                           ;main.c: 201:     T2CKPS1=1;
 15823  186B  149C               	bsf	28,1	;volatile
 15824  186C                     l5687:	
 15825                           
 15826                           ;main.c: 202:     T2CKPS0=0;
 15827  186C  101C               	bcf	28,0	;volatile
 15828  186D                     l5689:	
 15829                           
 15830                           ;main.c: 203:     TMR2ON=1;
 15831  186D  151C               	bsf	28,2	;volatile
 15832  186E                     l5691:	
 15833                           
 15834                           ;main.c: 206:     RA6=0;
 15835  186E  130C               	bcf	12,6	;volatile
 15836  186F                     l5693:	
 15837                           
 15838                           ;main.c: 207:     RA7=0;
 15839  186F  138C               	bcf	12,7	;volatile
 15840  1870                     l5695:	
 15841                           
 15842                           ;main.c: 208:     RA5=0;
 15843  1870  128C               	bcf	12,5	;volatile
 15844  1871                     l5697:	
 15845                           
 15846                           ;main.c: 209:     RA4=0;
 15847  1871  120C               	bcf	12,4	;volatile
 15848  1872                     l5699:	
 15849                           
 15850                           ;main.c: 210:     RA3=0;
 15851  1872  118C               	bcf	12,3	;volatile
 15852  1873                     l5701:	
 15853                           
 15854                           ;main.c: 211:     RA2=0;
 15855  1873  110C               	bcf	12,2	;volatile
 15856  1874                     l5703:	
 15857                           
 15858                           ;main.c: 212:     RA0=0;
 15859  1874  100C               	bcf	12,0	;volatile
 15860  1875                     l5705:	
 15861                           
 15862                           ;main.c: 213:     RA1=0;
 15863  1875  108C               	bcf	12,1	;volatile
 15864  1876                     l5707:	
 15865                           
 15866                           ;main.c: 214:     RB2=0;
 15867  1876  110D               	bcf	13,2	;volatile
 15868  1877                     l5709:	
 15869                           
 15870                           ;main.c: 215:     RC3=0;
 15871  1877  118E               	bcf	14,3	;volatile
 15872                           
 15873                           ;main.c: 216:     last_pwm_lvl=100;
 15874  1878  3064               	movlw	100
 15875  1879  0023               	movlb	3	; select bank3
 15876  187A  00D4               	movwf	_last_pwm_lvl^(0+384)
 15877  187B  3000               	movlw	0
 15878  187C  00D5               	movwf	(_last_pwm_lvl^(0+384)+1)
 15879                           
 15880                           ;main.c: 217:     last_v1=100;
 15881  187D  3042               	movlw	66
 15882  187E  00D3               	movwf	(_last_v1+3)^(0+384)
 15883  187F  30C8               	movlw	200
 15884  1880  00D2               	movwf	(_last_v1+2)^(0+384)
 15885  1881  3000               	movlw	0
 15886  1882  00D1               	movwf	(_last_v1+1)^(0+384)
 15887  1883  3000               	movlw	0
 15888  1884  00D0               	movwf	_last_v1^(0+384)
 15889                           
 15890                           ;main.c: 218:     last_v2=100;
 15891  1885  3042               	movlw	66
 15892  1886  00CF               	movwf	(_last_v2+3)^(0+384)
 15893  1887  30C8               	movlw	200
 15894  1888  00CE               	movwf	(_last_v2+2)^(0+384)
 15895  1889  3000               	movlw	0
 15896  188A  00CD               	movwf	(_last_v2+1)^(0+384)
 15897  188B  3000               	movlw	0
 15898  188C  00CC               	movwf	_last_v2^(0+384)
 15899                           
 15900                           ;main.c: 219:     last_frequency=1.0;
 15901  188D  303F               	movlw	63
 15902  188E  00CB               	movwf	(_last_frequency+3)^(0+384)
 15903  188F  3080               	movlw	128
 15904  1890  00CA               	movwf	(_last_frequency+2)^(0+384)
 15905  1891  3000               	movlw	0
 15906  1892  00C9               	movwf	(_last_frequency+1)^(0+384)
 15907  1893  3000               	movlw	0
 15908  1894  00C8               	movwf	_last_frequency^(0+384)
 15909  1895                     l225:	
 15910  1895  0008               	return
 15911  1896                     __end_of_init_setting:	
 15912                           
 15913                           	psect	text51
 15914  2566                     __ptext51:	
 15915 ;; *************** function _error_handling *****************
 15916 ;; Defined at:
 15917 ;;		line 923 in file "main.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;		None
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;  i               2    0[BANK0 ] int 
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  1    wreg      void 
 15924 ;; Registers used:
 15925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;Total ram usage:        3 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:    5
 15938 ;; This function calls:
 15939 ;;		_buzz_op
 15940 ;;		_interrupt_enable
 15941 ;;		_lcd_show
 15942 ;; This function is called by:
 15943 ;;		_main
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           
 15948                           ;psect for function _error_handling
 15949  2566                     _error_handling:	
 15950  2566                     l5787:	
 15951                           ;incstack = 0
 15952                           ; Regs used in _error_handling: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15953                           
 15954                           
 15955                           ;main.c: 925:     RC0=1;
 15956  2566  0020               	movlb	0	; select bank0
 15957  2567  140E               	bsf	14,0	;volatile
 15958  2568                     l5789:	
 15959                           
 15960                           ;main.c: 927:     if (e_lock)
 15961  2568  0022               	movlb	2	; select bank2
 15962  2569  086E               	movf	_e_lock^(0+256),w
 15963  256A  1903               	btfsc	3,2
 15964  256B  2D6D               	goto	u7501
 15965  256C  2D6E               	goto	u7500
 15966  256D                     u7501:	
 15967  256D  2D78               	goto	l5795
 15968  256E                     u7500:	
 15969  256E                     l5791:	
 15970                           
 15971                           ;main.c: 928:     {;main.c: 929:         lcd_show(1);
 15972  256E  3001               	movlw	1
 15973  256F  00F9               	movwf	lcd_show@x
 15974  2570  3000               	movlw	0
 15975  2571  00FA               	movwf	lcd_show@x+1
 15976  2572  319E  26D7  31A5   	fcall	_lcd_show
 15977  2575                     l5793:	
 15978                           
 15979                           ;main.c: 930:         buzz_op();
 15980  2575  31A0  20F2  31A5   	fcall	_buzz_op
 15981  2578                     l5795:	
 15982                           
 15983                           ;main.c: 934:     if(e_overvolt)
 15984  2578  0022               	movlb	2	; select bank2
 15985  2579  086D               	movf	_e_overvolt^(0+256),w
 15986  257A  1903               	btfsc	3,2
 15987  257B  2D7D               	goto	u7511
 15988  257C  2D7E               	goto	u7510
 15989  257D                     u7511:	
 15990  257D  2D9D               	goto	l373
 15991  257E                     u7510:	
 15992  257E                     l5797:	
 15993                           
 15994                           ;main.c: 935:     {;main.c: 936:          lcd_show(2);
 15995  257E  3002               	movlw	2
 15996  257F  00F9               	movwf	lcd_show@x
 15997  2580  3000               	movlw	0
 15998  2581  00FA               	movwf	lcd_show@x+1
 15999  2582  319E  26D7  31A5   	fcall	_lcd_show
 16000  2585                     l5799:	
 16001                           
 16002                           ;main.c: 938:          for (int i=0;i<3;i++)
 16003  2585  0020               	movlb	0	; select bank0
 16004  2586  01A0               	clrf	error_handling@i
 16005  2587  01A1               	clrf	error_handling@i+1
 16006  2588                     l5805:	
 16007                           
 16008                           ;main.c: 939:          {;main.c: 940:              buzz_op();
 16009  2588  31A0  20F2  31A5   	fcall	_buzz_op
 16010  258B                     l5807:	
 16011                           
 16012                           ;main.c: 941:          }
 16013  258B  3001               	movlw	1
 16014  258C  0020               	movlb	0	; select bank0
 16015  258D  07A0               	addwf	error_handling@i,f
 16016  258E  3000               	movlw	0
 16017  258F  3DA1               	addwfc	error_handling@i+1,f
 16018  2590                     l5809:	
 16019  2590  0821               	movf	error_handling@i+1,w
 16020  2591  3A80               	xorlw	128
 16021  2592  00FB               	movwf	??_error_handling
 16022  2593  3080               	movlw	128
 16023  2594  027B               	subwf	??_error_handling,w
 16024  2595  1D03               	skipz
 16025  2596  2D99               	goto	u7525
 16026  2597  3003               	movlw	3
 16027  2598  0220               	subwf	error_handling@i,w
 16028  2599                     u7525:	
 16029  2599  1C03               	skipc
 16030  259A  2D9C               	goto	u7521
 16031  259B  2D9D               	goto	u7520
 16032  259C                     u7521:	
 16033  259C  2D88               	goto	l5805
 16034  259D                     u7520:	
 16035  259D                     l373:	
 16036                           ;main.c: 942:     }
 16037                           
 16038                           
 16039                           ;main.c: 944:     RA0=0;
 16040  259D  0020               	movlb	0	; select bank0
 16041  259E  100C               	bcf	12,0	;volatile
 16042                           
 16043                           ;main.c: 946:     while(e_lock||e_overvolt)
 16044  259F  2DB2               	goto	l5821
 16045  25A0                     l377:	
 16046                           
 16047                           ;main.c: 947:     {;main.c: 948:         if (RC6)
 16048  25A0  0020               	movlb	0	; select bank0
 16049  25A1  1F0E               	btfss	14,6	;volatile
 16050  25A2  2DA4               	goto	u7531
 16051  25A3  2DA5               	goto	u7530
 16052  25A4                     u7531:	
 16053  25A4  2DB2               	goto	l5821
 16054  25A5                     u7530:	
 16055  25A5                     l5811:	
 16056                           
 16057                           ;main.c: 949:         {;main.c: 950:             e_lock= 0;
 16058  25A5  0022               	movlb	2	; select bank2
 16059  25A6  01EE               	clrf	_e_lock^(0+256)
 16060                           
 16061                           ;main.c: 951:             e_overvolt=0;
 16062  25A7  01ED               	clrf	_e_overvolt^(0+256)
 16063  25A8                     l5813:	
 16064                           
 16065                           ;main.c: 952:             interrupt_enable(1);
 16066  25A8  3001               	movlw	1
 16067  25A9  31A0  20DB  31A5   	fcall	_interrupt_enable
 16068  25AC                     l5815:	
 16069                           
 16070                           ;main.c: 953:             pwmcon_flag=1;
 16071  25AC  01FC               	clrf	_pwmcon_flag
 16072  25AD  0AFC               	incf	_pwmcon_flag,f
 16073  25AE                     l5817:	
 16074                           
 16075                           ;main.c: 954:             RC0=0;
 16076  25AE  0020               	movlb	0	; select bank0
 16077  25AF  100E               	bcf	14,0	;volatile
 16078  25B0                     l5819:	
 16079                           
 16080                           ;main.c: 955:             pause=0;
 16081  25B0  0022               	movlb	2	; select bank2
 16082  25B1  01EF               	clrf	_pause^(0+256)
 16083  25B2                     l5821:	
 16084                           
 16085                           ;main.c: 946:     while(e_lock||e_overvolt)
 16086  25B2  0022               	movlb	2	; select bank2
 16087  25B3  086E               	movf	_e_lock^(0+256),w
 16088  25B4  1D03               	btfss	3,2
 16089  25B5  2DB7               	goto	u7541
 16090  25B6  2DB8               	goto	u7540
 16091  25B7                     u7541:	
 16092  25B7  2DA0               	goto	l377
 16093  25B8                     u7540:	
 16094  25B8                     l5823:	
 16095  25B8  086D               	movf	_e_overvolt^(0+256),w
 16096  25B9  1D03               	btfss	3,2
 16097  25BA  2DBC               	goto	u7551
 16098  25BB  2DBD               	goto	u7550
 16099  25BC                     u7551:	
 16100  25BC  2DA0               	goto	l377
 16101  25BD                     u7550:	
 16102  25BD                     l380:	
 16103  25BD  0008               	return
 16104  25BE                     __end_of_error_handling:	
 16105                           
 16106                           	psect	text52
 16107  1ED7                     __ptext52:	
 16108 ;; *************** function _lcd_show *****************
 16109 ;; Defined at:
 16110 ;;		line 374 in file "main.c"
 16111 ;; Parameters:    Size  Location     Type
 16112 ;;  x               2    9[COMMON] int 
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;		None
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      void 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;Total ram usage:        2 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; Hardware stack levels required when called:    4
 16131 ;; This function calls:
 16132 ;;		_lcd_clear
 16133 ;;		_lcd_send_string
 16134 ;;		_lcd_set_pos
 16135 ;; This function is called by:
 16136 ;;		_process_loop
 16137 ;;		_error_handling
 16138 ;;		_maintenance
 16139 ;;		_main
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           
 16144                           ;psect for function _lcd_show
 16145  1ED7                     _lcd_show:	
 16146  1ED7                     l5435:	
 16147                           ;incstack = 0
 16148                           ; Regs used in _lcd_show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16149                           
 16150                           
 16151                           ;main.c: 374: void lcd_show(int x);main.c: 375: {;main.c: 377:     switch (x)
 16152  1ED7  2FEC               	goto	l5495
 16153  1ED8                     l5437:	
 16154                           
 16155                           ;main.c: 380:             lcd_clear();
 16156  1ED8  31A0  20E5  319E   	fcall	_lcd_clear
 16157                           
 16158                           ;main.c: 381:             lcd_set_pos(0x02);
 16159  1EDB  3002               	movlw	2
 16160  1EDC  00F4               	movwf	lcd_set_pos@pos
 16161  1EDD  3000               	movlw	0
 16162  1EDE  00F5               	movwf	lcd_set_pos@pos+1
 16163  1EDF  31A0  20CF  319E   	fcall	_lcd_set_pos
 16164  1EE2                     l5439:	
 16165                           
 16166                           ;main.c: 382:             lcd_send_string("FREQ.");
 16167  1EE2  3006               	movlw	low (STR_3| (0+32768))
 16168  1EE3  00F4               	movwf	lcd_send_string@s
 16169  1EE4  30A8               	movlw	high (STR_3| (0+32768))
 16170  1EE5  00F5               	movwf	lcd_send_string@s+1
 16171  1EE6  31A1  21AF  319E   	fcall	_lcd_send_string
 16172  1EE9                     l5441:	
 16173                           
 16174                           ;main.c: 384:             lcd_set_pos(0x0C);
 16175  1EE9  300C               	movlw	12
 16176  1EEA  00F4               	movwf	lcd_set_pos@pos
 16177  1EEB  3000               	movlw	0
 16178  1EEC  00F5               	movwf	lcd_set_pos@pos+1
 16179  1EED  31A0  20CF  319E   	fcall	_lcd_set_pos
 16180                           
 16181                           ;main.c: 385:             lcd_send_string("KHz");
 16182  1EF0  3063               	movlw	low (STR_4| (0+32768))
 16183  1EF1  00F4               	movwf	lcd_send_string@s
 16184  1EF2  30A8               	movlw	high (STR_4| (0+32768))
 16185  1EF3  00F5               	movwf	lcd_send_string@s+1
 16186  1EF4  31A1  21AF  319E   	fcall	_lcd_send_string
 16187  1EF7                     l5443:	
 16188                           
 16189                           ;main.c: 387:             lcd_set_pos(0x44);
 16190  1EF7  3044               	movlw	68
 16191  1EF8  00F4               	movwf	lcd_set_pos@pos
 16192  1EF9  3000               	movlw	0
 16193  1EFA  00F5               	movwf	lcd_set_pos@pos+1
 16194  1EFB  31A0  20CF  319E   	fcall	_lcd_set_pos
 16195  1EFE                     l5445:	
 16196                           
 16197                           ;main.c: 388:             lcd_send_string("BLT");
 16198  1EFE  305F               	movlw	low (STR_5| (0+32768))
 16199  1EFF  00F4               	movwf	lcd_send_string@s
 16200  1F00  30A8               	movlw	high (STR_5| (0+32768))
 16201  1F01  00F5               	movwf	lcd_send_string@s+1
 16202  1F02  31A1  21AF  319E   	fcall	_lcd_send_string
 16203                           
 16204                           ;main.c: 390:             lcd_set_pos(0x4C);
 16205  1F05  304C               	movlw	76
 16206  1F06  00F4               	movwf	lcd_set_pos@pos
 16207  1F07  3000               	movlw	0
 16208  1F08  00F5               	movwf	lcd_set_pos@pos+1
 16209  1F09  31A0  20CF  319E   	fcall	_lcd_set_pos
 16210  1F0C                     l5447:	
 16211                           
 16212                           ;main.c: 391:             lcd_send_string("Vp-p");
 16213  1F0C  304A               	movlw	low (STR_6| (0+32768))
 16214  1F0D  00F4               	movwf	lcd_send_string@s
 16215  1F0E  30A8               	movlw	high (STR_6| (0+32768))
 16216  1F0F  00F5               	movwf	lcd_send_string@s+1
 16217  1F10  31A1  21AF  319E   	fcall	_lcd_send_string
 16218  1F13                     l5449:	
 16219                           
 16220                           ;main.c: 393:             lcd_set_pos(0x12);
 16221  1F13  3012               	movlw	18
 16222  1F14  00F4               	movwf	lcd_set_pos@pos
 16223  1F15  3000               	movlw	0
 16224  1F16  00F5               	movwf	lcd_set_pos@pos+1
 16225  1F17  31A0  20CF  319E   	fcall	_lcd_set_pos
 16226                           
 16227                           ;main.c: 394:             lcd_send_string("DRIVE");
 16228  1F1A  3012               	movlw	low (STR_7| (0+32768))
 16229  1F1B  00F4               	movwf	lcd_send_string@s
 16230  1F1C  30A8               	movlw	high (STR_7| (0+32768))
 16231  1F1D  00F5               	movwf	lcd_send_string@s+1
 16232  1F1E  31A1  21AF  319E   	fcall	_lcd_send_string
 16233  1F21                     l5451:	
 16234                           
 16235                           ;main.c: 396:             lcd_set_pos(0x1C);
 16236  1F21  301C               	movlw	28
 16237  1F22  00F4               	movwf	lcd_set_pos@pos
 16238  1F23  3000               	movlw	0
 16239  1F24  00F5               	movwf	lcd_set_pos@pos+1
 16240  1F25  31A0  20CF  319E   	fcall	_lcd_set_pos
 16241  1F28                     l5453:	
 16242                           
 16243                           ;main.c: 397:             lcd_send_string("V");
 16244  1F28  306F               	movlw	low (STR_8| (0+32768))
 16245  1F29  00F4               	movwf	lcd_send_string@s
 16246  1F2A  30A8               	movlw	high (STR_8| (0+32768))
 16247  1F2B  00F5               	movwf	lcd_send_string@s+1
 16248  1F2C  31A1  21AF  319E   	fcall	_lcd_send_string
 16249                           
 16250                           ;main.c: 399:             lcd_set_pos(0x52);
 16251  1F2F  3052               	movlw	82
 16252  1F30  00F4               	movwf	lcd_set_pos@pos
 16253  1F31  3000               	movlw	0
 16254  1F32  00F5               	movwf	lcd_set_pos@pos+1
 16255  1F33  31A0  20CF  319E   	fcall	_lcd_set_pos
 16256  1F36                     l5455:	
 16257                           
 16258                           ;main.c: 400:             lcd_send_string("POWER");
 16259  1F36  302A               	movlw	low (STR_9| (0+32768))
 16260  1F37  00F4               	movwf	lcd_send_string@s
 16261  1F38  30A8               	movlw	high (STR_9| (0+32768))
 16262  1F39  00F5               	movwf	lcd_send_string@s+1
 16263  1F3A  31A1  21AF  319E   	fcall	_lcd_send_string
 16264  1F3D                     l5457:	
 16265                           
 16266                           ;main.c: 402:             lcd_set_pos(0x5C);
 16267  1F3D  305C               	movlw	92
 16268  1F3E  00F4               	movwf	lcd_set_pos@pos
 16269  1F3F  3000               	movlw	0
 16270  1F40  00F5               	movwf	lcd_set_pos@pos+1
 16271  1F41  31A0  20CF  319E   	fcall	_lcd_set_pos
 16272                           
 16273                           ;main.c: 403:             lcd_send_string("%");
 16274  1F44  306D               	movlw	low (STR_10| (0+32768))
 16275  1F45  00F4               	movwf	lcd_send_string@s
 16276  1F46  30A8               	movlw	high (STR_10| (0+32768))
 16277  1F47  00F5               	movwf	lcd_send_string@s+1
 16278  1F48  31A1  21AF  319E   	fcall	_lcd_send_string
 16279                           
 16280                           ;main.c: 405:             break;
 16281  1F4B  2FFF               	goto	l272
 16282  1F4C                     l5459:	
 16283                           
 16284                           ;main.c: 410:             lcd_set_pos(0x02);
 16285  1F4C  3002               	movlw	2
 16286  1F4D  00F4               	movwf	lcd_set_pos@pos
 16287  1F4E  3000               	movlw	0
 16288  1F4F  00F5               	movwf	lcd_set_pos@pos+1
 16289  1F50  31A0  20CF  319E   	fcall	_lcd_set_pos
 16290  1F53                     l5461:	
 16291                           
 16292                           ;main.c: 411:              lcd_send_string("     ");
 16293  1F53  3000               	movlw	low (STR_11| (0+32768))
 16294  1F54  00F4               	movwf	lcd_send_string@s
 16295  1F55  30A8               	movlw	high (STR_11| (0+32768))
 16296  1F56  00F5               	movwf	lcd_send_string@s+1
 16297  1F57  31A1  21AF  319E   	fcall	_lcd_send_string
 16298  1F5A                     l5463:	
 16299                           
 16300                           ;main.c: 412:              lcd_set_pos(0x42);
 16301  1F5A  3042               	movlw	66
 16302  1F5B  00F4               	movwf	lcd_set_pos@pos
 16303  1F5C  3000               	movlw	0
 16304  1F5D  00F5               	movwf	lcd_set_pos@pos+1
 16305  1F5E  31A0  20CF  319E   	fcall	_lcd_set_pos
 16306                           
 16307                           ;main.c: 413:              lcd_send_string("STALL");
 16308  1F61  301E               	movlw	low (STR_12| (0+32768))
 16309  1F62  00F4               	movwf	lcd_send_string@s
 16310  1F63  30A8               	movlw	high (STR_12| (0+32768))
 16311  1F64  00F5               	movwf	lcd_send_string@s+1
 16312  1F65  31A1  21AF  319E   	fcall	_lcd_send_string
 16313  1F68                     l5465:	
 16314                           
 16315                           ;main.c: 414:              lcd_set_pos(0x12);
 16316  1F68  3012               	movlw	18
 16317  1F69  00F4               	movwf	lcd_set_pos@pos
 16318  1F6A  3000               	movlw	0
 16319  1F6B  00F5               	movwf	lcd_set_pos@pos+1
 16320  1F6C  31A0  20CF  319E   	fcall	_lcd_set_pos
 16321  1F6F                     l5467:	
 16322                           
 16323                           ;main.c: 415:              lcd_send_string("ERROR");
 16324  1F6F  3030               	movlw	low (STR_13| (0+32768))
 16325  1F70  00F4               	movwf	lcd_send_string@s
 16326  1F71  30A8               	movlw	high (STR_13| (0+32768))
 16327  1F72  00F5               	movwf	lcd_send_string@s+1
 16328  1F73  31A1  21AF  319E   	fcall	_lcd_send_string
 16329                           
 16330                           ;main.c: 416:              lcd_set_pos(0x52);
 16331  1F76  3052               	movlw	82
 16332  1F77  00F4               	movwf	lcd_set_pos@pos
 16333  1F78  3000               	movlw	0
 16334  1F79  00F5               	movwf	lcd_set_pos@pos+1
 16335  1F7A  31A0  20CF  319E   	fcall	_lcd_set_pos
 16336  1F7D                     l5469:	
 16337                           
 16338                           ;main.c: 417:             lcd_send_string("     ");
 16339  1F7D  3000               	movlw	low (STR_11| (0+32768))
 16340  1F7E  00F4               	movwf	lcd_send_string@s
 16341  1F7F  30A8               	movlw	high (STR_11| (0+32768))
 16342  1F80  00F5               	movwf	lcd_send_string@s+1
 16343  1F81  31A1  21AF  319E   	fcall	_lcd_send_string
 16344                           
 16345                           ;main.c: 419:             break;
 16346  1F84  2FFF               	goto	l272
 16347  1F85                     l5471:	
 16348                           
 16349                           ;main.c: 422:              lcd_set_pos(0x02);
 16350  1F85  3002               	movlw	2
 16351  1F86  00F4               	movwf	lcd_set_pos@pos
 16352  1F87  3000               	movlw	0
 16353  1F88  00F5               	movwf	lcd_set_pos@pos+1
 16354  1F89  31A0  20CF  319E   	fcall	_lcd_set_pos
 16355  1F8C                     l5473:	
 16356                           
 16357                           ;main.c: 423:              lcd_send_string(" OVER");
 16358  1F8C  3024               	movlw	low (STR_15| (0+32768))
 16359  1F8D  00F4               	movwf	lcd_send_string@s
 16360  1F8E  30A8               	movlw	high (STR_15| (0+32768))
 16361  1F8F  00F5               	movwf	lcd_send_string@s+1
 16362  1F90  31A1  21AF  319E   	fcall	_lcd_send_string
 16363  1F93                     l5475:	
 16364                           
 16365                           ;main.c: 424:              lcd_set_pos(0x42);
 16366  1F93  3042               	movlw	66
 16367  1F94  00F4               	movwf	lcd_set_pos@pos
 16368  1F95  3000               	movlw	0
 16369  1F96  00F5               	movwf	lcd_set_pos@pos+1
 16370  1F97  31A0  20CF  319E   	fcall	_lcd_set_pos
 16371                           
 16372                           ;main.c: 425:              lcd_send_string(" LOAD");
 16373  1F9A  300C               	movlw	low (STR_16| (0+32768))
 16374  1F9B  00F4               	movwf	lcd_send_string@s
 16375  1F9C  30A8               	movlw	high (STR_16| (0+32768))
 16376  1F9D  00F5               	movwf	lcd_send_string@s+1
 16377  1F9E  31A1  21AF  319E   	fcall	_lcd_send_string
 16378  1FA1                     l5477:	
 16379                           
 16380                           ;main.c: 426:              lcd_set_pos(0x12);
 16381  1FA1  3012               	movlw	18
 16382  1FA2  00F4               	movwf	lcd_set_pos@pos
 16383  1FA3  3000               	movlw	0
 16384  1FA4  00F5               	movwf	lcd_set_pos@pos+1
 16385  1FA5  31A0  20CF  319E   	fcall	_lcd_set_pos
 16386  1FA8                     l5479:	
 16387                           
 16388                           ;main.c: 427:              lcd_send_string("ERROR");
 16389  1FA8  3030               	movlw	low (STR_13| (0+32768))
 16390  1FA9  00F4               	movwf	lcd_send_string@s
 16391  1FAA  30A8               	movlw	high (STR_13| (0+32768))
 16392  1FAB  00F5               	movwf	lcd_send_string@s+1
 16393  1FAC  31A1  21AF  319E   	fcall	_lcd_send_string
 16394                           
 16395                           ;main.c: 428:              lcd_set_pos(0x52);
 16396  1FAF  3052               	movlw	82
 16397  1FB0  00F4               	movwf	lcd_set_pos@pos
 16398  1FB1  3000               	movlw	0
 16399  1FB2  00F5               	movwf	lcd_set_pos@pos+1
 16400  1FB3  31A0  20CF  319E   	fcall	_lcd_set_pos
 16401  1FB6                     l5481:	
 16402                           
 16403                           ;main.c: 429:              lcd_send_string("     ");
 16404  1FB6  3000               	movlw	low (STR_11| (0+32768))
 16405  1FB7  00F4               	movwf	lcd_send_string@s
 16406  1FB8  30A8               	movlw	high (STR_11| (0+32768))
 16407  1FB9  00F5               	movwf	lcd_send_string@s+1
 16408  1FBA  31A1  21AF  319E   	fcall	_lcd_send_string
 16409                           
 16410                           ;main.c: 430:             break;
 16411  1FBD  2FFF               	goto	l272
 16412  1FBE                     l5483:	
 16413                           
 16414                           ;main.c: 432:             lcd_clear();
 16415  1FBE  31A0  20E5  319E   	fcall	_lcd_clear
 16416                           
 16417                           ;main.c: 433:             lcd_set_pos(0x46);
 16418  1FC1  3046               	movlw	70
 16419  1FC2  00F4               	movwf	lcd_set_pos@pos
 16420  1FC3  3000               	movlw	0
 16421  1FC4  00F5               	movwf	lcd_set_pos@pos+1
 16422  1FC5  31A0  20CF  319E   	fcall	_lcd_set_pos
 16423  1FC8                     l5485:	
 16424                           
 16425                           ;main.c: 434:             lcd_send_string("BREAK");
 16426  1FC8  3018               	movlw	low (STR_19| (0+32768))
 16427  1FC9  00F4               	movwf	lcd_send_string@s
 16428  1FCA  30A8               	movlw	high (STR_19| (0+32768))
 16429  1FCB  00F5               	movwf	lcd_send_string@s+1
 16430  1FCC  31A1  21AF  319E   	fcall	_lcd_send_string
 16431  1FCF                     l5487:	
 16432                           
 16433                           ;main.c: 435:             lcd_set_pos(0x52);
 16434  1FCF  3052               	movlw	82
 16435  1FD0  00F4               	movwf	lcd_set_pos@pos
 16436  1FD1  3000               	movlw	0
 16437  1FD2  00F5               	movwf	lcd_set_pos@pos+1
 16438  1FD3  31A0  20CF  319E   	fcall	_lcd_set_pos
 16439                           
 16440                           ;main.c: 436:             lcd_send_string("POWER");
 16441  1FD6  302A               	movlw	low (STR_9| (0+32768))
 16442  1FD7  00F4               	movwf	lcd_send_string@s
 16443  1FD8  30A8               	movlw	high (STR_9| (0+32768))
 16444  1FD9  00F5               	movwf	lcd_send_string@s+1
 16445  1FDA  31A1  21AF  319E   	fcall	_lcd_send_string
 16446  1FDD                     l5489:	
 16447                           
 16448                           ;main.c: 438:             lcd_set_pos(0x5C);
 16449  1FDD  305C               	movlw	92
 16450  1FDE  00F4               	movwf	lcd_set_pos@pos
 16451  1FDF  3000               	movlw	0
 16452  1FE0  00F5               	movwf	lcd_set_pos@pos+1
 16453  1FE1  31A0  20CF  319E   	fcall	_lcd_set_pos
 16454  1FE4                     l5491:	
 16455                           
 16456                           ;main.c: 439:             lcd_send_string("%");
 16457  1FE4  306D               	movlw	low (STR_10| (0+32768))
 16458  1FE5  00F4               	movwf	lcd_send_string@s
 16459  1FE6  30A8               	movlw	high (STR_10| (0+32768))
 16460  1FE7  00F5               	movwf	lcd_send_string@s+1
 16461  1FE8  31A1  21AF  319E   	fcall	_lcd_send_string
 16462                           
 16463                           ;main.c: 441:             break;
 16464  1FEB  2FFF               	goto	l272
 16465  1FEC                     l5495:	
 16466                           
 16467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16468                           ; Switch size 1, requested type "simple"
 16469                           ; Number of cases is 1, Range of values is 0 to 0
 16470                           ; switch strategies available:
 16471                           ; Name         Instructions Cycles
 16472                           ; simple_byte            4     3 (average)
 16473                           ; direct_byte            8     6 (fixed)
 16474                           ; jumptable            260     6 (fixed)
 16475                           ;	Chosen strategy is simple_byte
 16476  1FEC  087A               	movf	lcd_show@x+1,w
 16477  1FED  3A00               	xorlw	0	; case 0
 16478  1FEE  1903               	skipnz
 16479  1FEF  2FF1               	goto	l7053
 16480  1FF0  2FFF               	goto	l272
 16481  1FF1                     l7053:	
 16482                           
 16483                           ; Switch size 1, requested type "simple"
 16484                           ; Number of cases is 4, Range of values is 0 to 3
 16485                           ; switch strategies available:
 16486                           ; Name         Instructions Cycles
 16487                           ; simple_byte           13     7 (average)
 16488                           ; direct_byte           14     6 (fixed)
 16489                           ; jumptable            260     6 (fixed)
 16490                           ;	Chosen strategy is simple_byte
 16491  1FF1  0879               	movf	lcd_show@x,w
 16492  1FF2  3A00               	xorlw	0	; case 0
 16493  1FF3  1903               	skipnz
 16494  1FF4  2ED8               	goto	l5437
 16495  1FF5  3A01               	xorlw	1	; case 1
 16496  1FF6  1903               	skipnz
 16497  1FF7  2F4C               	goto	l5459
 16498  1FF8  3A03               	xorlw	3	; case 2
 16499  1FF9  1903               	skipnz
 16500  1FFA  2F85               	goto	l5471
 16501  1FFB  3A01               	xorlw	1	; case 3
 16502  1FFC  1903               	skipnz
 16503  1FFD  2FBE               	goto	l5483
 16504  1FFE  2FFF               	goto	l272
 16505  1FFF                     l272:	
 16506  1FFF  0008               	return
 16507  2000                     __end_of_lcd_show:	
 16508                           
 16509                           	psect	text53
 16510  20CF                     __ptext53:	
 16511 ;; *************** function _lcd_set_pos *****************
 16512 ;; Defined at:
 16513 ;;		line 362 in file "main.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;  pos             2    4[COMMON] int 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;		None
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      void 
 16520 ;; Registers used:
 16521 ;;		wreg, status,2, status,0, pclath, cstack
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/0
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;Total ram usage:        2 bytes
 16532 ;; Hardware stack levels used:    1
 16533 ;; Hardware stack levels required when called:    3
 16534 ;; This function calls:
 16535 ;;		_lcd_cmd
 16536 ;; This function is called by:
 16537 ;;		_lcd_show
 16538 ;;		_lcd_update
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542                           
 16543                           ;psect for function _lcd_set_pos
 16544  20CF                     _lcd_set_pos:	
 16545  20CF                     l5213:	
 16546                           ;incstack = 0
 16547                           ; Regs used in _lcd_set_pos: [wreg+status,2+status,0+pclath+cstack]
 16548                           
 16549                           
 16550                           ;main.c: 363:     lcd_cmd(pos+0x80);
 16551  20CF  0874               	movf	lcd_set_pos@pos,w
 16552  20D0  3E80               	addlw	128
 16553  20D1  31A1  2102  31A0   	fcall	_lcd_cmd
 16554  20D4                     l263:	
 16555  20D4  0008               	return
 16556  20D5                     __end_of_lcd_set_pos:	
 16557                           
 16558                           	psect	text54
 16559  21AF                     __ptext54:	
 16560 ;; *************** function _lcd_send_string *****************
 16561 ;; Defined at:
 16562 ;;		line 323 in file "main.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;  s               2    4[COMMON] PTR const unsigned char 
 16565 ;;		 -> STR_33(3), STR_32(2), STR_31(5), STR_30(5), 
 16566 ;;		 -> STR_29(5), STR_28(3), STR_27(2), STR_26(3), 
 16567 ;;		 -> STR_25(2), STR_24(5), STR_23(3), STR_22(2), 
 16568 ;;		 -> STR_21(2), STR_20(6), STR_19(6), STR_18(6), 
 16569 ;;		 -> STR_17(6), STR_16(6), STR_15(6), STR_14(6), 
 16570 ;;		 -> STR_13(6), STR_12(6), STR_11(6), STR_10(2), 
 16571 ;;		 -> STR_9(6), STR_8(2), STR_7(6), STR_6(5), 
 16572 ;;		 -> STR_5(4), STR_4(4), STR_3(6), buff(8), 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  i               2    7[COMMON] unsigned int 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;Total ram usage:        5 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    3
 16591 ;; This function calls:
 16592 ;;		_lcd_data
 16593 ;; This function is called by:
 16594 ;;		_lcd_send_int
 16595 ;;		_lcd_send_float1
 16596 ;;		_lcd_show
 16597 ;;		_lcd_update
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           
 16602                           ;psect for function _lcd_send_string
 16603  21AF                     _lcd_send_string:	
 16604  21AF                     l5185:	
 16605                           ;incstack = 0
 16606                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16607                           
 16608                           
 16609                           ;main.c: 323: void lcd_send_string(const char *s);main.c: 324: {;main.c: 325:       unsi
      +                          gned int i=0;
 16610  21AF  01F7               	clrf	lcd_send_string@i
 16611  21B0  01F8               	clrf	lcd_send_string@i+1
 16612                           
 16613                           ;main.c: 326:       for(;s[i]!=0;i++) lcd_data(s[i]);
 16614  21B1  29C0               	goto	l5191
 16615  21B2                     l5187:	
 16616  21B2  0874               	movf	lcd_send_string@s,w
 16617  21B3  0777               	addwf	lcd_send_string@i,w
 16618  21B4  0084               	movwf	4
 16619  21B5  0875               	movf	lcd_send_string@s+1,w
 16620  21B6  3D78               	addwfc	lcd_send_string@i+1,w
 16621  21B7  0085               	movwf	5
 16622  21B8  0800               	movf	0,w	;code access
 16623  21B9  31A1  211A  31A1   	fcall	_lcd_data
 16624  21BC                     l5189:	
 16625  21BC  3001               	movlw	1
 16626  21BD  07F7               	addwf	lcd_send_string@i,f
 16627  21BE  3000               	movlw	0
 16628  21BF  3DF8               	addwfc	lcd_send_string@i+1,f
 16629  21C0                     l5191:	
 16630  21C0  0874               	movf	lcd_send_string@s,w
 16631  21C1  0777               	addwf	lcd_send_string@i,w
 16632  21C2  0084               	movwf	4
 16633  21C3  0875               	movf	lcd_send_string@s+1,w
 16634  21C4  3D78               	addwfc	lcd_send_string@i+1,w
 16635  21C5  0085               	movwf	5
 16636  21C6  0012               	moviw fsr0++
 16637  21C7  1D03               	btfss	3,2
 16638  21C8  29CA               	goto	u6991
 16639  21C9  29CB               	goto	u6990
 16640  21CA                     u6991:	
 16641  21CA  29B2               	goto	l5187
 16642  21CB                     u6990:	
 16643  21CB                     l254:	
 16644  21CB  0008               	return
 16645  21CC                     __end_of_lcd_send_string:	
 16646                           
 16647                           	psect	text55
 16648  211A                     __ptext55:	
 16649 ;; *************** function _lcd_data *****************
 16650 ;; Defined at:
 16651 ;;		line 252 in file "main.c"
 16652 ;; Parameters:    Size  Location     Type
 16653 ;;  data            1    wreg     unsigned char 
 16654 ;; Auto vars:     Size  Location     Type
 16655 ;;  data            1    3[COMMON] unsigned char 
 16656 ;; Return value:  Size  Location     Type
 16657 ;;                  1    wreg      void 
 16658 ;; Registers used:
 16659 ;;		wreg, status,2, status,0, pclath, cstack
 16660 ;; Tracked objects:
 16661 ;;		On entry : 0/0
 16662 ;;		On exit  : 0/0
 16663 ;;		Unchanged: 0/0
 16664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;Total ram usage:        2 bytes
 16670 ;; Hardware stack levels used:    1
 16671 ;; Hardware stack levels required when called:    2
 16672 ;; This function calls:
 16673 ;;		_data_write
 16674 ;; This function is called by:
 16675 ;;		_lcd_send_string
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679                           
 16680                           ;psect for function _lcd_data
 16681  211A                     _lcd_data:	
 16682                           
 16683                           ;incstack = 0
 16684                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
 16685                           ;lcd_data@data stored from wreg
 16686  211A  00F3               	movwf	lcd_data@data
 16687  211B                     l5157:	
 16688                           
 16689                           ;main.c: 252: void lcd_data(unsigned char data);main.c: 253: {;main.c: 254:     RA2=1;
 16690  211B  0020               	movlb	0	; select bank0
 16691  211C  150C               	bsf	12,2	;volatile
 16692  211D                     l5159:	
 16693                           
 16694                           ;main.c: 255:     _delay((unsigned long)((150)*(8000000/4000000.0)));
 16695  211D  3064               	movlw	100
 16696  211E                     u9477:	
 16697  211E  0B89               	decfsz	9,f
 16698  211F  291E               	goto	u9477
 16699  2120                     l5161:	
 16700                           
 16701                           ;main.c: 256:     data_write(data>>4);
 16702  2120  0873               	movf	lcd_data@data,w
 16703  2121  00F2               	movwf	??_lcd_data
 16704  2122  3004               	movlw	4
 16705  2123                     u6965:	
 16706  2123  36F2               	lsrf	??_lcd_data,f
 16707  2124  0B89               	decfsz	9,f
 16708  2125  2923               	goto	u6965
 16709  2126  0872               	movf	??_lcd_data,w
 16710  2127  31A2  22C8  31A1   	fcall	_data_write
 16711  212A                     l5163:	
 16712                           
 16713                           ;main.c: 257:     _delay((unsigned long)((150)*(8000000/4000000.0)));
 16714  212A  3064               	movlw	100
 16715  212B                     u9487:	
 16716  212B  0B89               	decfsz	9,f
 16717  212C  292B               	goto	u9487
 16718                           
 16719                           ;main.c: 258:     data_write(data);
 16720  212D  0873               	movf	lcd_data@data,w
 16721  212E  31A2  22C8  31A1   	fcall	_data_write
 16722  2131                     l239:	
 16723  2131  0008               	return
 16724  2132                     __end_of_lcd_data:	
 16725                           
 16726                           	psect	text56
 16727  20E5                     __ptext56:	
 16728 ;; *************** function _lcd_clear *****************
 16729 ;; Defined at:
 16730 ;;		line 312 in file "main.c"
 16731 ;; Parameters:    Size  Location     Type
 16732 ;;		None
 16733 ;; Auto vars:     Size  Location     Type
 16734 ;;		None
 16735 ;; Return value:  Size  Location     Type
 16736 ;;                  1    wreg      void 
 16737 ;; Registers used:
 16738 ;;		wreg, status,2, status,0, pclath, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16748 ;;Total ram usage:        1 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:    3
 16751 ;; This function calls:
 16752 ;;		_lcd_cmd
 16753 ;; This function is called by:
 16754 ;;		_lcd_show
 16755 ;;		_main
 16756 ;; This function uses a non-reentrant model
 16757 ;;
 16758                           
 16759                           
 16760                           ;psect for function _lcd_clear
 16761  20E5                     _lcd_clear:	
 16762  20E5                     l5263:	
 16763                           ;incstack = 0
 16764                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
 16765                           
 16766                           
 16767                           ;main.c: 314:     lcd_cmd(0x01);
 16768  20E5  3001               	movlw	1
 16769  20E6  31A1  2102  31A0   	fcall	_lcd_cmd
 16770  20E9                     l5265:	
 16771                           
 16772                           ;main.c: 315:      _delay((unsigned long)((2000)*(8000000/4000000.0)));
 16773  20E9  3006               	movlw	6
 16774  20EA  00F4               	movwf	??_lcd_clear
 16775  20EB  3030               	movlw	48
 16776  20EC                     u9497:	
 16777  20EC  0B89               	decfsz	9,f
 16778  20ED  28EC               	goto	u9497
 16779  20EE  0BF4               	decfsz	??_lcd_clear,f
 16780  20EF  28EC               	goto	u9497
 16781  20F0  3200               	nop2
 16782  20F1                     l248:	
 16783  20F1  0008               	return
 16784  20F2                     __end_of_lcd_clear:	
 16785                           
 16786                           	psect	text57
 16787  2102                     __ptext57:	
 16788 ;; *************** function _lcd_cmd *****************
 16789 ;; Defined at:
 16790 ;;		line 268 in file "main.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;  data            1    wreg     unsigned char 
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;  data            1    3[COMMON] unsigned char 
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, status,2, status,0, pclath, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;Total ram usage:        2 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; Hardware stack levels required when called:    2
 16811 ;; This function calls:
 16812 ;;		_data_write
 16813 ;; This function is called by:
 16814 ;;		_lcd_init
 16815 ;;		_lcd_clear
 16816 ;;		_lcd_set_pos
 16817 ;; This function uses a non-reentrant model
 16818 ;;
 16819                           
 16820                           
 16821                           ;psect for function _lcd_cmd
 16822  2102                     _lcd_cmd:	
 16823                           
 16824                           ;incstack = 0
 16825                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
 16826                           ;lcd_cmd@data stored from wreg
 16827  2102  00F3               	movwf	lcd_cmd@data
 16828  2103                     l5177:	
 16829                           
 16830                           ;main.c: 268: void lcd_cmd(unsigned char data);main.c: 269: {;main.c: 270:     RA2=0;
 16831  2103  0020               	movlb	0	; select bank0
 16832  2104  110C               	bcf	12,2	;volatile
 16833  2105                     l5179:	
 16834                           
 16835                           ;main.c: 271:     _delay((unsigned long)((150)*(8000000/4000000.0)));
 16836  2105  3064               	movlw	100
 16837  2106                     u9507:	
 16838  2106  0B89               	decfsz	9,f
 16839  2107  2906               	goto	u9507
 16840  2108                     l5181:	
 16841                           
 16842                           ;main.c: 272:     data_write(data>>4);
 16843  2108  0873               	movf	lcd_cmd@data,w
 16844  2109  00F2               	movwf	??_lcd_cmd
 16845  210A  3004               	movlw	4
 16846  210B                     u6985:	
 16847  210B  36F2               	lsrf	??_lcd_cmd,f
 16848  210C  0B89               	decfsz	9,f
 16849  210D  290B               	goto	u6985
 16850  210E  0872               	movf	??_lcd_cmd,w
 16851  210F  31A2  22C8  31A1   	fcall	_data_write
 16852  2112                     l5183:	
 16853                           
 16854                           ;main.c: 273:     _delay((unsigned long)((150)*(8000000/4000000.0)));
 16855  2112  3064               	movlw	100
 16856  2113                     u9517:	
 16857  2113  0B89               	decfsz	9,f
 16858  2114  2913               	goto	u9517
 16859                           
 16860                           ;main.c: 274:     data_write(data);
 16861  2115  0873               	movf	lcd_cmd@data,w
 16862  2116  31A2  22C8  31A1   	fcall	_data_write
 16863  2119                     l242:	
 16864  2119  0008               	return
 16865  211A                     __end_of_lcd_cmd:	
 16866                           
 16867                           	psect	text58
 16868  22C8                     __ptext58:	
 16869 ;; *************** function _data_write *****************
 16870 ;; Defined at:
 16871 ;;		line 230 in file "main.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  data            1    wreg     unsigned char 
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;  data            1    1[COMMON] unsigned char 
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;Total ram usage:        1 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:    1
 16892 ;; This function calls:
 16893 ;;		Nothing
 16894 ;; This function is called by:
 16895 ;;		_lcd_data
 16896 ;;		_lcd_cmd
 16897 ;;		_lcd_init
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901                           
 16902                           ;psect for function _data_write
 16903  22C8                     _data_write:	
 16904                           
 16905                           ;incstack = 0
 16906                           ; Regs used in _data_write: [wreg]
 16907                           ;data_write@data stored from wreg
 16908  22C8  00F1               	movwf	data_write@data
 16909  22C9                     l5031:	
 16910                           
 16911                           ;main.c: 230: void data_write(unsigned char data);main.c: 231: {;main.c: 232:     if (da
      +                          ta & 0b1000) RA6=1;
 16912  22C9  1DF1               	btfss	data_write@data,3
 16913  22CA  2ACC               	goto	u6761
 16914  22CB  2ACD               	goto	u6760
 16915  22CC                     u6761:	
 16916  22CC  2AD0               	goto	l228
 16917  22CD                     u6760:	
 16918  22CD                     l5033:	
 16919  22CD  0020               	movlb	0	; select bank0
 16920  22CE  170C               	bsf	12,6	;volatile
 16921  22CF  2AD2               	goto	l5035
 16922  22D0                     l228:	
 16923                           ;main.c: 233:     else RA6=0;
 16924                           
 16925  22D0  0020               	movlb	0	; select bank0
 16926  22D1  130C               	bcf	12,6	;volatile
 16927  22D2                     l5035:	
 16928                           
 16929                           ;main.c: 234:     if (data & 0b0100) RA7=1;
 16930  22D2  1D71               	btfss	data_write@data,2
 16931  22D3  2AD5               	goto	u6771
 16932  22D4  2AD6               	goto	u6770
 16933  22D5                     u6771:	
 16934  22D5  2AD8               	goto	l230
 16935  22D6                     u6770:	
 16936  22D6                     l5037:	
 16937  22D6  178C               	bsf	12,7	;volatile
 16938  22D7  2AD9               	goto	l5039
 16939  22D8                     l230:	
 16940                           ;main.c: 235:     else RA7=0;
 16941                           
 16942  22D8  138C               	bcf	12,7	;volatile
 16943  22D9                     l5039:	
 16944                           
 16945                           ;main.c: 236:     if (data & 0b0010) RA5=1;
 16946  22D9  1CF1               	btfss	data_write@data,1
 16947  22DA  2ADC               	goto	u6781
 16948  22DB  2ADD               	goto	u6780
 16949  22DC                     u6781:	
 16950  22DC  2ADF               	goto	l232
 16951  22DD                     u6780:	
 16952  22DD                     l5041:	
 16953  22DD  168C               	bsf	12,5	;volatile
 16954  22DE  2AE0               	goto	l5043
 16955  22DF                     l232:	
 16956                           ;main.c: 237:     else RA5=0;
 16957                           
 16958  22DF  128C               	bcf	12,5	;volatile
 16959  22E0                     l5043:	
 16960                           
 16961                           ;main.c: 238:     if (data & 0b0001) RA4=1;
 16962  22E0  1C71               	btfss	data_write@data,0
 16963  22E1  2AE3               	goto	u6791
 16964  22E2  2AE4               	goto	u6790
 16965  22E3                     u6791:	
 16966  22E3  2AE6               	goto	l234
 16967  22E4                     u6790:	
 16968  22E4                     l5045:	
 16969  22E4  160C               	bsf	12,4	;volatile
 16970  22E5  2AE7               	goto	l235
 16971  22E6                     l234:	
 16972                           ;main.c: 239:     else RA4=0;
 16973                           
 16974  22E6  120C               	bcf	12,4	;volatile
 16975  22E7                     l235:	
 16976                           
 16977                           ;main.c: 240:     RA3=1;
 16978  22E7  158C               	bsf	12,3	;volatile
 16979  22E8                     l5047:	
 16980                           
 16981                           ;main.c: 241:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 16982  22E8  3085               	movlw	133
 16983  22E9                     u9527:	
 16984  22E9  0B89               	decfsz	9,f
 16985  22EA  2AE9               	goto	u9527
 16986  22EB  0000               	nop
 16987  22EC                     l5049:	
 16988                           
 16989                           ;main.c: 242:     RA3=0;
 16990  22EC  0020               	movlb	0	; select bank0
 16991  22ED  118C               	bcf	12,3	;volatile
 16992                           
 16993                           ;main.c: 243:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 16994  22EE  3085               	movlw	133
 16995  22EF                     u9537:	
 16996  22EF  0B89               	decfsz	9,f
 16997  22F0  2AEF               	goto	u9537
 16998  22F1  0000               	nop
 16999  22F2                     l236:	
 17000  22F2  0008               	return
 17001  22F3                     __end_of_data_write:	
 17002                           
 17003                           	psect	text59
 17004  20DB                     __ptext59:	
 17005 ;; *************** function _interrupt_enable *****************
 17006 ;; Defined at:
 17007 ;;		line 679 in file "main.c"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;  state           1    wreg     _Bool 
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;  state           1    1[COMMON] _Bool 
 17012 ;; Return value:  Size  Location     Type
 17013 ;;                  1    wreg      void 
 17014 ;; Registers used:
 17015 ;;		wreg, status,2, status,0
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17025 ;;Total ram usage:        1 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:    1
 17028 ;; This function calls:
 17029 ;;		Nothing
 17030 ;; This function is called by:
 17031 ;;		_shut_down
 17032 ;;		_process_loop
 17033 ;;		_error_handling
 17034 ;;		_main
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           
 17039                           ;psect for function _interrupt_enable
 17040  20DB                     _interrupt_enable:	
 17041                           
 17042                           ;incstack = 0
 17043                           ; Regs used in _interrupt_enable: [wreg+status,2+status,0]
 17044                           ;interrupt_enable@state stored from wreg
 17045  20DB  00F1               	movwf	interrupt_enable@state
 17046  20DC                     l5431:	
 17047                           
 17048                           ;main.c: 679: void interrupt_enable(_Bool state);main.c: 680: {;main.c: 681:     if (sta
      +                          te)
 17049  20DC  0871               	movf	interrupt_enable@state,w
 17050  20DD  1903               	btfsc	3,2
 17051  20DE  28E0               	goto	u7281
 17052  20DF  28E1               	goto	u7280
 17053  20E0                     u7281:	
 17054  20E0  28E3               	goto	l318
 17055  20E1                     u7280:	
 17056  20E1                     l5433:	
 17057                           
 17058                           ;main.c: 682:     {;main.c: 683:           INTE =1;
 17059  20E1  160B               	bsf	11,4	;volatile
 17060                           
 17061                           ;main.c: 685:     }
 17062  20E2  28E4               	goto	l320
 17063  20E3                     l318:	
 17064                           ;main.c: 686:     else
 17065                           
 17066                           
 17067                           ;main.c: 687:     {;main.c: 688:           INTE =0;
 17068  20E3  120B               	bcf	11,4	;volatile
 17069  20E4                     l320:	
 17070  20E4  0008               	return
 17071  20E5                     __end_of_interrupt_enable:	
 17072                           
 17073                           	psect	text60
 17074  20F2                     __ptext60:	
 17075 ;; *************** function _buzz_op *****************
 17076 ;; Defined at:
 17077 ;;		line 909 in file "main.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;		None
 17080 ;; Auto vars:     Size  Location     Type
 17081 ;;		None
 17082 ;; Return value:  Size  Location     Type
 17083 ;;                  1    wreg      void 
 17084 ;; Registers used:
 17085 ;;		wreg
 17086 ;; Tracked objects:
 17087 ;;		On entry : 0/0
 17088 ;;		On exit  : 0/0
 17089 ;;		Unchanged: 0/0
 17090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17095 ;;Total ram usage:        2 bytes
 17096 ;; Hardware stack levels used:    1
 17097 ;; Hardware stack levels required when called:    1
 17098 ;; This function calls:
 17099 ;;		Nothing
 17100 ;; This function is called by:
 17101 ;;		_error_handling
 17102 ;; This function uses a non-reentrant model
 17103 ;;
 17104                           
 17105                           
 17106                           ;psect for function _buzz_op
 17107  20F2                     _buzz_op:	
 17108  20F2                     l5575:	
 17109                           ;incstack = 0
 17110                           ; Regs used in _buzz_op: [wreg]
 17111                           
 17112                           
 17113                           ;main.c: 911:      RC3=1;
 17114  20F2  0020               	movlb	0	; select bank0
 17115  20F3  158E               	bsf	14,3	;volatile
 17116  20F4                     l5577:	
 17117                           
 17118                           ;main.c: 912:      _delay((unsigned long)((1000)*(8000000/4000.0)));
 17119  20F4  300B               	movlw	11
 17120  20F5  00F2               	movwf	??_buzz_op+1
 17121  20F6  3026               	movlw	38
 17122  20F7  00F1               	movwf	??_buzz_op
 17123  20F8  305E               	movlw	94
 17124  20F9                     u9547:	
 17125  20F9  0B89               	decfsz	9,f
 17126  20FA  28F9               	goto	u9547
 17127  20FB  0BF1               	decfsz	??_buzz_op,f
 17128  20FC  28F9               	goto	u9547
 17129  20FD  0BF2               	decfsz	??_buzz_op+1,f
 17130  20FE  28F9               	goto	u9547
 17131  20FF                     l5579:	
 17132                           
 17133                           ;main.c: 913:      RC3=0;
 17134  20FF  0020               	movlb	0	; select bank0
 17135  2100  118E               	bcf	14,3	;volatile
 17136  2101                     l369:	
 17137  2101  0008               	return
 17138  2102                     __end_of_buzz_op:	
 17139                           
 17140                           	psect	intentry
 17141  0004                     __pintentry:	
 17142 ;; *************** function _ISR *****************
 17143 ;; Defined at:
 17144 ;;		line 1036 in file "main.c"
 17145 ;; Parameters:    Size  Location     Type
 17146 ;;		None
 17147 ;; Auto vars:     Size  Location     Type
 17148 ;;		None
 17149 ;; Return value:  Size  Location     Type
 17150 ;;                  1    wreg      void 
 17151 ;; Registers used:
 17152 ;;		wreg, status,2, status,0
 17153 ;; Tracked objects:
 17154 ;;		On entry : 0/0
 17155 ;;		On exit  : 0/0
 17156 ;;		Unchanged: 0/0
 17157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;Total ram usage:        1 bytes
 17163 ;; Hardware stack levels used:    1
 17164 ;; This function calls:
 17165 ;;		Nothing
 17166 ;; This function is called by:
 17167 ;;		Interrupt level 1
 17168 ;; This function uses a non-reentrant model
 17169 ;;
 17170                           
 17171  0004                     _ISR:	
 17172                           
 17173                           ;incstack = 0
 17174  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17175                           
 17176                           ; Regs used in _ISR: [wreg+status,2+status,0]
 17177  0005  3180               	pagesel	$
 17178  0006                     i1l5873:	
 17179                           
 17180                           ;main.c: 1038:   if (INTF){
 17181  0006  1C8B               	btfss	11,1	;volatile
 17182  0007  2809               	goto	u763_21
 17183  0008  280A               	goto	u763_20
 17184  0009                     u763_21:	
 17185  0009  28B1               	goto	i1l5923
 17186  000A                     u763_20:	
 17187  000A                     i1l5875:	
 17188                           
 17189                           ;main.c: 1040:     if (RC4)
 17190  000A  0020               	movlb	0	; select bank0
 17191  000B  1E0E               	btfss	14,4	;volatile
 17192  000C  280E               	goto	u764_21
 17193  000D  280F               	goto	u764_20
 17194  000E                     u764_21:	
 17195  000E  2860               	goto	i1l5899
 17196  000F                     u764_20:	
 17197  000F                     i1l5877:	
 17198                           
 17199                           ;main.c: 1041:         {;main.c: 1042:             temp=0;
 17200  000F  0023               	movlb	3	; select bank3
 17201  0010  01B8               	clrf	_temp^(0+384)
 17202  0011  01B9               	clrf	(_temp+1)^(0+384)
 17203                           
 17204                           ;main.c: 1043:             j=0;
 17205  0012  01BA               	clrf	_j^(0+384)
 17206  0013  01BB               	clrf	(_j+1)^(0+384)
 17207                           
 17208                           ;main.c: 1044:             while (RB0)
 17209  0014  2829               	goto	i1l5887
 17210  0015                     i1l5879:	
 17211                           
 17212                           ;main.c: 1045:             {;main.c: 1046:                 j++;
 17213  0015  3001               	movlw	1
 17214  0016  0023               	movlb	3	; select bank3
 17215  0017  07BA               	addwf	_j^(0+384),f
 17216  0018  3000               	movlw	0
 17217  0019  3DBB               	addwfc	(_j+1)^(0+384),f
 17218  001A                     i1l5881:	
 17219                           
 17220                           ;main.c: 1048:                 if (j==20000)
 17221  001A  3020               	movlw	32
 17222  001B  063A               	xorwf	_j^(0+384),w
 17223  001C  304E               	movlw	78
 17224  001D  1903               	skipnz
 17225  001E  063B               	xorwf	(_j+1)^(0+384),w
 17226  001F  1D03               	btfss	3,2
 17227  0020  2822               	goto	u765_21
 17228  0021  2823               	goto	u765_20
 17229  0022                     u765_21:	
 17230  0022  2829               	goto	i1l5887
 17231  0023                     u765_20:	
 17232  0023                     i1l5883:	
 17233                           
 17234                           ;main.c: 1049:                 {;main.c: 1050:                     temp++;
 17235  0023  3001               	movlw	1
 17236  0024  07B8               	addwf	_temp^(0+384),f
 17237  0025  3000               	movlw	0
 17238  0026  3DB9               	addwfc	(_temp+1)^(0+384),f
 17239  0027                     i1l5885:	
 17240                           
 17241                           ;main.c: 1051:                     j=0;
 17242  0027  01BA               	clrf	_j^(0+384)
 17243  0028  01BB               	clrf	(_j+1)^(0+384)
 17244  0029                     i1l5887:	
 17245                           
 17246                           ;main.c: 1044:             while (RB0)
 17247  0029  0020               	movlb	0	; select bank0
 17248  002A  180D               	btfsc	13,0	;volatile
 17249  002B  282D               	goto	u766_21
 17250  002C  282E               	goto	u766_20
 17251  002D                     u766_21:	
 17252  002D  2815               	goto	i1l5879
 17253  002E                     u766_20:	
 17254  002E                     i1l5889:	
 17255                           
 17256                           ;main.c: 1054:             if (temp<2)
 17257  002E  3000               	movlw	0
 17258  002F  0023               	movlb	3	; select bank3
 17259  0030  0239               	subwf	(_temp+1)^(0+384),w
 17260  0031  3002               	movlw	2
 17261  0032  1903               	skipnz
 17262  0033  0238               	subwf	_temp^(0+384),w
 17263  0034  1803               	skipnc
 17264  0035  2837               	goto	u767_21
 17265  0036  2838               	goto	u767_20
 17266  0037                     u767_21:	
 17267  0037  284C               	goto	i1l5895
 17268  0038                     u767_20:	
 17269  0038                     i1l5891:	
 17270                           
 17271                           ;main.c: 1055:             {;main.c: 1056:                 if(pwm_lvl<100)
 17272  0038  0022               	movlb	2	; select bank2
 17273  0039  0867               	movf	(_pwm_lvl+1)^(0+256),w
 17274  003A  3A80               	xorlw	128
 17275  003B  00F0               	movwf	??_ISR
 17276  003C  3080               	movlw	128
 17277  003D  0270               	subwf	??_ISR,w
 17278  003E  1D03               	skipz
 17279  003F  2842               	goto	u768_25
 17280  0040  3064               	movlw	100
 17281  0041  0266               	subwf	_pwm_lvl^(0+256),w
 17282  0042                     u768_25:	
 17283  0042  1803               	skipnc
 17284  0043  2845               	goto	u768_21
 17285  0044  2846               	goto	u768_20
 17286  0045                     u768_21:	
 17287  0045  28B0               	goto	i1l5921
 17288  0046                     u768_20:	
 17289  0046                     i1l5893:	
 17290                           
 17291                           ;main.c: 1057:                     {;main.c: 1058:                          pwm_lvl++;
 17292  0046  3001               	movlw	1
 17293  0047  0022               	movlb	2	; select bank2
 17294  0048  07E6               	addwf	_pwm_lvl^(0+256),f
 17295  0049  3000               	movlw	0
 17296  004A  3DE7               	addwfc	(_pwm_lvl+1)^(0+256),f
 17297  004B  28B0               	goto	i1l5921
 17298  004C                     i1l5895:	
 17299                           
 17300                           ;main.c: 1062:             {;main.c: 1063:                  if(pwm_lvl<100)
 17301  004C  0022               	movlb	2	; select bank2
 17302  004D  0867               	movf	(_pwm_lvl+1)^(0+256),w
 17303  004E  3A80               	xorlw	128
 17304  004F  00F0               	movwf	??_ISR
 17305  0050  3080               	movlw	128
 17306  0051  0270               	subwf	??_ISR,w
 17307  0052  1D03               	skipz
 17308  0053  2856               	goto	u769_25
 17309  0054  3064               	movlw	100
 17310  0055  0266               	subwf	_pwm_lvl^(0+256),w
 17311  0056                     u769_25:	
 17312  0056  1803               	skipnc
 17313  0057  2859               	goto	u769_21
 17314  0058  285A               	goto	u769_20
 17315  0059                     u769_21:	
 17316  0059  28B0               	goto	i1l5921
 17317  005A                     u769_20:	
 17318  005A                     i1l5897:	
 17319                           
 17320                           ;main.c: 1064:                     {;main.c: 1065:                          pwm_lvl+=5;
 17321  005A  3005               	movlw	5
 17322  005B  0022               	movlb	2	; select bank2
 17323  005C  07E6               	addwf	_pwm_lvl^(0+256),f
 17324  005D  3000               	movlw	0
 17325  005E  3DE7               	addwfc	(_pwm_lvl+1)^(0+256),f
 17326  005F  28B0               	goto	i1l5921
 17327  0060                     i1l5899:	
 17328                           
 17329                           ;main.c: 1071:         {;main.c: 1072:            temp=0;
 17330  0060  0023               	movlb	3	; select bank3
 17331  0061  01B8               	clrf	_temp^(0+384)
 17332  0062  01B9               	clrf	(_temp+1)^(0+384)
 17333                           
 17334                           ;main.c: 1073:             j=0;
 17335  0063  01BA               	clrf	_j^(0+384)
 17336  0064  01BB               	clrf	(_j+1)^(0+384)
 17337                           
 17338                           ;main.c: 1074:             while (RB0)
 17339  0065  287A               	goto	i1l5909
 17340  0066                     i1l5901:	
 17341                           
 17342                           ;main.c: 1075:             {;main.c: 1076:                 j++;
 17343  0066  3001               	movlw	1
 17344  0067  0023               	movlb	3	; select bank3
 17345  0068  07BA               	addwf	_j^(0+384),f
 17346  0069  3000               	movlw	0
 17347  006A  3DBB               	addwfc	(_j+1)^(0+384),f
 17348  006B                     i1l5903:	
 17349                           
 17350                           ;main.c: 1078:                 if (j==20000)
 17351  006B  3020               	movlw	32
 17352  006C  063A               	xorwf	_j^(0+384),w
 17353  006D  304E               	movlw	78
 17354  006E  1903               	skipnz
 17355  006F  063B               	xorwf	(_j+1)^(0+384),w
 17356  0070  1D03               	btfss	3,2
 17357  0071  2873               	goto	u770_21
 17358  0072  2874               	goto	u770_20
 17359  0073                     u770_21:	
 17360  0073  287A               	goto	i1l5909
 17361  0074                     u770_20:	
 17362  0074                     i1l5905:	
 17363                           
 17364                           ;main.c: 1079:                 {;main.c: 1080:                     temp++;
 17365  0074  3001               	movlw	1
 17366  0075  07B8               	addwf	_temp^(0+384),f
 17367  0076  3000               	movlw	0
 17368  0077  3DB9               	addwfc	(_temp+1)^(0+384),f
 17369  0078                     i1l5907:	
 17370                           
 17371                           ;main.c: 1081:                     j=0;
 17372  0078  01BA               	clrf	_j^(0+384)
 17373  0079  01BB               	clrf	(_j+1)^(0+384)
 17374  007A                     i1l5909:	
 17375                           
 17376                           ;main.c: 1074:             while (RB0)
 17377  007A  0020               	movlb	0	; select bank0
 17378  007B  180D               	btfsc	13,0	;volatile
 17379  007C  287E               	goto	u771_21
 17380  007D  287F               	goto	u771_20
 17381  007E                     u771_21:	
 17382  007E  2866               	goto	i1l5901
 17383  007F                     u771_20:	
 17384  007F                     i1l5911:	
 17385                           
 17386                           ;main.c: 1084:             if (temp<2)
 17387  007F  3000               	movlw	0
 17388  0080  0023               	movlb	3	; select bank3
 17389  0081  0239               	subwf	(_temp+1)^(0+384),w
 17390  0082  3002               	movlw	2
 17391  0083  1903               	skipnz
 17392  0084  0238               	subwf	_temp^(0+384),w
 17393  0085  1803               	skipnc
 17394  0086  2888               	goto	u772_21
 17395  0087  2889               	goto	u772_20
 17396  0088                     u772_21:	
 17397  0088  289D               	goto	i1l5917
 17398  0089                     u772_20:	
 17399  0089                     i1l5913:	
 17400                           
 17401                           ;main.c: 1085:             {;main.c: 1086:                 if(pwm_lvl>0)
 17402  0089  0022               	movlb	2	; select bank2
 17403  008A  0867               	movf	(_pwm_lvl+1)^(0+256),w
 17404  008B  3A80               	xorlw	128
 17405  008C  00F0               	movwf	??_ISR
 17406  008D  3080               	movlw	128
 17407  008E  0270               	subwf	??_ISR,w
 17408  008F  1D03               	skipz
 17409  0090  2893               	goto	u773_25
 17410  0091  3001               	movlw	1
 17411  0092  0266               	subwf	_pwm_lvl^(0+256),w
 17412  0093                     u773_25:	
 17413  0093  1C03               	skipc
 17414  0094  2896               	goto	u773_21
 17415  0095  2897               	goto	u773_20
 17416  0096                     u773_21:	
 17417  0096  28B0               	goto	i1l5921
 17418  0097                     u773_20:	
 17419  0097                     i1l5915:	
 17420                           
 17421                           ;main.c: 1087:                  {;main.c: 1088:                         pwm_lvl--;
 17422  0097  30FF               	movlw	255
 17423  0098  0022               	movlb	2	; select bank2
 17424  0099  07E6               	addwf	_pwm_lvl^(0+256),f
 17425  009A  30FF               	movlw	255
 17426  009B  3DE7               	addwfc	(_pwm_lvl+1)^(0+256),f
 17427  009C  28B0               	goto	i1l5921
 17428  009D                     i1l5917:	
 17429                           
 17430                           ;main.c: 1093:             {;main.c: 1094:                 if(pwm_lvl>0)
 17431  009D  0022               	movlb	2	; select bank2
 17432  009E  0867               	movf	(_pwm_lvl+1)^(0+256),w
 17433  009F  3A80               	xorlw	128
 17434  00A0  00F0               	movwf	??_ISR
 17435  00A1  3080               	movlw	128
 17436  00A2  0270               	subwf	??_ISR,w
 17437  00A3  1D03               	skipz
 17438  00A4  28A7               	goto	u774_25
 17439  00A5  3001               	movlw	1
 17440  00A6  0266               	subwf	_pwm_lvl^(0+256),w
 17441  00A7                     u774_25:	
 17442  00A7  1C03               	skipc
 17443  00A8  28AA               	goto	u774_21
 17444  00A9  28AB               	goto	u774_20
 17445  00AA                     u774_21:	
 17446  00AA  28B0               	goto	i1l5921
 17447  00AB                     u774_20:	
 17448  00AB                     i1l5919:	
 17449                           
 17450                           ;main.c: 1095:                  {;main.c: 1096:                     pwm_lvl-=5;
 17451  00AB  30FB               	movlw	251
 17452  00AC  0022               	movlb	2	; select bank2
 17453  00AD  07E6               	addwf	_pwm_lvl^(0+256),f
 17454  00AE  30FF               	movlw	255
 17455  00AF  3DE7               	addwfc	(_pwm_lvl+1)^(0+256),f
 17456  00B0                     i1l5921:	
 17457                           
 17458                           ;main.c: 1101:     INTF = 0;
 17459  00B0  108B               	bcf	11,1	;volatile
 17460  00B1                     i1l5923:	
 17461                           
 17462                           ;main.c: 1104:    if (CCP1IF)
 17463  00B1  0020               	movlb	0	; select bank0
 17464  00B2  1D11               	btfss	17,2	;volatile
 17465  00B3  28B5               	goto	u775_21
 17466  00B4  28B6               	goto	u775_20
 17467  00B5                     u775_21:	
 17468  00B5  28B9               	goto	i1l424
 17469  00B6                     u775_20:	
 17470  00B6                     i1l5925:	
 17471                           
 17472                           ;main.c: 1105:     {;main.c: 1106:         TMR1=0;
 17473  00B6  0196               	clrf	22	;volatile
 17474  00B7  0197               	clrf	23	;volatile
 17475  00B8                     i1l5927:	
 17476                           
 17477                           ;main.c: 1107:         CCP1IF=0;
 17478  00B8  1111               	bcf	17,2	;volatile
 17479  00B9                     i1l424:	
 17480  00B9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17481  00BA  0009               	retfie
 17482  00BB                     __end_of_ISR:	
 17483  007E                     btemp	set	126	;btemp
 17484  007E                     int$flags	set	126
 17485  007E                     wtemp0	set	126


Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         145
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     56      80
    BANK3            80      0      54
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK3[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK3[8]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S946_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK3[8]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 8
		 -> buff(BANK3[8]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    lcd_send_string@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_33(CODE[3]), STR_32(CODE[2]), STR_31(CODE[5]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[3]), STR_27(CODE[2]), STR_26(CODE[3]), 
		 -> STR_25(CODE[2]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[6]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[2]), 
		 -> STR_9(CODE[6]), STR_8(CODE[2]), STR_7(CODE[6]), STR_6(CODE[5]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[6]), buff(BANK3[8]), 


Critical Paths under _main in COMMON

    _main->_error_handling
    _shut_down->_interrupt_enable
    _lcd_update->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    ___flmul->__Umul8_16
    _lcd_init->_lcd_cmd
    _error_handling->_lcd_show
    _lcd_show->_lcd_send_string
    _lcd_set_pos->_lcd_cmd
    _lcd_send_string->_lcd_data
    _lcd_data->_data_write
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_data_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _power_con->___flge
    _check_overload->___flge
    _read_volt->___fladd
    _vfprintf->_vfpfcnvrt
    _efgtoa->___fladd
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _freq_count->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _fabsf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_pwm_con
    _process_loop->_pwm_con
    _maintenance->_pwm_con
    _pwm_con->_lcd_update
    _lcd_update->_lcd_send_float1
    _lcd_send_int->_sprintf
    _lcd_send_float1->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  699988
                     _error_handling
                       _init_setting
                   _interrupt_enable
                          _lcd_clear
                           _lcd_init
                           _lcd_show
                         _lcd_update
                        _maintenance
                       _process_loop
                            _pwm_con
 ---------------------------------------------------------------------------------
 (1) _process_loop                                         0     0      0  240512
                     _check_overload
                         _freq_count
                   _interrupt_enable
                           _lcd_show
                         _lcd_update
                          _power_con
                            _pwm_con
                          _read_volt
                          _shut_down
                           _start_up
 ---------------------------------------------------------------------------------
 (2) _start_up                                             2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _shut_down                                            0     0      0      22
                   _interrupt_enable
 ---------------------------------------------------------------------------------
 (2) _power_con                                            0     0      0    2918
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _check_overload                                       0     0      0    2918
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _maintenance                                          0     0      0  234632
                         _freq_count
                           _lcd_show
                         _lcd_update
                            _pwm_con
                          _read_volt
 ---------------------------------------------------------------------------------
 (1) _pwm_con                                              2     2      0  112826
                                             54 BANK2      2     2      0
                             ___flge
                             ___wmul
                         _lcd_update
                          _read_volt
 ---------------------------------------------------------------------------------
 (2) _read_volt                                            7     7      0    9180
                                              0 BANK1      7     7      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _lcd_update                                           5     5      0  100332
                                             49 BANK2      5     5      0
                             ___flge
                            ___flsub
                            ___fltol
                              _fabsf
                    _lcd_send_float1
                       _lcd_send_int
                    _lcd_send_string
                        _lcd_set_pos
 ---------------------------------------------------------------------------------
 (3) _lcd_send_int                                         2     0      2   44428
                                             45 BANK2      2     0      2
                    _lcd_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _lcd_send_float1                                      4     0      4   43348
                                             45 BANK2      4     0      4
                    _lcd_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             16    10      6   40497
                                             29 BANK2     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     5      3   39915
                                             21 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    43      2   39430
                                             78 BANK0      2     0      2
                                             74 BANK1      6     6      0
                                              0 BANK2     21    21      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              66    61      5   27797
                                              8 BANK1     66    61      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             11     7      4     913
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3245
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8    2918
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                30    22      8    5233
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     6      3    3400
                                             10 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                8     7      1    1226
                                              9 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1403
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     237
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     275
                                              8 BANK1      8     4      4
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) _freq_count                                           3     3      0    6672
                                             58 BANK0      3     3      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3785
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2337
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     220
                                              4 COMMON     1     1      0
                         _data_write
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _init_setting                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _error_handling                                       3     3      0    5690
                                             11 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _buzz_op
                   _interrupt_enable
                           _lcd_show
 ---------------------------------------------------------------------------------
 (2) _lcd_show                                             2     0      2    5622
                                              9 COMMON     2     0      2
                          _lcd_clear
                    _lcd_send_string
                        _lcd_set_pos
 ---------------------------------------------------------------------------------
 (3) _lcd_set_pos                                          2     0      2    2206
                                              4 COMMON     2     0      2
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_send_string                                      5     3      2    2730
                                              4 COMMON     5     3      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (4) _lcd_data                                             2     2      0     132
                                              2 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            1     1      0     132
                                              4 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              2     2      0     132
                                              2 COMMON     2     2      0
                         _data_write
 ---------------------------------------------------------------------------------
 (5) _data_write                                           1     1      0      88
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _interrupt_enable                                     1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _buzz_op                                              2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _error_handling
     _buzz_op
     _interrupt_enable
     _lcd_show
       _lcd_clear
         _lcd_cmd
           _data_write
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
   _init_setting
   _interrupt_enable
   _lcd_clear
     _lcd_cmd
       _data_write
   _lcd_init
     _data_write
     _lcd_cmd
       _data_write
   _lcd_show
     _lcd_clear
       _lcd_cmd
         _data_write
     _lcd_send_string
       _lcd_data
         _data_write
     _lcd_set_pos
       _lcd_cmd
         _data_write
   _lcd_update
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___fltol
     _fabsf
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
     _lcd_send_float1
       _lcd_send_string
         _lcd_data
           _data_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _lcd_send_int
       _lcd_send_string
         _lcd_data
           _data_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _lcd_send_string
       _lcd_data
         _data_write
     _lcd_set_pos
       _lcd_cmd
         _data_write
   _maintenance
     _freq_count
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
     _lcd_show
       _lcd_clear
         _lcd_cmd
           _data_write
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
     _lcd_update
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fltol
       _fabsf
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
       _lcd_send_float1
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_int
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
     _pwm_con
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___wmul
       _lcd_update
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fltol
         _fabsf
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
         _lcd_send_float1
           _lcd_send_string
             _lcd_data
               _data_write
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fldiv
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           __Umul8_16
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                 _isdigit
                 _isupper
                 _strncmp
                 _tolower
                   _isupper
         _lcd_send_int
           _lcd_send_string
             _lcd_data
               _data_write
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fldiv
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           __Umul8_16
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                 _isdigit
                 _isupper
                 _strncmp
                 _tolower
                   _isupper
         _lcd_send_string
           _lcd_data
             _data_write
         _lcd_set_pos
           _lcd_cmd
             _data_write
       _read_volt
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     _read_volt
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _process_loop
     _check_overload
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
     _freq_count
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
     _interrupt_enable
     _lcd_show
       _lcd_clear
         _lcd_cmd
           _data_write
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
     _lcd_update
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fltol
       _fabsf
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
       _lcd_send_float1
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_int
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
     _power_con
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
     _pwm_con
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___wmul
       _lcd_update
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fltol
         _fabsf
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
         _lcd_send_float1
           _lcd_send_string
             _lcd_data
               _data_write
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fldiv
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           __Umul8_16
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                 _isdigit
                 _isupper
                 _strncmp
                 _tolower
                   _isupper
         _lcd_send_int
           _lcd_send_string
             _lcd_data
               _data_write
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fldiv
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fleq
                   ___flge
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           __Umul8_16
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   _isupper
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                         _putch
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                 _isdigit
                 _isupper
                 _strncmp
                 _tolower
                   _isupper
         _lcd_send_string
           _lcd_data
             _data_write
         _lcd_set_pos
           _lcd_cmd
             _data_write
       _read_volt
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     _read_volt
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
     _shut_down
       _interrupt_enable
     _start_up
   _pwm_con
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___wmul
     _lcd_update
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fltol
       _fabsf
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
       _lcd_send_float1
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_int
         _lcd_send_string
           _lcd_data
             _data_write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       _lcd_send_string
         _lcd_data
           _data_write
       _lcd_set_pos
         _lcd_cmd
           _data_write
     _read_volt
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     38      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      36      11       67.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     183      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     183      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Aug 26 17:31:53 2020

              lcd_cmd@data 0073               ?_lcd_set_pos 0074              ?_lcd_send_int 014D  
             ___fldiv@aexp 0059               ___fldiv@bexp 0058                          _j 01BA  
             lcd_data@data 0073               ___fldiv@sign 0051                __CFG_CP$OFF 0000  
                       _GO 04E9                         _f1 0168                         _f2 0169  
             ___awdiv@sign 0077                         _v1 015C                         _v2 0158  
      ___wmul@multiplicand 0073                _pwmcon_flag 007C        __Umul8_16@word_mpld 0077  
                      l230 22D8                        l302 0FFF                        l311 1370  
                      l320 20E4                        l232 22DF                        l225 1895  
                      l305 11E9                        l234 22E6                        l242 2119  
                      l235 22E7                        l315 2796                        l331 1AA2  
                      l323 2320                        l236 22F2                        l228 22D0  
                      l260 217A                        l308 12A8                        l245 24BC  
                      l333 1A9F                        l318 20E3                        l254 21CB  
                      l342 246C                        l326 238A                        l239 2131  
                      l263 20D4                        l335 1AA4                        l248 20F1  
                      l272 1FFF                        l257 0815                        l433 2710  
                      l434 2709                        l347 23CB                        l355 27B1  
                      l380 25BD                        l700 0342                        l348 23CE  
                      l373 259D                        l701 0324                        l366 27FF  
                      l711 037B                        l369 2101                        l377 25A0  
                      l641 2616                        l393 1045                        l385 1028  
                      l650 10F5                        l386 1029                        l636 25DA  
                      l644 10B7                        l388 103F                        l653 1166  
                      l645 10C0                        l389 103A                        l910 1CEA  
                      l639 25FC                        l399 106D                        l649 10DD  
                      l729 0560                        l667 11DD                        l909 1CD9  
                      l685 07BE                        l792 2355                        l777 0CE1  
                      l962 250F                        l971 241D                        l796 21D6  
                      l949 26D0                        l965 23EC                        l798 21EA  
                      l966 2408                        l982 1A13                        l974 19A6  
                      l990 1909                        l896 1EC5                        l897 1ED6  
                      l977 19FA                        l986 07FF                        _GIE 005F  
                      l997 18F4                        _RA0 0060                        _RA1 0061  
                      _RA2 0062                        _RB0 0068                        _RA3 0063  
                      _RA4 0064                        _RB2 006A                        _RC0 0070  
                      _RA5 0065                        _RB3 006B                        _RA6 0066  
                      _RA7 0067                        _RC3 0073                        _RC4 0074  
                      _RC5 0075                        _RC6 0076                        _RC7 0077  
                      _PR2 001B               __CFG_CPD$OFF 0000                        _ISR 0004  
                      _abs 217B                        _pad 25BE               ___awmod@sign 0077  
             __CFG_BORV$HI 0000                        wreg 0009               ___flmul@aexp 0038  
             ___flmul@bexp 0039               ___flmul@sign 0033               ___flmul@temp 003E  
             ___flmul@prod 003A               __CFG_LVP$OFF 0000                       ?_ISR 0070  
             ___fltol@exp1 007B                       l1000 1909                       l1101 1470  
                     l1110 15A8                       l1103 144C                       l1122 1524  
                     l1131 157D                       ?_abs 0074                       l1300 229E  
                     l1140 15A8                       l1205 17F3                       l1118 1502  
                     l1310 1DCD                       l1231 1AC8                       l1143 07F4  
                     l1128 1546                       l1153 086D                       l1401 223F  
                     l1233 1B51                       l1305 1D2C                       l1306 1DD5  
                     l1330 2161                       l1155 09C9                       l1403 224F  
                     l1139 159F                       l1244 1B1D                       l1316 2149  
                     l1324 220B                       l1245 1B29                       l1237 1B03  
                     l1261 2194                       l1174 0997                       l1175 09B1  
                     l1264 2194                       l1256 1988                       l1360 1824  
                     l1177 09C0                       l1169 094B                       l1193 17FF  
                     l1345 2565                       l1353 22C7                       l1097 13CF  
                     l4001 1922                       l1282 1B8F                       l1363 0003  
                     l4003 1937                       l4101 1E46                       l4005 193D  
                     l4013 195E                       l1199 177B                       l1295 1C00  
                     l4111 1E61                       l4103 1E49                       l1375 21AE  
                     l4015 1964                       l4007 1954                       l4023 220D  
                     l4121 1EA7                       l4113 1E83                       l4105 1E51  
                     l4201 24C2                       l4009 1959                       l4041 1D1E  
                     l1369 222C                       l4025 2215                       l1394 2275  
                     l4115 1E93                       l4107 1E55                       l4131 1C37  
                     l4123 1C01                       l4211 24D8                       l4203 24C7  
                     l4019 1984                       l4051 1D5E                       l4043 1D2B  
                     l1379 2671                       l4117 1E94                       l4109 1E59  
                     l4141 1C72                       l4133 1C56                       l4125 1C02  
                     l4221 24F2                       l4213 24DB                       l4205 24C9  
                     l4061 1DAE                       l4053 1D75                       l4045 1D31  
                     l4037 1CEB                       l1389 2275                       l5021 2644  
                     l5013 262F                       l5005 2618                       l5031 22C9  
                     l4071 21CC                       l4119 1EA2                       l4151 1CBB  
                     l4143 1C76                       l4135 1C63                       l4127 1C0C  
                     l4231 250B                       l4223 24F6                       l4215 24E0  
                     l4207 24CD                       l4311 07BF                       l4063 1DC5  
                     l4055 1D7D                       l4047 1D49                       l4039 1D03  
                     l5023 264D                       l5015 2633                       l5007 2620  
                     l5041 22DD                       l5033 22CD                       l4401 090A  
                     l4321 0820                       l4081 21E6                       l4073 21CE  
                     l4145 1C98                       l4137 1C66                       l4129 1C2D  
                     l4161 267E                       l4153 2672                       l4225 24FB  
                     l4217 24E4                       l4209 24D2                       l4313 07C2  
                     l4305 18EB                       l4057 1D8E                       l5025 2653  
                     l5017 2637                       l5009 262C                       l5043 22E0  
                     l5035 22D2                       l4411 0920                       l4403 0912  
                     l4331 0837                       l4323 0824                       l4075 21D2  
                     l4067 2132                       l4091 1E02                       l4147 1CA8  
                     l4139 1C6E                       l4171 2693                       l4163 2682  
                     l4155 2673                       l4219 24E8                       l4227 2501  
                     l4251 19BA                       l4307 18F9                       l4059 1DA5  
                     l5027 2663                       l5019 263B                       l5045 22E4  
                     l5037 22D6                       l5213 20CF                       l4421 0934  
                     l4413 0927                       l4405 0914                       l4341 084B  
                     l4333 0838                       l4325 0825                       l4317 0816  
                     l4501 1611                       l5221 1AAC                       l4077 21DB  
                     l4093 1E0C                       l4085 1DD6                       l4149 1CB6  
                     l4181 26B2                       l4173 2696                       l4165 2687  
                     l4157 2677                       l4229 2506                       l6101 241C  
                     l4261 1A10                       l4253 19C2                       l4309 18FE  
                     l5047 22E8                       l5039 22D9                       l4431 095D  
                     l4423 0948                       l4407 091B                       l4415 092B  
                     l4351 0862                       l4343 084F                       l4327 082A  
                     l4335 083A                       l4319 081C                       l4511 166C  
                     l4503 161E                       l5231 1AD9                       l5223 1AB0  
                     l5215 2276                       l4079 21E0                       l4095 1E2B  
                     l4087 1DD7                       l6111 1099                       l4191 26C7  
                     l4183 26B6                       l4175 269B                       l4167 268B  
                     l4159 267C                       l4263 1A12                       l4255 19C6  
                     l4247 1989                       l4271 07FF                       l5049 22EC  
                     l5161 2120                       l4441 09A5                       l4433 0961  
                     l4417 092F                       l4409 091F                       l4361 0885  
                     l4353 0863                       l4345 0850                       l4337 0842  
                     l4329 082F                       l4521 16A1                       l4513 1679  
                     l4505 162B                       l5241 1AFC                       l5233 1ADE  
                     l5225 1AC0                       l4601 21F4                       l4097 1E2F  
                     l4089 1DE1                       l6121 10EB                       l6113 10BC  
                     l6105 1070                       l4193 26CC                       l4185 26B7  
                     l4177 269F                       l4169 268D                       l4257 19DE  
                     l4249 199E                       l3801 13BC                       l4281 18AA  
                     l6201 0182                       l5163 212A                       l4451 09BC  
                     l4443 09A8                       l4435 0979                       l4427 0950  
                     l4419 0930                       l4371 089C                       l4347 0855  
                     l4355 0865                       l4339 0847                       l4531 16E4  
                     l4523 16AE                       l4515 1686                       l4507 1645  
                     l5251 1B2B                       l5243 1B0A                       l5235 1AE9  
                     l5227 1AD0                       l5219 1AA7                       l4603 2203  
                     l4099 1E39                       l3731 251A                       l6051 22A4  
                     l6131 1131                       l6123 10F0                       l6115 10CF  
                     l6107 1080                       l4187 26BC                       l4179 26A3  
                     l4259 19E2                       l4267 07F5                       l3811 13D9  
                     l3803 13C4                       l4291 18CC                       l4283 18BD  
                     l4275 1896                       l6203 018C                       l6211 01B5  
                     l5181 2108                       l5157 211B                       l4445 09B0  
                     l4429 0955                       l4437 097D                       l4381 08C6  
                     l4373 08AC                       l4357 0875                       l4365 088E  
                     l4349 085A                       l4541 1738                       l4533 16F1  
                     l4525 16B5                       l4517 168D                       l4509 1652  
                     l4461 15B3                       l5253 1B3F                       l5245 1B13  
                     l5237 1AF0                       l4605 2204                       l3733 251F  
                     l6053 22B2                       l6061 25C0                       l6141 118E  
                     l6133 1135                       l6125 10FA                       l6117 10D5  
                     l6109 1093                       l4189 26C2                       l4197 24BD  
                     l4269 07FD                       l3901 150F                       l3821 13ED  
                     l3813 13DD                       l3805 13C5                       l4285 18BE  
                     l4277 18A1                       l6301 03BB                       l6221 01F0  
                     l6213 01C7                       l6205 0195                       ?_pad 0027  
                     l5431 20DC                       l5183 2112                       l5263 20E5  
                     l5159 211D                       l5191 21C0                       l4447 09B6  
                     l4439 098A                       l4383 08CB                       l4391 08E5  
                     l4375 08B4                       l4367 0893                       l4359 0881  
                     l4551 1757                       l4543 1744                       l4535 1705  
                     l4527 16C9                       l4519 169A                       l4471 15CA  
                     l4463 15B7                       l5255 1B44                       l5247 1B17  
                     l5239 1AF4                       l3735 252A                       l3727 2510  
                     l6055 22B7                       l3751 2196                       l6071 25DD  
                     l6063 25C5                       l6151 11B2                       l6143 119C  
                     l6135 1139                       l6127 10FD                       l6119 10E5  
                     l4199 24BE                       l3911 1528                       l3831 1401  
                     l3823 13F1                       l3815 13E1                       l3807 13C7  
                     l4287 18C6                       l6311 04E9                       l6303 03C4  
                     l6231 0222                       l6223 01F9                       l6207 019A  
                     l5511 2300                       l5433 20E1                       l5177 2103  
                     l5265 20E9                       l5185 21AF                       l5441 1EE9  
                     l5601 1832                       l4449 09BA                       l4393 08F7  
                     l4385 08D9                       l4377 08BC                       l4561 1778  
                     l4545 174B                       l4553 175B                       l4537 171A  
                     l4529 16D0                       l4481 15E1                       l4473 15CC  
                     l4465 15B8                       l4457 15A9                       l5257 1B48  
                     l5249 1B21                       l3737 2549                       l3729 2515  
                     l6049 22A1                       l3753 219B                       l6073 25E9  
                     l6065 25CE                       l6153 11B8                       l6137 1174  
                     l6145 11A1                       l6129 1102                       l3913 152B  
                     l3905 1518                       l3921 1538                       l3841 1415  
                     l3833 1405                       l3825 13F5                       l3817 13E5  
                     l3809 13D5                       l4297 18D4                       l4289 18C8  
                     l6057 214A                       l6401 06EC                       l6321 054B  
                     l6313 04F3                       l6305 0485                       l6241 026C  
                     l6233 0224                       l6225 01FE                       l6217 01E0  
                     l5521 235C                       l5513 230D                       l5179 2105  
                     l5187 21B2                       l5451 1F21                       l5443 1EF7  
                     l5435 1ED7                       l5611 1837                       l5603 1833  
                     l4395 08F8                       l4387 08DD                       l4379 08C4  
                     l4571 1791                       l4555 175F                       l4547 174F  
                     l4539 1731                       l4491 15F6                       l4483 15E2  
                     l4475 15D4                       l4467 15BD                       l4459 15AF  
                     l5259 1B49                       l7051 1BA0                       l3739 255C  
                     l3755 219F                       l6075 25EE                       l6067 25D3  
                     l6155 11BD                       l6147 11A8                       l6139 1181  
                     l3931 154B                       l3923 1539                       l3915 152D  
                     l3907 151F                       l3851 1456                       l3835 1409  
                     l3827 13F9                       l3819 13E9                       l3843 1419  
                     l3771 137F                       l4299 18E4                       l6083 2250  
                     l6411 0715                       l6403 06F0                       l6331 05B6  
                     l6323 0553                       l6315 050B                       l6307 0489  
                     l6251 030F                       l6243 02A8                       l6219 01E6  
                     l6171 0109                       l6163 00DC                       l5531 236F  
                     l5523 235E                       l5515 231A                       l5507 22F3  
                     l5189 21BC                       l7053 1FF1                       l5461 1F53  
                     l5453 1F28                       l5445 1EFE                       l5437 1ED8  
                     l5701 1873                       l5621 183D                       l5613 1839  
                     l5605 1834                       l4397 0900                       l4389 08DE  
                     l4581 17D2                       l4573 17A9                       l4565 1780  
                     l4557 1760                       l4549 1750                       l4493 15FE  
                     l4485 15E7                       l4477 15D9                       l4469 15C2  
                     l3757 21A8                       l6077 2601                       l6069 25D8  
                     l6157 11C1                       l6149 11AD                       l6093 23CF  
                     l3941 1582                       l3933 1550                       l3925 153D  
                     l3917 1532                       l3909 1523                       l3853 1458  
                     l3861 1469                       l3845 141A                       l3837 140D  
                     l3829 13FD                       l3781 1393                       l3773 1380  
                     l3765 1371                       l6421 0740                       l6413 0725  
                     l6405 06F5                       l6333 05BB                       l6341 05D1  
                     l6325 0559                       l6317 0510                       l6309 0497  
                     l6261 0339                       l6253 0313                       l6245 02D4  
                     l6237 023C                       l6229 0219                       l6181 0133  
                     l6173 011D                       l6165 00DE                       l6501 09CC  
                     l5533 2378                       l5525 2361                       l5517 2356  
                     l5509 22F5                       l5471 1F85                       l5463 1F5A  
                     l5455 1F36                       l5447 1F0C                       l5439 1EE2  
                     l5703 1874                       l5631 1842                       l5623 183E  
                     l5615 183A                       l5607 1835                       l5711 246D  
                     l4399 0904                       l4591 17EF                       l4583 17DB  
                     l4567 1785                       l4575 17AD                       l4559 1764  
                     l4495 1603                       l4487 15EC                       l4479 15DD  
                     l6079 260A                       l6159 11CA                       l6095 23E4  
                     l3951 1599                       l3943 1587                       l3935 1558  
                     l3927 1543                       l3919 1534                       l3871 148A  
                     l3863 1474                       l3855 145C                       l3847 1431  
                     l3839 1411                       l3791 13A9                       l3775 1385  
                     l3783 1395                       l3767 1377                       l6087 2268  
                     l6431 075D                       l6423 0745                       l6415 0729  
                     l6407 06FA                       l6351 05ED                       l6343 05D8  
                     l6335 05C2                       l6327 055E                       l6319 0518  
                     l6271 035B                       l6255 0319                       l6247 02D8  
                     l6239 0268                       l6191 014D                       l6183 013A  
                     l6175 0120                       l6167 00E6                       l6511 0A08  
                     l6503 09E0                       l5535 2381                       l5527 2363  
                     l5519 2358                       l5481 1FB6                       l5473 1F8C  
                     l5465 1F68                       l5457 1F3D                       l5449 1F13  
                     l5705 1875                       l5641 1848                       l5633 1843  
                     l5625 183F                       l5617 183B                       l5609 1836  
                     l5721 2495                       l5713 2475                       l3961 2230  
                     l4593 17F7                       l4585 17DD                       l4577 17BA  
                     l4569 178D                       l4497 1608                       l4489 15F4  
                     l6097 2400                       l3953 159B                       l3945 158F  
                     l3937 155C                       l3881 149E                       l3873 148E  
                     l3865 1479                       l3857 145D                       l3849 1450  
                     l3793 13AD                       l3785 139D                       l3777 138A  
                     l3769 137B                       l6089 226E                       l6441 0783  
                     l6433 0761                       l6425 074B                       l6409 06FF  
                     l6417 072D                       l6353 05F2                       l6345 05DC  
                     l6361 0607                       l6337 05C8                       l6329 0567  
                     l6281 038B                       l6273 0370                       l6257 0320  
                     l6249 02FF                       l6185 013F                       l6193 0151  
                     l6177 0128                       l6169 0104                       l6601 0CD6  
                     l6521 0A42                       l6513 0A0B                       l6505 09EA  
                     l7049 0FF1                       l5561 2424                       l5529 2366  
                     l5491 1FE4                       l5483 1FBE                       l5475 1F93  
                     l5467 1F6F                       l5459 1F4C                       l5811 25A5  
                     l5707 1876                       l5651 1850                       l5643 1849  
                     l5635 1844                       l5627 1840                       l5619 183C  
                     l5731 24AE                       l5723 2499                       l5715 2479  
                     l3963 2237                       l4587 17EA                       l4579 17C4  
                     l6099 241A                       l3955 15A3                       l3947 1594  
                     l3939 1579                       l3891 14E6                       l3883 149F  
                     l3875 1492                       l3859 1465                       l3795 13B1  
                     l3787 13A2                       l3779 1392                       l6443 0788  
                     l6435 0765                       l6427 0750                       l6419 0733  
                     l6451 07A3                       l6371 0665                       l6363 060D  
                     l6355 05FB                       l6347 05E5                       l6339 05CC  
                     l6291 03A5                       l6283 038F                       l6275 0376  
                     l6267 0348                       l6259 0333                       l6195 0163  
                     l6187 0143                       l6179 012E                       l6523 0A54  
                     l6515 0A15                       l6531 0A8D                       l6507 09F0  
                     l6611 232B                       l5571 238B                       l5563 2442  
                     l5485 1FC8                       l5477 1FA1                       l5469 1F7D  
                     l5813 25A8                       l5821 25B2                       l5805 2588  
                     l5709 1877                       l5661 1858                       l5653 1851  
                     l5645 184A                       l5637 1845                       l5629 1841  
                     l5581 1825                       l5733 24B5                       l5725 24A1  
                     l5717 2485                       l3965 223B                       l4589 17EE  
                     l4597 21EB                       l6461 1B5E                       l3957 15A7  
                     l3949 1595                       l3893 14EC                       l3885 14A7  
                     l3877 1498                       l3869 1482                       l3797 13B2  
                     l3789 13A8                       l6445 078C                       l6429 0754  
                     l6381 06B5                       l6373 0691                       l6365 0617  
                     l6357 05FF                       l6349 05E9                       l6293 03A7  
                     l6285 0393                       l6277 037F                       l6269 034E  
                     l6189 0148                       l6541 0AF7                       l6533 0AAB  
                     l6525 0A5E                       l6517 0A28                       l6509 09F4  
                     l6613 2343                       l6621 180B                       l6701 0F2B  
                     l5573 23AB                       l5565 2444                       l5575 20F2  
                     l5487 1FCF                       l5479 1FA8                       l5495 1FEC  
                     l5823 25B8                       l5815 25AC                       l5807 258B  
                     l5671 1861                       l5663 185A                       l5655 1852  
                     l5647 184E                       l5639 1847                       l5591 182C  
                     l5583 1828                       l5735 24B9                       l5727 24A4  
                     l5719 2489                       l3967 2246                       l3959 222E  
                     l4599 21ED                       l6471 1B84                       l6463 1B68  
                     l6455 1B52                       l3895 14F1                       l3879 149A  
                     l3887 14AC                       l3799 13B7                       l6447 0795  
                     l6439 077D                       l6391 06D6                       l6383 06BC  
                     l6375 0695                       l6367 061B                       l6359 0603  
                     l6295 03AD                       l6287 0399                       l6279 0385  
                     l6199 017C                       l6543 0B0B                       l6535 0AB0  
                     l6519 0A32                       l6615 234D                       l6607 2323  
                     l6623 180D                       l6631 0801                       l6711 0F64  
                     l6703 0F32                       l5567 2447                       l5559 241E  
                     _ADIE 048E                       l5577 20F4                       l5489 1FDD  
                     l5817 25AE                       l5809 2590                       l5681 1868  
                     l5673 1864                       l5665 185B                       l5657 1853  
                     l5649 184F                       l5593 182D                       l5585 1829  
                     l5729 24AB                       l3969 224B                       l6481 1BC8  
                     l6473 1B8B                       l6465 1B7C                       l6457 1B58  
                     l3889 14C2                       l3897 14FA                       l6449 0799  
                     l6393 06DC                       l6385 06C1                       l6369 061F  
                     l6377 0699                       l6289 039D                       l6297 03B1  
                     l6561 0BA9                       l6553 0B72                       l6545 0B1F  
                     l6537 0AD1                       l6529 0A87                       l6609 2327  
                     l6625 180F                       l6633 080E                       l6713 0F6B  
                     l6705 0F45                       l6641 0CE5                       l6801 1330  
                     l5569 2467                       l5579 20FF                       l5819 25B0  
                     l5691 186E                       l5683 1869                       l5675 1865  
                     l5667 185D                       l5659 1854                       l5595 182E  
                     l5587 182A                       l6803 2731                       l6491 1BFC  
                     l6475 1B94                       l6467 1B7D                       l6459 1B5C  
                     l3995 217B                       l3899 150A                       l6395 06E0  
                     l6387 06CB                       l6379 06A7                       l6299 03B3  
                     l6571 0C1D                       l6555 0B79                       l6547 0B29  
                     l6539 0AD6                       l6627 181B                       l6619 1803  
                     l6635 2162                       l6731 0FAE                       l6723 0F8B  
                     l6715 0F74                       l6707 0F4F                       l6651 0DA4  
                     l6643 0D44                       l6811 1A19                       l5693 186F  
                     l5685 186B                       l5677 1866                       l5669 185F  
                     l5597 182F                       l5589 182B                       l6805 274C  
                     l6485 1BE4                       l6477 1BA8                       l3997 2188  
                     l6397 06E6                       l6389 06CF                       l6573 0C23  
                     l6557 0B8C                       l6565 0BCC                       l6549 0B48  
                     l6637 2173                       l6733 0FBC                       l6725 0F92  
                     l6709 0F56                       l6645 0D6B                       l6821 1A45  
                     l6813 1A27                       l6901 1026                       l5791 256E  
                     l5695 1870                       l5687 186C                       l5679 1867  
                     l5599 1830                       l6807 2752                       l6487 1BEA  
                     l3999 190A                       l6399 06E8                       l6575 0C38  
                     l6567 0BDE                       l6583 0C7A                       l6559 0B96  
                     l6743 0FE1                       l6735 0FCA                       l6727 0F99  
                     l6719 0F83                       l6671 0DDC                       l6647 0D7C  
                     l6639 0CE4                       l6823 1A54                       l6815 1A2B  
                     l6903 102D                       l6911 1049                       l6831 2797  
                     l5793 2575                       l5697 1871                       l5689 186D  
                     l6489 1BF0                       l6585 0C8E                       l6593 0CAB  
                     l6577 0C4C                       l6729 0FA7                       l6681 0E79  
                     l6665 0DD4                       l6657 0DAC                       l6649 0D84  
                     l6673 0DEC                       l6761 11E7                       l6825 1A5C  
                     l6817 1A3C                       l6809 1A14                       l6921 105F  
                     l6913 104C                       l6905 1033                       l6841 27AD  
                     l6833 279D                       l5795 2578                       l5787 2566  
                     l5699 1872                       l6595 0CB5                       l6587 0C98  
                     l6579 0C56                       l6739 0FD2                       l6691 0EB3  
                     l6683 0E8A                       l6675 0E2B                       l6659 0DCC  
                     l6771 121B                       l6763 11ED                       l6827 1A5F  
                     l6819 1A44                       l6923 1065                       l6915 104F  
                     l6907 1041                       l6851 27C6                       l6843 27B5  
                     l6835 279E                       l6931 26DE                       l5797 257E  
                     l5789 2568                       l6589 0CA5                       l6685 0E92  
                     l6677 0E4B                       l6749 0FE9                       l6781 12A0  
                     l6773 1231                       l6765 11F0                       l6757 11DE  
                     l6829 1A7F                       l6925 1069                       l6917 1056  
                     l6909 1043                       l6861 27D9                       l6853 27CA  
                     l6845 27BA                       l6837 27A4                       l6941 26ED  
                     l6933 26E0                       l5799 2585                       l6599 0CB8  
                     l6679 0E72                       l6791 12AF                       l6783 12A1  
                     l6775 1271                       l6767 11FB                       l6759 11E3  
                     l6927 106B                       l6919 105A                       l6871 27EF  
                     l6863 27DE                       l6847 27BE                       l6855 27CC  
                     l6839 27A8                       l6951 2708                       l6943 26F3  
                     l6935 26E2                       l6697 0EBB                       l6793 12BA  
                     l6785 12A2                       l6777 129D                       l6769 120C  
                     l6881 1004                       l6873 27F3                       l6865 27E2  
                     l6857 27D0                       l6849 27C1                       l6961 271F  
                     l6953 270D                       l6945 26F8                       l6937 26E3  
                     l6929 26D1                       l6699 0ECC                       l6795 12CB  
                     l6787 12A6                       l6779 129F                       l6891 1017  
                     l6883 100A                       l6875 27F6                       l6867 27E5  
                     l6859 27D6                       l6963 2721                       l6955 2713  
                     l6947 26FF                       l6939 26E7                       _ADON 04E8  
                     l6797 12DA                       l6789 12AC                       l6893 1018  
                     l6885 1010                       l6877 27F9                       l6869 27E8  
                     l6965 2726                       l6957 2718                       l6949 2703  
                     l6799 12F0                       l6895 1019                       l6887 1014  
                     l6967 272B                       l6959 271C                       l6897 101E  
                     l6889 1016                       l6899 1021                       _CHS0 04EA  
                     _CHS1 04EB                       _CHS2 04EC                       _CHS3 04ED  
                     STR_1 286A                       STR_2 2845                       STR_3 2806  
                     STR_4 2863                       STR_5 285F                       STR_6 284A  
                     STR_7 2812                       STR_8 286F                       STR_9 282A  
                     u4000 137F                       u4001 137E                       u4010 1385  
                     u4011 1384                       u4100 143B                       u4020 138A  
                     u4101 1439                       u4021 1389                       u4110 143C  
                     u4030 13A8                       u4031 13A7                       u4200 149E  
                     u4120 1450                       u4040 13B1                       u4201 149D  
                     u4121 144F                       u4041 13B0                       u5010 2677  
                     u4130 145C                       u4050 13B7                       u5011 2676  
                     u4131 145B                       u4051 13B6                       u5100 26C7  
                     u5020 2682                       u4300 1538                       u4220 14C2  
                     u4060 13BC                       u5101 26C6                       u5021 2681  
                     u4301 1537                       u4221 14C1                       u4061 13BB  
                     u5030 2693                       u5110 24C2                       u4310 153D  
                     u4230 14F1                       u4150 1470                       u4070 13D5  
         ??_error_handling 007B                       u5031 2692                       u5111 24C1  
                     u4311 153C                       u4231 14F0                       u4223 14BE  
                     u4215 14A1                       u4151 146F                       u4071 13D4  
                     u5120 24CD                       u4400 1594                       u4320 1543  
                     u4240 150A                       u4160 1474                       u4080 13D9  
                     u5121 24CC                       u4401 1593                       u4321 1542  
                     u4241 1509                       u4161 1473                       u4145 145F  
                     u4081 13D8                       u5050 26A3                       u5130 24D8  
                     u4410 1599                       u4330 154A                       u4250 150F  
                     u4170 1479                       u4090 1431                       u5051 26A2  
                     u5131 24D7                       u4411 1598                       u4331 1549  
                     u4251 150E                       u4171 1478                       u4091 1430  
                     u4500 2188                       u4420 15A7                       u4340 1550  
                     u4180 148E                       u5300 18B7                       u4501 2187  
                     u5045 2697                       u4421 15A6                       u4341 154F  
                     u4181 148D                       u4430 223B                       u5070 26B2  
                     u5150 24E8                       u5230 199E                       u4350 155C  
                     u4270 1523                       u4190 1492                       u5310 18CC  
                     u4510 192F                       u4431 223A                       u5071 26B1  
                     u5151 24E7                       u5231 199D                       u4351 155B  
                     u4271 1522                       u4191 1491                       u4095 142D  
                     u5311 18CB                       u5400 082A                       u7000 1AAC  
                     u5160 24F2                       u5240 19BA                       u4360 156A  
                     u4280 1528                       u5320 18D3                       u4520 193D  
                     u5401 0829                       u7001 1AAB                       u4505 2184  
                     u5065 26A4                       u5161 24F1                       u5145 24DC  
                     u5241 19B9                       u4281 1527                       u4265 1519  
                     u5321 18D2                       u5305 18B3                       u4521 193C  
                     u5410 082F                       u4450 224B                       u7010 1AB0  
                     u5090 26C2                       u5250 19C6                       u4370 1579  
                     u4290 1532                       u4530 194A                       u5411 082E  
                     u4451 224A                       u7011 1AAF                       u5091 26C1  
                     u5075 26AE                       u5251 19C5                       u4371 1578  
                     u4291 1531                       u4515 192B                       _PEIE 005E  
                     u5500 08DD                       u5420 084F                       u7100 1B21  
                     u7020 1AD0                       u5180 2501                       u5260 19E2  
                     u4380 1582                       u5340 18E3                       u4540 1954  
                     u4700 1D9B                       u5501 08DC                       u5421 084E  
                     u4445 2240                       u7101 1B20                       u7021 1ACF  
                     u5085 26B8                       u5181 2500                       u5165 24EE  
                     u5261 19E1                       u4381 1581                       u4365 1566  
                     u5341 18E2                       u4541 1953                       _INTE 005C  
                     u5430 0855                       u7110 1B35                       u5190 2506  
                     u5270 1A10                       u4390 1587                       u5350 18EA  
                     u4550 1964                       u4710 1DA5                       u4630 1D10  
                     _INTF 0059                       u5431 0854                       u5191 2505  
                     u5175 24F7                       u5271 1A0F                       u4391 1586  
                     u5351 18E9                       u5335 18D5                       u4551 1963  
                     u4535 1946                       u4711 1DA4                       u5600 0948  
                     u5520 08F7                       u5440 085A                       u7120 1B44  
                     u7040 1AEF                       u4800 1DE1                       u3920 2515  
                     u8000 10BC                       u5280 07FD                       u4560 1971  
                     u4720 1DBB                       u4640 1D2B                       u5601 0947  
                     u5521 08F6                       u5441 0859                       u7121 1B43  
                     u7041 1AEE                       u4801 1DE0                       u3921 2514  
                     u8001 10BB                       u5281 07FC                       u4705 1D97  
                     u4641 1D2A                       u5610 094F                       u5530 090A  
                     u5450 0875                       u7130 1B48                       u3930 251A  
                     u8010 10CF                       u5370 18F9                       u5290 18A1  
                     u4570 197C                       u4730 1DC5                       u4650 1D31  
                     u5611 094E                       u5531 0909                       u5515 08DF  
                     u5451 0874                       u7131 1B47                       u7115 1B31  
                     u7035 1AE3                       u3931 2519                       u8011 10CE  
                     u5275 1A0C                       u5371 18F8                       u5291 18A0  
                     u4571 197A                       u4731 1DC4                       u4651 1D30  
                     u4635 1D0C                       u5620 0955                       u5540 0912  
                     u5460 0893                       u5700 15C2                       u7060 1B09  
                     u4740 2142                       u4820 1E0C                       u3940 252A  
                     u8100 11AD                       u8020 10EB                       u5380 18FE  
                     u4580 197D                       u4660 1D3F                       u5621 0954  
                     u5541 0911                       u5525 08F3                       u5461 0892  
                     u5701 15C1                       u7061 1B08                       u4741 2140  
                     u4821 1E0B                       u3941 2529                       u8101 11AC  
                     u8021 10EA                       u5381 18FD                       u5365 18EC  
                     u4565 196D                       u4725 1DB7                       u4645 1D27  
         ?_lcd_send_float1 014D                       u5630 0961                       u5470 08CB  
                     u5390 0824                       u5710 15E1                       u4750 2143  
                     u4910 1C0C                       u3950 2549                       u8110 11B8  
                     u8030 10F0                       u4670 1D5D                       u4590 222C  
                     u5631 0960                       u5471 08CA                       u5391 0823  
                     u5711 15E0                       u7055 1AFD                       u4911 1C0B  
                     u3951 2548                       u8111 11B7                       u8031 10EF  
                     u8015 10CB                       u4671 1D5C                       u4591 222B  
                     u5640 096F                       u5560 091F                       u5720 15E7  
                     u7080 1B17                       u4760 21D2                       u4840 1E36  
                     u8040 1174                       u4680 1D6B                       u8200 01C7  
                     u8120 0104                       u9000 11ED                       u7400 23CB  
                     u5561 091E                       u5721 15E6                       u7081 1B16  
                     u4761 21D1                       u8041 1173                       u4665 1D3B  
                     u8201 01C6                       u8121 0103                       u9001 11EC  
                     u7401 23CA                       u5650 098A                       u5730 15EC  
                     u7090 1B1D                       u4850 1E46                       u4930 1C37  
                     u3970 21A8                       u8050 1181                       u4690 1D75  
                     u8210 01D9                       u8130 012E                       u9010 12AC  
                     u5651 0989                       u5555 0915                       u5731 15EB  
                     u7091 1B1C                       u7075 1B0D                       u4851 1E45  
                     u4931 1C36                       u3955 2545                       u3971 21A7  
                     u8051 1180                       u4691 1D74                       u8211 01D7  
                     u8131 012D                       u9011 12AB                       u7500 256E  
                     u5660 09A5                       u5580 092F                       u5900 179F  
                     u5820 174F                       u5740 1603                       u9020 2752  
                     u4860 1E59                       u8060 118E                       u8300 0347  
                     u8220 01DA                       u8140 0133                       u9100 27AD  
                     u7501 256D                       u5661 09A4                       u5645 096B  
                     u5581 092E                       u5485 08CC                       u5821 174E  
                     u5805 1732                       u5741 1602                       u9021 2751  
                     u4861 1E58                       u8061 118D                       u8045 1170  
                     u4685 1D67                       u8301 0346                       u8141 0132  
                     u9101 27AC                       u7510 257E                       u5670 09BA  
                     u5590 0934                       u5910 17BA                       u5750 1608  
                     u4790 21E6                       u4870 1E83                       u4950 1C63  
                     u8070 119C                       u8310 034E                       u8230 01E6  
                     u8150 013A                       u6710 262C                       u9030 1A19  
                     u9110 27B1                       u7511 257D                       u5671 09B9  
                     u5655 0986                       u5591 0933                       u5575 0921  
                     u5495 08D3                       u5911 17B9                       u5815 1745  
                     u5751 1607                       u4791 21E5                       u4775 21D7  
                     u4871 1E82                       u4951 1C62                       u8071 119B  
                     u8311 034D                       u8231 01E5                       u8151 0139  
                     u6711 262B                       u9031 1A18                       u9111 27B0  
                     u7280 20E1                       u7520 259D                       u5920 17D2  
                     u5840 175F                       u5680 15B7                       u4880 1EA2  
                     u4960 1C76                       u8080 11A1                       u8400 0497  
                     u8320 035B                       u8240 023B                       u8160 0163  
                     u6720 2644                       u9040 1A27                       u9200 102D  
                     u7360 2424                       u9120 27B5                       u7281 20E0  
                     u7521 259C                       u5665 09A1                       u5921 17D1  
                     u5905 179B                       u5841 175E                       u5681 15B6  
                     u4785 21DC                       u4881 1EA1                       u4961 1C75  
                     u8081 11A0                       u8065 118A                       u8401 0496  
                     u8321 035A                       u8241 023A                       u8161 0162  
                     u6721 2643                       u9041 1A26                       u9201 102C  
                     u7361 2423                       u9121 27B4                       u7530 25A5  
                     u5930 17EE                       u5850 1764                       u5690 15BD  
                     u4890 1EA7                       u4970 1C98                       u8090 11A8  
                     u8410 04E9                       u8330 0370                       u8250 02A7  
                     u8170 0175                       u6730 264D                       u9050 1A42  
                     u9210 1033                       u7370 2442                       u9130 27BA  
                     u7531 25A4                       u5931 17ED                       u5915 17B6  
                     u5851 1763                       u5835 1751                       u5691 15BC  
                     u4891 1EA6                       u4875 1E7F                       u4971 1C97  
                     u8091 11A7                       u8075 1198                       u8411 04E8  
                     u8331 036F                       u8251 02A6                       u8171 0173  
                     u6731 264C                       u9051 1A3F                       u9211 1032  
                     u7371 2441                       u9131 27B9                       u7540 25B8  
                     u5860 1778                       u5780 1710                       u5940 21F4  
                     u4980 1CB6                       u8500 05DC                       u8420 050B  
                     u8340 0385                       u8260 02FF                       u8180 0176  
                     u6740 2653                       u9220 103E                       u7380 2467  
                     u9140 27C6                       u9300 2726                       u7541 25B7  
                     u7525 2599                       u5925 17CE                       u5861 1777  
                     u5765 1687                       u5941 21F3                       u4981 1CB5  
                     u8501 05DB                       u8421 050A                       u8405 0493  
                     u8341 0384                       u8325 0357                       u8261 02FE  
                     u6741 2652                       u9045 1A23                       u9221 103D  
                     u7381 2466                       u9141 27C5                       u9301 2725  
                     u7550 25BD                       u5870 177F                       u5790 1727  
                     u5950 2203                       u4990 1CBB                       u8510 060D  
                     u8430 0510                       u8350 038B                       u8270 0319  
                     u8190 0182                       u6750 2663                       u9070 1A7F  
                     u9230 1049                       u7390 23AB                       u9150 27D6  
                     u9310 272B                       u7551 25BC                       u5871 177E  
                     u5775 16B6                       u5951 2202                       u4991 1CBA  
                     u4975 1C94                       u8511 060C                       u8431 050F  
                     u8351 038A                       u8335 036C                       u8271 0318  
                     u8191 0181                       u6751 2662                       u9071 1A7E  
                     u9231 1048                       u7391 23AA                       u9151 27D5  
                     u9311 272A                       u6760 22CD                       u5880 1785  
                     u8600 074B                       u8520 06A7                       u8440 0559  
                     u8360 038F                       u8280 0320                       u9080 1A9F  
                     u9064 1A44                       u9240 105F                       u9160 27DE  
                     u6761 22CC                       u5881 1784                       u5785 170C  
                     u8601 074A                       u8521 06A6                       u8441 0558  
                     u8361 038E                       u8281 031F                       u9081 1A9E  
                     u9241 105E                       u9161 27DD                       u6770 22D6  
                     u5890 1791                       u8610 0776                       u8530 06B5  
                     u8450 05BB                       u8370 0399                       u8290 0333  
                     u9170 27FF                       u9090 279D                       u9250 26ED  
                     u6771 22D5                       u5891 1790                       u5795 1723  
                     u8611 0774                       u8531 06B4                       u8451 05BA  
                     u8371 0398                       u8291 0332                       u9171 27FE  
                     u9091 279C                       u9251 26EC                       u6780 22DD  
                     u8700 1BF0                       u7900 2261                       u8620 0777  
                     u8540 06BC                       u8460 05C2                       u8380 039D  
                     u9180 100A                       u9260 2708                       u6781 22DC  
                     u8701 1BEF                       u7901 225F                       u8541 06BB  
                     u8525 06A3                       u8461 05C1                       u8381 039C  
                     u9181 1009                       u9261 2707                       u6790 22E4  
                     u7830 22C7                       u7910 2262                       u8630 0783  
                     u8550 06C1                       u8470 05C8                       u8390 03AD  
                     u8710 09E0                       u9190 1026                       u9270 270D  
                     u6791 22E3                       u9407 248E                       u7831 22C6  
                     u8631 0782                       u8551 06C0                       u8535 06B1  
                     u8471 05C7                       u8391 03AC                       u8295 032F  
                     u8711 09DF                       u9191 1025                       u9327 22FA  
                     u9271 270C                       u8640 1B68                       u7840 215A  
                     u7920 226E                       u8560 06DC                       u8480 05CC  
                     u8800 0B1F                       u8720 0A08                       u9280 2718  
                     u9417 249A                       u8641 1B67                       u7841 2158  
                     u7921 226D                       u8561 06DB                       u8481 05CB  
                     u8801 0B1E                       u8721 0A07                       u9337 2307  
                     u9281 2717                       u8650 1B7C                       u7930 23E4  
                     u7850 215B                       u8570 06EC                       u8490 05D8  
                     u8810 0B79                       u8730 0A28                       u9290 271C  
                     u9507 2106                       u9427 24A2                       u8651 1B7B  
                     u7931 23E3                       u8571 06EB                       u8491 05D7  
                     u8811 0B78                       u8731 0A27                       u9347 2314  
                     u9291 271B                       u8660 1B8A                       u7860 25C5  
                     u7940 2400                       u8580 0733                       u8820 0BDE  
                     u8740 0A7D                       u8900 0DA4                       u9517 2113  
                     u6965 2123                       u9437 24A5                       u8661 1B89  
                     u7861 25C4                       u7941 23FF                       u8581 0732  
                     u8821 0BDD                       u8741 0A7B                       u8901 0DA3  
                     u9357 11E4                       u6990 21CB                       u8670 1BDD  
                     u7870 25D3                       u7950 241A                       u8590 0740  
                     u8830 0C13                       u8750 0A7E                       u8910 0DCC  
                     u9527 22E9                       u6991 21CA                       u9447 24AC  
                     u8671 1BDB                       u7871 25D2                       u7951 2419  
                     u8591 073F                       u8831 0C11                       u8911 0DCB  
                     u9367 12A3                       u8680 1BDE                       u7880 25FC  
                     u7960 108B                       u8840 0C14                       u8760 0A8D  
                     u8920 0E4B                       u9537 22EF                       u6985 210B  
                     u9457 24B3                       u9377 2470                       u7881 25FB  
                     u7961 1089                       u8761 0A8C                       u8921 0E4A  
                     u8690 1BEA                       u7890 2601                       u7970 108C  
                     u8850 0C23                       u8770 0AB0                       u8930 0E72  
                     u9547 20F9                       u9467 24BA                       u9387 247C  
                     u8691 1BE9                       u7891 2600                       u7955 2416  
                     u8595 073C                       u8851 0C22                       u8771 0AAF  
                     u8931 0E71                       u7980 1099                       u8860 0C8E  
                     u8780 0AD6                       u8940 0EB2                       u9477 211E  
                     u9397 2486                       u7885 25F8                       u7981 1098  
                     u8861 0C8D                       u8781 0AD5                       u8941 0EB1  
                     u8790 0B0B                       u8870 234D                       u8950 0F2B  
                     u9487 212B                       u8791 0B0A                       u8871 234C  
                     u8951 0F2A                       u8960 0F64                       u8880 0D44  
                     u9497 20EC                       u8961 0F63                       u8881 0D43  
                     u8970 0F82                       u8890 0D6B                       u8971 0F81  
                     u8891 0D6A                       u8980 0FCA                       u8981 0FC9  
                     u8965 0F60                       u8990 0FE0                       u8991 0FDF  
                     u8975 0F7E                       u8985 0FC6                       _TMR1 0016  
                     u8995 0FDC               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     abs@a 0074                       _diff 01AC                       _dbuf 0220  
                     _buff 01BE                       _atoi 1B52             _check_overload 238B  
                     _main 26D1                       _dtoa 106E                       _prec 0160  
                     _temp 01B8                       _nout 01B4                       pad@i 002A  
                     pad@p 0028                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       pad@w 002C                       btemp 007E  
         ?_lcd_send_string 0074              __CFG_BOREN$ON 0000               ?_maintenance 0070  
            ___fpclassifyf 190A                       start 00BB              __CFG_IESO$OFF 0000  
          ___fldiv@new_exp 0052               _tolower$1018 0079              __CFG_MCLRE$ON 0000  
           ??_lcd_send_int 007C                      ??_ISR 0070                      ??_abs 0076  
                    ??_pad 007A   __end_of_interrupt_enable 20E5                      _DC2B0 14D4  
                    _DC2B1 14D5              ___fltol@sign1 007A            __end_of___aodiv 1ED7  
                    ?_atoi 0077            __end_of___fladd 15A9                      ?_main 0070  
                    ?_dtoa 0030            __end_of___aomod 1CEB            __end_of___fldiv 09CA  
          __end_of___awdiv 26D1            __end_of___flneg 0800                      STR_10 286D  
                    STR_11 2800                      STR_20 282A                      STR_12 281E  
                    STR_21 286D                      STR_13 2830                      STR_22 2804  
                    STR_14 2800                      STR_30 2840                      STR_23 2803  
                    STR_31 283B                      STR_15 2824                      STR_32 2804  
                    STR_24 2801                      STR_16 280C                      STR_25 2804  
                    STR_33 2803                      STR_17 2830              __CFG_WDTE$OFF 0000  
                    STR_26 2803                      STR_18 2800                      STR_42 2867  
                    STR_34 284F                      STR_27 2804                      STR_35 2857  
                    STR_19 2818                      STR_28 2803                      STR_44 2867  
          __end_of___awmod 2510                      STR_29 2836                      STR_38 2853  
                    STR_39 285B            __end_of___flmul 1800                      _ANSA0 0C60  
                    _ANSA1 0C61                      _ANSA2 0C62                      _ANSB0 0C68  
                    _ANSA3 0C63                      _ANSB1 0C69                      _ANSA4 0C64  
                    _ANSB2 0C6A            __end_of___flsub 07F5                      _ANSA5 0C65  
                    _ANSB3 0C6B            __end_of___fltol 190A                      _ANSB5 0C6D  
          ___awdiv@divisor 0071                      _T1CON 0018                      i1l424 00B9  
          ___awdiv@counter 0076               vfpfcnvrt@fmt 006E            __end_of_lcd_cmd 211A  
                    _fabsf 2276                      _flags 0162                      _fputc 2510  
                    _fputs 229F            __end_of_isdigit 214A                      _pause 016F  
          __end_of_buzz_op 2102                      atoi@n 002B                      pad@fp 002E  
                    atoi@s 0077                      _width 01B6                      _putch 0003  
                    dtoa@d 0030                      dtoa@i 004C                      dtoa@n 0044  
                    dtoa@p 003E                      dtoa@s 0042                      dtoa@w 0040  
   __end_of_check_overload 23CF            __end_of_isspace 220C            __end_of_isupper 2162  
          __end_of_pwm_con 1AA5                      status 0003                      wtemp0 007E  
          __end_of_sprintf 1825             ?___fpclassifyf 0071            __end_of_tolower 2276  
          __end_of_strncmp 2672            __initialization 00BD               __end_of_atoi 1C01  
             __end_of_main 2731               __end_of_dtoa 11DE                     ??_atoi 0020  
                   ??_main 007C                     ??_dtoa 0038             __CFG_PLLEN$OFF 0000  
            _maintenance_f 016A                     ?_fabsf 00A8                     _ADCON1 009E  
                   _CCP1IE 048A                     _CCP1IF 008A                     ?_fputc 0071  
                   ?_fputs 0079                     _ADRESH 009C                     _ADRESL 009B  
                   _CCPR1H 0292                     _CCPR1L 0291                     _CCPR2L 0298  
         ___awdiv@dividend 0073                     ?_putch 0070            ?_check_overload 0070  
    interrupt_enable@state 0071                     i1l5901 0066                     i1l5911 007F  
                   i1l5903 006B                     i1l5913 0089                     i1l5905 0074  
                   i1l5921 00B0                     i1l5915 0097                     i1l5907 0078  
                   i1l5923 00B1                     _INTEDG 04AE                     i1l5925 00B6  
                   i1l5917 009D                     i1l5909 007A                     i1l5927 00B8  
                   i1l5919 00AB                     i1l5881 001A                     i1l5873 0006  
                   i1l5891 0038                     i1l5883 0023                     i1l5875 000A  
                   i1l5893 0046                     i1l5885 0027                     i1l5877 000F  
                   i1l5895 004C                     i1l5879 0015                     i1l5887 0029  
                   i1l5897 005A                     i1l5889 002E                     i1l5899 0060  
                   _OSCCON 0099                     u770_20 0074                     u770_21 0073  
                   u771_20 007F                     u763_20 000A                     u771_21 007E  
                   u763_21 0009                     u772_20 0089                     u764_20 000F  
                   u772_21 0088                     u764_21 000E                     _TMR1GE 00CF  
                   u773_20 0097                     u765_20 0023                     u773_21 0096  
                   u765_21 0022                     u773_25 0093                     u774_20 00AB  
                   u766_20 002E                     _TMR2IF 0089                     u774_21 00AA  
                   u766_21 002D                     u774_25 00A7                     u775_20 00B6  
                   u767_20 0038                     u775_21 00B5                     u767_21 0037  
                   u500lld 1CD9                     u768_20 0046                     u768_21 0045  
                   _TMR2ON 00E2                     u768_25 0042                     u769_20 005A  
                   u769_21 0059                     u769_25 0056                     _TRISA0 0460  
                   _TRISA1 0461                     _TRISA2 0462                     _TRISB0 0468  
                   _TRISA3 0463                     _TRISB1 0469                     _TRISA4 0464  
                   _TRISC0 0470                     _TRISB2 046A                     _TRISA5 0465  
                   _TRISC1 0471                     _TRISB3 046B                     _TRISA6 0466  
                   _TRISC2 0472                     _TRISA7 0467                     _TRISC3 0473  
                   _TRISB5 046D                     _TRISC4 0474                     _TRISC5 0475  
                   _TRISC6 0476                     _TRISC7 0477                     u481lld 1E00  
                   u490lld 1EC5                     u483lld 1E2B                     u492lld 1C2B  
                   u494lld 1C56           __end_of___xxtofl 1B52                     u799lld 10B7  
           __CFG_PWRTE$OFF 0000              ?_init_setting 0070           __end_of_lcd_data 2132  
             vfprintf@cfmt 013B           __end_of_lcd_init 24BD           __end_of_lcd_show 2000  
                   ___flge 1989                     ___fleq 23CF                  ??___aodiv 0071  
                ??___fladd 0062                  ??___aomod 0071                     ___wmul 21CC  
                ??___fldiv 0048                  ??___awdiv 0075                  ??___flneg 0075  
                ??___awmod 0075                  ??___flmul 002E                     _e_lock 016E  
                ??___flsub 007A                  ??___fltol 0075                     _efgtoa 00DA  
            lcd_update@cmd 0153                     _floorf 1CEB                     fabsf@u 00AC  
                   fabsf@x 00A8       __size_of_lcd_set_pos 0006           ___awdiv@quotient 0078  
                   _period 01C6            ___awmod@divisor 0071            ___awmod@counter 0076  
                   pad@buf 0027                  ??_lcd_cmd 0072                     dtoa@fp 003B  
                   _strcpy 220C                     _strlen 2195                     fputc@c 0071  
                   fputs@c 0023                     fputs@i 0024                     fputs@s 0026  
                ??_isdigit 0073                  ??_buzz_op 0071         __size_of__Umul8_16 0023  
          ___fpclassifyf@e 0020            ___fpclassifyf@u 0022            ___fpclassifyf@x 0071  
                ??_isspace 0073                  ??_isupper 0073                     putch@c 0070  
                ??_pwm_con 0156           __end_of_vfprintf 2356           __end_of_start_up 2321  
     __end_of_lcd_send_int 0816                  ??_sprintf 0143                  ??_tolower 0020  
                ??_strncmp 0075                 ___flge@ff1 0040                 ___flge@ff2 0044  
          ??___fpclassifyf 0075               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0071                 ___fleq@ff1 0071                 ___fleq@ff2 0075  
  __end_of__initialization 00D6                 ___flneg@f1 0071                 ___fltol@f1 0071  
           ??_init_setting 0071       __size_of_maintenance 006A             __pcstackCOMMON 0070  
            __end_of_fabsf 229F              __end_of_fputc 2566              __end_of_fputs 22C8  
            __end_of_putch 0004         __size_of_lcd_clear 000D                    ??_fabsf 007A  
                  ??_fputc 0074                    ??_fputs 0020                    ??_putch 0071  
               __pbssBANK2 0158                 __pbssBANK3 01A0                 __pbssBANK4 0220  
          __CFG_VCAPEN$OFF 0000                 _data_write 22C8         __size_of_read_volt 0193  
        __end_of__Umul8_16 2250                 _efgtoa$550 00B5                 _efgtoa$551 00B7  
               _efgtoa$560 00BD                 _efgtoa$561 00BF                 _efgtoa$555 00B9  
               _efgtoa$559 00BB                 __pmaintext 26D1                    ?___flge 0040  
                  ?___fleq 0071                 _e_overvolt 016D           lcd_send_int@data 014D  
                  ?___wmul 0071                    _C2TSEL0 14F2                    _C2TSEL1 14F3  
               __pintentry 0004                    ?_efgtoa 00A8                    _CCP1CON 0293  
                  _CCP2CON 029A                    ?_floorf 005A          ?_interrupt_enable 0070  
                  ?_strcpy 0071                    ?_strlen 0071                    _T2CKPS0 00E0  
                  _T2CKPS1 00E1         ??_interrupt_enable 0071                  ?___xxtofl 0071  
       __size_of_vfpfcnvrt 0318         __size_of_power_con 004F         __size_of_shut_down 0035  
           lcd_set_pos@pos 0074                 _lcd_update 0CE2                  ?_lcd_data 0070  
                ?_lcd_init 0070                  ?_lcd_show 0079           lcd_send_string@i 0077  
         lcd_send_string@s 0074                 _freq_count 2731   __size_of_lcd_send_float1 0019  
        __end_of_lcd_clear 20F2            __size_of___flge 008B            __size_of___fleq 004F  
                  ___aodiv 1DD6                    ___fladd 1371                    ___aomod 1C01  
                  ___fldiv 0816                    ___awdiv 2672                    ___flneg 07F5  
                  ___awmod 24BD                    ___flmul 15A9                    ___flsub 07BF  
                  ___fltol 1896            __size_of___wmul 001F   __size_of_lcd_send_string 001D  
                  _adcbuff 0164                  ?_vfprintf 0135            __size_of_efgtoa 06E5  
                ?_start_up 0070            __CFG_STVREN$OFF 0000            __size_of_floorf 00EB  
                  __ptext1 2797                    __ptext2 22F3                    __ptext3 2356  
                  __ptext4 241E                    __ptext5 238B                    __ptext6 1004  
                  __ptext7 1A14                    __ptext8 11DE                    __ptext9 0CE2  
                  _lcd_cmd 2102            __size_of_strcpy 0021            __size_of_strlen 001A  
             __size_of_ISR 00B7                    _last_v1 01D0                    _last_v2 01CC  
    __size_of_lcd_send_int 0015               __size_of_abs 001A               __size_of_pad 0059  
                  _isdigit 2132                 ??___xxtofl 0075                    _buzz_op 20F2  
         ___awmod@dividend 0073       __end_of_init_setting 1896           ??_check_overload 007A  
                  _isspace 21EB          __end_of_read_volt 1371                    _isupper 214A  
                  efgtoa@c 00AC                    efgtoa@d 00C9                    efgtoa@e 00E2  
                  efgtoa@f 00A8                    efgtoa@g 00DE                    efgtoa@h 00D4  
                  efgtoa@i 00DC                    efgtoa@l 00D8                    efgtoa@m 00C5  
                  efgtoa@n 00E4                    efgtoa@p 00CE                    efgtoa@t 00C1  
                  efgtoa@u 00E6                    efgtoa@w 00D1                    atoi@neg 0024  
                  _pwm_con 1A14                    _pwm_lvl 0166                 ??_lcd_data 0072  
                  _sprintf 1801                    _tolower 2250                    clrloop0 20D6  
               ??_lcd_init 0074                 ??_lcd_show 007B                    _strncmp 2617  
     end_of_initialization 00D6                    floorf@e 0068                    floorf@m 0064  
                  floorf@u 006A                    floorf@x 005A                    fputc@fp 0073  
                  fputs@fp 0079                ?_data_write 0070          __end_of_vfpfcnvrt 0CE2  
               efgtoa@mode 00D3                 efgtoa@sign 00CC          __end_of_power_con 246D  
        __end_of_shut_down 238B    __size_of_error_handling 0058               _lcd_send_int 0801  
               ??_vfprintf 0138                 ??_start_up 0071                    strcpy@d 0077  
                  strlen@a 0074                    strcpy@s 0075                    strlen@s 0075  
           _last_frequency 01C8                ___fladd@grs 006D              ?_process_loop 0070  
         __CFG_FOSC$INTOSC 0000              ___xxtofl@sign 0020                ___fldiv@grs 0054  
              ___fldiv@rem 004D                ?_lcd_update 0070                 _start_flag 016B  
              ___flmul@grs 0034                ?_freq_count 0070              ??_lcd_set_pos 0076  
           __end_of___flge 1A14             __end_of___fleq 241E                vfpfcnvrt@ap 006F  
              vfpfcnvrt@ct 012C                vfpfcnvrt@fp 0134                vfpfcnvrt@ll 0120  
           __end_of___wmul 21EB             __end_of_efgtoa 07BF          ??_lcd_send_float1 007C  
           __end_of_floorf 1DD6                 floorf@F524 01A0             ??_process_loop 007C  
        ??_lcd_send_string 0076             __end_of_strcpy 222D             __end_of_strlen 21AF  
      __size_of_data_write 002B        start_initialization 00BD                __end_of_ISR 00BB  
              __end_of_abs 2195                __end_of_pad 2617      __end_of___fpclassifyf 1989  
            ??_maintenance 007C                vfprintf@fmt 0135                   ??___flge 0048  
                 ??___fleq 0020                   ??___wmul 0075                   ??_efgtoa 00AD  
      __size_of_lcd_update 031E                  __Umul8_16 222D                   ??_floorf 005E  
    __size_of_init_setting 0071                   ??_strcpy 0073                   ??_strlen 0073  
      __end_of_lcd_set_pos 20D5                  ___fladd@a 005E                  ___fladd@b 005A  
                ___fldiv@a 0040                  ___fldiv@b 0044                  ___flmul@a 002A  
                ___flmul@b 0026                __pbssCOMMON 007C                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0003        __size_of_freq_count 0066  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK2 0120  
         ___aodiv@dividend 0028               _last_pwm_lvl 01D4          __size_of___xxtofl 00AD  
__size_of_interrupt_enable 000A          __size_of_lcd_data 0018          __size_of_lcd_init 0050  
        __size_of_lcd_show 0129                  __pnvBANK3 01C8               _init_setting 1825  
           _error_handling 2566                   ?___aodiv 0020        lcd_send_float1@data 014D  
                 ?___fladd 005A                   ?___aomod 0020                   ?___fldiv 0040  
                 ?___awdiv 0071           ___aodiv@quotient 0074                   ?___flneg 0071  
      __end_of_maintenance 106E                   ?___awmod 0071                   ?___flmul 0026  
                 ?___flsub 00A0                   ?___fltol 0071                 ?__Umul8_16 0071  
                _lcd_clear 20E5                   ?_lcd_cmd 0070          __size_of_vfprintf 0035  
        __size_of_start_up 002E                  fabsf@F463 01A4                   ?_isdigit 0071  
                 ?_buzz_op 0070                   ?_isspace 0071                   ?_isupper 0071  
                _frequency 01B0                   ?_pwm_con 0070             __size_of_fabsf 0029  
                 ?_sprintf 013D                   ?_tolower 0077             __size_of_fputc 0056  
           __size_of_fputs 0029                   ?_strncmp 0071             __size_of_putch 0001  
                _read_volt 11DE                  _dutycycle 01BC             ___wmul@product 0075  
           _read_volt$1260 00A3               ??_data_write 0071                  clear_ram0 20D5  
   __end_of_error_handling 25BE       __end_of_process_loop 2800                _lcd_set_pos 20CF  
               ?_lcd_clear 0070                  _vfpfcnvrt 09CA            error_handling@i 0020  
                _power_con 241E                  _shut_down 2356          ___wmul@multiplier 0071  
                lcd_show@x 0079         __end_of_data_write 22F3               ??_lcd_update 0151  
               vfpfcnvrt@c 0133                 vfpfcnvrt@f 012F                 ?_read_volt 0070  
              _maintenance 1004               ??_freq_count 005A            ?_error_handling 0070  
          _lcd_send_float1 2162                 vfprintf@ap 0137                 vfprintf@fp 013A  
          _lcd_send_string 21AF                ??__Umul8_16 0073           __size_of___aodiv 0101  
         __size_of___fladd 0238           __size_of___aomod 00EA           __size_of___fldiv 01B4  
         __size_of___awdiv 005F           __size_of___flneg 000B           __size_of___awmod 0053  
         __size_of___flmul 0257           __size_of___flsub 0036           __size_of___fltol 0074  
       __end_of_lcd_update 1000                 ?_vfpfcnvrt 006E                 ?_power_con 0070  
               ?_shut_down 0070            ___aodiv@divisor 0020            ___aodiv@counter 0072  
       ___fpclassifyf@F463 01A8           __size_of_lcd_cmd 0018                 sprintf@fmt 013D  
                 ___xxtofl 1AA5                   _atoi$891 0026                   _atoi$892 002A  
                 _atoi$893 0028           __size_of_isdigit 0018           __size_of_buzz_op 0010  
                 _dtoa$526 003C         __end_of_freq_count 2797           __size_of_isspace 0021  
                 __ptext10 0801                   __ptext11 2162                   __ptext20 1CEB  
                 __ptext12 1801                   __ptext21 190A                   __ptext13 2321  
                 __ptext30 106E                   __ptext22 1896                   __ptext14 09CA  
                 __ptext31 25BE                   __ptext23 07BF                   __ptext15 2617  
                 __ptext40 21EB                   __ptext32 2195                   __ptext24 1371  
                 __ptext16 00DA                   __ptext41 2132                   __ptext33 229F  
                 __ptext25 07F5                   __ptext17 2250                   __ptext50 1825  
                 __ptext42 21CC                   __ptext34 2510                   __ptext26 1989  
                 __ptext18 214A                   __ptext51 2566                   __ptext43 2276  
                 __ptext35 0003                   __ptext27 23CF                   __ptext19 220C  
                 __ptext60 20F2                   __ptext52 1ED7                   __ptext44 2731  
                 __ptext36 217B                   __ptext28 24BD                   __ptext53 20CF  
                 __ptext45 1AA5                   __ptext37 1C01                   __ptext29 2672  
                 __ptext54 21AF                   __ptext46 15A9                   __ptext38 1DD6  
                 __ptext55 211A                   __ptext47 222D                   __ptext39 1B52  
                 __ptext56 20E5                   __ptext48 0816                   __ptext57 2102  
                 __ptext49 246D                   __ptext58 22C8                   __ptext59 20DB  
         __size_of_isupper 0018                   _lcd_data 211A                   _lcd_init 246D  
         __size_of_pwm_con 0091                   _lcd_show 1ED7           _interrupt_enable 20DB  
         __size_of_sprintf 0024           __size_of_tolower 0026                 strcpy@dest 0078  
         __size_of_strncmp 005B              __size_of_atoi 00AF              __size_of_main 0060  
            __size_of_dtoa 0170    __size_of_check_overload 0044            _lcd_update$1259 0154  
                 efgtoa@fp 00CB                   efgtoa@ne 00C7                   efgtoa@pp 00C3  
                 efgtoa@ou 00B1                   int$flags 007E                   _vfprintf 2321  
                 _start_up 22F3                ??_lcd_clear 0074                _isspace$933 0075  
         ___aomod@dividend 0028             data_write@data 0071             __pstringtext10 2836  
           __pstringtext11 283B             __pstringtext20 2863             __pstringtext12 2840  
           __pstringtext21 2867             __pstringtext13 2845             __pstringtext22 286A  
           __pstringtext14 284A             __pstringtext23 286D             __pstringtext15 284F  
           __pstringtext24 286F             __pstringtext16 2853             __pstringtext25 0000  
           __pstringtext17 2857             __pstringtext18 285B             __pstringtext19 285F  
                 isdigit@c 0071                ??_read_volt 00A0    __end_of_lcd_send_float1 217B  
                 intlevel1 0000                  sprintf@ap 0147      __size_of_process_loop 0069  
                 isspace@c 0071    __end_of_lcd_send_string 21CC          __CFG_CLKOUTEN$OFF 0000  
                strcpy@src 0071                   isupper@c 0071                  strncmp@_l 0076  
                strncmp@_r 0071                efgtoa@nmode 00D0             _h_voltage_flag 016C  
          ___aomod@divisor 0020                ??_vfpfcnvrt 00EA            ___aomod@counter 0072  
            _vfpfcnvrt$580 012A              _vfpfcnvrt$575 0128                ??_power_con 007A  
              ??_shut_down 0072              __pstringtext1 2800              __pstringtext2 2806  
            __pstringtext3 280C              __pstringtext4 2812              __pstringtext5 2818  
            __pstringtext6 281E              __pstringtext7 2824              __pstringtext8 282A  
            __pstringtext9 2830     __Umul8_16@multiplicand 0071                   sprintf@f 0148  
                 tolower@c 0077                   sprintf@s 0146     __size_of___fpclassifyf 007F  
             _process_loop 2797                   strncmp@l 0079                   strncmp@n 0073  
                 strncmp@r 0077              ___fladd@signs 006A               ___aodiv@sign 0073  
             ___fladd@aexp 006B               ___fladd@bexp 006C       __Umul8_16@multiplier 0079  
             ___aomod@sign 0073          __Umul8_16@product 0075  
