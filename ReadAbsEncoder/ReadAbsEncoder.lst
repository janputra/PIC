

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Fri Jun 12 15:33:06 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 8 "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 8 "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           ;COMMON:	_main->_send_config
    47                           ;COMMON:	_send_config->_delay
    48                           ;BANK0:	_send_config->_delay
    49                           ;BANK0:	_main->_Read_ADC
    50                           ;COMMON:	_Read_ADC->_delay
    51                           ;COMMON:	_Read_ADC->___lltoft
    52                           ;COMMON:	___lltoft->___ftpack
    53                           ;BANK0:	___lltoft->___ftpack
    54                           ;BANK0:	_Read_ADC->___fttol
    55                           ;BANK0:	___fttol->___ftadd
    56                           ;BANK0:	___ftadd->___ftmul
    57                           ;COMMON:	___ftmul->___lltoft
    58                           ;COMMON:	___lltoft->___ftpack
    59                           ;BANK0:	___lltoft->___ftpack
    60                           ;BANK0:	___ftmul->___lltoft
    61                           ;COMMON:	___lltoft->___ftpack
    62                           ;BANK0:	___lltoft->___ftpack
    63                           ;COMMON:	___ftadd->___lltoft
    64                           ;COMMON:	___lltoft->___ftpack
    65                           ;BANK0:	___lltoft->___ftpack
    66                           ;BANK1:	___fttol->___ftadd
    67                           ;BANK0:	___ftadd->___ftmul
    68                           ;COMMON:	___ftmul->___lltoft
    69                           ;COMMON:	___lltoft->___ftpack
    70                           ;BANK0:	___lltoft->___ftpack
    71                           ;BANK0:	___ftmul->___lltoft
    72                           ;COMMON:	___lltoft->___ftpack
    73                           ;BANK0:	___lltoft->___ftpack
    74                           ;COMMON:	___ftadd->___lltoft
    75                           ;COMMON:	___lltoft->___ftpack
    76                           ;BANK0:	___lltoft->___ftpack
    77                           ;COMMON:	___fttol->___lltoft
    78                           ;COMMON:	___lltoft->___ftpack
    79                           ;BANK0:	___lltoft->___ftpack
    80                           ;BANK1:	_Read_ADC->___fttol
    81                           ;BANK0:	___fttol->___ftadd
    82                           ;BANK0:	___ftadd->___ftmul
    83                           ;COMMON:	___ftmul->___lltoft
    84                           ;COMMON:	___lltoft->___ftpack
    85                           ;BANK0:	___lltoft->___ftpack
    86                           ;BANK0:	___ftmul->___lltoft
    87                           ;COMMON:	___lltoft->___ftpack
    88                           ;BANK0:	___lltoft->___ftpack
    89                           ;COMMON:	___ftadd->___lltoft
    90                           ;COMMON:	___lltoft->___ftpack
    91                           ;BANK0:	___lltoft->___ftpack
    92                           ;BANK1:	___fttol->___ftadd
    93                           ;BANK0:	___ftadd->___ftmul
    94                           ;COMMON:	___ftmul->___lltoft
    95                           ;COMMON:	___lltoft->___ftpack
    96                           ;BANK0:	___lltoft->___ftpack
    97                           ;BANK0:	___ftmul->___lltoft
    98                           ;COMMON:	___lltoft->___ftpack
    99                           ;BANK0:	___lltoft->___ftpack
   100                           ;COMMON:	___ftadd->___lltoft
   101                           ;COMMON:	___lltoft->___ftpack
   102                           ;BANK0:	___lltoft->___ftpack
   103                           ;COMMON:	___fttol->___lltoft
   104                           ;COMMON:	___lltoft->___ftpack
   105                           ;BANK0:	___lltoft->___ftpack
   106                           	FNCALL	_main,_UART_Init
   107                           	FNCALL	_main,_send_config
   108                           	FNCALL	_main,_lcd_goto
   109                           	FNCALL	_main,_send_string
   110                           	FNCALL	_main,_Read_ADC
   111                           	FNCALL	_main,_itoa
   112                           	FNCALL	_main,_kirim_data
   113                           	FNCALL	_main,_tamp
   114                           	FNCALL	_main,_reset
   115                           	FNCALL	_kirim_data,_UART_Write_Text
   116                           	FNCALL	_kirim_data,_UART_Write
   117                           	FNCALL	_tamp,_lcd_goto
   118                           	FNCALL	_tamp,_send_string
   119                           	FNCALL	_tamp,_send_dec
   120                           	FNCALL	_itoa,_utoa
   121                           	FNCALL	_UART_Init,___aldiv
   122                           	FNCALL	_Read_ADC,_delay
   123                           	FNCALL	_Read_ADC,___lltoft
   124                           	FNCALL	_Read_ADC,___ftmul
   125                           	FNCALL	_Read_ADC,___ftadd
   126                           	FNCALL	_Read_ADC,___fttol
   127                           	FNCALL	_reset,_UART_Write_Text
   128                           	FNCALL	_reset,_lcd_clr
   129                           	FNCALL	___ftadd,___ftpack
   130                           	FNCALL	_send_dec,___llmod
   131                           	FNCALL	_send_dec,___lldiv
   132                           	FNCALL	_send_dec,_send_char
   133                           	FNCALL	_lcd_clr,_send_config
   134                           	FNCALL	_lcd_clr,_delay
   135                           	FNCALL	_utoa,___lwdiv
   136                           	FNCALL	_utoa,___lwmod
   137                           	FNCALL	_UART_Write_Text,_UART_Write
   138                           	FNCALL	_send_string,_send_char
   139                           	FNCALL	_send_string,_delay
   140                           	FNCALL	_lcd_goto,_send_config
   141                           	FNCALL	_lcd_goto,_delay
   142                           	FNCALL	___lltoft,___ftpack
   143                           	FNCALL	___ftmul,___ftpack
   144                           	FNCALL	_send_config,_delay
   145                           	FNCALL	_send_config,_e_pulse
   146                           	FNCALL	_send_char,_delay
   147                           	FNCALL	_send_char,_e_pulse
   148                           	FNCALL	_e_pulse,_delay
   149                           	FNROOT	_main
   150                           	global	_AN_CH1_H
   151                           	global	_AN_CH1_L
   152                           	global	_B
   153                           	global	_iDelay
   154                           	global	_iDelay_H
   155                           	global	_iDelay_L
   156                           	global	_j
   157                           	global	_k
   158                           	global	_A
   159                           	global	_flag_ADC
   160                           	global	_flag_baca_pulsa
   161                           	global	_flag_output_pulsa_Pin
   162                           	global	_AN_CH0_H
   163                           	global	_AN_CH0_L
   164                           	global	_Baca_ADC1
   165                           	global	_counter_pulsa
   166                           	global	_posisi_LAST
   167                           	global	_posisi_NOW
   168                           	global	_time
   169                           	global	_kata
   170                           	global	_kata1
   171                           	global	_ADCON0
   172                           psect	text203,local,class=CODE,delta=2
   173                           global __ptext203
   174  0003                     __ptext203:
   175  001F                     _ADCON0  equ     31
   176                           	global	_ADRESH
   177  001E                     _ADRESH  equ     30
   178                           	global	_CCP1CON
   179  0017                     _CCP1CON  equ     23
   180                           	global	_CCP2CON
   181  001D                     _CCP2CON  equ     29
   182                           	global	_CCPR1H
   183  0016                     _CCPR1H  equ     22
   184                           	global	_CCPR1L
   185  0015                     _CCPR1L  equ     21
   186                           	global	_CCPR2H
   187  001C                     _CCPR2H  equ     28
   188                           	global	_CCPR2L
   189  001B                     _CCPR2L  equ     27
   190                           	global	_FSR
   191  0004                     _FSR  equ     4
   192                           	global	_INDF
   193  0000                     _INDF  equ     0
   194                           	global	_INTCON
   195  000B                     _INTCON  equ     11
   196                           	global	_PCL
   197  0002                     _PCL  equ     2
   198                           	global	_PCLATH
   199  000A                     _PCLATH  equ     10
   200                           	global	_PIR1
   201  000C                     _PIR1  equ     12
   202                           	global	_PIR2
   203  000D                     _PIR2  equ     13
   204                           	global	_PORTA
   205  0005                     _PORTA  equ     5
   206                           	global	_PORTB
   207  0006                     _PORTB  equ     6
   208                           	global	_PORTC
   209  0007                     _PORTC  equ     7
   210                           	global	_PORTD
   211  0008                     _PORTD  equ     8
   212                           	global	_PORTE
   213  0009                     _PORTE  equ     9
   214                           	global	_RCREG
   215  001A                     _RCREG  equ     26
   216                           	global	_RCSTA
   217  0018                     _RCSTA  equ     24
   218                           	global	_SSPBUF
   219  0013                     _SSPBUF  equ     19
   220                           	global	_SSPCON
   221  0014                     _SSPCON  equ     20
   222                           	global	_STATUS
   223  0003                     _STATUS  equ     3
   224                           	global	_T1CON
   225  0010                     _T1CON  equ     16
   226                           	global	_T2CON
   227  0012                     _T2CON  equ     18
   228                           	global	_TMR0
   229  0001                     _TMR0  equ     1
   230                           	global	_TMR1H
   231  000F                     _TMR1H  equ     15
   232                           	global	_TMR1L
   233  000E                     _TMR1L  equ     14
   234                           	global	_TMR2
   235  0011                     _TMR2  equ     17
   236                           	global	_TXREG
   237  0019                     _TXREG  equ     25
   238                           	global	_ADCS0
   239  00FE                     _ADCS0  equ     254
   240                           	global	_ADCS1
   241  00FF                     _ADCS1  equ     255
   242                           	global	_ADDEN
   243  00C3                     _ADDEN  equ     195
   244                           	global	_ADGO
   245  00FA                     _ADGO  equ     250
   246                           	global	_ADIF
   247  0066                     _ADIF  equ     102
   248                           	global	_ADON
   249  00F8                     _ADON  equ     248
   250                           	global	_BCLIF
   251  006B                     _BCLIF  equ     107
   252                           	global	_CARRY
   253  0018                     _CARRY  equ     24
   254                           	global	_CCP1IF
   255  0062                     _CCP1IF  equ     98
   256                           	global	_CCP1M0
   257  00B8                     _CCP1M0  equ     184
   258                           	global	_CCP1M1
   259  00B9                     _CCP1M1  equ     185
   260                           	global	_CCP1M2
   261  00BA                     _CCP1M2  equ     186
   262                           	global	_CCP1M3
   263  00BB                     _CCP1M3  equ     187
   264                           	global	_CCP1X
   265  00BD                     _CCP1X  equ     189
   266                           	global	_CCP1Y
   267  00BC                     _CCP1Y  equ     188
   268                           	global	_CCP2IF
   269  0068                     _CCP2IF  equ     104
   270                           	global	_CCP2M0
   271  00E8                     _CCP2M0  equ     232
   272                           	global	_CCP2M1
   273  00E9                     _CCP2M1  equ     233
   274                           	global	_CCP2M2
   275  00EA                     _CCP2M2  equ     234
   276                           	global	_CCP2M3
   277  00EB                     _CCP2M3  equ     235
   278                           	global	_CCP2X
   279  00ED                     _CCP2X  equ     237
   280                           	global	_CCP2Y
   281  00EC                     _CCP2Y  equ     236
   282                           	global	_CHS0
   283  00FB                     _CHS0  equ     251
   284                           	global	_CHS1
   285  00FC                     _CHS1  equ     252
   286                           	global	_CHS2
   287  00FD                     _CHS2  equ     253
   288                           	global	_CKP
   289  00A4                     _CKP  equ     164
   290                           	global	_CMIF
   291  006E                     _CMIF  equ     110
   292                           	global	_CREN
   293  00C4                     _CREN  equ     196
   294                           	global	_DC
   295  0019                     _DC  equ     25
   296                           	global	_EEIF
   297  006C                     _EEIF  equ     108
   298                           	global	_FERR
   299  00C2                     _FERR  equ     194
   300                           	global	_GIE
   301  005F                     _GIE  equ     95
   302                           	global	_GODONE
   303  00FA                     _GODONE  equ     250
   304                           	global	_INTE
   305  005C                     _INTE  equ     92
   306                           	global	_INTF
   307  0059                     _INTF  equ     89
   308                           	global	_IRP
   309  001F                     _IRP  equ     31
   310                           	global	_OERR
   311  00C1                     _OERR  equ     193
   312                           	global	_PD
   313  001B                     _PD  equ     27
   314                           	global	_PEIE
   315  005E                     _PEIE  equ     94
   316                           	global	_PSPIF
   317  0067                     _PSPIF  equ     103
   318                           	global	_RA0
   319  0028                     _RA0  equ     40
   320                           	global	_RA1
   321  0029                     _RA1  equ     41
   322                           	global	_RA2
   323  002A                     _RA2  equ     42
   324                           	global	_RA3
   325  002B                     _RA3  equ     43
   326                           	global	_RA4
   327  002C                     _RA4  equ     44
   328                           	global	_RA5
   329  002D                     _RA5  equ     45
   330                           	global	_RB0
   331  0030                     _RB0  equ     48
   332                           	global	_RB1
   333  0031                     _RB1  equ     49
   334                           	global	_RB2
   335  0032                     _RB2  equ     50
   336                           	global	_RB3
   337  0033                     _RB3  equ     51
   338                           	global	_RB4
   339  0034                     _RB4  equ     52
   340                           	global	_RB5
   341  0035                     _RB5  equ     53
   342                           	global	_RB6
   343  0036                     _RB6  equ     54
   344                           	global	_RB7
   345  0037                     _RB7  equ     55
   346                           	global	_RBIE
   347  005B                     _RBIE  equ     91
   348                           	global	_RBIF
   349  0058                     _RBIF  equ     88
   350                           	global	_RC0
   351  0038                     _RC0  equ     56
   352                           	global	_RC1
   353  0039                     _RC1  equ     57
   354                           	global	_RC2
   355  003A                     _RC2  equ     58
   356                           	global	_RC3
   357  003B                     _RC3  equ     59
   358                           	global	_RC4
   359  003C                     _RC4  equ     60
   360                           	global	_RC5
   361  003D                     _RC5  equ     61
   362                           	global	_RC6
   363  003E                     _RC6  equ     62
   364                           	global	_RC7
   365  003F                     _RC7  equ     63
   366                           	global	_RCIF
   367  0065                     _RCIF  equ     101
   368                           	global	_RD0
   369  0040                     _RD0  equ     64
   370                           	global	_RD1
   371  0041                     _RD1  equ     65
   372                           	global	_RD2
   373  0042                     _RD2  equ     66
   374                           	global	_RD3
   375  0043                     _RD3  equ     67
   376                           	global	_RD4
   377  0044                     _RD4  equ     68
   378                           	global	_RD5
   379  0045                     _RD5  equ     69
   380                           	global	_RD6
   381  0046                     _RD6  equ     70
   382                           	global	_RD7
   383  0047                     _RD7  equ     71
   384                           	global	_RE0
   385  0048                     _RE0  equ     72
   386                           	global	_RE1
   387  0049                     _RE1  equ     73
   388                           	global	_RE2
   389  004A                     _RE2  equ     74
   390                           	global	_RP0
   391  001D                     _RP0  equ     29
   392                           	global	_RP1
   393  001E                     _RP1  equ     30
   394                           	global	_RX9
   395  00C6                     _RX9  equ     198
   396                           	global	_RX9D
   397  00C0                     _RX9D  equ     192
   398                           	global	_SPEN
   399  00C7                     _SPEN  equ     199
   400                           	global	_SREN
   401  00C5                     _SREN  equ     197
   402                           	global	_SSPEN
   403  00A5                     _SSPEN  equ     165
   404                           	global	_SSPIF
   405  0063                     _SSPIF  equ     99
   406                           	global	_SSPM0
   407  00A0                     _SSPM0  equ     160
   408                           	global	_SSPM1
   409  00A1                     _SSPM1  equ     161
   410                           	global	_SSPM2
   411  00A2                     _SSPM2  equ     162
   412                           	global	_SSPM3
   413  00A3                     _SSPM3  equ     163
   414                           	global	_SSPOV
   415  00A6                     _SSPOV  equ     166
   416                           	global	_T0IE
   417  005D                     _T0IE  equ     93
   418                           	global	_T0IF
   419  005A                     _T0IF  equ     90
   420                           	global	_T1CKPS0
   421  0084                     _T1CKPS0  equ     132
   422                           	global	_T1CKPS1
   423  0085                     _T1CKPS1  equ     133
   424                           	global	_T1OSCEN
   425  0083                     _T1OSCEN  equ     131
   426                           	global	_T1SYNC
   427  0082                     _T1SYNC  equ     130
   428                           	global	_T2CKPS0
   429  0090                     _T2CKPS0  equ     144
   430                           	global	_T2CKPS1
   431  0091                     _T2CKPS1  equ     145
   432                           	global	_TMR0IE
   433  005D                     _TMR0IE  equ     93
   434                           	global	_TMR0IF
   435  005A                     _TMR0IF  equ     90
   436                           	global	_TMR1CS
   437  0081                     _TMR1CS  equ     129
   438                           	global	_TMR1IF
   439  0060                     _TMR1IF  equ     96
   440                           	global	_TMR1ON
   441  0080                     _TMR1ON  equ     128
   442                           	global	_TMR2IF
   443  0061                     _TMR2IF  equ     97
   444                           	global	_TMR2ON
   445  0092                     _TMR2ON  equ     146
   446                           	global	_TO
   447  001C                     _TO  equ     28
   448                           	global	_TOUTPS0
   449  0093                     _TOUTPS0  equ     147
   450                           	global	_TOUTPS1
   451  0094                     _TOUTPS1  equ     148
   452                           	global	_TOUTPS2
   453  0095                     _TOUTPS2  equ     149
   454                           	global	_TOUTPS3
   455  0096                     _TOUTPS3  equ     150
   456                           	global	_TXIF
   457  0064                     _TXIF  equ     100
   458                           	global	_WCOL
   459  00A7                     _WCOL  equ     167
   460+                          	global	_ZERO
   461+ 001A                     _ZERO  equ     26
   462+                          	global	_ADCON1
   463+ 009F                     _ADCON1  equ     159
   464                           	global	_ADRESL
   465  009E                     _ADRESL  equ     158
   466                           	global	_CMCON
   467  009C                     _CMCON  equ     156
   468                           	global	_CVRCON
   469  009D                     _CVRCON  equ     157
   470                           	global	_OPTION
   471  0081                     _OPTION  equ     129
   472                           	global	_PCON
   473  008E                     _PCON  equ     142
   474                           	global	_PIE1
   475  008C                     _PIE1  equ     140
   476                           	global	_PIE2
   477  008D                     _PIE2  equ     141
   478                           	global	_PR2
   479  0092                     _PR2  equ     146
   480                           	global	_SPBRG
   481  0099                     _SPBRG  equ     153
   482                           	global	_SSPADD
   483  0093                     _SSPADD  equ     147
   484                           	global	_SSPCON2
   485  0091                     _SSPCON2  equ     145
   486                           	global	_SSPSTAT
   487  0094                     _SSPSTAT  equ     148
   488                           	global	_TRISA
   489  0085                     _TRISA  equ     133
   490                           	global	_TRISB
   491  0086                     _TRISB  equ     134
   492                           	global	_TRISC
   493  0087                     _TRISC  equ     135
   494                           	global	_TRISD
   495  0088                     _TRISD  equ     136
   496                           	global	_TRISE
   497  0089                     _TRISE  equ     137
   498                           	global	_TXSTA
   499  0098                     _TXSTA  equ     152
   500                           	global	_ACKDT
   501  048D                     _ACKDT  equ     1165
   502                           	global	_ACKEN
   503  048C                     _ACKEN  equ     1164
   504                           	global	_ACKSTAT
   505  048E                     _ACKSTAT  equ     1166
   506                           	global	_ADCS2
   507  04FE                     _ADCS2  equ     1278
   508                           	global	_ADFM
   509  04FF                     _ADFM  equ     1279
   510                           	global	_ADIE
   511  0466                     _ADIE  equ     1126
   512                           	global	_BCLIE
   513  046B                     _BCLIE  equ     1131
   514                           	global	_BF
   515  04A0                     _BF  equ     1184
   516                           	global	_BOR
   517  0470                     _BOR  equ     1136
   518                           	global	_BRGH
   519  04C2                     _BRGH  equ     1218
   520                           	global	_C1INV
   521  04E4                     _C1INV  equ     1252
   522                           	global	_C1OUT
   523  04E6                     _C1OUT  equ     1254
   524                           	global	_C2INV
   525  04E5                     _C2INV  equ     1253
   526                           	global	_C2OUT
   527  04E7                     _C2OUT  equ     1255
   528                           	global	_CCP1IE
   529  0462                     _CCP1IE  equ     1122
   530                           	global	_CCP2IE
   531  0468                     _CCP2IE  equ     1128
   532                           	global	_CIS
   533  04E3                     _CIS  equ     1251
   534                           	global	_CKE
   535  04A6                     _CKE  equ     1190
   536                           	global	_CM0
   537  04E0                     _CM0  equ     1248
   538                           	global	_CM1
   539  04E1                     _CM1  equ     1249
   540                           	global	_CM2
   541  04E2                     _CM2  equ     1250
   542                           	global	_CMIE
   543  046E                     _CMIE  equ     1134
   544                           	global	_CSRC
   545  04C7                     _CSRC  equ     1223
   546                           	global	_CVR0
   547  04E8                     _CVR0  equ     1256
   548                           	global	_CVR1
   549  04E9                     _CVR1  equ     1257
   550                           	global	_CVR2
   551  04EA                     _CVR2  equ     1258
   552                           	global	_CVR3
   553  04EB                     _CVR3  equ     1259
   554                           	global	_CVREN
   555  04EF                     _CVREN  equ     1263
   556                           	global	_CVROE
   557  04EE                     _CVROE  equ     1262
   558                           	global	_CVRR
   559  04ED                     _CVRR  equ     1261
   560                           	global	_DA
   561  04A5                     _DA  equ     1189
   562                           	global	_EEIE
   563  046C                     _EEIE  equ     1132
   564                           	global	_GCEN
   565  048F                     _GCEN  equ     1167
   566                           	global	_IBF
   567  044F                     _IBF  equ     1103
   568                           	global	_IBOV
   569  044D                     _IBOV  equ     1101
   570                           	global	_INTEDG
   571  040E                     _INTEDG  equ     1038
   572                           	global	_OBF
   573  044E                     _OBF  equ     1102
   574                           	global	_PCFG0
   575  04F8                     _PCFG0  equ     1272
   576                           	global	_PCFG1
   577  04F9                     _PCFG1  equ     1273
   578                           	global	_PCFG2
   579  04FA                     _PCFG2  equ     1274
   580                           	global	_PCFG3
   581  04FB                     _PCFG3  equ     1275
   582                           	global	_PEN
   583  048A                     _PEN  equ     1162
   584                           	global	_POR
   585  0471                     _POR  equ     1137
   586                           	global	_PS0
   587  0408                     _PS0  equ     1032
   588                           	global	_PS1
   589  0409                     _PS1  equ     1033
   590                           	global	_PS2
   591  040A                     _PS2  equ     1034
   592                           	global	_PSA
   593  040B                     _PSA  equ     1035
   594                           	global	_PSPIE
   595  0467                     _PSPIE  equ     1127
   596                           	global	_PSPMODE
   597  044C                     _PSPMODE  equ     1100
   598                           	global	_RBPU
   599  040F                     _RBPU  equ     1039
   600                           	global	_RCEN
   601  048B                     _RCEN  equ     1163
   602                           	global	_RCIE
   603  0465                     _RCIE  equ     1125
   604                           	global	_RSEN
   605  0489                     _RSEN  equ     1161
   606                           	global	_RW
   607  04A2                     _RW  equ     1186
   608                           	global	_SEN
   609  0488                     _SEN  equ     1160
   610                           	global	_SMP
   611  04A7                     _SMP  equ     1191
   612                           	global	_SSPIE
   613  0463                     _SSPIE  equ     1123
   614                           	global	_START
   615  04A3                     _START  equ     1187
   616                           	global	_STOP
   617  04A4                     _STOP  equ     1188
   618                           	global	_SYNC
   619  04C4                     _SYNC  equ     1220
   620                           	global	_T0CS
   621  040D                     _T0CS  equ     1037
   622                           	global	_T0SE
   623  040C                     _T0SE  equ     1036
   624                           	global	_TMR1IE
   625  0460                     _TMR1IE  equ     1120
   626                           	global	_TMR2IE
   627  0461                     _TMR2IE  equ     1121
   628                           	global	_TRISA0
   629  0428                     _TRISA0  equ     1064
   630                           	global	_TRISA1
   631  0429                     _TRISA1  equ     1065
   632                           	global	_TRISA2
   633  042A                     _TRISA2  equ     1066
   634                           	global	_TRISA3
   635  042B                     _TRISA3  equ     1067
   636                           	global	_TRISA4
   637  042C                     _TRISA4  equ     1068
   638                           	global	_TRISA5
   639  042D                     _TRISA5  equ     1069
   640                           	global	_TRISB0
   641  0430                     _TRISB0  equ     1072
   642                           	global	_TRISB1
   643  0431                     _TRISB1  equ     1073
   644                           	global	_TRISB2
   645  0432                     _TRISB2  equ     1074
   646                           	global	_TRISB3
   647  0433                     _TRISB3  equ     1075
   648                           	global	_TRISB4
   649  0434                     _TRISB4  equ     1076
   650                           	global	_TRISB5
   651  0435                     _TRISB5  equ     1077
   652                           	global	_TRISB6
   653  0436                     _TRISB6  equ     1078
   654                           	global	_TRISB7
   655  0437                     _TRISB7  equ     1079
   656                           	global	_TRISC0
   657  0438                     _TRISC0  equ     1080
   658                           	global	_TRISC1
   659  0439                     _TRISC1  equ     1081
   660                           	global	_TRISC2
   661  043A                     _TRISC2  equ     1082
   662                           	global	_TRISC3
   663  043B                     _TRISC3  equ     1083
   664                           	global	_TRISC4
   665  043C                     _TRISC4  equ     1084
   666                           	global	_TRISC5
   667  043D                     _TRISC5  equ     1085
   668                           	global	_TRISC6
   669  043E                     _TRISC6  equ     1086
   670                           	global	_TRISC7
   671  043F                     _TRISC7  equ     1087
   672                           	global	_TRISD0
   673  0440                     _TRISD0  equ     1088
   674                           	global	_TRISD1
   675  0441                     _TRISD1  equ     1089
   676                           	global	_TRISD2
   677  0442                     _TRISD2  equ     1090
   678                           	global	_TRISD3
   679  0443                     _TRISD3  equ     1091
   680                           	global	_TRISD4
   681  0444                     _TRISD4  equ     1092
   682                           	global	_TRISD5
   683  0445                     _TRISD5  equ     1093
   684                           	global	_TRISD6
   685  0446                     _TRISD6  equ     1094
   686                           	global	_TRISD7
   687  0447                     _TRISD7  equ     1095
   688                           	global	_TRISE0
   689  0448                     _TRISE0  equ     1096
   690                           	global	_TRISE1
   691  0449                     _TRISE1  equ     1097
   692                           	global	_TRISE2
   693  044A                     _TRISE2  equ     1098
   694                           	global	_TRMT
   695  04C1                     _TRMT  equ     1217
   696                           	global	_TX9
   697  04C6                     _TX9  equ     1222
   698                           	global	_TX9D
   699  04C0                     _TX9D  equ     1216
   700                           	global	_TXEN
   701  04C5                     _TXEN  equ     1221
   702                           	global	_TXIE
   703  0464                     _TXIE  equ     1124
   704                           	global	_UA
   705  04A1                     _UA  equ     1185
   706                           	global	_EEADR
   707  010D                     _EEADR  equ     269
   708                           	global	_EEADRH
   709  010F                     _EEADRH  equ     271
   710                           	global	_EEADRL
   711  010D                     _EEADRL  equ     269
   712                           	global	_EEDATA
   713  010C                     _EEDATA  equ     268
   714                           	global	_EEDATH
   715  010E                     _EEDATH  equ     270
   716                           	global	_EECON1
   717  018C                     _EECON1  equ     396
   718                           	global	_EECON2
   719  018D                     _EECON2  equ     397
   720                           	global	_EEPGD
   721  0C67                     _EEPGD  equ     3175
   722                           	global	_RD
   723  0C60                     _RD  equ     3168
   724                           	global	_WR
   725  0C61                     _WR  equ     3169
   726                           	global	_WREN
   727  0C62                     _WREN  equ     3170
   728                           	global	_WRERR
   729  0C63                     _WRERR  equ     3171
   730                           psect	strings,class=CODE,delta=2,reloc=256
   731                           global __pstrings
   732  0B00                     __pstrings:
   733                           	global	stringdir,stringtab,__stringbase,stringjmp
   734  0B00                     stringtab:
   735                           ;	String table - string pointers are 1 byte each
   736  0B00  00FE               	movwf	(btemp)&07Fh
   737  0B01  1FFE               	btfss	(btemp)&07Fh,7
   738  0B02  2B08               	goto	stringcode
   739  0B03  1383               	bcf	status,7
   740  0B04  187E               	btfsc	btemp&7Fh,0
   741  0B05  1783               	bsf	status,7
   742  0B06  0800               	movf	indf,w
   743  0B07  0008               	return
   744  0B08                     stringcode:
   745  0B08  0804               	movf	fsr,w
   746  0B09                     stringdir:
   747  0B09  00FE               movwf btemp&07Fh
   748  0B0A  300B               movlw high(stringdir)
   749  0B0B  008A               movwf pclath
   750  0B0C  087E               movf btemp&07Fh,w
   751  0B0D                     stringjmp:
   752  0B0D  0782               	addwf pc
   753  0B0E                     __stringbase:
   754  0B0E  3400               	retlw	0
   755                           psect	strings
   756                           	
   757  0B0F                     STR_1:	
   758  0B0F  3420               	retlw	32	;' '
   759  0B10  3420               	retlw	32	;' '
   760  0B11  3420               	retlw	32	;' '
   761  0B12  3420               	retlw	32	;' '
   762  0B13  3452               	retlw	82	;'R'
   763  0B14  344E               	retlw	78	;'N'
   764  0B15  3444               	retlw	68	;'D'
   765  0B16  3420               	retlw	32	;' '
   766  0B17  3444               	retlw	68	;'D'
   767  0B18  3441               	retlw	65	;'A'
   768  0B19  3451               	retlw	81	;'Q'
   769  0B1A  3420               	retlw	32	;' '
   770  0B1B  3420               	retlw	32	;' '
   771  0B1C  3420               	retlw	32	;' '
   772  0B1D  3420               	retlw	32	;' '
   773  0B1E  3400               	retlw	0
   774                           psect	strings
   775                           	
   776  0B1F                     STR_2:	
   777  0B1F  3423               	retlw	35	;'#'
   778  0B20  3431               	retlw	49	;'1'
   779  0B21  3420               	retlw	32	;' '
   780  0B22  3453               	retlw	83	;'S'
   781  0B23  344D               	retlw	77	;'M'
   782  0B24  344F               	retlw	79	;'O'
   783  0B25  3444               	retlw	68	;'D'
   784  0B26  3445               	retlw	69	;'E'
   785  0B27  343A               	retlw	58	;':'
   786  0B28  3431               	retlw	49	;'1'
   787  0B29  343B               	retlw	59	;';'
   788  0B2A  3400               	retlw	0
   789                           psect	strings
   790                           	
   791  0B2B                     STR_3:	
   792  0B2B  3423               	retlw	35	;'#'
   793  0B2C  3431               	retlw	49	;'1'
   794  0B2D  3420               	retlw	32	;' '
   795  0B2E  3453               	retlw	83	;'S'
   796  0B2F  344D               	retlw	77	;'M'
   797  0B30  344F               	retlw	79	;'O'
   798  0B31  3444               	retlw	68	;'D'
   799  0B32  3445               	retlw	69	;'E'
   800  0B33  343A               	retlw	58	;':'
   801  0B34  3432               	retlw	50	;'2'
   802  0B35  343B               	retlw	59	;';'
   803  0B36  3400               	retlw	0
   804                           psect	strings
   805                           	
   806  0B37                     STR_6:	
   807  0B37  3423               	retlw	35	;'#'
   808  0B38  3431               	retlw	49	;'1'
   809  0B39  3420               	retlw	32	;' '
   810  0B3A  3452               	retlw	82	;'R'
   811  0B3B  3445               	retlw	69	;'E'
   812  0B3C  3453               	retlw	83	;'S'
   813  0B3D  3445               	retlw	69	;'E'
   814  0B3E  3454               	retlw	84	;'T'
   815  0B3F  343B               	retlw	59	;';'
   816  0B40  3400               	retlw	0
   817                           psect	strings
   818                           	
   819  0B41                     STR_4:	
   820  0B41  3423               	retlw	35	;'#'
   821  0B42  3431               	retlw	49	;'1'
   822  0B43  3420               	retlw	32	;' '
   823  0B44  3453               	retlw	83	;'S'
   824  0B45  3450               	retlw	80	;'P'
   825  0B46  344F               	retlw	79	;'O'
   826  0B47  3453               	retlw	83	;'S'
   827  0B48  343A               	retlw	58	;':'
   828  0B49  3400               	retlw	0
   829                           psect	strings
   830                           	
   831  0B4A                     STR_8:	
   832  0B4A  3450               	retlw	80	;'P'
   833  0B4B  346F               	retlw	111	;'o'
   834  0B4C  3473               	retlw	115	;'s'
   835  0B4D  343A               	retlw	58	;':'
   836  0B4E  3400               	retlw	0
   837                           psect	strings
   838                           	
   839  0B4F                     STR_7:	
   840  0B4F  3453               	retlw	83	;'S'
   841  0B50  3470               	retlw	112	;'p'
   842  0B51  3464               	retlw	100	;'d'
   843  0B52  343A               	retlw	58	;':'
   844  0B53  3400               	retlw	0
   845                           psect	strings
   846                           	
   847  0B54                     STR_5:	
   848  0B54  3453               	retlw	83	;'S'
   849  0B55  3456               	retlw	86	;'V'
   850  0B56  343A               	retlw	58	;':'
   851  0B57  3400               	retlw	0
   852                           psect	strings
   853                           	file	"ReadAbsEncoder.as"
   854                           	line	#
   855                           psect cinit,class=CODE,delta=2
   856                           global start_initialization
   857  090E                     start_initialization:
   858                           
   859                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   860                           global __pbitbssCOMMON
   861  03C8                     __pbitbssCOMMON:
   862  03C8                     _flag_ADC:
   863  03C8                            ds      1
   864                           
   865  03C9                     _flag_baca_pulsa:
   866  03C9                            ds      1
   867                           
   868  03CA                     _flag_output_pulsa_Pin:
   869  03CA                            ds      1
   870                           
   871                           psect	bssCOMMON,class=COMMON,space=1
   872                           global __pbssCOMMON
   873  0075                     __pbssCOMMON:
   874  0075                     _A:
   875  0075                            ds      4
   876                           
   877                           psect	bssBANK0,class=BANK0,space=1
   878                           global __pbssBANK0
   879  0044                     __pbssBANK0:
   880  0044                     _AN_CH1_H:
   881  0044                            ds      4
   882                           
   883  0048                     _AN_CH1_L:
   884  0048                            ds      4
   885                           
   886  004C                     _B:
   887  004C                            ds      4
   888                           
   889  0050                     _iDelay:
   890  0050                            ds      4
   891                           
   892  0054                     _iDelay_H:
   893  0054                            ds      4
   894                           
   895  0058                     _iDelay_L:
   896  0058                            ds      4
   897                           
   898  005C                     _j:
   899  005C                            ds      2
   900                           
   901  005E                     _k:
   902  005E                            ds      2
   903                           
   904                           psect	bssBANK1,class=BANK1,space=1
   905                           global __pbssBANK1
   906  00A0                     __pbssBANK1:
   907  00A0                     _AN_CH0_H:
   908  00A0                            ds      4
   909                           
   910  00A4                     _AN_CH0_L:
   911  00A4                            ds      4
   912                           
   913  00A8                     _Baca_ADC1:
   914  00A8                            ds      4
   915                           
   916  00AC                     _counter_pulsa:
   917  00AC                            ds      4
   918                           
   919  00B0                     _posisi_LAST:
   920  00B0                            ds      4
   921                           
   922  00B4                     _posisi_NOW:
   923  00B4                            ds      4
   924                           
   925  00B8                     _time:
   926  00B8                            ds      4
   927                           
   928  00BC                     _kata:
   929  00BC                            ds      16
   930                           
   931  00CC                     _kata1:
   932  00CC                            ds      16
   933                           
   934                           psect clrtext,class=CODE,delta=2
   935                           global clear_ram
   936                           ;	Called with FSR containing the base address, and
   937                           ;	W with the last address+1
   938  08E4                     clear_ram:
   939  08E4  0064               	clrwdt			;clear the watchdog before getting into this loop
   940  08E5                     clrloop:
   941  08E5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   942  08E6  0A84               	incf	fsr,f		;increment pointer
   943  08E7  0604               	xorwf	fsr,w		;XOR with final address
   944  08E8  1903               	btfsc	status,2	;have we reached the end yet?
   945  08E9  3400               	retlw	0		;all done for this memory range, return
   946  08EA  0604               	xorwf	fsr,w		;XOR again to restore value
   947  08EB  28E5               	goto	clrloop		;do the next byte
   948                           
   949                           ; Clear objects allocated to BITCOMMON
   950                           psect cinit,class=CODE,delta=2
   951  090E  01F9               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   952                           ; Clear objects allocated to COMMON
   953                           psect cinit,class=CODE,delta=2
   954  090F  01F5               	clrf	((__pbssCOMMON)+0)&07Fh
   955  0910  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
   956  0911  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
   957  0912  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
   958                           ; Clear objects allocated to BANK0
   959                           psect cinit,class=CODE,delta=2
   960  0913  1383               	bcf	status, 7	;select IRP bank0
   961  0914  3044               	movlw	low(__pbssBANK0)
   962  0915  0084               	movwf	fsr
   963  0916  3060               	movlw	low((__pbssBANK0)+01Ch)
   964  0917  120A  158A  20E4   	fcall	clear_ram
              120A  158A         
   965                           ; Clear objects allocated to BANK1
   966                           psect cinit,class=CODE,delta=2
   967  091C  30A0               	movlw	low(__pbssBANK1)
   968  091D  0084               	movwf	fsr
   969  091E  30DC               	movlw	low((__pbssBANK1)+03Ch)
   970  091F  120A  158A  20E4   	fcall	clear_ram
              120A  158A         
   971                           psect cinit,class=CODE,delta=2
   972                           global end_of_initialization
   973                           
   974                           ;End of C runtime variable initationation code
   975                           
   976  0924                     end_of_initialization:
   977  0924  0183               clrf status
   978  0925  120A  118A  2823   ljmp _main	;jump to C main() function
   979                           psect	cstackBANK1,class=BANK1,space=1
   980                           global __pcstackBANK1
   981  00DC                     __pcstackBANK1:
   982                           	global	___ftadd@sign
   983  00DC                     ___ftadd@sign:	; 1 bytes @ 0x0
   984  00DC                     	ds	1
   985                           	global	___ftadd@exp2
   986  00DD                     ___ftadd@exp2:	; 1 bytes @ 0x1
   987  00DD                     	ds	1
   988                           	global	___ftadd@exp1
   989  00DE                     ___ftadd@exp1:	; 1 bytes @ 0x2
   990  00DE                     	ds	1
   991                           	global	?___ftadd
   992  00DF                     ?___ftadd: ;@ 0x3
   993                           	global	___ftadd@f1
   994  00DF                     ___ftadd@f1:	; 3 bytes @ 0x3
   995  00DF                     	ds	3
   996                           	global	___ftadd@f2
   997  00E2                     ___ftadd@f2:	; 3 bytes @ 0x6
   998  00E2                     	ds	3
   999                           	global	___fttol@sign1
  1000  00E5                     ___fttol@sign1:	; 1 bytes @ 0x9
  1001  00E5                     	ds	1
  1002                           	global	___fttol@lval
  1003  00E6                     ___fttol@lval:	; 4 bytes @ 0xA
  1004  00E6                     	ds	4
  1005                           	global	___fttol@exp1
  1006  00EA                     ___fttol@exp1:	; 1 bytes @ 0xE
  1007  00EA                     	ds	1
  1008                           	global	___fttol@f1
  1009  00EB                     ___fttol@f1:	; 3 bytes @ 0xF
  1010                           	global	?___fttol
  1011  00EB                     ?___fttol: ;@ 0xF
  1012  00EB                     	ds	4
  1013                           psect	cstackCOMMON,class=COMMON,space=1
  1014                           global __pcstackCOMMON
  1015  0070                     __pcstackCOMMON:
  1016                           	global	??___aldiv
  1017  0070                     ??___aldiv: ;@ 0x0
  1018                           	global	??___llmod
  1019  0070                     ??___llmod: ;@ 0x0
  1020                           	global	??___lwdiv
  1021  0070                     ??___lwdiv: ;@ 0x0
  1022                           	global	??___lwmod
  1023  0070                     ??___lwmod: ;@ 0x0
  1024                           	global	??_UART_Write
  1025  0070                     ??_UART_Write: ;@ 0x0
  1026                           	global	??___lldiv
  1027  0070                     ??___lldiv: ;@ 0x0
  1028                           	global	??___ftpack
  1029  0070                     ??___ftpack: ;@ 0x0
  1030                           	global	??_delay
  1031  0070                     ??_delay: ;@ 0x0
  1032                           	global	UART_Write@data
  1033  0070                     UART_Write@data:	; 1 bytes @ 0x0
  1034  0070                     	ds	1
  1035                           	global	?_UART_Write
  1036  0071                     ?_UART_Write: ;@ 0x1
  1037                           	global	??_UART_Write_Text
  1038  0071                     ??_UART_Write_Text: ;@ 0x1
  1039                           	global	___lwmod@counter
  1040  0071                     ___lwmod@counter:	; 1 bytes @ 0x1
  1041                           	global	___llmod@counter
  1042  0071                     ___llmod@counter:	; 1 bytes @ 0x1
  1043                           	global	UART_Init@x
  1044  0071                     UART_Init@x:	; 2 bytes @ 0x1
  1045  0071                     	ds	1
  1046                           	global	??_utoa
  1047  0072                     ??_utoa: ;@ 0x2
  1048                           	global	??_kirim_data
  1049  0072                     ??_kirim_data: ;@ 0x2
  1050  0072                     	ds	1
  1051                           	global	?_kirim_data
  1052  0073                     ?_kirim_data: ;@ 0x3
  1053                           	global	??_itoa
  1054  0073                     ??_itoa: ;@ 0x3
  1055                           	global	??___lltoft
  1056  0073                     ??___lltoft: ;@ 0x3
  1057  0073                     	ds	1
  1058                           	global	?_send_char
  1059  0074                     ?_send_char: ;@ 0x4
  1060                           	global	??_send_dec
  1061  0074                     ??_send_dec: ;@ 0x4
  1062                           	global	?_send_string
  1063  0074                     ?_send_string: ;@ 0x4
  1064                           	global	??_send_config
  1065  0074                     ??_send_config: ;@ 0x4
  1066                           	global	??_e_pulse
  1067  0074                     ??_e_pulse: ;@ 0x4
  1068  0074                     	ds	1
  1069                           psect	cstackBANK0,class=BANK0,space=1
  1070                           global __pcstackBANK0
  1071  0020                     __pcstackBANK0:
  1072                           	global	?_delay
  1073  0020                     ?_delay: ;@ 0x0
  1074                           	global	??_reset
  1075  0020                     ??_reset: ;@ 0x0
  1076                           	global	??_lcd_goto
  1077  0020                     ??_lcd_goto: ;@ 0x0
  1078                           	global	??_lcd_clr
  1079  0020                     ??_lcd_clr: ;@ 0x0
  1080                           	global	?___lwmod
  1081  0020                     ?___lwmod: ;@ 0x0
  1082                           	global	?___llmod
  1083  0020                     ?___llmod: ;@ 0x0
  1084                           	global	___lwdiv@counter
  1085  0020                     ___lwdiv@counter:	; 1 bytes @ 0x0
  1086                           	global	___aldiv@counter
  1087  0020                     ___aldiv@counter:	; 1 bytes @ 0x0
  1088                           	global	UART_Write_Text@n
  1089  0020                     UART_Write_Text@n:	; 2 bytes @ 0x0
  1090                           	global	___lwmod@dividend
  1091  0020                     ___lwmod@dividend:	; 2 bytes @ 0x0
  1092                           	global	?___ftpack
  1093  0020                     ?___ftpack: ;@ 0x0
  1094                           	global	___ftpack@arg
  1095  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1096                           	global	___lldiv@quotient
  1097  0020                     ___lldiv@quotient:	; 4 bytes @ 0x0
  1098                           	global	delay@data
  1099  0020                     delay@data:	; 4 bytes @ 0x0
  1100                           	global	___llmod@dividend
  1101  0020                     ___llmod@dividend:	; 4 bytes @ 0x0
  1102  0020                     	ds	1
  1103                           	global	___aldiv@sign
  1104  0021                     ___aldiv@sign:	; 1 bytes @ 0x1
  1105                           	global	___lwdiv@quotient
  1106  0021                     ___lwdiv@quotient:	; 2 bytes @ 0x1
  1107  0021                     	ds	1
  1108                           	global	?_UART_Write_Text
  1109  0022                     ?_UART_Write_Text: ;@ 0x2
  1110                           	global	UART_Write_Text@text
  1111  0022                     UART_Write_Text@text:	; 2 bytes @ 0x2
  1112                           	global	___lwmod@divisor
  1113  0022                     ___lwmod@divisor:	; 2 bytes @ 0x2
  1114                           	global	___aldiv@quotient
  1115  0022                     ___aldiv@quotient:	; 4 bytes @ 0x2
  1116  0022                     	ds	1
  1117                           	global	?___lwdiv
  1118  0023                     ?___lwdiv: ;@ 0x3
  1119                           	global	___ftpack@exp
  1120  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1121                           	global	___lwdiv@dividend
  1122  0023                     ___lwdiv@dividend:	; 2 bytes @ 0x3
  1123  0023                     	ds	1
  1124                           	global	??_send_char
  1125  0024                     ??_send_char: ;@ 0x4
  1126                           	global	?_e_pulse
  1127  0024                     ?_e_pulse: ;@ 0x4
  1128                           	global	___ftpack@sign
  1129  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1130                           	global	send_config@data
  1131  0024                     send_config@data:	; 1 bytes @ 0x4
  1132                           	global	___lldiv@counter
  1133  0024                     ___lldiv@counter:	; 1 bytes @ 0x4
  1134                           	global	___llmod@divisor
  1135  0024                     ___llmod@divisor:	; 4 bytes @ 0x4
  1136  0024                     	ds	1
  1137                           	global	?___lldiv
  1138  0025                     ?___lldiv: ;@ 0x5
  1139                           	global	send_char@data
  1140  0025                     send_char@data:	; 1 bytes @ 0x5
  1141                           	global	___lltoft@exp
  1142  0025                     ___lltoft@exp:	; 1 bytes @ 0x5
  1143                           	global	send_config@i
  1144  0025                     send_config@i:	; 1 bytes @ 0x5
  1145                           	global	___lwdiv@divisor
  1146  0025                     ___lwdiv@divisor:	; 2 bytes @ 0x5
  1147                           	global	___lldiv@dividend
  1148  0025                     ___lldiv@dividend:	; 4 bytes @ 0x5
  1149  0025                     	ds	1
  1150                           	global	send_config@test
  1151  0026                     send_config@test:	; 1 bytes @ 0x6
  1152                           	global	send_char@i
  1153  0026                     send_char@i:	; 1 bytes @ 0x6
  1154                           	global	?___lltoft
  1155  0026                     ?___lltoft: ;@ 0x6
  1156                           	global	?___aldiv
  1157  0026                     ?___aldiv: ;@ 0x6
  1158                           	global	___lltoft@c
  1159  0026                     ___lltoft@c:	; 4 bytes @ 0x6
  1160                           	global	___aldiv@dividend
  1161  0026                     ___aldiv@dividend:	; 4 bytes @ 0x6
  1162  0026                     	ds	1
  1163                           	global	?_send_config
  1164  0027                     ?_send_config: ;@ 0x7
  1165                           	global	?_reset
  1166  0027                     ?_reset: ;@ 0x7
  1167                           	global	?_lcd_clr
  1168  0027                     ?_lcd_clr: ;@ 0x7
  1169                           	global	send_char@test
  1170  0027                     send_char@test:	; 1 bytes @ 0x7
  1171                           	global	lcd_goto@data
  1172  0027                     lcd_goto@data:	; 1 bytes @ 0x7
  1173                           	global	utoa@v
  1174  0027                     utoa@v:	; 2 bytes @ 0x7
  1175  0027                     	ds	1
  1176                           	global	?_lcd_goto
  1177  0028                     ?_lcd_goto: ;@ 0x8
  1178                           	global	??_send_string
  1179  0028                     ??_send_string: ;@ 0x8
  1180  0028                     	ds	1
  1181                           	global	utoa@c
  1182  0029                     utoa@c:	; 1 bytes @ 0x9
  1183                           	global	___lldiv@divisor
  1184  0029                     ___lldiv@divisor:	; 4 bytes @ 0x9
  1185  0029                     	ds	1
  1186                           	global	??___ftmul
  1187  002A                     ??___ftmul: ;@ 0xA
  1188                           	global	utoa@buf
  1189  002A                     utoa@buf:	; 1 bytes @ 0xA
  1190                           	global	send_string@s
  1191  002A                     send_string@s:	; 1 bytes @ 0xA
  1192                           	global	___aldiv@divisor
  1193  002A                     ___aldiv@divisor:	; 4 bytes @ 0xA
  1194  002A                     	ds	1
  1195                           	global	?_utoa
  1196  002B                     ?_utoa: ;@ 0xB
  1197                           	global	utoa@val
  1198  002B                     utoa@val:	; 2 bytes @ 0xB
  1199  002B                     	ds	2
  1200                           	global	?_send_dec
  1201  002D                     ?_send_dec: ;@ 0xD
  1202                           	global	utoa@base
  1203  002D                     utoa@base:	; 2 bytes @ 0xD
  1204                           	global	send_dec@data
  1205  002D                     send_dec@data:	; 4 bytes @ 0xD
  1206  002D                     	ds	1
  1207                           	global	??_UART_Init
  1208  002E                     ??_UART_Init: ;@ 0xE
  1209                           	global	??_main
  1210  002E                     ??_main: ;@ 0xE
  1211                           	global	___ftmul@exp
  1212  002E                     ___ftmul@exp:	; 1 bytes @ 0xE
  1213  002E                     	ds	1
  1214                           	global	___ftmul@f3_as_product
  1215  002F                     ___ftmul@f3_as_product:	; 3 bytes @ 0xF
  1216  002F                     	ds	1
  1217                           	global	itoa@buf
  1218  0030                     itoa@buf:	; 1 bytes @ 0x10
  1219  0030                     	ds	1
  1220                           	global	?_itoa
  1221  0031                     ?_itoa: ;@ 0x11
  1222                           	global	send_dec@num_dig
  1223  0031                     send_dec@num_dig:	; 1 bytes @ 0x11
  1224                           	global	itoa@val
  1225  0031                     itoa@val:	; 2 bytes @ 0x11
  1226  0031                     	ds	1
  1227                           	global	??_tamp
  1228  0032                     ??_tamp: ;@ 0x12
  1229                           	global	___ftmul@cntr
  1230  0032                     ___ftmul@cntr:	; 1 bytes @ 0x12
  1231  0032                     	ds	1
  1232                           	global	?_tamp
  1233  0033                     ?_tamp: ;@ 0x13
  1234                           	global	___ftmul@sign
  1235  0033                     ___ftmul@sign:	; 1 bytes @ 0x13
  1236                           	global	itoa@base
  1237  0033                     itoa@base:	; 2 bytes @ 0x13
  1238  0033                     	ds	1
  1239                           	global	?___ftmul
  1240  0034                     ?___ftmul: ;@ 0x14
  1241                           	global	___ftmul@f1
  1242  0034                     ___ftmul@f1:	; 3 bytes @ 0x14
  1243  0034                     	ds	3
  1244                           	global	___ftmul@f2
  1245  0037                     ___ftmul@f2:	; 3 bytes @ 0x17
  1246  0037                     	ds	3
  1247                           	global	??___ftadd
  1248  003A                     ??___ftadd: ;@ 0x1A
  1249                           	global	?_UART_Init
  1250  003A                     ?_UART_Init: ;@ 0x1A
  1251                           	global	UART_Init@baudrate
  1252  003A                     UART_Init@baudrate:	; 4 bytes @ 0x1A
  1253  003A                     	ds	3
  1254                           	global	??___fttol
  1255  003D                     ??___fttol: ;@ 0x1D
  1256  003D                     	ds	3
  1257                           	global	??_Read_ADC
  1258  0040                     ??_Read_ADC: ;@ 0x20
  1259  0040                     	ds	4
  1260                           	global	?_main
  1261  0044                     ?_main: ;@ 0x24
  1262                           	global	?_Read_ADC
  1263  0044                     ?_Read_ADC: ;@ 0x24
  1264                           ;Data sizes: Strings 73, constant 0, data 0, bss 92, persistent 0 stack 0
  1265                           ;Auto spaces:   Size  Autos    Used
  1266                           ; COMMON          14      5      10
  1267                           ; BANK0           80     36      64
  1268                           ; BANK1           80     19      79
  1269                           ; BANK3           96      0       0
  1270                           ; BANK2           96      0       0
  1271                           
  1272                           
  1273                           ;Pointer list with targets:
  1274                           
  1275                           ;sp__itoa	PTR unsigned char  size(1); Largest target is 16
  1276                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1277                           ;send_string@s	PTR const unsigned char  size(1); Largest target is 16
  1278                           ;		 -> STR_1(CODE[16]), STR_7(CODE[5]), STR_8(CODE[5]), 
  1279                           ;UART_Write_Text@text	PTR unsigned char  size(2); Largest target is 16
  1280                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), STR_2(CODE[12]), STR_3(CODE[12]), 
  1281                           ;		 -> STR_4(CODE[9]), STR_5(CODE[4]), STR_6(CODE[10]), 
  1282                           ;?___aldiv	long  size(1); Largest target is 0
  1283                           ;?___lldiv	unsigned long  size(1); Largest target is 0
  1284                           ;?___llmod	unsigned long  size(1); Largest target is 0
  1285                           ;itoa@cp	PTR unsigned char  size(1); Largest target is 16
  1286                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1287                           ;itoa@buf	PTR unsigned char  size(1); Largest target is 16
  1288                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1289                           ;sp__utoa	PTR unsigned char  size(1); Largest target is 16
  1290                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1291                           ;utoa@buf	PTR unsigned char  size(1); Largest target is 16
  1292                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1293                           ;?_itoa	PTR unsigned char  size(1); Largest target is 16
  1294                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1295                           ;?___ftadd	float  size(1); Largest target is 0
  1296                           ;?___fttol	long  size(1); Largest target is 0
  1297                           ;?___lltoft	float  size(1); Largest target is 0
  1298                           ;?___ftmul	float  size(1); Largest target is 0
  1299                           ;?_utoa	PTR unsigned char  size(1); Largest target is 16
  1300                           ;		 -> kata(BANK1[16]), kata1(BANK1[16]), 
  1301                           ;?___lwdiv	unsigned int  size(1); Largest target is 0
  1302                           ;?___lwmod	unsigned int  size(1); Largest target is 0
  1303                           ;?___ftpack	float  size(1); Largest target is 0
  1304                           
  1305                           
  1306                           ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1307                           
  1308                           
  1309                           ;Call graph:                      Base Space Used Autos Args Refs Density
  1310                           ;_main                                                0    0 14049   0.00
  1311                           ;          _UART_Init
  1312                           ;        _send_config
  1313                           ;           _lcd_goto
  1314                           ;        _send_string
  1315                           ;           _Read_ADC
  1316                           ;               _itoa
  1317                           ;         _kirim_data
  1318                           ;               _tamp
  1319                           ;              _reset
  1320                           ;  _kirim_data                                        0    0  150   0.00
  1321                           ;    _UART_Write_Text
  1322                           ;         _UART_Write
  1323                           ;  _tamp                                              1    0 2607   0.00
  1324                           ;                                   18 BANK0    1
  1325                           ;           _lcd_goto
  1326                           ;        _send_string
  1327                           ;           _send_dec
  1328                           ;  _itoa                                              3    4  837   0.00
  1329                           ;                                    3 COMMO    1
  1330                           ;                                   15 BANK0    6
  1331                           ;               _utoa
  1332                           ;  _UART_Init                                        14    4  336   0.00
  1333                           ;                                    1 COMMO    2
  1334                           ;                                   14 BANK0   16
  1335                           ;            ___aldiv
  1336                           ;  _Read_ADC                                          4    0 7971   0.00
  1337                           ;                                   32 BANK0    4
  1338                           ;              _delay
  1339                           ;           ___lltoft
  1340                           ;            ___ftmul
  1341                           ;            ___ftadd
  1342                           ;            ___fttol
  1343                           ;  _reset                                             0    0  600   0.00
  1344                           ;    _UART_Write_Text
  1345                           ;            _lcd_clr
  1346                           ;    ___ftadd                                         6    6 2514   0.00
  1347                           ;                                   26 BANK0    3
  1348                           ;                                    0 BANK1    9
  1349                           ;            ___ftmul (ARG)
  1350                           ;           ___lltoft (ARG)
  1351                           ;           ___ftpack
  1352                           ;    ___fttol                                         9    4 4107   0.00
  1353                           ;                                   29 BANK0    3
  1354                           ;                                    9 BANK1   10
  1355                           ;            ___ftadd (ARG)
  1356                           ;            ___ftmul (ARG)
  1357                           ;           ___lltoft (ARG)
  1358                           ;    _send_dec                                        0    5 1482   0.00
  1359                           ;                                   13 BANK0    5
  1360                           ;            ___llmod
  1361                           ;            ___lldiv
  1362                           ;          _send_char
  1363                           ;    _lcd_clr                                         0    0  474   0.00
  1364                           ;        _send_config
  1365                           ;              _delay
  1366                           ;    _utoa                                            5    4  654   0.00
  1367                           ;                                    2 COMMO    1
  1368                           ;                                    7 BANK0    8
  1369                           ;            ___lwdiv
  1370                           ;            ___lwmod
  1371                           ;    _UART_Write_Text                                 4    2  126   0.00
  1372                           ;                                    1 COMMO    2
  1373                           ;                                    0 BANK0    4
  1374                           ;         _UART_Write
  1375                           ;    _send_string                                     3    0  552   0.00
  1376                           ;                                    8 BANK0    3
  1377                           ;          _send_char
  1378                           ;              _delay
  1379                           ;    _lcd_goto                                        1    0  573   0.00
  1380                           ;                                    7 BANK0    1
  1381                           ;        _send_config
  1382                           ;              _delay
  1383                           ;    ___aldiv                                         7    8  222   0.00
  1384                           ;                                    0 COMMO    1
  1385                           ;                                    0 BANK0   14
  1386                           ;    ___lltoft                                        2    4  330   0.00
  1387                           ;                                    3 COMMO    1
  1388                           ;                                    5 BANK0    5
  1389                           ;           ___ftpack
  1390                           ;    ___ftmul                                        10    6  969   0.00
  1391                           ;                                   10 BANK0   16
  1392                           ;           ___lltoft (ARG)
  1393                           ;           ___ftpack
  1394                           ;      ___llmod                                       2    8  117   0.00
  1395                           ;                                    0 COMMO    2
  1396                           ;                                    0 BANK0    8
  1397                           ;      _send_config                                   4    0  423   0.00
  1398                           ;                                    4 COMMO    1
  1399                           ;                                    4 BANK0    3
  1400                           ;              _delay
  1401                           ;            _e_pulse
  1402                           ;      ___lldiv                                       6    8  192   0.00
  1403                           ;                                    0 COMMO    1
  1404                           ;                                    0 BANK0   13
  1405                           ;      _UART_Write                                    1    0   24   0.00
  1406                           ;                                    0 COMMO    1
  1407                           ;      ___lwmod                                       2    4  117   0.00
  1408                           ;                                    0 COMMO    2
  1409                           ;                                    0 BANK0    4
  1410                           ;      ___lwdiv                                       4    4  192   0.00
  1411                           ;                                    0 COMMO    1
  1412                           ;                                    0 BANK0    7
  1413                           ;      _send_char                                     4    0  423   0.00
  1414                           ;                                    4 BANK0    4
  1415                           ;              _delay
  1416                           ;            _e_pulse
  1417                           ;      ___ftpack                                      3    5  249   0.00
  1418                           ;                                    0 COMMO    3
  1419                           ;                                    0 BANK0    5
  1420                           ;        _e_pulse                                     0    0   51   0.00
  1421                           ;              _delay
  1422                           ;          _delay                                     4    4   51   0.00
  1423                           ;                                    0 COMMO    4
  1424                           ;                                    0 BANK0    4
  1425                           ; Estimated maximum call depth 5
  1426                           ; Address spaces:
  1427                           
  1428                           ;Name               Size   Autos  Total    Cost      Usage
  1429                           ;BITCOMMON            E      0       1       0        7.1%
  1430                           ;CODE                 0      0       0       0        0.0%
  1431                           ;NULL                 0      0       0       0        0.0%
  1432                           ;COMMON               E      5       A       1       71.4%
  1433                           ;SFR0                 0      0       0       1        0.0%
  1434                           ;BITSFR0              0      0       0       1        0.0%
  1435                           ;BITSFR1              0      0       0       2        0.0%
  1436                           ;SFR1                 0      0       0       2        0.0%
  1437                           ;ABS                  0      0      99       2        0.0%
  1438                           ;STACK                0      0       0       3        0.0%
  1439                           ;BITBANK0            50      0       0       4        0.0%
  1440                           ;SFR3                 0      0       0       4        0.0%
  1441                           ;BITSFR3              0      0       0       4        0.0%
  1442                           ;BANK0               50     24      40       5       80.0%
  1443                           ;BITSFR2              0      0       0       5        0.0%
  1444                           ;SFR2                 0      0       0       5        0.0%
  1445                           ;BITBANK1            50      0       0       6        0.0%
  1446                           ;BANK1               50     13      4F       7       98.8%
  1447                           ;BITBANK3            60      0       0       8        0.0%
  1448                           ;BANK3               60      0       0       9        0.0%
  1449                           ;BITBANK2            60      0       0      10        0.0%
  1450                           ;BANK2               60      0       0      11        0.0%
  1451                           ;DATA                 0      0      99      12        0.0%
  1452                           ;EEDATA             100      0       0    1000        0.0%
  1453                           
  1454                           	global	_main
  1455                           psect	maintext,local,class=CODE,delta=2
  1456                           global __pmaintext
  1457  0023                     __pmaintext:
  1458                           
  1459                           ; *************** function _main *****************
  1460                           ; Defined at:
  1461                           ;		line 60 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1462                           ; Parameters:    Size  Location     Type
  1463                           ;		None
  1464                           ; Auto vars:     Size  Location     Type
  1465                           ;		None
  1466                           ; Return value:  Size  Location     Type
  1467                           ;		None               void
  1468                           ; Registers used:
  1469                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
                                 p+3, pclath, cstack
  1470                           ; Tracked objects:
  1471                           ;		On entry : 17F/0
  1472                           ;		On exit  : 0/0
  1473                           ;		Unchanged: 0/0
  1474                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475                           ;      Locals:         0       0       0       0       0
  1476                           ;      Temp:     0
  1477                           ;      Total:    0
  1478                           ; This function calls:
  1479                           ;		_UART_Init
  1480                           ;		_send_config
  1481                           ;		_lcd_goto
  1482                           ;		_send_string
  1483                           ;		_Read_ADC
  1484                           ;		_itoa
  1485                           ;		_kirim_data
  1486                           ;		_tamp
  1487                           ;		_reset
  1488                           ; This function is called by:
  1489                           ;		Startup code after reset
  1490                           ; This function uses a non-reentrant model
  1491                           ; 
  1492                           psect	maintext
  1493                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1494                           	line	60
  1495                           	global	__size_of_main
  1496  00B1                     	__size_of_main	equ	__end_of_main-_main
  1497                           ;pic168xa.h: 19: volatile unsigned char INDF @ 0x00;
  1498                           ;pic168xa.h: 20: volatile unsigned char TMR0 @ 0x01;
  1499                           ;pic168xa.h: 21: volatile unsigned char PCL @ 0x02;
  1500                           ;pic168xa.h: 22: volatile unsigned char STATUS @ 0x03;
  1501                           ;pic168xa.h: 23: unsigned char FSR @ 0x04;
  1502                           ;pic168xa.h: 24: volatile unsigned char PORTA @ 0x05;
  1503                           ;pic168xa.h: 25: volatile unsigned char PORTB @ 0x06;
  1504                           ;pic168xa.h: 26: volatile unsigned char PORTC @ 0x07;
  1505                           ;pic168xa.h: 28: volatile unsigned char PORTD @ 0x08;
  1506                           ;pic168xa.h: 29: volatile unsigned char PORTE @ 0x09;
  1507                           	
  1508  0023                     _main:	
  1509                           	opt stack 7
  1510                           ; Regs used in _main: [allreg]
  1511                           	line	61
  1512                           	
  1513  0023                     l30001374:	
  1514                           ;MVC.c: 61: UART_Init(9600);
  1515  0023  3000               	movlw	0
  1516  0024  00BD               	movwf	(?_UART_Init+3)
  1517  0025  3000               	movlw	0
  1518  0026  00BC               	movwf	(?_UART_Init+2)
  1519  0027  3025               	movlw	025h
  1520  0028  00BB               	movwf	(?_UART_Init+1)
  1521  0029  3080               	movlw	080h
  1522  002A  00BA               	movwf	(?_UART_Init)
  1523                           
  1524  002B  120A  118A  21B0   	fcall	_UART_Init
              120A  118A         
  1525                           	
  1526  0030                     l30001375:	
  1527                           	line	64
  1528                           ;MVC.c: 64: TRISA = 0b00011111;
  1529  0030  301F               	movlw	(01Fh)
  1530  0031  1683               	bsf	status, 5	;RP0=1, select bank1
  1531  0032  1303               	bcf	status, 6	;RP1=0, select bank1
  1532  0033  0085               	movwf	(133)^080h	;volatile
  1533                           	
  1534  0034                     l30001376:	
  1535                           	line	65
  1536                           ;MVC.c: 65: TRISB = 0b00000001;
  1537  0034  3001               	movlw	(01h)
  1538  0035  0086               	movwf	(134)^080h	;volatile
  1539                           	
  1540  0036                     l30001377:	
  1541                           	line	66
  1542                           ;MVC.c: 66: TRISC = 0b10000000;
  1543  0036  3080               	movlw	(080h)
  1544  0037  0087               	movwf	(135)^080h	;volatile
  1545                           	
  1546  0038                     l30001378:	
  1547                           	line	67
  1548                           ;MVC.c: 67: TRISD = 0b00000000;
  1549  0038  1003               	clrc
  1550  0039  3000               	movlw	0
  1551  003A  1803               	btfsc	status,0
  1552  003B  3001               	movlw	1
  1553  003C  0088               	movwf	(136)^080h	;volatile
  1554                           	
  1555  003D                     l30001379:	
  1556                           	line	68
  1557                           ;MVC.c: 68: TRISE = 0b00000000;
  1558  003D  1003               	clrc
  1559  003E  3000               	movlw	0
  1560  003F  1803               	btfsc	status,0
  1561  0040  3001               	movlw	1
  1562  0041  0089               	movwf	(137)^080h	;volatile
  1563                           	
  1564  0042                     l30001380:	
  1565                           	line	70
  1566                           ;MVC.c: 70: PORTA = 0;
  1567  0042  1003               	clrc
  1568  0043  3000               	movlw	0
  1569  0044  1803               	btfsc	status,0
  1570  0045  3001               	movlw	1
  1571  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  1572  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  1573  0048  0085               	movwf	(5)	;volatile
  1574                           	
  1575  0049                     l30001381:	
  1576                           	line	71
  1577                           ;MVC.c: 71: PORTB = 0;
  1578  0049  1003               	clrc
  1579  004A  3000               	movlw	0
  1580  004B  1803               	btfsc	status,0
  1581  004C  3001               	movlw	1
  1582  004D  0086               	movwf	(6)	;volatile
  1583                           	
  1584  004E                     l30001382:	
  1585                           	line	72
  1586                           ;MVC.c: 72: PORTC = 0;
  1587  004E  1003               	clrc
  1588  004F  3000               	movlw	0
  1589  0050  1803               	btfsc	status,0
  1590  0051  3001               	movlw	1
  1591  0052  0087               	movwf	(7)	;volatile
  1592                           	
  1593  0053                     l30001383:	
  1594                           	line	73
  1595                           ;MVC.c: 73: PORTD = 0;
  1596  0053  1003               	clrc
  1597  0054  3000               	movlw	0
  1598  0055  1803               	btfsc	status,0
  1599  0056  3001               	movlw	1
  1600  0057  0088               	movwf	(8)	;volatile
  1601                           	
  1602  0058                     l30001384:	
  1603                           	line	74
  1604                           ;MVC.c: 74: PORTE = 0;
  1605  0058  1003               	clrc
  1606  0059  3000               	movlw	0
  1607  005A  1803               	btfsc	status,0
  1608  005B  3001               	movlw	1
  1609  005C  0089               	movwf	(9)	;volatile
  1610                           	
  1611  005D                     l30001385:	
  1612                           	line	76
  1613                           ;MVC.c: 76: INTEDG = 0;
  1614  005D  1683               	bsf	status, 5	;RP0=1, select bank1
  1615  005E  1303               	bcf	status, 6	;RP1=0, select bank1
  1616  005F  1301               	bcf	(1038/8)^080h,(1038)&7
  1617                           	
  1618  0060                     l30001386:	
  1619                           	line	77
  1620                           ;MVC.c: 77: GIE = 1;
  1621  0060  1283               	bcf	status, 5	;RP0=0, select bank0
  1622  0061  1303               	bcf	status, 6	;RP1=0, select bank0
  1623  0062  178B               	bsf	(95/8),(95)&7
  1624                           	
  1625  0063                     l30001387:	
  1626                           	line	78
  1627                           ;MVC.c: 78: INTE = 1;
  1628  0063  160B               	bsf	(92/8),(92)&7
  1629                           	
  1630  0064                     l30001388:	
  1631                           	line	79
  1632                           ;MVC.c: 79: INTF = 0;
  1633  0064  108B               	bcf	(89/8),(89)&7
  1634                           	
  1635  0065                     l30001389:	
  1636                           	line	81
  1637                           ;MVC.c: 81: RC0 = 1;
  1638  0065  1407               	bsf	(56/8),(56)&7
  1639                           	
  1640  0066                     l30001390:	
  1641                           	line	84
  1642                           ;MVC.c: 84: send_config(0b00000001);
  1643  0066  3001               	movlw	(01h)
  1644  0067  120A  158A  2587   	fcall	_send_config
              120A  118A         
  1645                           	
  1646  006C                     l30001391:	
  1647                           	line	85
  1648                           ;MVC.c: 85: send_config(0b00000010);
  1649  006C  3002               	movlw	(02h)
  1650  006D  120A  158A  2587   	fcall	_send_config
              120A  118A         
  1651                           	
  1652  0072                     l30001392:	
  1653                           	line	86
  1654                           ;MVC.c: 86: send_config(0b00000110);
  1655  0072  3006               	movlw	(06h)
  1656  0073  120A  158A  2587   	fcall	_send_config
              120A  118A         
  1657                           	
  1658  0078                     l30001393:	
  1659                           	line	87
  1660                           ;MVC.c: 87: send_config(0b00001100);
  1661  0078  300C               	movlw	(0Ch)
  1662  0079  120A  158A  2587   	fcall	_send_config
              120A  118A         
  1663                           	
  1664  007E                     l30001394:	
  1665                           	line	88
  1666                           ;MVC.c: 88: send_config(0b00111000);
  1667  007E  3038               	movlw	(038h)
  1668  007F  120A  158A  2587   	fcall	_send_config
              120A  118A         
  1669                           	
  1670  0084                     l30001395:	
  1671                           	line	91
  1672                           ;MVC.c: 91: ADCON1 = 0b10000000;
  1673  0084  3080               	movlw	(080h)
  1674  0085  1683               	bsf	status, 5	;RP0=1, select bank1
  1675  0086  1303               	bcf	status, 6	;RP1=0, select bank1
  1676  0087  009F               	movwf	(159)^080h	;volatile
  1677                           	
  1678  0088                     l30001396:	
  1679                           	line	92
  1680                           ;MVC.c: 92: ADCON0 = 0b00000001;
  1681  0088  3001               	movlw	(01h)
  1682  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  1683  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  1684  008B  009F               	movwf	(31)	;volatile
  1685                           	
  1686  008C                     l30001397:	
  1687                           	line	94
  1688                           ;MVC.c: 94: lcd_goto(0);
  1689  008C  3000               	movlw	(0)
  1690  008D  120A  158A  23F2   	fcall	_lcd_goto
              120A  118A         
  1691                           	
  1692  0092                     l30001398:	
  1693                           	line	95
  1694                           ;MVC.c: 95: send_string("    RND DAQ    ");
  1695  0092  3001               	movlw	((STR_1-__stringbase))&0ffh
  1696  0093  120A  158A  21A3   	fcall	_send_string
              120A  118A         
  1697                           	
  1698  0098                     l30001399:	
  1699                           	line	101
  1700                           ;MVC.c: 99: {
  1701                           ;MVC.c: 101: Read_ADC();
  1702  0098  120A  118A  22A4   	fcall	_Read_ADC
              120A  118A         
  1703                           	
  1704  009D                     l30001400:	
  1705                           	line	102
  1706                           ;MVC.c: 102: itoa(kata,A,10);
  1707  009D  0876               	movf	(_A+1),w
  1708  009E  1283               	bcf	status, 5	;RP0=0, select bank0
  1709  009F  1303               	bcf	status, 6	;RP1=0, select bank0
  1710  00A0  01B2               	clrf	(?_itoa+1)
  1711  00A1  07B2               	addwf	(?_itoa+1)
  1712  00A2  0875               	movf	(_A),w
  1713  00A3  01B1               	clrf	(?_itoa)
  1714  00A4  07B1               	addwf	(?_itoa)
  1715                           
  1716  00A5  300A               	movlw	low(0Ah)
  1717  00A6  00B3               	movwf	0+(?_itoa)+02h
  1718  00A7  3000               	movlw	high(0Ah)
  1719  00A8  00B4               	movwf	(0+(?_itoa)+02h)+1
  1720  00A9  30BC               	movlw	((_kata))&0ffh
  1721  00AA  120A  158A  2149   	fcall	_itoa
              120A  118A         
  1722                           	
  1723  00AF                     l30001401:	
  1724                           	line	103
  1725                           ;MVC.c: 103: itoa(kata1,B,10);
  1726  00AF  1283               	bcf	status, 5	;RP0=0, select bank0
  1727  00B0  1303               	bcf	status, 6	;RP1=0, select bank0
  1728  00B1  084D               	movf	(_B+1),w
  1729  00B2  01B2               	clrf	(?_itoa+1)
  1730  00B3  07B2               	addwf	(?_itoa+1)
  1731  00B4  084C               	movf	(_B),w
  1732  00B5  01B1               	clrf	(?_itoa)
  1733  00B6  07B1               	addwf	(?_itoa)
  1734                           
  1735  00B7  300A               	movlw	low(0Ah)
  1736  00B8  00B3               	movwf	0+(?_itoa)+02h
  1737  00B9  3000               	movlw	high(0Ah)
  1738  00BA  00B4               	movwf	(0+(?_itoa)+02h)+1
  1739  00BB  30CC               	movlw	((_kata1))&0ffh
  1740  00BC  120A  158A  2149   	fcall	_itoa
              120A  118A         
  1741                           	
  1742  00C1                     l30001402:	
  1743                           	line	104
  1744                           ;MVC.c: 104: kirim_data();
  1745  00C1  120A  158A  227C   	fcall	_kirim_data
              120A  118A         
  1746                           	
  1747  00C6                     l30001403:	
  1748                           	line	105
  1749                           ;MVC.c: 105: tamp();
  1750  00C6  120A  158A  22B5   	fcall	_tamp
              120A  118A         
  1751                           	
  1752  00CB                     l30001404:	
  1753                           	line	106
  1754                           ;MVC.c: 106: reset();
  1755  00CB  120A  118A  2008   	fcall	_reset
              120A  118A         
  1756  00D0  2898               	goto	l30001399
  1757                           	global	start
  1758  00D1  120A  118A  2800   	ljmp	start
  1759                           	opt stack 0
  1760                           GLOBAL	__end_of_main
  1761  00D4                     	__end_of_main:
  1762                           ; =============== function _main ends ============
  1763                           
  1764                           psect	maintext
  1765                           	line	126
  1766                           	signat	_main,88
  1767                           	global	_kirim_data
  1768                           psect	text204,local,class=CODE,delta=2
  1769                           global __ptext204
  1770  0A7C                     __ptext204:
  1771                           
  1772                           ; *************** function _kirim_data *****************
  1773                           ; Defined at:
  1774                           ;		line 147 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1775                           ; Parameters:    Size  Location     Type
  1776                           ;		None
  1777                           ; Auto vars:     Size  Location     Type
  1778                           ;		None
  1779                           ; Return value:  Size  Location     Type
  1780                           ;		None               void
  1781                           ; Registers used:
  1782                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1783                           ; Tracked objects:
  1784                           ;		On entry : 0/0
  1785                           ;		On exit  : 0/0
  1786                           ;		Unchanged: 0/0
  1787                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788                           ;      Locals:         0       0       0       0       0
  1789                           ;      Temp:     0
  1790                           ;      Total:    0
  1791                           ; This function calls:
  1792                           ;		_UART_Write_Text
  1793                           ;		_UART_Write
  1794                           ; This function is called by:
  1795                           ;		_main
  1796                           ; This function uses a non-reentrant model
  1797                           ; 
  1798                           psect	text204
  1799                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1800                           	line	147
  1801                           	global	__size_of_kirim_data
  1802  0039                     	__size_of_kirim_data	equ	__end_of_kirim_data-_kirim_data
  1803                           ;MVC.c: 146: void kirim_data()
  1804                           ;MVC.c: 147: {
  1805                           	
  1806  0A7C                     _kirim_data:	
  1807                           	opt stack 6
  1808                           ; Regs used in _kirim_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1809                           	line	150
  1810                           	
  1811  0A7C                     l30001612:	
  1812                           ;MVC.c: 150: UART_Write_Text("#1 SPOS:");
  1813  0A7C  3033               	movlw	((STR_4-__stringbase))&0ffh
  1814  0A7D  1283               	bcf	status, 5	;RP0=0, select bank0
  1815  0A7E  1303               	bcf	status, 6	;RP1=0, select bank0
  1816  0A7F  00A2               	movwf	(?_UART_Write_Text)
  1817  0A80  3000               	movlw	00h
  1818  0A81  00A3               	movwf	(?_UART_Write_Text+1)
  1819  0A82  120A  158A  220B   	fcall	_UART_Write_Text
              120A  158A         
  1820                           	line	151
  1821                           ;MVC.c: 151: UART_Write_Text(kata1);
  1822  0A87  30CC               	movlw	((_kata1)&0ffh)
  1823  0A88  1283               	bcf	status, 5	;RP0=0, select bank0
  1824  0A89  1303               	bcf	status, 6	;RP1=0, select bank0
  1825  0A8A  00A2               	movwf	(?_UART_Write_Text)
  1826  0A8B  3080               	movlw	80h|(0x1/2)
  1827  0A8C  00A3               	movwf	(?_UART_Write_Text+1)
  1828  0A8D  120A  158A  220B   	fcall	_UART_Write_Text
              120A  158A         
  1829                           	
  1830  0A92                     l30001613:	
  1831                           	line	152
  1832                           ;MVC.c: 152: UART_Write(',');
  1833  0A92  302C               	movlw	(02Ch)
  1834  0A93  120A  158A  20EC   	fcall	_UART_Write
              120A  158A         
  1835                           	
  1836  0A98                     l30001614:	
  1837                           	line	154
  1838                           ;MVC.c: 154: UART_Write_Text("SV:");
  1839  0A98  3046               	movlw	((STR_5-__stringbase))&0ffh
  1840  0A99  1283               	bcf	status, 5	;RP0=0, select bank0
  1841  0A9A  1303               	bcf	status, 6	;RP1=0, select bank0
  1842  0A9B  00A2               	movwf	(?_UART_Write_Text)
  1843  0A9C  3000               	movlw	00h
  1844  0A9D  00A3               	movwf	(?_UART_Write_Text+1)
  1845  0A9E  120A  158A  220B   	fcall	_UART_Write_Text
              120A  158A         
  1846                           	
  1847  0AA3                     l30001615:	
  1848                           	line	155
  1849                           ;MVC.c: 155: UART_Write_Text(kata);
  1850  0AA3  30BC               	movlw	((_kata)&0ffh)
  1851  0AA4  1283               	bcf	status, 5	;RP0=0, select bank0
  1852  0AA5  1303               	bcf	status, 6	;RP1=0, select bank0
  1853  0AA6  00A2               	movwf	(?_UART_Write_Text)
  1854  0AA7  3080               	movlw	80h|(0x1/2)
  1855  0AA8  00A3               	movwf	(?_UART_Write_Text+1)
  1856  0AA9  120A  158A  220B   	fcall	_UART_Write_Text
              120A  158A         
  1857                           	
  1858  0AAE                     l30001616:	
  1859                           	line	156
  1860                           ;MVC.c: 156: UART_Write(';');
  1861  0AAE  303B               	movlw	(03Bh)
  1862  0AAF  120A  158A  20EC   	fcall	_UART_Write
              120A  158A         
  1863                           	
  1864  0AB4                     l17:	
  1865  0AB4  0008               	return
  1866                           	opt stack 0
  1867                           GLOBAL	__end_of_kirim_data
  1868  0AB5                     	__end_of_kirim_data:
  1869                           ; =============== function _kirim_data ends ============
  1870                           
  1871                           psect	text205,local,class=CODE,delta=2
  1872                           global __ptext205
  1873  0AB5                     __ptext205:
  1874                           	line	157
  1875                           	signat	_kirim_data,88
  1876                           	global	_tamp
  1877                           
  1878                           ; *************** function _tamp *****************
  1879                           ; Defined at:
  1880                           ;		line 173 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1881                           ; Parameters:    Size  Location     Type
  1882                           ;		None
  1883                           ; Auto vars:     Size  Location     Type
  1884                           ;		None
  1885                           ; Return value:  Size  Location     Type
  1886                           ;		None               void
  1887                           ; Registers used:
  1888                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1889                           ; Tracked objects:
  1890                           ;		On entry : 0/0
  1891                           ;		On exit  : 0/0
  1892                           ;		Unchanged: 0/0
  1893                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894                           ;      Locals:         0       1       0       0       0
  1895                           ;      Temp:     1
  1896                           ;      Total:    1
  1897                           ; This function calls:
  1898                           ;		_lcd_goto
  1899                           ;		_send_string
  1900                           ;		_send_dec
  1901                           ; This function is called by:
  1902                           ;		_main
  1903                           ; This function uses a non-reentrant model
  1904                           ; 
  1905                           psect	text205
  1906                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  1907                           	line	173
  1908                           	global	__size_of_tamp
  1909  004B                     	__size_of_tamp	equ	__end_of_tamp-_tamp
  1910                           ;MVC.c: 172: void tamp()
  1911                           ;MVC.c: 173: {
  1912                           	
  1913  0AB5                     _tamp:	
  1914                           	opt stack 6
  1915                           ; Regs used in _tamp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1916                           	line	174
  1917                           	
  1918  0AB5                     l30001435:	
  1919                           ;MVC.c: 174: lcd_goto(20);
  1920  0AB5  3014               	movlw	(014h)
  1921  0AB6  120A  158A  23F2   	fcall	_lcd_goto
              120A  158A         
  1922                           	line	175
  1923                           ;MVC.c: 175: send_string("Spd:");
  1924  0ABB  3041               	movlw	((STR_7-__stringbase))&0ffh
  1925  0ABC  120A  158A  21A3   	fcall	_send_string
              120A  158A         
  1926                           	line	176
  1927                           ;MVC.c: 176: lcd_goto(24);
  1928  0AC1  3018               	movlw	(018h)
  1929  0AC2  120A  158A  23F2   	fcall	_lcd_goto
              120A  158A         
  1930                           	line	177
  1931                           ;MVC.c: 177: send_dec(A,3);
  1932  0AC7  0878               	movf	(_A+3),w
  1933  0AC8  1283               	bcf	status, 5	;RP0=0, select bank0
  1934  0AC9  1303               	bcf	status, 6	;RP1=0, select bank0
  1935  0ACA  00B0               	movwf	(?_send_dec+3)
  1936  0ACB  0877               	movf	(_A+2),w
  1937  0ACC  00AF               	movwf	(?_send_dec+2)
  1938  0ACD  0876               	movf	(_A+1),w
  1939  0ACE  00AE               	movwf	(?_send_dec+1)
  1940  0ACF  0875               	movf	(_A),w
  1941  0AD0  00AD               	movwf	(?_send_dec)
  1942                           
  1943  0AD1  3003               	movlw	(03h)
  1944  0AD2  00B2               	movwf	(??_tamp+0+0)
  1945  0AD3  0832               	movf	(??_tamp+0+0),w
  1946  0AD4  00B1               	movwf	0+(?_send_dec)+04h
  1947  0AD5  120A  118A  2553   	fcall	_send_dec
              120A  158A         
  1948                           	line	179
  1949                           ;MVC.c: 179: lcd_goto(28);
  1950  0ADA  301C               	movlw	(01Ch)
  1951  0ADB  120A  158A  23F2   	fcall	_lcd_goto
              120A  158A         
  1952                           	line	180
  1953                           ;MVC.c: 180: send_string("Pos:");
  1954  0AE0  303C               	movlw	((STR_8-__stringbase))&0ffh
  1955  0AE1  120A  158A  21A3   	fcall	_send_string
              120A  158A         
  1956                           	line	181
  1957                           ;MVC.c: 181: lcd_goto(32);
  1958  0AE6  3020               	movlw	(020h)
  1959  0AE7  120A  158A  23F2   	fcall	_lcd_goto
              120A  158A         
  1960                           	line	182
  1961                           ;MVC.c: 182: send_dec(B,4);
  1962  0AEC  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  0AED  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  0AEE  084F               	movf	(_B+3),w
  1965  0AEF  00B0               	movwf	(?_send_dec+3)
  1966  0AF0  084E               	movf	(_B+2),w
  1967  0AF1  00AF               	movwf	(?_send_dec+2)
  1968  0AF2  084D               	movf	(_B+1),w
  1969  0AF3  00AE               	movwf	(?_send_dec+1)
  1970  0AF4  084C               	movf	(_B),w
  1971  0AF5  00AD               	movwf	(?_send_dec)
  1972                           
  1973  0AF6  3004               	movlw	(04h)
  1974  0AF7  00B2               	movwf	(??_tamp+0+0)
  1975  0AF8  0832               	movf	(??_tamp+0+0),w
  1976  0AF9  00B1               	movwf	0+(?_send_dec)+04h
  1977  0AFA  120A  118A  2553   	fcall	_send_dec
              120A  158A         
  1978                           	
  1979  0AFF                     l23:	
  1980  0AFF  0008               	return
  1981                           	opt stack 0
  1982                           GLOBAL	__end_of_tamp
  1983  0B00                     	__end_of_tamp:
  1984                           ; =============== function _tamp ends ============
  1985                           
  1986                           psect	text206,local,class=CODE,delta=2
  1987                           global __ptext206
  1988  0949                     __ptext206:
  1989                           	line	184
  1990                           	signat	_tamp,88
  1991                           	global	_itoa
  1992                           
  1993                           ; *************** function _itoa *****************
  1994                           ; Defined at:
  1995                           ;		line 5 in file "../../common/itoa.c"
  1996                           ; Parameters:    Size  Location     Type
  1997                           ;  buf             1    wreg     PTR unsigned char 
  1998                           ;		 -> kata(16), kata1(16), 
  1999                           ;  val             2   17[BANK0 ] int 
  2000                           ;  base            2   19[BANK0 ] int 
  2001                           ; Auto vars:     Size  Location     Type
  2002                           ;  buf             1   16[BANK0 ] PTR unsigned char 
  2003                           ;		 -> kata(16), kata1(16), 
  2004                           ;  cp              1    0        PTR unsigned char 
  2005                           ;		 -> kata(16), kata1(16), 
  2006                           ; Return value:  Size  Location     Type
  2007                           ;                  1    wreg      PTR unsigned char 
  2008                           ; Registers used:
  2009                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2010                           ; Tracked objects:
  2011                           ;		On entry : 0/0
  2012                           ;		On exit  : 0/0
  2013                           ;		Unchanged: 0/0
  2014                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015                           ;      Locals:         1       6       0       0       0
  2016                           ;      Temp:     1
  2017                           ;      Total:    7
  2018                           ; This function calls:
  2019                           ;		_utoa
  2020                           ; This function is called by:
  2021                           ;		_main
  2022                           ; This function uses a non-reentrant model
  2023                           ; 
  2024                           psect	text206
  2025                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  2026                           	line	5
  2027                           	global	__size_of_itoa
  2028  002A                     	__size_of_itoa	equ	__end_of_itoa-_itoa
  2029                           	
  2030  0949                     _itoa:	
  2031                           	opt stack 6
  2032                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2033                           ;itoa@buf stored from wreg
  2034  0949  1283               	bcf	status, 5	;RP0=0, select bank0
  2035  094A  1303               	bcf	status, 6	;RP1=0, select bank0
  2036  094B  00B0               	movwf	(itoa@buf)
  2037                           	
  2038  094C                     l30001540:	
  2039                           	
  2040  094C                     l30001541:	
  2041                           	line	8
  2042  094C  1FB2               	btfss	(itoa@val+1),7
  2043  094D  294F               	goto	u3851
  2044  094E  2950               	goto	u3850
  2045  094F                     u3851:
  2046  094F  2960               	goto	l30001545
  2047  0950                     u3850:
  2048                           	
  2049  0950                     l30001542:	
  2050                           	line	9
  2051  0950  302D               	movlw	(02Dh)
  2052  0951  00F3               	movwf	(??_itoa+0+0)
  2053  0952  0830               	movf	(itoa@buf),w
  2054  0953  0084               	movwf	fsr0
  2055  0954  0873               	movf	(??_itoa+0+0),w
  2056  0955  1383               	bcf	status, 7	;select IRP bank0
  2057  0956  0080               	movwf	indf
  2058                           	
  2059  0957                     l30001543:	
  2060  0957  3001               	movlw	(01h)
  2061  0958  00F3               	movwf	(??_itoa+0+0)
  2062  0959  0873               	movf	(??_itoa+0+0),w
  2063  095A  07B0               	addwf	(itoa@buf),f
  2064                           	
  2065  095B                     l30001544:	
  2066                           	line	10
  2067  095B  09B1               	comf	(itoa@val),f
  2068  095C  09B2               	comf	(itoa@val+1),f
  2069  095D  0AB1               	incf	(itoa@val),f
  2070  095E  1903               	skipnz
  2071  095F  0AB2               	incf	(itoa@val+1),f
  2072                           	
  2073  0960                     l30001545:	
  2074                           	line	12
  2075  0960  0832               	movf	(itoa@val+1),w
  2076  0961  01AC               	clrf	(?_utoa+1)
  2077  0962  07AC               	addwf	(?_utoa+1)
  2078  0963  0831               	movf	(itoa@val),w
  2079  0964  01AB               	clrf	(?_utoa)
  2080  0965  07AB               	addwf	(?_utoa)
  2081                           
  2082  0966  0834               	movf	(itoa@base+1),w
  2083  0967  01AE               	clrf	1+(?_utoa)+02h
  2084  0968  07AE               	addwf	1+(?_utoa)+02h
  2085  0969  0833               	movf	(itoa@base),w
  2086  096A  01AD               	clrf	0+(?_utoa)+02h
  2087  096B  07AD               	addwf	0+(?_utoa)+02h
  2088                           
  2089  096C  0830               	movf	(itoa@buf),w
  2090  096D  120A  158A  2504   	fcall	_utoa
              120A  158A         
  2091                           	
  2092  0972                     l142:	
  2093  0972  0008               	return
  2094                           	opt stack 0
  2095                           GLOBAL	__end_of_itoa
  2096  0973                     	__end_of_itoa:
  2097                           ; =============== function _itoa ends ============
  2098                           
  2099                           psect	text207,local,class=CODE,delta=2
  2100                           global __ptext207
  2101  01B0                     __ptext207:
  2102                           	line	14
  2103                           	signat	_itoa,12409
  2104                           	global	_UART_Init
  2105                           
  2106                           ; *************** function _UART_Init *****************
  2107                           ; Defined at:
  2108                           ;		line 471 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2109                           ; Parameters:    Size  Location     Type
  2110                           ;  baudrate        4   26[BANK0 ] const long 
  2111                           ; Auto vars:     Size  Location     Type
  2112                           ;  x               2    1[COMMON] unsigned int 
  2113                           ; Return value:  Size  Location     Type
  2114                           ;                  1    wreg      unsigned char 
  2115                           ; Registers used:
  2116                           ;		wreg, status,2, status,0, pclath, cstack
  2117                           ; Tracked objects:
  2118                           ;		On entry : 0/0
  2119                           ;		On exit  : 0/0
  2120                           ;		Unchanged: 0/0
  2121                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122                           ;      Locals:         2      16       0       0       0
  2123                           ;      Temp:    12
  2124                           ;      Total:   18
  2125                           ; This function calls:
  2126                           ;		___aldiv
  2127                           ; This function is called by:
  2128                           ;		_main
  2129                           ; This function uses a non-reentrant model
  2130                           ; 
  2131                           psect	text207
  2132                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2133                           	line	471
  2134                           	global	__size_of_UART_Init
  2135  00F4                     	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  2136                           ;MVC.c: 470: char UART_Init(const long int baudrate)
  2137                           ;MVC.c: 471: {
  2138                           	
  2139  01B0                     _UART_Init:	
  2140                           	opt stack 6
  2141                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2142                           	line	473
  2143                           	
  2144  01B0                     l30001058:	
  2145                           ;MVC.c: 472: unsigned int x;
  2146                           ;MVC.c: 473: x = (11059200 - baudrate*64)/(baudrate*64);
  2147  01B0  3000               	movlw	low(0A8C000h)
  2148  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
  2149  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
  2150  01B3  00AE               	movwf	(??_UART_Init+0+0)
  2151  01B4  30C0               	movlw	high(0A8C000h)
  2152  01B5  00AF               	movwf	(??_UART_Init+0+0+1)
  2153  01B6  30A8               	movlw	low highword(0A8C000h)
  2154  01B7  00B0               	movwf	(??_UART_Init+0+0+2)
  2155  01B8  3000               	movlw	high highword(0A8C000h)
  2156  01B9  00B1               	movwf	(??_UART_Init+0+0+3)
  2157  01BA  083A               	movf	(UART_Init@baudrate),w
  2158  01BB  00B2               	movwf	(??_UART_Init+4+0)
  2159  01BC  083B               	movf	(UART_Init@baudrate+1),w
  2160  01BD  00B3               	movwf	(??_UART_Init+4+0+1)
  2161  01BE  083C               	movf	(UART_Init@baudrate+2),w
  2162  01BF  00B4               	movwf	(??_UART_Init+4+0+2)
  2163  01C0  083D               	movf	(UART_Init@baudrate+3),w
  2164  01C1  00B5               	movwf	(??_UART_Init+4+0+3)
  2165  01C2  3006               	movlw	06h
  2166  01C3                     u1995:
  2167  01C3  1003               	clrc
  2168  01C4  0DB2               	rlf	(??_UART_Init+4+0),f
  2169  01C5  0DB3               	rlf	(??_UART_Init+4+1),f
  2170  01C6  0DB4               	rlf	(??_UART_Init+4+2),f
  2171  01C7  0DB5               	rlf	(??_UART_Init+4+3),f
  2172  01C8                     u1990:
  2173  01C8  3EFF               	addlw	-1
  2174  01C9  1D03               	skipz
  2175  01CA  29C3               	goto	u1995
  2176  01CB  09B2               	comf	(??_UART_Init+4+0),f
  2177  01CC  09B3               	comf	(??_UART_Init+4+1),f
  2178  01CD  09B4               	comf	(??_UART_Init+4+2),f
  2179  01CE  09B5               	comf	(??_UART_Init+4+3),f
  2180  01CF  0AB2               	incf	(??_UART_Init+4+0),f
  2181  01D0  1903               	skipnz
  2182  01D1  0AB3               	incf	(??_UART_Init+4+1),f
  2183  01D2  1903               	skipnz
  2184  01D3  0AB4               	incf	(??_UART_Init+4+2),f
  2185  01D4  1903               	skipnz
  2186  01D5  0AB5               	incf	(??_UART_Init+4+3),f
  2187  01D6  0832               	movf	0+(??_UART_Init+4+0),w
  2188  01D7  07AE               	addwf	(??_UART_Init+0+0),f
  2189  01D8  0833               	movf	1+(??_UART_Init+4+0),w
  2190  01D9  1803               	skipnc
  2191  01DA  0F33               	incfsz	1+(??_UART_Init+4+0),w
  2192  01DB  29DD               	goto	u2000
  2193  01DC  29DE               	goto	u2001
  2194  01DD                     u2000:
  2195  01DD  07AF               	addwf	(??_UART_Init+0+1),f
  2196  01DE                     u2001:
  2197  01DE  0834               	movf	2+(??_UART_Init+4+0),w
  2198  01DF  1803               	skipnc
  2199  01E0  0F34               	incfsz	2+(??_UART_Init+4+0),w
  2200  01E1  29E3               	goto	u2002
  2201  01E2  29E4               	goto	u2003
  2202  01E3                     u2002:
  2203  01E3  07B0               	addwf	(??_UART_Init+0+2),f
  2204  01E4                     u2003:
  2205  01E4  0835               	movf	3+(??_UART_Init+4+0),w
  2206  01E5  1803               	skipnc
  2207  01E6  0A35               	incf	3+(??_UART_Init+4+0),w
  2208  01E7  07B1               	addwf	(??_UART_Init+0+3),f
  2209  01E8  0831               	movf	3+(??_UART_Init+0+0),w
  2210  01E9  00A9               	movwf	(?___aldiv+3)
  2211  01EA  0830               	movf	2+(??_UART_Init+0+0),w
  2212  01EB  00A8               	movwf	(?___aldiv+2)
  2213  01EC  082F               	movf	1+(??_UART_Init+0+0),w
  2214  01ED  00A7               	movwf	(?___aldiv+1)
  2215  01EE  082E               	movf	0+(??_UART_Init+0+0),w
  2216  01EF  00A6               	movwf	(?___aldiv)
  2217                           
  2218  01F0  083A               	movf	(UART_Init@baudrate),w
  2219  01F1  00B6               	movwf	(??_UART_Init+8+0)
  2220  01F2  083B               	movf	(UART_Init@baudrate+1),w
  2221  01F3  00B7               	movwf	(??_UART_Init+8+0+1)
  2222  01F4  083C               	movf	(UART_Init@baudrate+2),w
  2223  01F5  00B8               	movwf	(??_UART_Init+8+0+2)
  2224  01F6  083D               	movf	(UART_Init@baudrate+3),w
  2225  01F7  00B9               	movwf	(??_UART_Init+8+0+3)
  2226  01F8  3006               	movlw	06h
  2227  01F9                     u2015:
  2228  01F9  1003               	clrc
  2229  01FA  0DB6               	rlf	(??_UART_Init+8+0),f
  2230  01FB  0DB7               	rlf	(??_UART_Init+8+1),f
  2231  01FC  0DB8               	rlf	(??_UART_Init+8+2),f
  2232  01FD  0DB9               	rlf	(??_UART_Init+8+3),f
  2233  01FE                     u2010:
  2234  01FE  3EFF               	addlw	-1
  2235  01FF  1D03               	skipz
  2236  0200  29F9               	goto	u2015
  2237  0201  0839               	movf	3+(??_UART_Init+8+0),w
  2238  0202  00AD               	movwf	3+(?___aldiv)+04h
  2239  0203  0838               	movf	2+(??_UART_Init+8+0),w
  2240  0204  00AC               	movwf	2+(?___aldiv)+04h
  2241  0205  0837               	movf	1+(??_UART_Init+8+0),w
  2242  0206  00AB               	movwf	1+(?___aldiv)+04h
  2243  0207  0836               	movf	0+(??_UART_Init+8+0),w
  2244  0208  00AA               	movwf	0+(?___aldiv)+04h
  2245                           
  2246  0209  120A  158A  26B3   	fcall	___aldiv
              120A  118A         
  2247  020E  1383               	bcf	status, 7	;select IRP bank0
  2248  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  2249  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  2250  0211  0827               	movf	(1+(?___aldiv)),w
  2251  0212  01F2               	clrf	(UART_Init@x+1)
  2252  0213  07F2               	addwf	(UART_Init@x+1)
  2253  0214  0826               	movf	(0+(?___aldiv)),w
  2254  0215  01F1               	clrf	(UART_Init@x)
  2255  0216  07F1               	addwf	(UART_Init@x)
  2256                           
  2257                           	
  2258  0217                     l30001059:	
  2259                           	line	474
  2260                           ;MVC.c: 474: if(x>255)
  2261  0217  3001               	movlw	high(0100h)
  2262  0218  0272               	subwf	(UART_Init@x+1),w
  2263  0219  3000               	movlw	low(0100h)
  2264  021A  1903               	skipnz
  2265  021B  0271               	subwf	(UART_Init@x),w
  2266  021C  1C03               	skipc
  2267  021D  2A1F               	goto	u2021
  2268  021E  2A20               	goto	u2020
  2269  021F                     u2021:
  2270  021F  2A88               	goto	l30001062
  2271  0220                     u2020:
  2272                           	
  2273  0220                     l30001060:	
  2274                           	line	476
  2275                           ;MVC.c: 475: {
  2276                           ;MVC.c: 476: x = (11059200 - baudrate*16)/(baudrate*16);
  2277  0220  3000               	movlw	low(0A8C000h)
  2278  0221  00AE               	movwf	(??_UART_Init+0+0)
  2279  0222  30C0               	movlw	high(0A8C000h)
  2280  0223  00AF               	movwf	(??_UART_Init+0+0+1)
  2281  0224  30A8               	movlw	low highword(0A8C000h)
  2282  0225  00B0               	movwf	(??_UART_Init+0+0+2)
  2283  0226  3000               	movlw	high highword(0A8C000h)
  2284  0227  00B1               	movwf	(??_UART_Init+0+0+3)
  2285  0228  083A               	movf	(UART_Init@baudrate),w
  2286  0229  00B2               	movwf	(??_UART_Init+4+0)
  2287  022A  083B               	movf	(UART_Init@baudrate+1),w
  2288  022B  00B3               	movwf	(??_UART_Init+4+0+1)
  2289  022C  083C               	movf	(UART_Init@baudrate+2),w
  2290  022D  00B4               	movwf	(??_UART_Init+4+0+2)
  2291  022E  083D               	movf	(UART_Init@baudrate+3),w
  2292  022F  00B5               	movwf	(??_UART_Init+4+0+3)
  2293  0230  3004               	movlw	04h
  2294  0231                     u2035:
  2295  0231  1003               	clrc
  2296  0232  0DB2               	rlf	(??_UART_Init+4+0),f
  2297  0233  0DB3               	rlf	(??_UART_Init+4+1),f
  2298  0234  0DB4               	rlf	(??_UART_Init+4+2),f
  2299  0235  0DB5               	rlf	(??_UART_Init+4+3),f
  2300  0236                     u2030:
  2301  0236  3EFF               	addlw	-1
  2302  0237  1D03               	skipz
  2303  0238  2A31               	goto	u2035
  2304  0239  09B2               	comf	(??_UART_Init+4+0),f
  2305  023A  09B3               	comf	(??_UART_Init+4+1),f
  2306  023B  09B4               	comf	(??_UART_Init+4+2),f
  2307  023C  09B5               	comf	(??_UART_Init+4+3),f
  2308  023D  0AB2               	incf	(??_UART_Init+4+0),f
  2309  023E  1903               	skipnz
  2310  023F  0AB3               	incf	(??_UART_Init+4+1),f
  2311  0240  1903               	skipnz
  2312  0241  0AB4               	incf	(??_UART_Init+4+2),f
  2313  0242  1903               	skipnz
  2314  0243  0AB5               	incf	(??_UART_Init+4+3),f
  2315  0244  0832               	movf	0+(??_UART_Init+4+0),w
  2316  0245  07AE               	addwf	(??_UART_Init+0+0),f
  2317  0246  0833               	movf	1+(??_UART_Init+4+0),w
  2318  0247  1803               	skipnc
  2319  0248  0F33               	incfsz	1+(??_UART_Init+4+0),w
  2320  0249  2A4B               	goto	u2040
  2321  024A  2A4C               	goto	u2041
  2322  024B                     u2040:
  2323  024B  07AF               	addwf	(??_UART_Init+0+1),f
  2324  024C                     u2041:
  2325  024C  0834               	movf	2+(??_UART_Init+4+0),w
  2326  024D  1803               	skipnc
  2327  024E  0F34               	incfsz	2+(??_UART_Init+4+0),w
  2328  024F  2A51               	goto	u2042
  2329  0250  2A52               	goto	u2043
  2330  0251                     u2042:
  2331  0251  07B0               	addwf	(??_UART_Init+0+2),f
  2332  0252                     u2043:
  2333  0252  0835               	movf	3+(??_UART_Init+4+0),w
  2334  0253  1803               	skipnc
  2335  0254  0A35               	incf	3+(??_UART_Init+4+0),w
  2336  0255  07B1               	addwf	(??_UART_Init+0+3),f
  2337  0256  0831               	movf	3+(??_UART_Init+0+0),w
  2338  0257  00A9               	movwf	(?___aldiv+3)
  2339  0258  0830               	movf	2+(??_UART_Init+0+0),w
  2340  0259  00A8               	movwf	(?___aldiv+2)
  2341  025A  082F               	movf	1+(??_UART_Init+0+0),w
  2342  025B  00A7               	movwf	(?___aldiv+1)
  2343  025C  082E               	movf	0+(??_UART_Init+0+0),w
  2344  025D  00A6               	movwf	(?___aldiv)
  2345                           
  2346  025E  083A               	movf	(UART_Init@baudrate),w
  2347  025F  00B6               	movwf	(??_UART_Init+8+0)
  2348  0260  083B               	movf	(UART_Init@baudrate+1),w
  2349  0261  00B7               	movwf	(??_UART_Init+8+0+1)
  2350  0262  083C               	movf	(UART_Init@baudrate+2),w
  2351  0263  00B8               	movwf	(??_UART_Init+8+0+2)
  2352  0264  083D               	movf	(UART_Init@baudrate+3),w
  2353  0265  00B9               	movwf	(??_UART_Init+8+0+3)
  2354  0266  3004               	movlw	04h
  2355  0267                     u2055:
  2356  0267  1003               	clrc
  2357  0268  0DB6               	rlf	(??_UART_Init+8+0),f
  2358  0269  0DB7               	rlf	(??_UART_Init+8+1),f
  2359  026A  0DB8               	rlf	(??_UART_Init+8+2),f
  2360  026B  0DB9               	rlf	(??_UART_Init+8+3),f
  2361  026C                     u2050:
  2362  026C  3EFF               	addlw	-1
  2363  026D  1D03               	skipz
  2364  026E  2A67               	goto	u2055
  2365  026F  0839               	movf	3+(??_UART_Init+8+0),w
  2366  0270  00AD               	movwf	3+(?___aldiv)+04h
  2367  0271  0838               	movf	2+(??_UART_Init+8+0),w
  2368  0272  00AC               	movwf	2+(?___aldiv)+04h
  2369  0273  0837               	movf	1+(??_UART_Init+8+0),w
  2370  0274  00AB               	movwf	1+(?___aldiv)+04h
  2371  0275  0836               	movf	0+(??_UART_Init+8+0),w
  2372  0276  00AA               	movwf	0+(?___aldiv)+04h
  2373                           
  2374  0277  120A  158A  26B3   	fcall	___aldiv
              120A  118A         
  2375  027C  1383               	bcf	status, 7	;select IRP bank0
  2376  027D  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  027E  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  027F  0827               	movf	(1+(?___aldiv)),w
  2379  0280  01F2               	clrf	(UART_Init@x+1)
  2380  0281  07F2               	addwf	(UART_Init@x+1)
  2381  0282  0826               	movf	(0+(?___aldiv)),w
  2382  0283  01F1               	clrf	(UART_Init@x)
  2383  0284  07F1               	addwf	(UART_Init@x)
  2384                           
  2385                           	
  2386  0285                     l30001061:	
  2387                           	line	477
  2388                           ;MVC.c: 477: BRGH = 1;
  2389  0285  1683               	bsf	status, 5	;RP0=1, select bank1
  2390  0286  1303               	bcf	status, 6	;RP1=0, select bank1
  2391  0287  1518               	bsf	(1218/8)^080h,(1218)&7
  2392                           	
  2393  0288                     l30001062:	
  2394                           	line	479
  2395                           ;MVC.c: 478: }
  2396                           ;MVC.c: 479: if(x<256)
  2397  0288  3001               	movlw	high(0100h)
  2398  0289  0272               	subwf	(UART_Init@x+1),w
  2399  028A  3000               	movlw	low(0100h)
  2400  028B  1903               	skipnz
  2401  028C  0271               	subwf	(UART_Init@x),w
  2402  028D  1803               	skipnc
  2403  028E  2A90               	goto	u2061
  2404  028F  2A91               	goto	u2060
  2405  0290                     u2061:
  2406  0290  2AA3               	goto	l115
  2407  0291                     u2060:
  2408                           	
  2409  0291                     l30001063:	
  2410                           	line	481
  2411                           ;MVC.c: 480: {
  2412                           ;MVC.c: 481: SPBRG = x;
  2413  0291  0871               	movf	(UART_Init@x),w
  2414  0292  1683               	bsf	status, 5	;RP0=1, select bank1
  2415  0293  1303               	bcf	status, 6	;RP1=0, select bank1
  2416  0294  0099               	movwf	(153)^080h	;volatile
  2417                           	
  2418  0295                     l30001064:	
  2419                           	line	482
  2420                           ;MVC.c: 482: SYNC = 0;
  2421  0295  1218               	bcf	(1220/8)^080h,(1220)&7
  2422                           	
  2423  0296                     l30001065:	
  2424                           	line	483
  2425                           ;MVC.c: 483: SPEN = 1;
  2426  0296  1283               	bcf	status, 5	;RP0=0, select bank0
  2427  0297  1303               	bcf	status, 6	;RP1=0, select bank0
  2428  0298  1798               	bsf	(199/8),(199)&7
  2429                           	
  2430  0299                     l30001066:	
  2431                           	line	484
  2432                           ;MVC.c: 484: TRISC7 = 1;
  2433  0299  1683               	bsf	status, 5	;RP0=1, select bank1
  2434  029A  1303               	bcf	status, 6	;RP1=0, select bank1
  2435  029B  1787               	bsf	(1087/8)^080h,(1087)&7
  2436                           	
  2437  029C                     l30001067:	
  2438                           	line	485
  2439                           ;MVC.c: 485: TRISC6 = 1;
  2440  029C  1707               	bsf	(1086/8)^080h,(1086)&7
  2441                           	
  2442  029D                     l30001068:	
  2443                           	line	486
  2444                           ;MVC.c: 486: CREN = 1;
  2445  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  2446  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  2447  029F  1618               	bsf	(196/8),(196)&7
  2448                           	
  2449  02A0                     l30001069:	
  2450                           	line	487
  2451                           ;MVC.c: 487: TXEN = 1;
  2452  02A0  1683               	bsf	status, 5	;RP0=1, select bank1
  2453  02A1  1303               	bcf	status, 6	;RP1=0, select bank1
  2454  02A2  1698               	bsf	(1221/8)^080h,(1221)&7
  2455                           	
  2456  02A3                     l115:	
  2457  02A3  0008               	return
  2458                           	opt stack 0
  2459                           GLOBAL	__end_of_UART_Init
  2460  02A4                     	__end_of_UART_Init:
  2461                           ; =============== function _UART_Init ends ============
  2462                           
  2463                           psect	text208,local,class=CODE,delta=2
  2464                           global __ptext208
  2465  02A4                     __ptext208:
  2466                           	line	491
  2467                           	signat	_UART_Init,4217
  2468                           	global	_Read_ADC
  2469                           
  2470                           ; *************** function _Read_ADC *****************
  2471                           ; Defined at:
  2472                           ;		line 187 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2473                           ; Parameters:    Size  Location     Type
  2474                           ;		None
  2475                           ; Auto vars:     Size  Location     Type
  2476                           ;		None
  2477                           ; Return value:  Size  Location     Type
  2478                           ;		None               void
  2479                           ; Registers used:
  2480                           ;		wreg, status,2, status,0, pclath, cstack
  2481                           ; Tracked objects:
  2482                           ;		On entry : 0/0
  2483                           ;		On exit  : 0/0
  2484                           ;		Unchanged: 0/0
  2485                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486                           ;      Locals:         0       4       0       0       0
  2487                           ;      Temp:     4
  2488                           ;      Total:    4
  2489                           ; This function calls:
  2490                           ;		_delay
  2491                           ;		___lltoft
  2492                           ;		___ftmul
  2493                           ;		___ftadd
  2494                           ;		___fttol
  2495                           ; This function is called by:
  2496                           ;		_main
  2497                           ; This function uses a non-reentrant model
  2498                           ; 
  2499                           psect	text208
  2500                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2501                           	line	187
  2502                           	global	__size_of_Read_ADC
  2503  011B                     	__size_of_Read_ADC	equ	__end_of_Read_ADC-_Read_ADC
  2504                           ;MVC.c: 186: void Read_ADC (void)
  2505                           ;MVC.c: 187: {
  2506                           	
  2507  02A4                     _Read_ADC:	
  2508                           	opt stack 6
  2509                           ; Regs used in _Read_ADC: [wreg+status,2+status,0+pclath+cstack]
  2510                           	line	188
  2511                           	
  2512  02A4                     l30001366:	
  2513                           ;MVC.c: 188: ADCON0 = 0b01000001;
  2514  02A4  3041               	movlw	(041h)
  2515  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  02A7  009F               	movwf	(31)	;volatile
  2518                           	
  2519  02A8                     l30001367:	
  2520                           	line	189
  2521                           ;MVC.c: 189: delay(100);
  2522  02A8  3000               	movlw	0
  2523  02A9  00A3               	movwf	(?_delay+3)
  2524  02AA  3000               	movlw	0
  2525  02AB  00A2               	movwf	(?_delay+2)
  2526  02AC  3000               	movlw	0
  2527  02AD  00A1               	movwf	(?_delay+1)
  2528  02AE  3064               	movlw	064h
  2529  02AF  00A0               	movwf	(?_delay)
  2530                           
  2531  02B0  120A  158A  2173   	fcall	_delay
              120A  118A         
  2532                           	
  2533  02B5                     l30001368:	
  2534                           	line	190
  2535                           ;MVC.c: 190: ADGO=1;
  2536  02B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2537  02B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2538  02B7  151F               	bsf	(250/8),(250)&7
  2539                           	
  2540  02B8                     l25:	
  2541                           	line	191
  2542  02B8  191F               	btfsc	(250/8),(250)&7
  2543  02B9  2ABB               	goto	u3291
  2544  02BA  2ABC               	goto	u3290
  2545  02BB                     u3291:
  2546  02BB  2AB8               	goto	l25
  2547  02BC                     u3290:
  2548                           	
  2549  02BC                     l30001369:	
  2550                           	line	192
  2551                           ;MVC.c: 192: iDelay_L = ADRESL;
  2552  02BC  1683               	bsf	status, 5	;RP0=1, select bank1
  2553  02BD  1303               	bcf	status, 6	;RP1=0, select bank1
  2554  02BE  081E               	movf	(158)^080h,w	;volatile
  2555  02BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2556  02C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2557  02C1  00C0               	movwf	(??_Read_ADC+0+0)
  2558  02C2  01C1               	clrf	(??_Read_ADC+0+0+1)
  2559  02C3  01C2               	clrf	(??_Read_ADC+0+0+2)
  2560  02C4  01C3               	clrf	(??_Read_ADC+0+0+3)
  2561  02C5  0843               	movf	3+(??_Read_ADC+0+0),w
  2562  02C6  00DB               	movwf	(_iDelay_L+3)
  2563  02C7  0842               	movf	2+(??_Read_ADC+0+0),w
  2564  02C8  00DA               	movwf	(_iDelay_L+2)
  2565  02C9  0841               	movf	1+(??_Read_ADC+0+0),w
  2566  02CA  00D9               	movwf	(_iDelay_L+1)
  2567  02CB  0840               	movf	0+(??_Read_ADC+0+0),w
  2568  02CC  00D8               	movwf	(_iDelay_L)
  2569                           
  2570                           	line	193
  2571                           ;MVC.c: 193: iDelay_H = (ADRESH << 8);
  2572  02CD  081E               	movf	(30),w	;volatile
  2573  02CE  00C0               	movwf	(??_Read_ADC+0+0)
  2574  02CF  01C1               	clrf	(??_Read_ADC+0+0+1)
  2575  02D0  3008               	movlw	08h
  2576  02D1  00C2               	movwf	(??_Read_ADC+2+0)
  2577  02D2                     u3305:
  2578  02D2  1003               	clrc
  2579  02D3  0DC0               	rlf	(??_Read_ADC+0+0),f
  2580  02D4  0DC1               	rlf	(??_Read_ADC+0+1),f
  2581  02D5  0BC2               	decfsz	(??_Read_ADC+2+0),f
  2582  02D6  2AD2               	goto	u3305
  2583  02D7  0840               	movf	0+(??_Read_ADC+0+0),w
  2584  02D8  00D4               	movwf	(_iDelay_H)
  2585  02D9  0841               	movf	1+(??_Read_ADC+0+0),w
  2586  02DA  00D5               	movwf	(_iDelay_H+1)
  2587  02DB  3000               	movlw	0
  2588  02DC  1BD5               	btfsc	(_iDelay_H+1),7
  2589  02DD  30FF               	movlw	255
  2590  02DE  00D6               	movwf	(_iDelay_H+2)
  2591  02DF  00D7               	movwf	(_iDelay_H+3)
  2592                           	line	194
  2593                           ;MVC.c: 194: A = (iDelay_L + iDelay_H) ;
  2594  02E0  0858               	movf	(_iDelay_L),w
  2595  02E1  0754               	addwf	(_iDelay_H),w
  2596  02E2  00C0               	movwf	(??_Read_ADC+0+0+0)
  2597  02E3  3000               	movlw	0
  2598  02E4  1803               	skipnc
  2599  02E5  3001               	movlw	1
  2600  02E6  0759               	addwf	(_iDelay_L+1),w
  2601  02E7  01C2               	clrf	(??_Read_ADC+0+0+2)
  2602  02E8  1803               	skipnc
  2603  02E9  0AC2               	incf	(??_Read_ADC+0+0+2),f
  2604  02EA  0755               	addwf	(_iDelay_H+1),w
  2605  02EB  00C1               	movwf	(??_Read_ADC+0+0+1)
  2606  02EC  1803               	skipnc
  2607  02ED  0AC2               	incf	(??_Read_ADC+0+0+2),f
  2608  02EE  085A               	movf	(_iDelay_L+2),w
  2609  02EF  0742               	addwf	(??_Read_ADC+0+0+2),w
  2610  02F0  01C3               	clrf	(??_Read_ADC+0+0+3)
  2611  02F1  1803               	skipnc
  2612  02F2  0AC3               	incf	(??_Read_ADC+0+0+3),f
  2613  02F3  0756               	addwf	(_iDelay_H+2),w
  2614  02F4  00C2               	movwf	(??_Read_ADC+0+0+2)
  2615  02F5  1803               	skipnc
  2616  02F6  0AC3               	incf	(??_Read_ADC+0+0+3),f
  2617  02F7  085B               	movf	(_iDelay_L+3),w
  2618  02F8  0743               	addwf	(??_Read_ADC+0+0+3),w
  2619  02F9  0757               	addwf	(_iDelay_H+3),w
  2620  02FA  00C3               	movwf	(??_Read_ADC+0+0+3)
  2621  02FB  0843               	movf	3+(??_Read_ADC+0+0),w
  2622  02FC  00F8               	movwf	(_A+3)
  2623  02FD  0842               	movf	2+(??_Read_ADC+0+0),w
  2624  02FE  00F7               	movwf	(_A+2)
  2625  02FF  0841               	movf	1+(??_Read_ADC+0+0),w
  2626  0300  00F6               	movwf	(_A+1)
  2627  0301  0840               	movf	0+(??_Read_ADC+0+0),w
  2628  0302  00F5               	movwf	(_A)
  2629                           
  2630                           	line	196
  2631                           ;MVC.c: 196: ADCON0 = 0b01001001;
  2632  0303  3049               	movlw	(049h)
  2633  0304  009F               	movwf	(31)	;volatile
  2634                           	
  2635  0305                     l30001370:	
  2636                           	line	197
  2637                           ;MVC.c: 197: delay(100);
  2638  0305  3000               	movlw	0
  2639  0306  00A3               	movwf	(?_delay+3)
  2640  0307  3000               	movlw	0
  2641  0308  00A2               	movwf	(?_delay+2)
  2642  0309  3000               	movlw	0
  2643  030A  00A1               	movwf	(?_delay+1)
  2644  030B  3064               	movlw	064h
  2645  030C  00A0               	movwf	(?_delay)
  2646                           
  2647  030D  120A  158A  2173   	fcall	_delay
              120A  118A         
  2648                           	
  2649  0312                     l30001371:	
  2650                           	line	198
  2651                           ;MVC.c: 198: ADGO=1;
  2652  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  2653  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  2654  0314  151F               	bsf	(250/8),(250)&7
  2655                           	
  2656  0315                     l28:	
  2657                           	line	199
  2658  0315  191F               	btfsc	(250/8),(250)&7
  2659  0316  2B18               	goto	u3311
  2660  0317  2B19               	goto	u3310
  2661  0318                     u3311:
  2662  0318  2B15               	goto	l28
  2663  0319                     u3310:
  2664                           	
  2665  0319                     l30001372:	
  2666                           	line	200
  2667                           ;MVC.c: 200: AN_CH1_L = ADRESL;
  2668  0319  1683               	bsf	status, 5	;RP0=1, select bank1
  2669  031A  1303               	bcf	status, 6	;RP1=0, select bank1
  2670  031B  081E               	movf	(158)^080h,w	;volatile
  2671  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  2672  031D  1303               	bcf	status, 6	;RP1=0, select bank0
  2673  031E  00C0               	movwf	(??_Read_ADC+0+0)
  2674  031F  01C1               	clrf	(??_Read_ADC+0+0+1)
  2675  0320  01C2               	clrf	(??_Read_ADC+0+0+2)
  2676  0321  01C3               	clrf	(??_Read_ADC+0+0+3)
  2677  0322  0843               	movf	3+(??_Read_ADC+0+0),w
  2678  0323  00CB               	movwf	(_AN_CH1_L+3)
  2679  0324  0842               	movf	2+(??_Read_ADC+0+0),w
  2680  0325  00CA               	movwf	(_AN_CH1_L+2)
  2681  0326  0841               	movf	1+(??_Read_ADC+0+0),w
  2682  0327  00C9               	movwf	(_AN_CH1_L+1)
  2683  0328  0840               	movf	0+(??_Read_ADC+0+0),w
  2684  0329  00C8               	movwf	(_AN_CH1_L)
  2685                           
  2686                           	line	201
  2687                           ;MVC.c: 201: AN_CH1_H = (ADRESH << 8);
  2688  032A  081E               	movf	(30),w	;volatile
  2689  032B  00C0               	movwf	(??_Read_ADC+0+0)
  2690  032C  01C1               	clrf	(??_Read_ADC+0+0+1)
  2691  032D  3008               	movlw	08h
  2692  032E  00C2               	movwf	(??_Read_ADC+2+0)
  2693  032F                     u3325:
  2694  032F  1003               	clrc
  2695  0330  0DC0               	rlf	(??_Read_ADC+0+0),f
  2696  0331  0DC1               	rlf	(??_Read_ADC+0+1),f
  2697  0332  0BC2               	decfsz	(??_Read_ADC+2+0),f
  2698  0333  2B2F               	goto	u3325
  2699  0334  0840               	movf	0+(??_Read_ADC+0+0),w
  2700  0335  00C4               	movwf	(_AN_CH1_H)
  2701  0336  0841               	movf	1+(??_Read_ADC+0+0),w
  2702  0337  00C5               	movwf	(_AN_CH1_H+1)
  2703  0338  3000               	movlw	0
  2704  0339  1BC5               	btfsc	(_AN_CH1_H+1),7
  2705  033A  30FF               	movlw	255
  2706  033B  00C6               	movwf	(_AN_CH1_H+2)
  2707  033C  00C7               	movwf	(_AN_CH1_H+3)
  2708                           	
  2709  033D                     l30001373:	
  2710                           	line	202
  2711                           ;MVC.c: 202: B = (((AN_CH1_H + AN_CH1_L)*7.8)+30);
  2712  033D  0844               	movf	(_AN_CH1_H),w
  2713  033E  0748               	addwf	(_AN_CH1_L),w
  2714  033F  00C0               	movwf	(??_Read_ADC+0+0+0)
  2715  0340  3000               	movlw	0
  2716  0341  1803               	skipnc
  2717  0342  3001               	movlw	1
  2718  0343  0745               	addwf	(_AN_CH1_H+1),w
  2719  0344  01C2               	clrf	(??_Read_ADC+0+0+2)
  2720  0345  1803               	skipnc
  2721  0346  0AC2               	incf	(??_Read_ADC+0+0+2),f
  2722  0347  0749               	addwf	(_AN_CH1_L+1),w
  2723  0348  00C1               	movwf	(??_Read_ADC+0+0+1)
  2724  0349  1803               	skipnc
  2725  034A  0AC2               	incf	(??_Read_ADC+0+0+2),f
  2726  034B  0846               	movf	(_AN_CH1_H+2),w
  2727  034C  0742               	addwf	(??_Read_ADC+0+0+2),w
  2728  034D  01C3               	clrf	(??_Read_ADC+0+0+3)
  2729  034E  1803               	skipnc
  2730  034F  0AC3               	incf	(??_Read_ADC+0+0+3),f
  2731  0350  074A               	addwf	(_AN_CH1_L+2),w
  2732  0351  00C2               	movwf	(??_Read_ADC+0+0+2)
  2733  0352  1803               	skipnc
  2734  0353  0AC3               	incf	(??_Read_ADC+0+0+3),f
  2735  0354  0847               	movf	(_AN_CH1_H+3),w
  2736  0355  0743               	addwf	(??_Read_ADC+0+0+3),w
  2737  0356  074B               	addwf	(_AN_CH1_L+3),w
  2738  0357  00C3               	movwf	(??_Read_ADC+0+0+3)
  2739  0358  0843               	movf	3+(??_Read_ADC+0+0),w
  2740  0359  00A9               	movwf	(?___lltoft+3)
  2741  035A  0842               	movf	2+(??_Read_ADC+0+0),w
  2742  035B  00A8               	movwf	(?___lltoft+2)
  2743  035C  0841               	movf	1+(??_Read_ADC+0+0),w
  2744  035D  00A7               	movwf	(?___lltoft+1)
  2745  035E  0840               	movf	0+(??_Read_ADC+0+0),w
  2746  035F  00A6               	movwf	(?___lltoft)
  2747                           
  2748  0360  120A  158A  21D5   	fcall	___lltoft
              120A  118A         
  2749  0365  1383               	bcf	status, 7	;select IRP bank0
  2750  0366  1283               	bcf	status, 5	;RP0=0, select bank0
  2751  0367  1303               	bcf	status, 6	;RP1=0, select bank0
  2752  0368  0826               	movf	(0+(?___lltoft)),w
  2753  0369  00B4               	movwf	(?___ftmul)
  2754  036A  0827               	movf	(1+(?___lltoft)),w
  2755  036B  00B5               	movwf	(?___ftmul+1)
  2756  036C  0828               	movf	(2+(?___lltoft)),w
  2757  036D  00B6               	movwf	(?___ftmul+2)
  2758  036E  309A               	movlw	0x9a
  2759  036F  00B7               	movwf	0+(?___ftmul)+03h
  2760  0370  30F9               	movlw	0xf9
  2761  0371  00B8               	movwf	1+(?___ftmul)+03h
  2762  0372  3040               	movlw	0x40
  2763  0373  00B9               	movwf	2+(?___ftmul)+03h
  2764  0374  120A  118A  20D4   	fcall	___ftmul
              120A  118A         
  2765  0379  1383               	bcf	status, 7	;select IRP bank0
  2766  037A  1283               	bcf	status, 5	;RP0=0, select bank0
  2767  037B  1303               	bcf	status, 6	;RP1=0, select bank0
  2768  037C  0834               	movf	(0+(?___ftmul)),w
  2769  037D  1683               	bsf	status, 5	;RP0=1, select bank1
  2770  037E  1303               	bcf	status, 6	;RP1=0, select bank1
  2771  037F  00DF               	movwf	(?___ftadd)^080h
  2772  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  2773  0381  1303               	bcf	status, 6	;RP1=0, select bank0
  2774  0382  0835               	movf	(1+(?___ftmul)),w
  2775  0383  1683               	bsf	status, 5	;RP0=1, select bank1
  2776  0384  1303               	bcf	status, 6	;RP1=0, select bank1
  2777  0385  00E0               	movwf	(?___ftadd+1)^080h
  2778  0386  1283               	bcf	status, 5	;RP0=0, select bank0
  2779  0387  1303               	bcf	status, 6	;RP1=0, select bank0
  2780  0388  0836               	movf	(2+(?___ftmul)),w
  2781  0389  1683               	bsf	status, 5	;RP0=1, select bank1
  2782  038A  1303               	bcf	status, 6	;RP1=0, select bank1
  2783  038B  00E1               	movwf	(?___ftadd+2)^080h
  2784  038C  3000               	movlw	0x0
  2785  038D  00E2               	movwf	0+(?___ftadd)^080h+03h
  2786  038E  30F0               	movlw	0xf0
  2787  038F  00E3               	movwf	1+(?___ftadd)^080h+03h
  2788  0390  3041               	movlw	0x41
  2789  0391  00E4               	movwf	2+(?___ftadd)^080h+03h
  2790  0392  120A  118A  23BF   	fcall	___ftadd
              120A  118A         
  2791  0397  1383               	bcf	status, 7	;select IRP bank1
  2792  0398  1683               	bsf	status, 5	;RP0=1, select bank1
  2793  0399  1303               	bcf	status, 6	;RP1=0, select bank1
  2794  039A  085F               	movf	(0+(?___ftadd))^080h,w
  2795  039B  00EB               	movwf	(?___fttol)^080h
  2796  039C  0860               	movf	(1+(?___ftadd))^080h,w
  2797  039D  00EC               	movwf	(?___fttol+1)^080h
  2798  039E  0861               	movf	(2+(?___ftadd))^080h,w
  2799  039F  00ED               	movwf	(?___fttol+2)^080h
  2800  03A0  120A  158A  2755   	fcall	___fttol
              120A  118A         
  2801  03A5  1383               	bcf	status, 7	;select IRP bank1
  2802  03A6  1683               	bsf	status, 5	;RP0=1, select bank1
  2803  03A7  1303               	bcf	status, 6	;RP1=0, select bank1
  2804  03A8  086E               	movf	(3+(?___fttol))^080h,w
  2805  03A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  03AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  03AB  00CF               	movwf	(_B+3)
  2808  03AC  1683               	bsf	status, 5	;RP0=1, select bank1
  2809  03AD  1303               	bcf	status, 6	;RP1=0, select bank1
  2810  03AE  086D               	movf	(2+(?___fttol))^080h,w
  2811  03AF  1283               	bcf	status, 5	;RP0=0, select bank0
  2812  03B0  1303               	bcf	status, 6	;RP1=0, select bank0
  2813  03B1  00CE               	movwf	(_B+2)
  2814  03B2  1683               	bsf	status, 5	;RP0=1, select bank1
  2815  03B3  1303               	bcf	status, 6	;RP1=0, select bank1
  2816  03B4  086C               	movf	(1+(?___fttol))^080h,w
  2817  03B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2818  03B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2819  03B7  00CD               	movwf	(_B+1)
  2820  03B8  1683               	bsf	status, 5	;RP0=1, select bank1
  2821  03B9  1303               	bcf	status, 6	;RP1=0, select bank1
  2822  03BA  086B               	movf	(0+(?___fttol))^080h,w
  2823  03BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2824  03BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2825  03BD  00CC               	movwf	(_B)
  2826                           
  2827                           	
  2828  03BE                     l24:	
  2829  03BE  0008               	return
  2830                           	opt stack 0
  2831                           GLOBAL	__end_of_Read_ADC
  2832  03BF                     	__end_of_Read_ADC:
  2833                           ; =============== function _Read_ADC ends ============
  2834                           
  2835                           psect	text209,local,class=CODE,delta=2
  2836                           global __ptext209
  2837  0008                     __ptext209:
  2838                           	line	245
  2839                           	signat	_Read_ADC,88
  2840                           	global	_reset
  2841                           
  2842                           ; *************** function _reset *****************
  2843                           ; Defined at:
  2844                           ;		line 160 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2845                           ; Parameters:    Size  Location     Type
  2846                           ;		None
  2847                           ; Auto vars:     Size  Location     Type
  2848                           ;		None
  2849                           ; Return value:  Size  Location     Type
  2850                           ;		None               void
  2851                           ; Registers used:
  2852                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2853                           ; Tracked objects:
  2854                           ;		On entry : 0/0
  2855                           ;		On exit  : 0/0
  2856                           ;		Unchanged: 0/0
  2857                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858                           ;      Locals:         0       0       0       0       0
  2859                           ;      Temp:     0
  2860                           ;      Total:    0
  2861                           ; This function calls:
  2862                           ;		_UART_Write_Text
  2863                           ;		_lcd_clr
  2864                           ; This function is called by:
  2865                           ;		_main
  2866                           ; This function uses a non-reentrant model
  2867                           ; 
  2868                           psect	text209
  2869                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  2870                           	line	160
  2871                           	global	__size_of_reset
  2872  001B                     	__size_of_reset	equ	__end_of_reset-_reset
  2873                           ;MVC.c: 159: void reset()
  2874                           ;MVC.c: 160: {
  2875                           	
  2876  0008                     _reset:	
  2877                           	opt stack 6
  2878                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2879                           	line	162
  2880                           	
  2881  0008                     l30001473:	
  2882                           ;MVC.c: 161: {
  2883                           ;MVC.c: 162: if (RB3==0)
  2884  0008  1283               	bcf	status, 5	;RP0=0, select bank0
  2885  0009  1303               	bcf	status, 6	;RP1=0, select bank0
  2886  000A  1986               	btfsc	(51/8),(51)&7
  2887  000B  280D               	goto	u3561
  2888  000C  280E               	goto	u3560
  2889  000D                     u3561:
  2890  000D  2822               	goto	l18
  2891  000E                     u3560:
  2892                           	
  2893  000E                     l30001474:	
  2894                           	line	164
  2895                           ;MVC.c: 163: {
  2896                           ;MVC.c: 164: UART_Write_Text("#1 RESET;");
  2897  000E  3029               	movlw	((STR_6-__stringbase))&0ffh
  2898  000F  00A2               	movwf	(?_UART_Write_Text)
  2899+ 0010  3000               	movlw	00h
  2900+ 0011  00A3               	movwf	(?_UART_Write_Text+1)
  2901+ 0012  120A  158A  220B   	fcall	_UART_Write_Text
      +       120A  118A         
  2902+                          	line	165
  2903+                          ;MVC.c: 165: lcd_clr();
  2904+ 0017  120A  158A  20F8   	fcall	_lcd_clr
      +       120A  118A         
  2905+                          	
  2906+ 001C                     l30001475:	
  2907+                          	line	166
  2908+ 001C  1283               	bcf	status, 5	;RP0=0, select bank0
  2909+ 001D  1303               	bcf	status, 6	;RP1=0, select bank0
  2910+ 001E  1D86               	btfss	(51/8),(51)&7
  2911+ 001F  2821               	goto	u3571
  2912+ 0020  2822               	goto	u3570
  2913+ 0021                     u3571:
  2914+ 0021  281C               	goto	l30001475
  2915+ 0022                     u3570:
  2916+                          	
  2917+ 0022                     l18:	
  2918+ 0022  0008               	return
  2919+                          	opt stack 0
  2920+                          GLOBAL	__end_of_reset
  2921+ 0023                     	__end_of_reset:
  2922+                          ; =============== function _reset ends ============
  2923+                          
  2924+                          psect	text210,local,class=CODE,delta=2
  2925+                          global __ptext210
  2926+ 03BF                     __ptext210:
  2927+                          	line	171
  2928+                          	signat	_reset,88
  2929+                          	global	___ftadd
  2930+                          
  2931+                          ; *************** function ___ftadd *****************
  2932+                          ; Defined at:
  2933+                          ;		line 87 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\ftadd.c"
  2934+                          ; Parameters:    Size  Location     Type
  2935+                          ;  f1              3    3[BANK1 ] float 
  2936+                          ;  f2              3    6[BANK1 ] float 
  2937+                          ; Auto vars:     Size  Location     Type
  2938+                          ;  exp1            1    2[BANK1 ] unsigned char 
  2939+                          ;  exp2            1    1[BANK1 ] unsigned char 
  2940+                          ;  sign            1    0[BANK1 ] unsigned char 
  2941+                          ; Return value:  Size  Location     Type
  2942+                          ;                  3    3[BANK1 ] float 
  2943+                          ; Registers used:
  2944+                          ;		wreg, status,2, status,0, pclath, cstack
  2945+                          ; Tracked objects:
  2946+                          ;		On entry : 0/0
  2947+                          ;		On exit  : 0/0
  2948+                          ;		Unchanged: 0/0
  2949+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950+                          ;      Locals:         0       3       9       0       0
  2951+                          ;      Temp:     3
  2952+                          ;      Total:   12
  2953+                          ; This function calls:
  2954+                          ;		___ftpack
  2955+                          ; This function is called by:
  2956+                          ;		_Read_ADC
  2957+                          ; This function uses a non-reentrant model
  2958+                          ; 
  2959+                          psect	text210
  2960+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\ftadd.c"
  2961+                          	line	87
  2962+                          	global	__size_of___ftadd
  2963+ 0194                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  2964+                          	
  2965+ 03BF                     ___ftadd:	
  2966+                          	opt stack 5
  2967+                          ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2968+                          	line	90
  2969+                          	
  2970+ 03BF                     l30001547:	
  2971+ 03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  2972+ 03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  2973+ 03C1  085F               	movf	(___ftadd@f1)^080h,w
  2974+ 03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2975+ 03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2976+ 03C4  00BA               	movwf	(??___ftadd+0+0)
  2977+ 03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2978+ 03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2979+ 03C7  0860               	movf	(___ftadd@f1+1)^080h,w
  2980+ 03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2981+ 03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2982+ 03CA  00BB               	movwf	(??___ftadd+0+0+1)
  2983+ 03CB  1683               	bsf	status, 5	;RP0=1, select bank1
  2984+ 03CC  1303               	bcf	status, 6	;RP1=0, select bank1
  2985+ 03CD  0861               	movf	(___ftadd@f1+2)^080h,w
  2986+ 03CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2987+ 03CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2988+ 03D0  00BC               	movwf	(??___ftadd+0+0+2)
  2989+ 03D1  1003               	clrc
  2990+ 03D2  0D3B               	rlf	(??___ftadd+0+1),w
  2991+ 03D3  0D3C               	rlf	(??___ftadd+0+2),w
  2992+ 03D4  1683               	bsf	status, 5	;RP0=1, select bank1
  2993+ 03D5  1303               	bcf	status, 6	;RP1=0, select bank1
  2994+ 03D6  00DE               	movwf	(___ftadd@exp1)^080h
  2995+                          	line	91
  2996+ 03D7  0862               	movf	(___ftadd@f2)^080h,w
  2997+ 03D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2998+ 03D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2999+ 03DA  00BA               	movwf	(??___ftadd+0+0)
  3000+ 03DB  1683               	bsf	status, 5	;RP0=1, select bank1
  3001+ 03DC  1303               	bcf	status, 6	;RP1=0, select bank1
  3002+ 03DD  0863               	movf	(___ftadd@f2+1)^080h,w
  3003+ 03DE  1283               	bcf	status, 5	;RP0=0, select bank0
  3004+ 03DF  1303               	bcf	status, 6	;RP1=0, select bank0
  3005+ 03E0  00BB               	movwf	(??___ftadd+0+0+1)
  3006+ 03E1  1683               	bsf	status, 5	;RP0=1, select bank1
  3007+ 03E2  1303               	bcf	status, 6	;RP1=0, select bank1
  3008+ 03E3  0864               	movf	(___ftadd@f2+2)^080h,w
  3009+ 03E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3010+ 03E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3011+ 03E6  00BC               	movwf	(??___ftadd+0+0+2)
  3012+ 03E7  1003               	clrc
  3013+ 03E8  0D3B               	rlf	(??___ftadd+0+1),w
  3014+ 03E9  0D3C               	rlf	(??___ftadd+0+2),w
  3015+ 03EA  1683               	bsf	status, 5	;RP0=1, select bank1
  3016+ 03EB  1303               	bcf	status, 6	;RP1=0, select bank1
  3017+ 03EC  00DD               	movwf	(___ftadd@exp2)^080h
  3018+                          	
  3019+ 03ED                     l30001548:	
  3020+                          	line	92
  3021+ 03ED  085E               	movf	(___ftadd@exp1)^080h,w
  3022+ 03EE  1D03               	skipz
  3023+ 03EF  2BF1               	goto	u3860
  3024+ 03F0  2C03               	goto	l30001551
  3025+ 03F1                     u3860:
  3026+                          	
  3027+ 03F1                     l30001549:	
  3028+ 03F1  085D               	movf	(___ftadd@exp2)^080h,w
  3029+ 03F2  025E               	subwf	(___ftadd@exp1)^080h,w
  3030+ 03F3  1803               	skipnc
  3031+ 03F4  2BF6               	goto	u3871
  3032+ 03F5  2BF7               	goto	u3870
  3033+ 03F6                     u3871:
  3034+ 03F6  2C0C               	goto	l30001553
  3035+ 03F7                     u3870:
  3036+                          	
  3037+ 03F7                     l30001550:	
  3038+ 03F7  035E               	decf	(___ftadd@exp1)^080h,w
  3039+ 03F8  3AFF               	xorlw	0ffh
  3040+ 03F9  075D               	addwf	(___ftadd@exp2)^080h,w
  3041+ 03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  3042+ 03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  3043+ 03FC  00BA               	movwf	(??___ftadd+0+0)
  3044+ 03FD  3019               	movlw	low(019h)
  3045+ 03FE  023A               	subwf	(??___ftadd+0+0),w
  3046+ 03FF  1C03               	skipc
  3047+ 0400  2C02               	goto	u3881
  3048+ 0401  2C03               	goto	u3880
  3049+ 0402                     u3881:
  3050+ 0402  2C0C               	goto	l30001553
  3051+ 0403                     u3880:
  3052+                          	
  3053+ 0403                     l30001551:	
  3054+                          	line	93
  3055+ 0403  1683               	bsf	status, 5	;RP0=1, select bank1
  3056+ 0404  1303               	bcf	status, 6	;RP1=0, select bank1
  3057+ 0405  0862               	movf	(___ftadd@f2)^080h,w
  3058+ 0406  00DF               	movwf	(?___ftadd)^080h
  3059+ 0407  0863               	movf	(___ftadd@f2+1)^080h,w
  3060+ 0408  00E0               	movwf	(?___ftadd+1)^080h
  3061+ 0409  0864               	movf	(___ftadd@f2+2)^080h,w
  3062+ 040A  00E1               	movwf	(?___ftadd+2)^080h
  3063+ 040B  2D52               	goto	l194
  3064+                          	
  3065+ 040C                     l30001553:	
  3066+                          	line	94
  3067+ 040C  1683               	bsf	status, 5	;RP0=1, select bank1
  3068+ 040D  1303               	bcf	status, 6	;RP1=0, select bank1
  3069+ 040E  085D               	movf	(___ftadd@exp2)^080h,w
  3070+ 040F  1D03               	skipz
  3071+ 0410  2C12               	goto	u3890
  3072+ 0411  2C24               	goto	l30001556
  3073+ 0412                     u3890:
  3074+                          	
  3075+ 0412                     l30001554:	
  3076+ 0412  085E               	movf	(___ftadd@exp1)^080h,w
  3077+ 0413  025D               	subwf	(___ftadd@exp2)^080h,w
  3078+ 0414  1803               	skipnc
  3079+ 0415  2C17               	goto	u3901
  3080+ 0416  2C18               	goto	u3900
  3081+ 0417                     u3901:
  3082+ 0417  2C2D               	goto	l30001558
  3083+ 0418                     u3900:
  3084+                          	
  3085+ 0418                     l30001555:	
  3086+ 0418  035D               	decf	(___ftadd@exp2)^080h,w
  3087+ 0419  3AFF               	xorlw	0ffh
  3088+ 041A  075E               	addwf	(___ftadd@exp1)^080h,w
  3089+ 041B  1283               	bcf	status, 5	;RP0=0, select bank0
  3090+ 041C  1303               	bcf	status, 6	;RP1=0, select bank0
  3091+ 041D  00BA               	movwf	(??___ftadd+0+0)
  3092+ 041E  3019               	movlw	low(019h)
  3093+ 041F  023A               	subwf	(??___ftadd+0+0),w
  3094+ 0420  1C03               	skipc
  3095+ 0421  2C23               	goto	u3911
  3096+ 0422  2C24               	goto	u3910
  3097+ 0423                     u3911:
  3098+ 0423  2C2D               	goto	l30001558
  3099+ 0424                     u3910:
  3100+                          	
  3101+ 0424                     l30001556:	
  3102+                          	line	95
  3103+ 0424  1683               	bsf	status, 5	;RP0=1, select bank1
  3104+ 0425  1303               	bcf	status, 6	;RP1=0, select bank1
  3105+ 0426  085F               	movf	(___ftadd@f1)^080h,w
  3106+ 0427  00DF               	movwf	(?___ftadd)^080h
  3107+ 0428  0860               	movf	(___ftadd@f1+1)^080h,w
  3108+ 0429  00E0               	movwf	(?___ftadd+1)^080h
  3109+ 042A  0861               	movf	(___ftadd@f1+2)^080h,w
  3110+ 042B  00E1               	movwf	(?___ftadd+2)^080h
  3111+ 042C  2D52               	goto	l194
  3112+                          	
  3113+ 042D                     l30001558:	
  3114+                          	line	96
  3115+ 042D  3006               	movlw	(06h)
  3116+ 042E  1683               	bsf	status, 5	;RP0=1, select bank1
  3117+ 042F  1303               	bcf	status, 6	;RP1=0, select bank1
  3118+ 0430  00DC               	movwf	(___ftadd@sign)^080h
  3119+                          	
  3120+ 0431                     l30001559:	
  3121+                          	line	97
  3122+ 0431  1FE1               	btfss	(___ftadd@f1+2)^080h,(23)&7
  3123+ 0432  2C34               	goto	u3921
  3124+ 0433  2C35               	goto	u3920
  3125+ 0434                     u3921:
  3126+ 0434  2C36               	goto	l197
  3127+ 0435                     u3920:
  3128+                          	
  3129+ 0435                     l30001560:	
  3130+                          	line	98
  3131+ 0435  17DC               	bsf	(___ftadd@sign)^080h+(7/8),(7)&7
  3132+                          	
  3133+ 0436                     l197:	
  3134+                          	line	99
  3135+ 0436  1FE4               	btfss	(___ftadd@f2+2)^080h,(23)&7
  3136+ 0437  2C39               	goto	u3931
  3137+ 0438  2C3A               	goto	u3930
  3138+ 0439                     u3931:
  3139+ 0439  2C3B               	goto	l198
  3140+ 043A                     u3930:
  3141+                          	
  3142+ 043A                     l30001561:	
  3143+                          	line	100
  3144+ 043A  175C               	bsf	(___ftadd@sign)^080h+(6/8),(6)&7
  3145+                          	
  3146+ 043B                     l198:	
  3147+                          	line	101
  3148+ 043B  17E0               	bsf	(___ftadd@f1)^080h+(15/8),(15)&7
  3149+                          	
  3150+ 043C                     l30001562:	
  3151+                          	line	102
  3152+ 043C  30FF               	movlw	0FFh
  3153+ 043D  05DF               	andwf	(___ftadd@f1)^080h,f
  3154+ 043E  30FF               	movlw	0FFh
  3155+ 043F  05E0               	andwf	(___ftadd@f1+1)^080h,f
  3156+ 0440  3000               	movlw	0
  3157+ 0441  05E1               	andwf	(___ftadd@f1+2)^080h,f
  3158+                          	
  3159+ 0442                     l30001563:	
  3160+                          	line	103
  3161+ 0442  17E3               	bsf	(___ftadd@f2)^080h+(15/8),(15)&7
  3162+                          	line	104
  3163+ 0443  30FF               	movlw	0FFh
  3164+ 0444  05E2               	andwf	(___ftadd@f2)^080h,f
  3165+ 0445  30FF               	movlw	0FFh
  3166+ 0446  05E3               	andwf	(___ftadd@f2+1)^080h,f
  3167+ 0447  3000               	movlw	0
  3168+ 0448  05E4               	andwf	(___ftadd@f2+2)^080h,f
  3169+                          	line	106
  3170+ 0449  085D               	movf	(___ftadd@exp2)^080h,w
  3171+ 044A  025E               	subwf	(___ftadd@exp1)^080h,w
  3172+ 044B  1803               	skipnc
  3173+ 044C  2C4E               	goto	u3941
  3174+ 044D  2C4F               	goto	u3940
  3175+ 044E                     u3941:
  3176+ 044E  2C7F               	goto	l30001569
  3177+ 044F                     u3940:
  3178+                          	
  3179+ 044F                     l30001564:	
  3180+                          	line	110
  3181+ 044F  3001               	movlw	01h
  3182+ 0450                     u3955:
  3183+ 0450  1003               	clrc
  3184+ 0451  0DE2               	rlf	(___ftadd@f2)^080h,f
  3185+ 0452  0DE3               	rlf	(___ftadd@f2+1)^080h,f
  3186+ 0453  0DE4               	rlf	(___ftadd@f2+2)^080h,f
  3187+ 0454  3EFF               	addlw	-1
  3188+ 0455  1D03               	skipz
  3189+ 0456  2C50               	goto	u3955
  3190+                          	line	111
  3191+ 0457  3001               	movlw	low(01h)
  3192+ 0458  02DD               	subwf	(___ftadd@exp2)^080h,f
  3193+                          	
  3194+ 0459                     l30001565:	
  3195+                          	line	112
  3196+ 0459  085D               	movf	(___ftadd@exp2)^080h,w
  3197+ 045A  065E               	xorwf	(___ftadd@exp1)^080h,w
  3198+ 045B  1903               	skipnz
  3199+ 045C  2C5E               	goto	u3961
  3200+ 045D  2C5F               	goto	u3960
  3201+ 045E                     u3961:
  3202+ 045E  2C78               	goto	l30001568
  3203+ 045F                     u3960:
  3204+                          	
  3205+ 045F                     l30001566:	
  3206+ 045F  3001               	movlw	low(01h)
  3207+ 0460  02DC               	subwf	(___ftadd@sign)^080h,f
  3208+ 0461  085C               	movf	((___ftadd@sign)^080h)&07fh,w
  3209+ 0462  3907               	andlw	07h
  3210+ 0463  1D03               	btfss	status,2
  3211+ 0464  2C66               	goto	u3971
  3212+ 0465  2C67               	goto	u3970
  3213+ 0466                     u3971:
  3214+ 0466  2C4F               	goto	l30001564
  3215+ 0467                     u3970:
  3216+ 0467  2C78               	goto	l30001568
  3217+                          	
  3218+ 0468                     l30001567:	
  3219+                          	line	114
  3220+ 0468  3001               	movlw	01h
  3221+ 0469                     u3985:
  3222+ 0469  1003               	clrc
  3223+ 046A  0CE1               	rrf	(___ftadd@f1+2)^080h,f
  3224+ 046B  0CE0               	rrf	(___ftadd@f1+1)^080h,f
  3225+ 046C  0CDF               	rrf	(___ftadd@f1)^080h,f
  3226+ 046D  3EFF               	addlw	-1
  3227+ 046E  1D03               	skipz
  3228+ 046F  2C69               	goto	u3985
  3229+                          
  3230+                          	line	115
  3231+ 0470  3001               	movlw	(01h)
  3232+ 0471  1283               	bcf	status, 5	;RP0=0, select bank0
  3233+ 0472  1303               	bcf	status, 6	;RP1=0, select bank0
  3234+ 0473  00BA               	movwf	(??___ftadd+0+0)
  3235+ 0474  083A               	movf	(??___ftadd+0+0),w
  3236+ 0475  1683               	bsf	status, 5	;RP0=1, select bank1
  3237+ 0476  1303               	bcf	status, 6	;RP1=0, select bank1
  3238+ 0477  07DE               	addwf	(___ftadd@exp1)^080h,f
  3239+                          	
  3240+ 0478                     l30001568:	
  3241+                          	line	113
  3242+ 0478  085E               	movf	(___ftadd@exp1)^080h,w
  3243+ 0479  065D               	xorwf	(___ftadd@exp2)^080h,w
  3244+ 047A  1D03               	skipz
  3245+ 047B  2C7D               	goto	u3991
  3246+ 047C  2C7E               	goto	u3990
  3247+ 047D                     u3991:
  3248+ 047D  2C68               	goto	l30001567
  3249+ 047E                     u3990:
  3250+ 047E  2CB4               	goto	l206
  3251+                          	
  3252+ 047F                     l30001569:	
  3253+                          	line	117
  3254+ 047F  085E               	movf	(___ftadd@exp1)^080h,w
  3255+ 0480  025D               	subwf	(___ftadd@exp2)^080h,w
  3256+ 0481  1803               	skipnc
  3257+ 0482  2C84               	goto	u4001
  3258+ 0483  2C85               	goto	u4000
  3259+ 0484                     u4001:
  3260+ 0484  2CB4               	goto	l206
  3261+ 0485                     u4000:
  3262+                          	
  3263+ 0485                     l30001570:	
  3264+                          	line	121
  3265+ 0485  3001               	movlw	01h
  3266+ 0486                     u4015:
  3267+ 0486  1003               	clrc
  3268+ 0487  0DDF               	rlf	(___ftadd@f1)^080h,f
  3269+ 0488  0DE0               	rlf	(___ftadd@f1+1)^080h,f
  3270+ 0489  0DE1               	rlf	(___ftadd@f1+2)^080h,f
  3271+ 048A  3EFF               	addlw	-1
  3272+ 048B  1D03               	skipz
  3273+ 048C  2C86               	goto	u4015
  3274+                          	line	122
  3275+ 048D  3001               	movlw	low(01h)
  3276+ 048E  02DE               	subwf	(___ftadd@exp1)^080h,f
  3277+                          	
  3278+ 048F                     l30001571:	
  3279+                          	line	123
  3280+ 048F  085D               	movf	(___ftadd@exp2)^080h,w
  3281+ 0490  065E               	xorwf	(___ftadd@exp1)^080h,w
  3282+ 0491  1903               	skipnz
  3283+ 0492  2C94               	goto	u4021
  3284+ 0493  2C95               	goto	u4020
  3285+ 0494                     u4021:
  3286+ 0494  2CAE               	goto	l30001574
  3287+ 0495                     u4020:
  3288+                          	
  3289+ 0495                     l30001572:	
  3290+ 0495  3001               	movlw	low(01h)
  3291+ 0496  02DC               	subwf	(___ftadd@sign)^080h,f
  3292+ 0497  085C               	movf	((___ftadd@sign)^080h)&07fh,w
  3293+ 0498  3907               	andlw	07h
  3294+ 0499  1D03               	btfss	status,2
  3295+ 049A  2C9C               	goto	u4031
  3296+ 049B  2C9D               	goto	u4030
  3297+ 049C                     u4031:
  3298+ 049C  2C85               	goto	l30001570
  3299+ 049D                     u4030:
  3300+ 049D  2CAE               	goto	l30001574
  3301+                          	
  3302+ 049E                     l30001573:	
  3303                           	line	125
  3304  049E  3001               	movlw	01h
  3305  049F                     u4045:
  3306  049F  1003               	clrc
  3307  04A0  0CE4               	rrf	(___ftadd@f2+2)^080h,f
  3308  04A1  0CE3               	rrf	(___ftadd@f2+1)^080h,f
  3309  04A2  0CE2               	rrf	(___ftadd@f2)^080h,f
  3310  04A3  3EFF               	addlw	-1
  3311  04A4  1D03               	skipz
  3312  04A5  2C9F               	goto	u4045
  3313                           
  3314                           	line	126
  3315  04A6  3001               	movlw	(01h)
  3316  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  3317  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  3318  04A9  00BA               	movwf	(??___ftadd+0+0)
  3319  04AA  083A               	movf	(??___ftadd+0+0),w
  3320  04AB  1683               	bsf	status, 5	;RP0=1, select bank1
  3321  04AC  1303               	bcf	status, 6	;RP1=0, select bank1
  3322  04AD  07DD               	addwf	(___ftadd@exp2)^080h,f
  3323                           	
  3324  04AE                     l30001574:	
  3325                           	line	124
  3326  04AE  085E               	movf	(___ftadd@exp1)^080h,w
  3327  04AF  065D               	xorwf	(___ftadd@exp2)^080h,w
  3328  04B0  1D03               	skipz
  3329  04B1  2CB3               	goto	u4051
  3330  04B2  2CB4               	goto	u4050
  3331  04B3                     u4051:
  3332  04B3  2C9E               	goto	l30001573
  3333  04B4                     u4050:
  3334                           	
  3335  04B4                     l206:	
  3336                           	line	129
  3337  04B4  1FDC               	btfss	(___ftadd@sign)^080h,(7)&7
  3338  04B5  2CB7               	goto	u4061
  3339  04B6  2CB8               	goto	u4060
  3340  04B7                     u4061:
  3341  04B7  2CCE               	goto	l30001576
  3342  04B8                     u4060:
  3343                           	
  3344  04B8                     l30001575:	
  3345                           	line	131
  3346  04B8  30FF               	movlw	0FFh
  3347  04B9  06DF               	xorwf	(___ftadd@f1)^080h,f
  3348  04BA  30FF               	movlw	0FFh
  3349  04BB  06E0               	xorwf	(___ftadd@f1+1)^080h,f
  3350  04BC  30FF               	movlw	0FFh
  3351  04BD  06E1               	xorwf	(___ftadd@f1+2)^080h,f
  3352                           	line	132
  3353  04BE  3001               	movlw	01h
  3354  04BF  07DF               	addwf	(___ftadd@f1)^080h,f
  3355  04C0  3000               	movlw	0
  3356  04C1  1103               	clrz
  3357  04C2  1803               	skipnc
  3358  04C3  3E01               	addlw	1
  3359  04C4  1903               	skipnz
  3360  04C5  2CC7               	goto	u4071
  3361  04C6  07E0               	addwf	(___ftadd@f1+1)^080h,f
  3362  04C7                     u4071:
  3363  04C7  3000               	movlw	0
  3364  04C8  1103               	clrz
  3365  04C9  1803               	skipnc
  3366  04CA  3E01               	addlw	1
  3367  04CB  1903               	skipnz
  3368  04CC  2CCE               	goto	u4072
  3369  04CD  07E1               	addwf	(___ftadd@f1+2)^080h,f
  3370  04CE                     u4072:
  3371                           
  3372                           	
  3373  04CE                     l30001576:	
  3374                           	line	134
  3375  04CE  1F5C               	btfss	(___ftadd@sign)^080h,(6)&7
  3376  04CF  2CD1               	goto	u4081
  3377  04D0  2CD2               	goto	u4080
  3378  04D1                     u4081:
  3379  04D1  2CE8               	goto	l30001578
  3380  04D2                     u4080:
  3381                           	
  3382  04D2                     l30001577:	
  3383                           	line	136
  3384  04D2  30FF               	movlw	0FFh
  3385  04D3  06E2               	xorwf	(___ftadd@f2)^080h,f
  3386  04D4  30FF               	movlw	0FFh
  3387  04D5  06E3               	xorwf	(___ftadd@f2+1)^080h,f
  3388  04D6  30FF               	movlw	0FFh
  3389  04D7  06E4               	xorwf	(___ftadd@f2+2)^080h,f
  3390                           	line	137
  3391  04D8  3001               	movlw	01h
  3392  04D9  07E2               	addwf	(___ftadd@f2)^080h,f
  3393  04DA  3000               	movlw	0
  3394  04DB  1103               	clrz
  3395  04DC  1803               	skipnc
  3396  04DD  3E01               	addlw	1
  3397  04DE  1903               	skipnz
  3398  04DF  2CE1               	goto	u4091
  3399  04E0  07E3               	addwf	(___ftadd@f2+1)^080h,f
  3400  04E1                     u4091:
  3401  04E1  3000               	movlw	0
  3402  04E2  1103               	clrz
  3403  04E3  1803               	skipnc
  3404  04E4  3E01               	addlw	1
  3405  04E5  1903               	skipnz
  3406  04E6  2CE8               	goto	u4092
  3407  04E7  07E4               	addwf	(___ftadd@f2+2)^080h,f
  3408  04E8                     u4092:
  3409                           
  3410                           	
  3411  04E8                     l30001578:	
  3412                           	line	139
  3413  04E8  1003               	clrc
  3414  04E9  3000               	movlw	0
  3415  04EA  1803               	btfsc	status,0
  3416  04EB  3001               	movlw	1
  3417  04EC  00DC               	movwf	(___ftadd@sign)^080h
  3418                           	
  3419  04ED                     l30001579:	
  3420                           	line	140
  3421  04ED  085F               	movf	(___ftadd@f1)^080h,w
  3422  04EE  07E2               	addwf	(___ftadd@f2)^080h,f
  3423  04EF  0860               	movf	(___ftadd@f1+1)^080h,w
  3424  04F0  1103               	clrz
  3425  04F1  1803               	skipnc
  3426  04F2  0A60               	incf	(___ftadd@f1+1)^080h,w
  3427  04F3  1903               	skipnz
  3428  04F4  2CF6               	goto	u4101
  3429  04F5  07E3               	addwf	(___ftadd@f2+1)^080h,f
  3430  04F6                     u4101:
  3431  04F6  0861               	movf	(___ftadd@f1+2)^080h,w
  3432  04F7  1103               	clrz
  3433  04F8  1803               	skipnc
  3434  04F9  0A61               	incf	(___ftadd@f1+2)^080h,w
  3435  04FA  1903               	skipnz
  3436  04FB  2CFD               	goto	u4102
  3437  04FC  07E4               	addwf	(___ftadd@f2+2)^080h,f
  3438  04FD                     u4102:
  3439                           
  3440                           	
  3441  04FD                     l30001580:	
  3442                           	line	141
  3443  04FD  1FE4               	btfss	(___ftadd@f2+2)^080h,(23)&7
  3444  04FE  2D00               	goto	u4111
  3445  04FF  2D01               	goto	u4110
  3446  0500                     u4111:
  3447  0500  2D1A               	goto	l30001583
  3448  0501                     u4110:
  3449                           	
  3450  0501                     l30001581:	
  3451                           	line	142
  3452  0501  30FF               	movlw	0FFh
  3453  0502  06E2               	xorwf	(___ftadd@f2)^080h,f
  3454  0503  30FF               	movlw	0FFh
  3455  0504  06E3               	xorwf	(___ftadd@f2+1)^080h,f
  3456  0505  30FF               	movlw	0FFh
  3457  0506  06E4               	xorwf	(___ftadd@f2+2)^080h,f
  3458                           	line	143
  3459  0507  3001               	movlw	01h
  3460  0508  07E2               	addwf	(___ftadd@f2)^080h,f
  3461  0509  3000               	movlw	0
  3462  050A  1103               	clrz
  3463  050B  1803               	skipnc
  3464  050C  3E01               	addlw	1
  3465  050D  1903               	skipnz
  3466  050E  2D10               	goto	u4121
  3467  050F  07E3               	addwf	(___ftadd@f2+1)^080h,f
  3468  0510                     u4121:
  3469  0510  3000               	movlw	0
  3470  0511  1103               	clrz
  3471  0512  1803               	skipnc
  3472  0513  3E01               	addlw	1
  3473  0514  1903               	skipnz
  3474  0515  2D17               	goto	u4122
  3475  0516  07E4               	addwf	(___ftadd@f2+2)^080h,f
  3476  0517                     u4122:
  3477                           
  3478                           	
  3479  0517                     l30001582:	
  3480                           	line	144
  3481  0517  01DC               	clrf	(___ftadd@sign)^080h
  3482  0518  1403               	bsf	status,0
  3483  0519  0DDC               	rlf	(___ftadd@sign)^080h,f
  3484                           	
  3485  051A                     l30001583:	
  3486                           	line	146
  3487  051A  0862               	movf	(___ftadd@f2)^080h,w
  3488  051B  1283               	bcf	status, 5	;RP0=0, select bank0
  3489  051C  1303               	bcf	status, 6	;RP1=0, select bank0
  3490  051D  00A0               	movwf	(?___ftpack)
  3491  051E  1683               	bsf	status, 5	;RP0=1, select bank1
  3492  051F  1303               	bcf	status, 6	;RP1=0, select bank1
  3493  0520  0863               	movf	(___ftadd@f2+1)^080h,w
  3494  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  3495  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  3496  0523  00A1               	movwf	(?___ftpack+1)
  3497  0524  1683               	bsf	status, 5	;RP0=1, select bank1
  3498  0525  1303               	bcf	status, 6	;RP1=0, select bank1
  3499  0526  0864               	movf	(___ftadd@f2+2)^080h,w
  3500  0527  1283               	bcf	status, 5	;RP0=0, select bank0
  3501  0528  1303               	bcf	status, 6	;RP1=0, select bank0
  3502  0529  00A2               	movwf	(?___ftpack+2)
  3503  052A  1683               	bsf	status, 5	;RP0=1, select bank1
  3504  052B  1303               	bcf	status, 6	;RP1=0, select bank1
  3505  052C  085E               	movf	(___ftadd@exp1)^080h,w
  3506  052D  1283               	bcf	status, 5	;RP0=0, select bank0
  3507  052E  1303               	bcf	status, 6	;RP1=0, select bank0
  3508  052F  00BA               	movwf	(??___ftadd+0+0)
  3509  0530  083A               	movf	(??___ftadd+0+0),w
  3510  0531  00A3               	movwf	0+(?___ftpack)+03h
  3511  0532  1683               	bsf	status, 5	;RP0=1, select bank1
  3512  0533  1303               	bcf	status, 6	;RP1=0, select bank1
  3513  0534  085C               	movf	(___ftadd@sign)^080h,w
  3514  0535  1283               	bcf	status, 5	;RP0=0, select bank0
  3515  0536  1303               	bcf	status, 6	;RP1=0, select bank0
  3516  0537  00BB               	movwf	(??___ftadd+1+0)
  3517  0538  083B               	movf	(??___ftadd+1+0),w
  3518  0539  00A4               	movwf	0+(?___ftpack)+04h
  3519  053A  120A  158A  2488   	fcall	___ftpack
              120A  118A         
  3520  053F  1383               	bcf	status, 7	;select IRP bank0
  3521  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  3522  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  3523  0542  0820               	movf	(0+(?___ftpack)),w
  3524  0543  1683               	bsf	status, 5	;RP0=1, select bank1
  3525  0544  1303               	bcf	status, 6	;RP1=0, select bank1
  3526  0545  00DF               	movwf	(?___ftadd)^080h
  3527  0546  1283               	bcf	status, 5	;RP0=0, select bank0
  3528  0547  1303               	bcf	status, 6	;RP1=0, select bank0
  3529  0548  0821               	movf	(1+(?___ftpack)),w
  3530  0549  1683               	bsf	status, 5	;RP0=1, select bank1
  3531  054A  1303               	bcf	status, 6	;RP1=0, select bank1
  3532  054B  00E0               	movwf	(?___ftadd+1)^080h
  3533  054C  1283               	bcf	status, 5	;RP0=0, select bank0
  3534  054D  1303               	bcf	status, 6	;RP1=0, select bank0
  3535  054E  0822               	movf	(2+(?___ftpack)),w
  3536  054F  1683               	bsf	status, 5	;RP0=1, select bank1
  3537  0550  1303               	bcf	status, 6	;RP1=0, select bank1
  3538  0551  00E1               	movwf	(?___ftadd+2)^080h
  3539                           	
  3540  0552                     l194:	
  3541  0552  0008               	return
  3542                           	opt stack 0
  3543                           GLOBAL	__end_of___ftadd
  3544  0553                     	__end_of___ftadd:
  3545                           ; =============== function ___ftadd ends ============
  3546                           
  3547                           psect	text211,local,class=CODE,delta=2
  3548                           global __ptext211
  3549  0F55                     __ptext211:
  3550                           	line	148
  3551                           	signat	___ftadd,8315
  3552                           	global	___fttol
  3553                           
  3554                           ; *************** function ___fttol *****************
  3555                           ; Defined at:
  3556                           ;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\fttol.c"
  3557                           ; Parameters:    Size  Location     Type
  3558                           ;  f1              3   15[BANK1 ] float 
  3559                           ; Auto vars:     Size  Location     Type
  3560                           ;  lval            4   10[BANK1 ] unsigned long 
  3561                           ;  exp1            1   14[BANK1 ] unsigned char 
  3562                           ;  sign1           1    9[BANK1 ] unsigned char 
  3563                           ; Return value:  Size  Location     Type
  3564                           ;                  4   15[BANK1 ] long 
  3565                           ; Registers used:
  3566                           ;		wreg, status,2, status,0
  3567                           ; Tracked objects:
  3568                           ;		On entry : 0/0
  3569                           ;		On exit  : 0/0
  3570                           ;		Unchanged: 0/0
  3571                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572                           ;      Locals:         0       3      10       0       0
  3573                           ;      Temp:     3
  3574                           ;      Total:   13
  3575                           ; This function calls:
  3576                           ; This function is called by:
  3577                           ;		_Read_ADC
  3578                           ; This function uses a non-reentrant model
  3579                           ; 
  3580                           psect	text211
  3581                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\fttol.c"
  3582                           	line	45
  3583                           	global	__size_of___fttol
  3584  00AB                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  3585                           	
  3586  0F55                     ___fttol:	
  3587                           	opt stack 5
  3588                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3589                           	line	49
  3590                           	
  3591  0F55                     l30001619:	
  3592  0F55  1683               	bsf	status, 5	;RP0=1, select bank1
  3593  0F56  1303               	bcf	status, 6	;RP1=0, select bank1
  3594  0F57  086B               	movf	(___fttol@f1)^080h,w
  3595  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  3596  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  3597  0F5A  00BD               	movwf	(??___fttol+0+0)
  3598  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  3599  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  3600  0F5D  086C               	movf	(___fttol@f1+1)^080h,w
  3601  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  3602  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  3603  0F60  00BE               	movwf	(??___fttol+0+0+1)
  3604  0F61  1683               	bsf	status, 5	;RP0=1, select bank1
  3605  0F62  1303               	bcf	status, 6	;RP1=0, select bank1
  3606  0F63  086D               	movf	(___fttol@f1+2)^080h,w
  3607  0F64  1283               	bcf	status, 5	;RP0=0, select bank0
  3608  0F65  1303               	bcf	status, 6	;RP1=0, select bank0
  3609  0F66  00BF               	movwf	(??___fttol+0+0+2)
  3610  0F67  1003               	clrc
  3611  0F68  0D3E               	rlf	(??___fttol+0+1),w
  3612  0F69  0D3F               	rlf	(??___fttol+0+2),w
  3613  0F6A  1683               	bsf	status, 5	;RP0=1, select bank1
  3614  0F6B  1303               	bcf	status, 6	;RP1=0, select bank1
  3615  0F6C  00EA               	movwf	(___fttol@exp1)^080h
  3616  0F6D  08EA               	movf	((___fttol@exp1)^080h)&07fh,f
  3617  0F6E  1D03               	skipz
  3618  0F6F  2F71               	goto	u4321
  3619  0F70  2F72               	goto	u4320
  3620  0F71                     u4321:
  3621  0F71  2F7B               	goto	l30001622
  3622  0F72                     u4320:
  3623                           	
  3624  0F72                     l30001620:	
  3625                           	line	50
  3626  0F72  3000               	movlw	0
  3627  0F73  00EE               	movwf	(?___fttol+3)^080h
  3628  0F74  3000               	movlw	0
  3629  0F75  00ED               	movwf	(?___fttol+2)^080h
  3630  0F76  3000               	movlw	0
  3631  0F77  00EC               	movwf	(?___fttol+1)^080h
  3632  0F78  3000               	movlw	0
  3633  0F79  00EB               	movwf	(?___fttol)^080h
  3634                           
  3635  0F7A  2FFF               	goto	l283
  3636                           	
  3637  0F7B                     l30001622:	
  3638                           	line	51
  3639  0F7B  086B               	movf	(___fttol@f1)^080h,w
  3640  0F7C  1283               	bcf	status, 5	;RP0=0, select bank0
  3641  0F7D  1303               	bcf	status, 6	;RP1=0, select bank0
  3642  0F7E  00BD               	movwf	(??___fttol+0+0)
  3643  0F7F  1683               	bsf	status, 5	;RP0=1, select bank1
  3644  0F80  1303               	bcf	status, 6	;RP1=0, select bank1
  3645  0F81  086C               	movf	(___fttol@f1+1)^080h,w
  3646  0F82  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  0F83  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  0F84  00BE               	movwf	(??___fttol+0+0+1)
  3649  0F85  1683               	bsf	status, 5	;RP0=1, select bank1
  3650  0F86  1303               	bcf	status, 6	;RP1=0, select bank1
  3651  0F87  086D               	movf	(___fttol@f1+2)^080h,w
  3652  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  3653  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  3654  0F8A  00BF               	movwf	(??___fttol+0+0+2)
  3655  0F8B  3017               	movlw	017h
  3656  0F8C                     u4335:
  3657  0F8C  1003               	clrc
  3658  0F8D  0CBF               	rrf	(??___fttol+0+2),f
  3659  0F8E  0CBE               	rrf	(??___fttol+0+1),f
  3660  0F8F  0CBD               	rrf	(??___fttol+0+0),f
  3661  0F90                     u4330:
  3662  0F90  3EFF               	addlw	-1
  3663  0F91  1D03               	skipz
  3664  0F92  2F8C               	goto	u4335
  3665  0F93  083D               	movf	0+(??___fttol+0+0),w
  3666  0F94  1683               	bsf	status, 5	;RP0=1, select bank1
  3667  0F95  1303               	bcf	status, 6	;RP1=0, select bank1
  3668  0F96  00E5               	movwf	(___fttol@sign1)^080h
  3669                           	
  3670  0F97                     l30001623:	
  3671                           	line	52
  3672  0F97  17EC               	bsf	(___fttol@f1)^080h+(15/8),(15)&7
  3673                           	
  3674  0F98                     l30001624:	
  3675                           	line	53
  3676  0F98  30FF               	movlw	0FFh
  3677  0F99  05EB               	andwf	(___fttol@f1)^080h,f
  3678  0F9A  30FF               	movlw	0FFh
  3679  0F9B  05EC               	andwf	(___fttol@f1+1)^080h,f
  3680  0F9C  3000               	movlw	0
  3681  0F9D  05ED               	andwf	(___fttol@f1+2)^080h,f
  3682                           	
  3683  0F9E                     l30001625:	
  3684                           	line	54
  3685  0F9E  086B               	movf	(___fttol@f1)^080h,w
  3686  0F9F  00E6               	movwf	(___fttol@lval)^080h
  3687  0FA0  086C               	movf	(___fttol@f1+1)^080h,w
  3688  0FA1  00E7               	movwf	((___fttol@lval)^080h)+1
  3689                           	
  3690  0FA2  086D               	movf	(___fttol@f1+2)^080h,w
  3691  0FA3  00E8               	movwf	((___fttol@lval)^080h)+2
  3692                           	
  3693  0FA4  01E9               	clrf	3+(___fttol@lval)^080h
  3694                           	
  3695  0FA5                     l30001626:	
  3696                           	line	55
  3697  0FA5  308E               	movlw	low(08Eh)
  3698  0FA6  02EA               	subwf	(___fttol@exp1)^080h,f
  3699                           	
  3700  0FA7                     l30001627:	
  3701                           	line	56
  3702  0FA7  1FEA               	btfss	(___fttol@exp1)^080h,7
  3703  0FA8  2FAA               	goto	u4341
  3704  0FA9  2FAB               	goto	u4340
  3705  0FAA                     u4341:
  3706  0FAA  2FC9               	goto	l30001632
  3707  0FAB                     u4340:
  3708                           	
  3709  0FAB                     l30001628:	
  3710                           	line	57
  3711  0FAB  086A               	movf	(___fttol@exp1)^080h,w
  3712  0FAC  3A80               	xorlw	80h
  3713  0FAD  3E8F               	addlw	-((-15)^80h)
  3714  0FAE  1803               	skipnc
  3715  0FAF  2FB1               	goto	u4351
  3716  0FB0  2FB2               	goto	u4350
  3717  0FB1                     u4351:
  3718  0FB1  2FB3               	goto	l30001631
  3719  0FB2                     u4350:
  3720  0FB2  2F72               	goto	l30001620
  3721                           	
  3722  0FB3                     l30001631:	
  3723                           	line	60
  3724  0FB3  3001               	movlw	01h
  3725  0FB4                     u4365:
  3726  0FB4  1003               	clrc
  3727  0FB5  0CE9               	rrf	(___fttol@lval+3)^080h,f
  3728  0FB6  0CE8               	rrf	(___fttol@lval+2)^080h,f
  3729  0FB7  0CE7               	rrf	(___fttol@lval+1)^080h,f
  3730  0FB8  0CE6               	rrf	(___fttol@lval)^080h,f
  3731  0FB9  3EFF               	addlw	-1
  3732  0FBA  1D03               	skipz
  3733  0FBB  2FB4               	goto	u4365
  3734                           
  3735                           	line	61
  3736  0FBC  3001               	movlw	(01h)
  3737  0FBD  1283               	bcf	status, 5	;RP0=0, select bank0
  3738  0FBE  1303               	bcf	status, 6	;RP1=0, select bank0
  3739  0FBF  00BD               	movwf	(??___fttol+0+0)
  3740  0FC0  083D               	movf	(??___fttol+0+0),w
  3741  0FC1  1683               	bsf	status, 5	;RP0=1, select bank1
  3742  0FC2  1303               	bcf	status, 6	;RP1=0, select bank1
  3743  0FC3  07EA               	addwf	(___fttol@exp1)^080h,f
  3744  0FC4  1D03               	btfss	status,2
  3745  0FC5  2FC7               	goto	u4371
  3746  0FC6  2FC8               	goto	u4370
  3747  0FC7                     u4371:
  3748  0FC7  2FB3               	goto	l30001631
  3749  0FC8                     u4370:
  3750  0FC8  2FE8               	goto	l30001637
  3751                           	
  3752  0FC9                     l30001632:	
  3753                           	line	63
  3754  0FC9  3018               	movlw	(018h)
  3755  0FCA  026A               	subwf	(___fttol@exp1)^080h,w
  3756  0FCB  1C03               	skipc
  3757  0FCC  2FCE               	goto	u4381
  3758  0FCD  2FCF               	goto	u4380
  3759  0FCE                     u4381:
  3760  0FCE  2FE3               	goto	l30001636
  3761  0FCF                     u4380:
  3762  0FCF  2F72               	goto	l30001620
  3763                           	
  3764  0FD0                     l30001635:	
  3765                           	line	66
  3766  0FD0  3001               	movlw	01h
  3767  0FD1  1283               	bcf	status, 5	;RP0=0, select bank0
  3768  0FD2  1303               	bcf	status, 6	;RP1=0, select bank0
  3769  0FD3  00BD               	movwf	(??___fttol+0+0)
  3770  0FD4                     u4395:
  3771  0FD4  1003               	clrc
  3772  0FD5  1683               	bsf	status, 5	;RP0=1, select bank1
  3773  0FD6  1303               	bcf	status, 6	;RP1=0, select bank1
  3774  0FD7  0DE6               	rlf	(___fttol@lval)^080h,f
  3775  0FD8  0DE7               	rlf	(___fttol@lval+1)^080h,f
  3776  0FD9  0DE8               	rlf	(___fttol@lval+2)^080h,f
  3777  0FDA  0DE9               	rlf	(___fttol@lval+3)^080h,f
  3778  0FDB  1283               	bcf	status, 5	;RP0=0, select bank0
  3779  0FDC  1303               	bcf	status, 6	;RP1=0, select bank0
  3780  0FDD  0BBD               	decfsz	(??___fttol+0+0)
  3781  0FDE  2FD4               	goto	u4395
  3782                           	line	67
  3783  0FDF  3001               	movlw	low(01h)
  3784  0FE0  1683               	bsf	status, 5	;RP0=1, select bank1
  3785  0FE1  1303               	bcf	status, 6	;RP1=0, select bank1
  3786  0FE2  02EA               	subwf	(___fttol@exp1)^080h,f
  3787                           	
  3788  0FE3                     l30001636:	
  3789                           	line	65
  3790  0FE3  08EA               	movf	(___fttol@exp1)^080h,f
  3791  0FE4  1D03               	skipz
  3792  0FE5  2FE7               	goto	u4401
  3793  0FE6  2FE8               	goto	u4400
  3794  0FE7                     u4401:
  3795  0FE7  2FD0               	goto	l30001635
  3796  0FE8                     u4400:
  3797                           	
  3798  0FE8                     l30001637:	
  3799                           	line	70
  3800  0FE8  0865               	movf	(___fttol@sign1)^080h,w
  3801  0FE9  1D03               	skipz
  3802  0FEA  2FEC               	goto	u4410
  3803  0FEB  2FF7               	goto	l30001639
  3804  0FEC                     u4410:
  3805                           	
  3806  0FEC                     l30001638:	
  3807                           	line	71
  3808  0FEC  09E6               	comf	(___fttol@lval)^080h,f
  3809  0FED  09E7               	comf	(___fttol@lval+1)^080h,f
  3810  0FEE  09E8               	comf	(___fttol@lval+2)^080h,f
  3811  0FEF  09E9               	comf	(___fttol@lval+3)^080h,f
  3812  0FF0  0AE6               	incf	(___fttol@lval)^080h,f
  3813  0FF1  1903               	skipnz
  3814  0FF2  0AE7               	incf	(___fttol@lval+1)^080h,f
  3815  0FF3  1903               	skipnz
  3816  0FF4  0AE8               	incf	(___fttol@lval+2)^080h,f
  3817  0FF5  1903               	skipnz
  3818  0FF6  0AE9               	incf	(___fttol@lval+3)^080h,f
  3819                           	
  3820  0FF7                     l30001639:	
  3821                           	line	72
  3822  0FF7  0869               	movf	(___fttol@lval+3)^080h,w
  3823  0FF8  00EE               	movwf	(?___fttol+3)^080h
  3824  0FF9  0868               	movf	(___fttol@lval+2)^080h,w
  3825  0FFA  00ED               	movwf	(?___fttol+2)^080h
  3826  0FFB  0867               	movf	(___fttol@lval+1)^080h,w
  3827  0FFC  00EC               	movwf	(?___fttol+1)^080h
  3828  0FFD  0866               	movf	(___fttol@lval)^080h,w
  3829  0FFE  00EB               	movwf	(?___fttol)^080h
  3830                           
  3831                           	
  3832  0FFF                     l283:	
  3833  0FFF  0008               	return
  3834                           	opt stack 0
  3835                           GLOBAL	__end_of___fttol
  3836  1000                     	__end_of___fttol:
  3837                           ; =============== function ___fttol ends ============
  3838                           
  3839                           psect	text212,local,class=CODE,delta=2
  3840                           global __ptext212
  3841  0553                     __ptext212:
  3842                           	line	73
  3843                           	signat	___fttol,4220
  3844                           	global	_send_dec
  3845                           
  3846                           ; *************** function _send_dec *****************
  3847                           ; Defined at:
  3848                           ;		line 416 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  3849                           ; Parameters:    Size  Location     Type
  3850                           ;  data            4   13[BANK0 ] unsigned long 
  3851                           ;  num_dig         1   17[BANK0 ] unsigned char 
  3852                           ; Auto vars:     Size  Location     Type
  3853                           ;		None
  3854                           ; Return value:  Size  Location     Type
  3855                           ;		None               void
  3856                           ; Registers used:
  3857                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3858                           ; Tracked objects:
  3859                           ;		On entry : 0/0
  3860                           ;		On exit  : 0/0
  3861                           ;		Unchanged: 0/0
  3862                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3863                           ;      Locals:         0       5       0       0       0
  3864                           ;      Temp:     0
  3865                           ;      Total:    5
  3866                           ; This function calls:
  3867                           ;		___llmod
  3868                           ;		___lldiv
  3869                           ;		_send_char
  3870                           ; This function is called by:
  3871                           ;		_tamp
  3872                           ; This function uses a non-reentrant model
  3873                           ; 
  3874                           psect	text212
  3875                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  3876                           	line	416
  3877                           	global	__size_of_send_dec
  3878  02AD                     	__size_of_send_dec	equ	__end_of_send_dec-_send_dec
  3879                           ;MVC.c: 415: void send_dec(unsigned long data, unsigned char num_dig)
  3880                           ;MVC.c: 416: {
  3881                           	
  3882  0553                     _send_dec:	
  3883                           	opt stack 5
  3884                           ; Regs used in _send_dec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3885                           	line	417
  3886                           	
  3887  0553                     l30001436:	
  3888                           ;MVC.c: 417: if(num_dig >= 10)
  3889  0553  300A               	movlw	(0Ah)
  3890  0554  1283               	bcf	status, 5	;RP0=0, select bank0
  3891  0555  1303               	bcf	status, 6	;RP1=0, select bank0
  3892  0556  0231               	subwf	(send_dec@num_dig),w
  3893  0557  1C03               	skipc
  3894  0558  2D5A               	goto	u3451
  3895  0559  2D5B               	goto	u3450
  3896  055A                     u3451:
  3897  055A  2D9A               	goto	l30001439
  3898  055B                     u3450:
  3899                           	
  3900  055B                     l30001437:	
  3901                           	line	419
  3902                           ;MVC.c: 418: {
  3903                           ;MVC.c: 419: data = data % 10000000000;
  3904  055B  0830               	movf	(send_dec@data+3),w
  3905  055C  00A3               	movwf	(?___llmod+3)
  3906  055D  082F               	movf	(send_dec@data+2),w
  3907  055E  00A2               	movwf	(?___llmod+2)
  3908  055F  082E               	movf	(send_dec@data+1),w
  3909  0560  00A1               	movwf	(?___llmod+1)
  3910  0561  082D               	movf	(send_dec@data),w
  3911  0562  00A0               	movwf	(?___llmod)
  3912                           
  3913  0563  3054               	movlw	054h
  3914  0564  00A7               	movwf	3+(?___llmod)+04h
  3915  0565  300B               	movlw	0Bh
  3916  0566  00A6               	movwf	2+(?___llmod)+04h
  3917  0567  30E4               	movlw	0E4h
  3918  0568  00A5               	movwf	1+(?___llmod)+04h
  3919  0569  3000               	movlw	0
  3920  056A  00A4               	movwf	0+(?___llmod)+04h
  3921                           
  3922  056B  120A  158A  2358   	fcall	___llmod
              120A  118A         
  3923  0570  1383               	bcf	status, 7	;select IRP bank0
  3924  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  3925  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  3926  0573  0823               	movf	(3+(?___llmod)),w
  3927  0574  00B0               	movwf	(send_dec@data+3)
  3928  0575  0822               	movf	(2+(?___llmod)),w
  3929  0576  00AF               	movwf	(send_dec@data+2)
  3930  0577  0821               	movf	(1+(?___llmod)),w
  3931  0578  00AE               	movwf	(send_dec@data+1)
  3932  0579  0820               	movf	(0+(?___llmod)),w
  3933  057A  00AD               	movwf	(send_dec@data)
  3934                           
  3935                           	
  3936  057B                     l30001438:	
  3937                           	line	420
  3938                           ;MVC.c: 420: send_char(data / 1000000000 + 0x30);
  3939  057B  0830               	movf	(send_dec@data+3),w
  3940  057C  00A8               	movwf	(?___lldiv+3)
  3941  057D  082F               	movf	(send_dec@data+2),w
  3942  057E  00A7               	movwf	(?___lldiv+2)
  3943  057F  082E               	movf	(send_dec@data+1),w
  3944  0580  00A6               	movwf	(?___lldiv+1)
  3945  0581  082D               	movf	(send_dec@data),w
  3946  0582  00A5               	movwf	(?___lldiv)
  3947                           
  3948  0583  303B               	movlw	03Bh
  3949  0584  00AC               	movwf	3+(?___lldiv)+04h
  3950  0585  309A               	movlw	09Ah
  3951  0586  00AB               	movwf	2+(?___lldiv)+04h
  3952  0587  30CA               	movlw	0CAh
  3953  0588  00AA               	movwf	1+(?___lldiv)+04h
  3954  0589  3000               	movlw	0
  3955  058A  00A9               	movwf	0+(?___lldiv)+04h
  3956                           
  3957  058B  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  3958  0590  1383               	bcf	status, 7	;select IRP bank0
  3959  0591  1283               	bcf	status, 5	;RP0=0, select bank0
  3960  0592  1303               	bcf	status, 6	;RP1=0, select bank0
  3961  0593  0825               	movf	(0+(?___lldiv)),w
  3962  0594  3E30               	addlw	030h
  3963  0595  120A  158A  261D   	fcall	_send_char
              120A  118A         
  3964                           	
  3965  059A                     l30001439:	
  3966                           	line	422
  3967                           ;MVC.c: 421: }
  3968                           ;MVC.c: 422: if(num_dig >= 9)
  3969  059A  3009               	movlw	(09h)
  3970  059B  1283               	bcf	status, 5	;RP0=0, select bank0
  3971  059C  1303               	bcf	status, 6	;RP1=0, select bank0
  3972  059D  0231               	subwf	(send_dec@num_dig),w
  3973  059E  1C03               	skipc
  3974  059F  2DA1               	goto	u3461
  3975  05A0  2DA2               	goto	u3460
  3976  05A1                     u3461:
  3977  05A1  2DE1               	goto	l30001442
  3978  05A2                     u3460:
  3979                           	
  3980  05A2                     l30001440:	
  3981                           	line	424
  3982                           ;MVC.c: 423: {
  3983                           ;MVC.c: 424: data = data % 1000000000;
  3984  05A2  0830               	movf	(send_dec@data+3),w
  3985  05A3  00A3               	movwf	(?___llmod+3)
  3986  05A4  082F               	movf	(send_dec@data+2),w
  3987  05A5  00A2               	movwf	(?___llmod+2)
  3988  05A6  082E               	movf	(send_dec@data+1),w
  3989  05A7  00A1               	movwf	(?___llmod+1)
  3990  05A8  082D               	movf	(send_dec@data),w
  3991  05A9  00A0               	movwf	(?___llmod)
  3992                           
  3993  05AA  303B               	movlw	03Bh
  3994  05AB  00A7               	movwf	3+(?___llmod)+04h
  3995  05AC  309A               	movlw	09Ah
  3996  05AD  00A6               	movwf	2+(?___llmod)+04h
  3997  05AE  30CA               	movlw	0CAh
  3998  05AF  00A5               	movwf	1+(?___llmod)+04h
  3999  05B0  3000               	movlw	0
  4000  05B1  00A4               	movwf	0+(?___llmod)+04h
  4001                           
  4002  05B2  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4003  05B7  1383               	bcf	status, 7	;select IRP bank0
  4004  05B8  1283               	bcf	status, 5	;RP0=0, select bank0
  4005  05B9  1303               	bcf	status, 6	;RP1=0, select bank0
  4006  05BA  0823               	movf	(3+(?___llmod)),w
  4007  05BB  00B0               	movwf	(send_dec@data+3)
  4008  05BC  0822               	movf	(2+(?___llmod)),w
  4009  05BD  00AF               	movwf	(send_dec@data+2)
  4010  05BE  0821               	movf	(1+(?___llmod)),w
  4011  05BF  00AE               	movwf	(send_dec@data+1)
  4012  05C0  0820               	movf	(0+(?___llmod)),w
  4013  05C1  00AD               	movwf	(send_dec@data)
  4014                           
  4015                           	
  4016  05C2                     l30001441:	
  4017                           	line	425
  4018                           ;MVC.c: 425: send_char(data / 100000000 + 0x30);
  4019  05C2  0830               	movf	(send_dec@data+3),w
  4020  05C3  00A8               	movwf	(?___lldiv+3)
  4021  05C4  082F               	movf	(send_dec@data+2),w
  4022  05C5  00A7               	movwf	(?___lldiv+2)
  4023  05C6  082E               	movf	(send_dec@data+1),w
  4024  05C7  00A6               	movwf	(?___lldiv+1)
  4025  05C8  082D               	movf	(send_dec@data),w
  4026  05C9  00A5               	movwf	(?___lldiv)
  4027                           
  4028  05CA  3005               	movlw	05h
  4029  05CB  00AC               	movwf	3+(?___lldiv)+04h
  4030  05CC  30F5               	movlw	0F5h
  4031  05CD  00AB               	movwf	2+(?___lldiv)+04h
  4032  05CE  30E1               	movlw	0E1h
  4033  05CF  00AA               	movwf	1+(?___lldiv)+04h
  4034  05D0  3000               	movlw	0
  4035  05D1  00A9               	movwf	0+(?___lldiv)+04h
  4036                           
  4037  05D2  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4038  05D7  1383               	bcf	status, 7	;select IRP bank0
  4039  05D8  1283               	bcf	status, 5	;RP0=0, select bank0
  4040  05D9  1303               	bcf	status, 6	;RP1=0, select bank0
  4041  05DA  0825               	movf	(0+(?___lldiv)),w
  4042  05DB  3E30               	addlw	030h
  4043  05DC  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4044                           	
  4045  05E1                     l30001442:	
  4046                           	line	427
  4047                           ;MVC.c: 426: }
  4048                           ;MVC.c: 427: if(num_dig >= 8)
  4049  05E1  3008               	movlw	(08h)
  4050  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4051  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4052  05E4  0231               	subwf	(send_dec@num_dig),w
  4053  05E5  1C03               	skipc
  4054  05E6  2DE8               	goto	u3471
  4055  05E7  2DE9               	goto	u3470
  4056  05E8                     u3471:
  4057  05E8  2E28               	goto	l30001445
  4058  05E9                     u3470:
  4059                           	
  4060  05E9                     l30001443:	
  4061                           	line	429
  4062                           ;MVC.c: 428: {
  4063                           ;MVC.c: 429: data = data % 100000000;
  4064  05E9  0830               	movf	(send_dec@data+3),w
  4065  05EA  00A3               	movwf	(?___llmod+3)
  4066  05EB  082F               	movf	(send_dec@data+2),w
  4067  05EC  00A2               	movwf	(?___llmod+2)
  4068  05ED  082E               	movf	(send_dec@data+1),w
  4069  05EE  00A1               	movwf	(?___llmod+1)
  4070  05EF  082D               	movf	(send_dec@data),w
  4071  05F0  00A0               	movwf	(?___llmod)
  4072                           
  4073  05F1  3005               	movlw	05h
  4074  05F2  00A7               	movwf	3+(?___llmod)+04h
  4075  05F3  30F5               	movlw	0F5h
  4076  05F4  00A6               	movwf	2+(?___llmod)+04h
  4077  05F5  30E1               	movlw	0E1h
  4078  05F6  00A5               	movwf	1+(?___llmod)+04h
  4079  05F7  3000               	movlw	0
  4080  05F8  00A4               	movwf	0+(?___llmod)+04h
  4081                           
  4082  05F9  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4083  05FE  1383               	bcf	status, 7	;select IRP bank0
  4084  05FF  1283               	bcf	status, 5	;RP0=0, select bank0
  4085  0600  1303               	bcf	status, 6	;RP1=0, select bank0
  4086  0601  0823               	movf	(3+(?___llmod)),w
  4087  0602  00B0               	movwf	(send_dec@data+3)
  4088  0603  0822               	movf	(2+(?___llmod)),w
  4089  0604  00AF               	movwf	(send_dec@data+2)
  4090  0605  0821               	movf	(1+(?___llmod)),w
  4091  0606  00AE               	movwf	(send_dec@data+1)
  4092  0607  0820               	movf	(0+(?___llmod)),w
  4093  0608  00AD               	movwf	(send_dec@data)
  4094                           
  4095                           	
  4096  0609                     l30001444:	
  4097                           	line	430
  4098                           ;MVC.c: 430: send_char(data / 10000000 + 0x30);
  4099  0609  0830               	movf	(send_dec@data+3),w
  4100  060A  00A8               	movwf	(?___lldiv+3)
  4101  060B  082F               	movf	(send_dec@data+2),w
  4102  060C  00A7               	movwf	(?___lldiv+2)
  4103  060D  082E               	movf	(send_dec@data+1),w
  4104  060E  00A6               	movwf	(?___lldiv+1)
  4105  060F  082D               	movf	(send_dec@data),w
  4106  0610  00A5               	movwf	(?___lldiv)
  4107                           
  4108  0611  3000               	movlw	0
  4109  0612  00AC               	movwf	3+(?___lldiv)+04h
  4110  0613  3098               	movlw	098h
  4111  0614  00AB               	movwf	2+(?___lldiv)+04h
  4112  0615  3096               	movlw	096h
  4113  0616  00AA               	movwf	1+(?___lldiv)+04h
  4114  0617  3080               	movlw	080h
  4115  0618  00A9               	movwf	0+(?___lldiv)+04h
  4116                           
  4117  0619  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4118  061E  1383               	bcf	status, 7	;select IRP bank0
  4119  061F  1283               	bcf	status, 5	;RP0=0, select bank0
  4120  0620  1303               	bcf	status, 6	;RP1=0, select bank0
  4121  0621  0825               	movf	(0+(?___lldiv)),w
  4122  0622  3E30               	addlw	030h
  4123  0623  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4124                           	
  4125  0628                     l30001445:	
  4126                           	line	432
  4127                           ;MVC.c: 431: }
  4128                           ;MVC.c: 432: if(num_dig >= 7)
  4129  0628  3007               	movlw	(07h)
  4130  0629  1283               	bcf	status, 5	;RP0=0, select bank0
  4131  062A  1303               	bcf	status, 6	;RP1=0, select bank0
  4132  062B  0231               	subwf	(send_dec@num_dig),w
  4133  062C  1C03               	skipc
  4134  062D  2E2F               	goto	u3481
  4135  062E  2E30               	goto	u3480
  4136  062F                     u3481:
  4137  062F  2E6F               	goto	l30001448
  4138  0630                     u3480:
  4139                           	
  4140  0630                     l30001446:	
  4141                           	line	434
  4142                           ;MVC.c: 433: {
  4143                           ;MVC.c: 434: data = data % 10000000;
  4144  0630  0830               	movf	(send_dec@data+3),w
  4145  0631  00A3               	movwf	(?___llmod+3)
  4146  0632  082F               	movf	(send_dec@data+2),w
  4147  0633  00A2               	movwf	(?___llmod+2)
  4148  0634  082E               	movf	(send_dec@data+1),w
  4149  0635  00A1               	movwf	(?___llmod+1)
  4150  0636  082D               	movf	(send_dec@data),w
  4151  0637  00A0               	movwf	(?___llmod)
  4152                           
  4153  0638  3000               	movlw	0
  4154  0639  00A7               	movwf	3+(?___llmod)+04h
  4155  063A  3098               	movlw	098h
  4156  063B  00A6               	movwf	2+(?___llmod)+04h
  4157  063C  3096               	movlw	096h
  4158  063D  00A5               	movwf	1+(?___llmod)+04h
  4159  063E  3080               	movlw	080h
  4160  063F  00A4               	movwf	0+(?___llmod)+04h
  4161                           
  4162  0640  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4163  0645  1383               	bcf	status, 7	;select IRP bank0
  4164  0646  1283               	bcf	status, 5	;RP0=0, select bank0
  4165  0647  1303               	bcf	status, 6	;RP1=0, select bank0
  4166  0648  0823               	movf	(3+(?___llmod)),w
  4167  0649  00B0               	movwf	(send_dec@data+3)
  4168  064A  0822               	movf	(2+(?___llmod)),w
  4169  064B  00AF               	movwf	(send_dec@data+2)
  4170  064C  0821               	movf	(1+(?___llmod)),w
  4171  064D  00AE               	movwf	(send_dec@data+1)
  4172  064E  0820               	movf	(0+(?___llmod)),w
  4173  064F  00AD               	movwf	(send_dec@data)
  4174                           
  4175                           	
  4176  0650                     l30001447:	
  4177                           	line	435
  4178                           ;MVC.c: 435: send_char(data / 1000000 + 0x30);
  4179  0650  0830               	movf	(send_dec@data+3),w
  4180  0651  00A8               	movwf	(?___lldiv+3)
  4181  0652  082F               	movf	(send_dec@data+2),w
  4182  0653  00A7               	movwf	(?___lldiv+2)
  4183  0654  082E               	movf	(send_dec@data+1),w
  4184  0655  00A6               	movwf	(?___lldiv+1)
  4185  0656  082D               	movf	(send_dec@data),w
  4186  0657  00A5               	movwf	(?___lldiv)
  4187                           
  4188  0658  3000               	movlw	0
  4189  0659  00AC               	movwf	3+(?___lldiv)+04h
  4190  065A  300F               	movlw	0Fh
  4191  065B  00AB               	movwf	2+(?___lldiv)+04h
  4192  065C  3042               	movlw	042h
  4193  065D  00AA               	movwf	1+(?___lldiv)+04h
  4194  065E  3040               	movlw	040h
  4195  065F  00A9               	movwf	0+(?___lldiv)+04h
  4196                           
  4197  0660  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4198  0665  1383               	bcf	status, 7	;select IRP bank0
  4199  0666  1283               	bcf	status, 5	;RP0=0, select bank0
  4200  0667  1303               	bcf	status, 6	;RP1=0, select bank0
  4201  0668  0825               	movf	(0+(?___lldiv)),w
  4202  0669  3E30               	addlw	030h
  4203  066A  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4204                           	
  4205  066F                     l30001448:	
  4206                           	line	437
  4207                           ;MVC.c: 436: }
  4208                           ;MVC.c: 437: if(num_dig >= 6)
  4209  066F  3006               	movlw	(06h)
  4210  0670  1283               	bcf	status, 5	;RP0=0, select bank0
  4211  0671  1303               	bcf	status, 6	;RP1=0, select bank0
  4212  0672  0231               	subwf	(send_dec@num_dig),w
  4213  0673  1C03               	skipc
  4214  0674  2E76               	goto	u3491
  4215  0675  2E77               	goto	u3490
  4216  0676                     u3491:
  4217  0676  2EB6               	goto	l30001451
  4218  0677                     u3490:
  4219                           	
  4220  0677                     l30001449:	
  4221                           	line	439
  4222                           ;MVC.c: 438: {
  4223                           ;MVC.c: 439: data = data % 1000000;
  4224  0677  0830               	movf	(send_dec@data+3),w
  4225  0678  00A3               	movwf	(?___llmod+3)
  4226  0679  082F               	movf	(send_dec@data+2),w
  4227  067A  00A2               	movwf	(?___llmod+2)
  4228  067B  082E               	movf	(send_dec@data+1),w
  4229  067C  00A1               	movwf	(?___llmod+1)
  4230  067D  082D               	movf	(send_dec@data),w
  4231  067E  00A0               	movwf	(?___llmod)
  4232                           
  4233  067F  3000               	movlw	0
  4234  0680  00A7               	movwf	3+(?___llmod)+04h
  4235  0681  300F               	movlw	0Fh
  4236  0682  00A6               	movwf	2+(?___llmod)+04h
  4237  0683  3042               	movlw	042h
  4238  0684  00A5               	movwf	1+(?___llmod)+04h
  4239  0685  3040               	movlw	040h
  4240  0686  00A4               	movwf	0+(?___llmod)+04h
  4241                           
  4242  0687  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4243  068C  1383               	bcf	status, 7	;select IRP bank0
  4244  068D  1283               	bcf	status, 5	;RP0=0, select bank0
  4245  068E  1303               	bcf	status, 6	;RP1=0, select bank0
  4246  068F  0823               	movf	(3+(?___llmod)),w
  4247  0690  00B0               	movwf	(send_dec@data+3)
  4248  0691  0822               	movf	(2+(?___llmod)),w
  4249  0692  00AF               	movwf	(send_dec@data+2)
  4250  0693  0821               	movf	(1+(?___llmod)),w
  4251  0694  00AE               	movwf	(send_dec@data+1)
  4252  0695  0820               	movf	(0+(?___llmod)),w
  4253  0696  00AD               	movwf	(send_dec@data)
  4254                           
  4255                           	
  4256  0697                     l30001450:	
  4257                           	line	440
  4258                           ;MVC.c: 440: send_char(data / 100000 + 0x30);
  4259  0697  0830               	movf	(send_dec@data+3),w
  4260  0698  00A8               	movwf	(?___lldiv+3)
  4261  0699  082F               	movf	(send_dec@data+2),w
  4262  069A  00A7               	movwf	(?___lldiv+2)
  4263  069B  082E               	movf	(send_dec@data+1),w
  4264  069C  00A6               	movwf	(?___lldiv+1)
  4265  069D  082D               	movf	(send_dec@data),w
  4266  069E  00A5               	movwf	(?___lldiv)
  4267                           
  4268  069F  3000               	movlw	0
  4269  06A0  00AC               	movwf	3+(?___lldiv)+04h
  4270  06A1  3001               	movlw	01h
  4271  06A2  00AB               	movwf	2+(?___lldiv)+04h
  4272  06A3  3086               	movlw	086h
  4273  06A4  00AA               	movwf	1+(?___lldiv)+04h
  4274  06A5  30A0               	movlw	0A0h
  4275  06A6  00A9               	movwf	0+(?___lldiv)+04h
  4276                           
  4277  06A7  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4278  06AC  1383               	bcf	status, 7	;select IRP bank0
  4279  06AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4280  06AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4281  06AF  0825               	movf	(0+(?___lldiv)),w
  4282  06B0  3E30               	addlw	030h
  4283  06B1  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4284                           	
  4285  06B6                     l30001451:	
  4286                           	line	442
  4287                           ;MVC.c: 441: }
  4288                           ;MVC.c: 442: if(num_dig >= 5)
  4289  06B6  3005               	movlw	(05h)
  4290  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
  4291  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
  4292  06B9  0231               	subwf	(send_dec@num_dig),w
  4293  06BA  1C03               	skipc
  4294  06BB  2EBD               	goto	u3501
  4295  06BC  2EBE               	goto	u3500
  4296  06BD                     u3501:
  4297  06BD  2EFD               	goto	l30001454
  4298  06BE                     u3500:
  4299                           	
  4300  06BE                     l30001452:	
  4301                           	line	444
  4302                           ;MVC.c: 443: {
  4303                           ;MVC.c: 444: data = data % 100000;
  4304  06BE  0830               	movf	(send_dec@data+3),w
  4305  06BF  00A3               	movwf	(?___llmod+3)
  4306  06C0  082F               	movf	(send_dec@data+2),w
  4307  06C1  00A2               	movwf	(?___llmod+2)
  4308  06C2  082E               	movf	(send_dec@data+1),w
  4309  06C3  00A1               	movwf	(?___llmod+1)
  4310  06C4  082D               	movf	(send_dec@data),w
  4311  06C5  00A0               	movwf	(?___llmod)
  4312                           
  4313  06C6  3000               	movlw	0
  4314  06C7  00A7               	movwf	3+(?___llmod)+04h
  4315  06C8  3001               	movlw	01h
  4316  06C9  00A6               	movwf	2+(?___llmod)+04h
  4317  06CA  3086               	movlw	086h
  4318  06CB  00A5               	movwf	1+(?___llmod)+04h
  4319  06CC  30A0               	movlw	0A0h
  4320  06CD  00A4               	movwf	0+(?___llmod)+04h
  4321                           
  4322  06CE  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4323  06D3  1383               	bcf	status, 7	;select IRP bank0
  4324  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4325  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4326  06D6  0823               	movf	(3+(?___llmod)),w
  4327  06D7  00B0               	movwf	(send_dec@data+3)
  4328  06D8  0822               	movf	(2+(?___llmod)),w
  4329  06D9  00AF               	movwf	(send_dec@data+2)
  4330  06DA  0821               	movf	(1+(?___llmod)),w
  4331  06DB  00AE               	movwf	(send_dec@data+1)
  4332  06DC  0820               	movf	(0+(?___llmod)),w
  4333  06DD  00AD               	movwf	(send_dec@data)
  4334                           
  4335                           	
  4336  06DE                     l30001453:	
  4337                           	line	445
  4338                           ;MVC.c: 445: send_char(data / 10000 + 0x30);
  4339  06DE  0830               	movf	(send_dec@data+3),w
  4340  06DF  00A8               	movwf	(?___lldiv+3)
  4341  06E0  082F               	movf	(send_dec@data+2),w
  4342  06E1  00A7               	movwf	(?___lldiv+2)
  4343  06E2  082E               	movf	(send_dec@data+1),w
  4344  06E3  00A6               	movwf	(?___lldiv+1)
  4345  06E4  082D               	movf	(send_dec@data),w
  4346  06E5  00A5               	movwf	(?___lldiv)
  4347                           
  4348  06E6  3000               	movlw	0
  4349  06E7  00AC               	movwf	3+(?___lldiv)+04h
  4350  06E8  3000               	movlw	0
  4351  06E9  00AB               	movwf	2+(?___lldiv)+04h
  4352  06EA  3027               	movlw	027h
  4353  06EB  00AA               	movwf	1+(?___lldiv)+04h
  4354  06EC  3010               	movlw	010h
  4355  06ED  00A9               	movwf	0+(?___lldiv)+04h
  4356                           
  4357  06EE  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4358  06F3  1383               	bcf	status, 7	;select IRP bank0
  4359  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
  4360  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
  4361  06F6  0825               	movf	(0+(?___lldiv)),w
  4362  06F7  3E30               	addlw	030h
  4363  06F8  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4364                           	
  4365  06FD                     l30001454:	
  4366                           	line	447
  4367                           ;MVC.c: 446: }
  4368                           ;MVC.c: 447: if(num_dig >= 4)
  4369  06FD  3004               	movlw	(04h)
  4370  06FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  06FF  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0700  0231               	subwf	(send_dec@num_dig),w
  4373  0701  1C03               	skipc
  4374  0702  2F04               	goto	u3511
  4375  0703  2F05               	goto	u3510
  4376  0704                     u3511:
  4377  0704  2F44               	goto	l30001457
  4378  0705                     u3510:
  4379                           	
  4380  0705                     l30001455:	
  4381                           	line	449
  4382                           ;MVC.c: 448: {
  4383                           ;MVC.c: 449: data = data % 10000;
  4384  0705  0830               	movf	(send_dec@data+3),w
  4385  0706  00A3               	movwf	(?___llmod+3)
  4386  0707  082F               	movf	(send_dec@data+2),w
  4387  0708  00A2               	movwf	(?___llmod+2)
  4388  0709  082E               	movf	(send_dec@data+1),w
  4389  070A  00A1               	movwf	(?___llmod+1)
  4390  070B  082D               	movf	(send_dec@data),w
  4391  070C  00A0               	movwf	(?___llmod)
  4392                           
  4393  070D  3000               	movlw	0
  4394  070E  00A7               	movwf	3+(?___llmod)+04h
  4395  070F  3000               	movlw	0
  4396  0710  00A6               	movwf	2+(?___llmod)+04h
  4397  0711  3027               	movlw	027h
  4398  0712  00A5               	movwf	1+(?___llmod)+04h
  4399  0713  3010               	movlw	010h
  4400  0714  00A4               	movwf	0+(?___llmod)+04h
  4401                           
  4402  0715  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4403  071A  1383               	bcf	status, 7	;select IRP bank0
  4404  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  4405  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  4406  071D  0823               	movf	(3+(?___llmod)),w
  4407  071E  00B0               	movwf	(send_dec@data+3)
  4408  071F  0822               	movf	(2+(?___llmod)),w
  4409  0720  00AF               	movwf	(send_dec@data+2)
  4410  0721  0821               	movf	(1+(?___llmod)),w
  4411  0722  00AE               	movwf	(send_dec@data+1)
  4412  0723  0820               	movf	(0+(?___llmod)),w
  4413  0724  00AD               	movwf	(send_dec@data)
  4414                           
  4415                           	
  4416  0725                     l30001456:	
  4417                           	line	450
  4418                           ;MVC.c: 450: send_char(data / 1000 + 0x30);
  4419  0725  0830               	movf	(send_dec@data+3),w
  4420  0726  00A8               	movwf	(?___lldiv+3)
  4421  0727  082F               	movf	(send_dec@data+2),w
  4422  0728  00A7               	movwf	(?___lldiv+2)
  4423  0729  082E               	movf	(send_dec@data+1),w
  4424  072A  00A6               	movwf	(?___lldiv+1)
  4425  072B  082D               	movf	(send_dec@data),w
  4426  072C  00A5               	movwf	(?___lldiv)
  4427                           
  4428  072D  3000               	movlw	0
  4429  072E  00AC               	movwf	3+(?___lldiv)+04h
  4430  072F  3000               	movlw	0
  4431  0730  00AB               	movwf	2+(?___lldiv)+04h
  4432  0731  3003               	movlw	03h
  4433  0732  00AA               	movwf	1+(?___lldiv)+04h
  4434  0733  30E8               	movlw	0E8h
  4435  0734  00A9               	movwf	0+(?___lldiv)+04h
  4436                           
  4437  0735  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4438  073A  1383               	bcf	status, 7	;select IRP bank0
  4439  073B  1283               	bcf	status, 5	;RP0=0, select bank0
  4440  073C  1303               	bcf	status, 6	;RP1=0, select bank0
  4441  073D  0825               	movf	(0+(?___lldiv)),w
  4442  073E  3E30               	addlw	030h
  4443  073F  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4444                           	
  4445  0744                     l30001457:	
  4446                           	line	452
  4447                           ;MVC.c: 451: }
  4448                           ;MVC.c: 452: if(num_dig >= 3)
  4449  0744  3003               	movlw	(03h)
  4450  0745  1283               	bcf	status, 5	;RP0=0, select bank0
  4451  0746  1303               	bcf	status, 6	;RP1=0, select bank0
  4452  0747  0231               	subwf	(send_dec@num_dig),w
  4453  0748  1C03               	skipc
  4454  0749  2F4B               	goto	u3521
  4455  074A  2F4C               	goto	u3520
  4456  074B                     u3521:
  4457  074B  2F8B               	goto	l30001460
  4458  074C                     u3520:
  4459                           	
  4460  074C                     l30001458:	
  4461                           	line	454
  4462                           ;MVC.c: 453: {
  4463                           ;MVC.c: 454: data = data % 1000;
  4464  074C  0830               	movf	(send_dec@data+3),w
  4465  074D  00A3               	movwf	(?___llmod+3)
  4466  074E  082F               	movf	(send_dec@data+2),w
  4467  074F  00A2               	movwf	(?___llmod+2)
  4468  0750  082E               	movf	(send_dec@data+1),w
  4469  0751  00A1               	movwf	(?___llmod+1)
  4470  0752  082D               	movf	(send_dec@data),w
  4471  0753  00A0               	movwf	(?___llmod)
  4472                           
  4473  0754  3000               	movlw	0
  4474  0755  00A7               	movwf	3+(?___llmod)+04h
  4475  0756  3000               	movlw	0
  4476  0757  00A6               	movwf	2+(?___llmod)+04h
  4477  0758  3003               	movlw	03h
  4478  0759  00A5               	movwf	1+(?___llmod)+04h
  4479  075A  30E8               	movlw	0E8h
  4480  075B  00A4               	movwf	0+(?___llmod)+04h
  4481                           
  4482  075C  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4483  0761  1383               	bcf	status, 7	;select IRP bank0
  4484  0762  1283               	bcf	status, 5	;RP0=0, select bank0
  4485  0763  1303               	bcf	status, 6	;RP1=0, select bank0
  4486  0764  0823               	movf	(3+(?___llmod)),w
  4487  0765  00B0               	movwf	(send_dec@data+3)
  4488  0766  0822               	movf	(2+(?___llmod)),w
  4489  0767  00AF               	movwf	(send_dec@data+2)
  4490  0768  0821               	movf	(1+(?___llmod)),w
  4491  0769  00AE               	movwf	(send_dec@data+1)
  4492  076A  0820               	movf	(0+(?___llmod)),w
  4493  076B  00AD               	movwf	(send_dec@data)
  4494                           
  4495                           	
  4496  076C                     l30001459:	
  4497                           	line	455
  4498                           ;MVC.c: 455: send_char(data / 100 + 0x30);
  4499  076C  0830               	movf	(send_dec@data+3),w
  4500  076D  00A8               	movwf	(?___lldiv+3)
  4501  076E  082F               	movf	(send_dec@data+2),w
  4502  076F  00A7               	movwf	(?___lldiv+2)
  4503  0770  082E               	movf	(send_dec@data+1),w
  4504  0771  00A6               	movwf	(?___lldiv+1)
  4505  0772  082D               	movf	(send_dec@data),w
  4506  0773  00A5               	movwf	(?___lldiv)
  4507                           
  4508  0774  3000               	movlw	0
  4509  0775  00AC               	movwf	3+(?___lldiv)+04h
  4510  0776  3000               	movlw	0
  4511  0777  00AB               	movwf	2+(?___lldiv)+04h
  4512  0778  3000               	movlw	0
  4513  0779  00AA               	movwf	1+(?___lldiv)+04h
  4514  077A  3064               	movlw	064h
  4515  077B  00A9               	movwf	0+(?___lldiv)+04h
  4516                           
  4517  077C  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4518  0781  1383               	bcf	status, 7	;select IRP bank0
  4519  0782  1283               	bcf	status, 5	;RP0=0, select bank0
  4520  0783  1303               	bcf	status, 6	;RP1=0, select bank0
  4521  0784  0825               	movf	(0+(?___lldiv)),w
  4522  0785  3E30               	addlw	030h
  4523  0786  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4524                           	
  4525  078B                     l30001460:	
  4526                           	line	457
  4527                           ;MVC.c: 456: }
  4528                           ;MVC.c: 457: if(num_dig >= 2)
  4529  078B  3002               	movlw	(02h)
  4530  078C  1283               	bcf	status, 5	;RP0=0, select bank0
  4531  078D  1303               	bcf	status, 6	;RP1=0, select bank0
  4532  078E  0231               	subwf	(send_dec@num_dig),w
  4533  078F  1C03               	skipc
  4534  0790  2F92               	goto	u3531
  4535  0791  2F93               	goto	u3530
  4536  0792                     u3531:
  4537  0792  2FD2               	goto	l30001463
  4538  0793                     u3530:
  4539                           	
  4540  0793                     l30001461:	
  4541                           	line	459
  4542                           ;MVC.c: 458: {
  4543                           ;MVC.c: 459: data=data % 100;
  4544  0793  0830               	movf	(send_dec@data+3),w
  4545  0794  00A3               	movwf	(?___llmod+3)
  4546  0795  082F               	movf	(send_dec@data+2),w
  4547  0796  00A2               	movwf	(?___llmod+2)
  4548  0797  082E               	movf	(send_dec@data+1),w
  4549  0798  00A1               	movwf	(?___llmod+1)
  4550  0799  082D               	movf	(send_dec@data),w
  4551  079A  00A0               	movwf	(?___llmod)
  4552                           
  4553  079B  3000               	movlw	0
  4554  079C  00A7               	movwf	3+(?___llmod)+04h
  4555  079D  3000               	movlw	0
  4556  079E  00A6               	movwf	2+(?___llmod)+04h
  4557  079F  3000               	movlw	0
  4558  07A0  00A5               	movwf	1+(?___llmod)+04h
  4559  07A1  3064               	movlw	064h
  4560  07A2  00A4               	movwf	0+(?___llmod)+04h
  4561                           
  4562  07A3  120A  158A  2358   	fcall	___llmod
              120A  118A         
  4563  07A8  1383               	bcf	status, 7	;select IRP bank0
  4564  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
  4565  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
  4566  07AB  0823               	movf	(3+(?___llmod)),w
  4567  07AC  00B0               	movwf	(send_dec@data+3)
  4568  07AD  0822               	movf	(2+(?___llmod)),w
  4569  07AE  00AF               	movwf	(send_dec@data+2)
  4570  07AF  0821               	movf	(1+(?___llmod)),w
  4571  07B0  00AE               	movwf	(send_dec@data+1)
  4572  07B1  0820               	movf	(0+(?___llmod)),w
  4573  07B2  00AD               	movwf	(send_dec@data)
  4574                           
  4575                           	
  4576  07B3                     l30001462:	
  4577                           	line	460
  4578                           ;MVC.c: 460: send_char(data / 10 + 0x30);
  4579  07B3  0830               	movf	(send_dec@data+3),w
  4580  07B4  00A8               	movwf	(?___lldiv+3)
  4581  07B5  082F               	movf	(send_dec@data+2),w
  4582  07B6  00A7               	movwf	(?___lldiv+2)
  4583  07B7  082E               	movf	(send_dec@data+1),w
  4584  07B8  00A6               	movwf	(?___lldiv+1)
  4585  07B9  082D               	movf	(send_dec@data),w
  4586  07BA  00A5               	movwf	(?___lldiv)
  4587                           
  4588  07BB  3000               	movlw	0
  4589  07BC  00AC               	movwf	3+(?___lldiv)+04h
  4590  07BD  3000               	movlw	0
  4591  07BE  00AB               	movwf	2+(?___lldiv)+04h
  4592  07BF  3000               	movlw	0
  4593  07C0  00AA               	movwf	1+(?___lldiv)+04h
  4594  07C1  300A               	movlw	0Ah
  4595  07C2  00A9               	movwf	0+(?___lldiv)+04h
  4596                           
  4597  07C3  120A  158A  241F   	fcall	___lldiv
              120A  118A         
  4598  07C8  1383               	bcf	status, 7	;select IRP bank0
  4599  07C9  1283               	bcf	status, 5	;RP0=0, select bank0
  4600  07CA  1303               	bcf	status, 6	;RP1=0, select bank0
  4601  07CB  0825               	movf	(0+(?___lldiv)),w
  4602  07CC  3E30               	addlw	030h
  4603  07CD  120A  158A  261D   	fcall	_send_char
              120A  118A         
  4604                           	
  4605  07D2                     l30001463:	
  4606                           	line	462
  4607                           ;MVC.c: 461: }
  4608                           ;MVC.c: 462: if(num_dig >= 1)
  4609  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
  4610  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
  4611  07D4  0831               	movf	(send_dec@num_dig),w
  4612  07D5  1D03               	skipz
  4613+ 07D6  2FD8               	goto	u3540
  4614+ 07D7  2FFF               	goto	l104
  4615+ 07D8                     u3540:
  4616+                          	
  4617+ 07D8                     l30001464:	
  4618+                          	line	464
  4619+                          ;MVC.c: 463: {
  4620+                          ;MVC.c: 464: data = data % 10;
  4621+ 07D8  0830               	movf	(send_dec@data+3),w
  4622+ 07D9  00A3               	movwf	(?___llmod+3)
  4623+ 07DA  082F               	movf	(send_dec@data+2),w
  4624+ 07DB  00A2               	movwf	(?___llmod+2)
  4625+ 07DC  082E               	movf	(send_dec@data+1),w
  4626+ 07DD  00A1               	movwf	(?___llmod+1)
  4627+ 07DE  082D               	movf	(send_dec@data),w
  4628+ 07DF  00A0               	movwf	(?___llmod)
  4629+                          
  4630+ 07E0  3000               	movlw	0
  4631+ 07E1  00A7               	movwf	3+(?___llmod)+04h
  4632+ 07E2  3000               	movlw	0
  4633+ 07E3  00A6               	movwf	2+(?___llmod)+04h
  4634+ 07E4  3000               	movlw	0
  4635+ 07E5  00A5               	movwf	1+(?___llmod)+04h
  4636+ 07E6  300A               	movlw	0Ah
  4637+ 07E7  00A4               	movwf	0+(?___llmod)+04h
  4638+                          
  4639+ 07E8  120A  158A  2358   	fcall	___llmod
      +       120A  118A         
  4640+ 07ED  1383               	bcf	status, 7	;select IRP bank0
  4641+ 07EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4642+ 07EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4643+ 07F0  0823               	movf	(3+(?___llmod)),w
  4644+ 07F1  00B0               	movwf	(send_dec@data+3)
  4645+ 07F2  0822               	movf	(2+(?___llmod)),w
  4646+ 07F3  00AF               	movwf	(send_dec@data+2)
  4647+ 07F4  0821               	movf	(1+(?___llmod)),w
  4648+ 07F5  00AE               	movwf	(send_dec@data+1)
  4649+ 07F6  0820               	movf	(0+(?___llmod)),w
  4650+ 07F7  00AD               	movwf	(send_dec@data)
  4651+                          
  4652+                          	
  4653+ 07F8                     l30001465:	
  4654+                          	line	465
  4655+                          ;MVC.c: 465: send_char(data + 0x30);
  4656+ 07F8  082D               	movf	(send_dec@data),w
  4657+ 07F9  3E30               	addlw	030h
  4658+ 07FA  120A  158A  261D   	fcall	_send_char
      +       120A  118A         
  4659+                          	
  4660+ 07FF                     l104:	
  4661+ 07FF  0008               	return
  4662+                          	opt stack 0
  4663+                          GLOBAL	__end_of_send_dec
  4664+ 0800                     	__end_of_send_dec:
  4665+                          ; =============== function _send_dec ends ============
  4666+                          
  4667+                          psect	text213,local,class=CODE,delta=2
  4668+                          global __ptext213
  4669+ 08F8                     __ptext213:
  4670+                          	line	467
  4671+                          	signat	_send_dec,8312
  4672+                          	global	_lcd_clr
  4673+                          
  4674+                          ; *************** function _lcd_clr *****************
  4675+                          ; Defined at:
  4676+                          ;		line 328 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  4677+                          ; Parameters:    Size  Location     Type
  4678+                          ;		None
  4679+                          ; Auto vars:     Size  Location     Type
  4680+                          ;		None
  4681+                          ; Return value:  Size  Location     Type
  4682+                          ;		None               void
  4683+                          ; Registers used:
  4684+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4685+                          ; Tracked objects:
  4686+                          ;		On entry : 0/0
  4687+                          ;		On exit  : 0/0
  4688+                          ;		Unchanged: 0/0
  4689+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4690+                          ;      Locals:         0       0       0       0       0
  4691+                          ;      Temp:     0
  4692+                          ;      Total:    0
  4693+                          ; This function calls:
  4694+                          ;		_send_config
  4695+                          ;		_delay
  4696+                          ; This function is called by:
  4697+                          ;		_reset
  4698+                          ; This function uses a non-reentrant model
  4699+                          ; 
  4700+                          psect	text213
  4701+                          	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  4702+                          	line	328
  4703+                          	global	__size_of_lcd_clr
  4704+ 0016                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  4705+                          ;MVC.c: 327: void lcd_clr(void)
  4706+                          ;MVC.c: 328: {
  4707+                          	
  4708+ 08F8                     _lcd_clr:	
  4709+                          	opt stack 5
  4710+                          ; Regs used in _lcd_clr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4711+                          	line	329
  4712+                          	
  4713+ 08F8                     l30001471:	
  4714+                          ;MVC.c: 329: send_config(0x01);
  4715+ 08F8  3001               	movlw	(01h)
  4716+ 08F9  120A  158A  2587   	fcall	_send_config
      +       120A  158A         
  4717+                          	
  4718+ 08FE                     l30001472:	
  4719+                          	line	330
  4720+                          ;MVC.c: 330: delay(600);
  4721+ 08FE  3000               	movlw	0
  4722+ 08FF  1283               	bcf	status, 5	;RP0=0, select bank0
  4723+ 0900  1303               	bcf	status, 6	;RP1=0, select bank0
  4724+ 0901  00A3               	movwf	(?_delay+3)
  4725+ 0902  3000               	movlw	0
  4726+ 0903  00A2               	movwf	(?_delay+2)
  4727+ 0904  3002               	movlw	02h
  4728+ 0905  00A1               	movwf	(?_delay+1)
  4729+ 0906  3058               	movlw	058h
  4730+ 0907  00A0               	movwf	(?_delay)
  4731+                          
  4732+ 0908  120A  158A  2173   	fcall	_delay
      +       120A  158A         
  4733+                          	
  4734+ 090D                     l66:	
  4735+ 090D  0008               	return
  4736+                          	opt stack 0
  4737+                          GLOBAL	__end_of_lcd_clr
  4738+ 090E                     	__end_of_lcd_clr:
  4739+                          ; =============== function _lcd_clr ends ============
  4740+                          
  4741+                          psect	text214,local,class=CODE,delta=2
  4742+                          global __ptext214
  4743+ 0D04                     __ptext214:
  4744+                          	line	332
  4745+                          	signat	_lcd_clr,88
  4746+                          	global	_utoa
  4747+                          
  4748+                          ; *************** function _utoa *****************
  4749+                          ; Defined at:
  4750+                          ;		line 18 in file "../../common/itoa.c"
  4751+                          ; Parameters:    Size  Location     Type
  4752+                          ;  buf             1    wreg     PTR unsigned char 
  4753+                          ;		 -> kata(16), kata1(16), 
  4754+                          ;  val             2   11[BANK0 ] unsigned int 
  4755+                          ;  base            2   13[BANK0 ] int 
  4756+                          ; Auto vars:     Size  Location     Type
  4757+                          ;  buf             1   10[BANK0 ] PTR unsigned char 
  4758+                          ;		 -> kata(16), kata1(16), 
  4759+                          ;  v               2    7[BANK0 ] unsigned int 
  4760+                          ;  c               1    9[BANK0 ] unsigned char 
  4761+                          ; Return value:  Size  Location     Type
  4762+                          ;                  1    wreg      PTR unsigned char 
  4763+                          ; Registers used:
  4764+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4765+                          ; Tracked objects:
  4766+                          ;		On entry : 0/0
  4767+                          ;		On exit  : 0/0
  4768+                          ;		Unchanged: 0/0
  4769+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4770+                          ;      Locals:         1       8       0       0       0
  4771+                          ;      Temp:     1
  4772+                          ;      Total:    9
  4773+                          ; This function calls:
  4774+                          ;		___lwdiv
  4775+                          ;		___lwmod
  4776+                          ; This function is called by:
  4777+                          ;		_itoa
  4778+                          ; This function uses a non-reentrant model
  4779+                          ; 
  4780+                          psect	text214
  4781+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  4782+                          	line	18
  4783+                          	global	__size_of_utoa
  4784+ 0083                     	__size_of_utoa	equ	__end_of_utoa-_utoa
  4785+                          	
  4786+ 0D04                     _utoa:	
  4787+                          	opt stack 5
  4788+                          ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4789+                          ;utoa@buf stored from wreg
  4790+                          	line	22
  4791+ 0D04  1283               	bcf	status, 5	;RP0=0, select bank0
  4792+ 0D05  1303               	bcf	status, 6	;RP1=0, select bank0
  4793+ 0D06  00AA               	movwf	(utoa@buf)
  4794+                          	
  4795+ 0D07                     l30001527:	
  4796+ 0D07  082C               	movf	(utoa@val+1),w
  4797+ 0D08  01A8               	clrf	(utoa@v+1)
  4798+ 0D09  07A8               	addwf	(utoa@v+1)
  4799+ 0D0A  082B               	movf	(utoa@val),w
  4800+ 0D0B  01A7               	clrf	(utoa@v)
  4801+ 0D0C  07A7               	addwf	(utoa@v)
  4802+                          
  4803+                          	
  4804+ 0D0D                     l30001528:	
  4805+                          	line	24
  4806+ 0D0D  0828               	movf	(utoa@v+1),w
  4807+ 0D0E  01A4               	clrf	(?___lwdiv+1)
  4808+ 0D0F  07A4               	addwf	(?___lwdiv+1)
  4809+ 0D10  0827               	movf	(utoa@v),w
  4810+ 0D11  01A3               	clrf	(?___lwdiv)
  4811+ 0D12  07A3               	addwf	(?___lwdiv)
  4812+                          
  4813+ 0D13  082E               	movf	(utoa@base+1),w
  4814+ 0D14  01A6               	clrf	1+(?___lwdiv)+02h
  4815+ 0D15  07A6               	addwf	1+(?___lwdiv)+02h
  4816+ 0D16  082D               	movf	(utoa@base),w
  4817+ 0D17  01A5               	clrf	0+(?___lwdiv)+02h
  4818+ 0D18  07A5               	addwf	0+(?___lwdiv)+02h
  4819+                          
  4820+ 0D19  120A  158A  23A7   	fcall	___lwdiv
      +       120A  158A         
  4821+ 0D1E  1383               	bcf	status, 7	;select IRP bank0
  4822+ 0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
  4823+ 0D20  1303               	bcf	status, 6	;RP1=0, select bank0
  4824+ 0D21  0824               	movf	(1+(?___lwdiv)),w
  4825+ 0D22  01A8               	clrf	(utoa@v+1)
  4826+ 0D23  07A8               	addwf	(utoa@v+1)
  4827+ 0D24  0823               	movf	(0+(?___lwdiv)),w
  4828+ 0D25  01A7               	clrf	(utoa@v)
  4829+ 0D26  07A7               	addwf	(utoa@v)
  4830+                          
  4831+                          	
  4832+ 0D27                     l30001529:	
  4833+                          	line	25
  4834+ 0D27  3001               	movlw	(01h)
  4835+ 0D28  00F2               	movwf	(??_utoa+0+0)
  4836+ 0D29  0872               	movf	(??_utoa+0+0),w
  4837+ 0D2A  07AA               	addwf	(utoa@buf),f
  4838+                          	
  4839+ 0D2B                     l30001530:	
  4840+                          	line	26
  4841+ 0D2B  0828               	movf	((utoa@v+1)),w
  4842+ 0D2C  0427               	iorwf	((utoa@v)),w
  4843+ 0D2D  1D03               	skipz
  4844+ 0D2E  2D30               	goto	u3821
  4845+ 0D2F  2D31               	goto	u3820
  4846+ 0D30                     u3821:
  4847+ 0D30  2D0D               	goto	l30001528
  4848+ 0D31                     u3820:
  4849+                          	
  4850+ 0D31                     l30001531:	
  4851+                          	line	27
  4852+ 0D31  1003               	clrc
  4853+ 0D32  082A               	movf	(utoa@buf),w
  4854+ 0D33  0084               	movwf	fsr0
  4855+ 0D34  3000               	movlw	0
  4856+ 0D35  1803               	btfsc	status,0
  4857+ 0D36  3001               	movlw	1
  4858+ 0D37  0080               	movwf	indf
  4859+                          	
  4860+ 0D38                     l30001532:	
  4861+ 0D38  3001               	movlw	low(01h)
  4862+ 0D39  02AA               	subwf	(utoa@buf),f
  4863+                          	
  4864+ 0D3A                     l30001533:	
  4865+                          	line	29
  4866+ 0D3A  082C               	movf	(utoa@val+1),w
  4867+ 0D3B  01A1               	clrf	(?___lwmod+1)
  4868+ 0D3C  07A1               	addwf	(?___lwmod+1)
  4869+ 0D3D  082B               	movf	(utoa@val),w
  4870+ 0D3E  01A0               	clrf	(?___lwmod)
  4871+ 0D3F  07A0               	addwf	(?___lwmod)
  4872+                          
  4873+ 0D40  082E               	movf	(utoa@base+1),w
  4874+ 0D41  01A3               	clrf	1+(?___lwmod)+02h
  4875+ 0D42  07A3               	addwf	1+(?___lwmod)+02h
  4876+ 0D43  082D               	movf	(utoa@base),w
  4877+ 0D44  01A2               	clrf	0+(?___lwmod)+02h
  4878+ 0D45  07A2               	addwf	0+(?___lwmod)+02h
  4879+                          
  4880+ 0D46  120A  158A  2243   	fcall	___lwmod
      +       120A  158A         
  4881+ 0D4B  1383               	bcf	status, 7	;select IRP bank0
  4882+ 0D4C  1283               	bcf	status, 5	;RP0=0, select bank0
  4883+ 0D4D  1303               	bcf	status, 6	;RP1=0, select bank0
  4884+ 0D4E  0820               	movf	(0+(?___lwmod)),w
  4885+ 0D4F  00A9               	movwf	(utoa@c)
  4886+                          	
  4887+ 0D50                     l30001534:	
  4888+                          	line	30
  4889+ 0D50  082C               	movf	(utoa@val+1),w
  4890+ 0D51  01A4               	clrf	(?___lwdiv+1)
  4891+ 0D52  07A4               	addwf	(?___lwdiv+1)
  4892+ 0D53  082B               	movf	(utoa@val),w
  4893+ 0D54  01A3               	clrf	(?___lwdiv)
  4894+ 0D55  07A3               	addwf	(?___lwdiv)
  4895+                          
  4896+ 0D56  082E               	movf	(utoa@base+1),w
  4897+ 0D57  01A6               	clrf	1+(?___lwdiv)+02h
  4898+ 0D58  07A6               	addwf	1+(?___lwdiv)+02h
  4899+ 0D59  082D               	movf	(utoa@base),w
  4900+ 0D5A  01A5               	clrf	0+(?___lwdiv)+02h
  4901+ 0D5B  07A5               	addwf	0+(?___lwdiv)+02h
  4902+                          
  4903+ 0D5C  120A  158A  23A7   	fcall	___lwdiv
      +       120A  158A         
  4904+ 0D61  1383               	bcf	status, 7	;select IRP bank0
  4905+ 0D62  1283               	bcf	status, 5	;RP0=0, select bank0
  4906+ 0D63  1303               	bcf	status, 6	;RP1=0, select bank0
  4907+ 0D64  0824               	movf	(1+(?___lwdiv)),w
  4908+ 0D65  01AC               	clrf	(utoa@val+1)
  4909+ 0D66  07AC               	addwf	(utoa@val+1)
  4910+ 0D67  0823               	movf	(0+(?___lwdiv)),w
  4911+ 0D68  01AB               	clrf	(utoa@val)
  4912+ 0D69  07AB               	addwf	(utoa@val)
  4913+                          
  4914+                          	
  4915+ 0D6A                     l30001535:	
  4916+                          	line	31
  4917+ 0D6A  300A               	movlw	(0Ah)
  4918+ 0D6B  0229               	subwf	(utoa@c),w
  4919+ 0D6C  1C03               	skipc
  4920+ 0D6D  2D6F               	goto	u3831
  4921+ 0D6E  2D70               	goto	u3830
  4922+ 0D6F                     u3831:
  4923+ 0D6F  2D74               	goto	l151
  4924+ 0D70                     u3830:
  4925+                          	
  4926+ 0D70                     l30001536:	
  4927+                          	line	32
  4928+ 0D70  3007               	movlw	(07h)
  4929+ 0D71  00F2               	movwf	(??_utoa+0+0)
  4930+ 0D72  0872               	movf	(??_utoa+0+0),w
  4931+ 0D73  07A9               	addwf	(utoa@c),f
  4932+                          	
  4933+ 0D74                     l151:	
  4934+                          	line	33
  4935+ 0D74  3030               	movlw	(030h)
  4936+ 0D75  00F2               	movwf	(??_utoa+0+0)
  4937+ 0D76  0872               	movf	(??_utoa+0+0),w
  4938+ 0D77  07A9               	addwf	(utoa@c),f
  4939+                          	
  4940+ 0D78                     l30001537:	
  4941+                          	line	34
  4942+ 0D78  0829               	movf	(utoa@c),w
  4943+ 0D79  00F2               	movwf	(??_utoa+0+0)
  4944+ 0D7A  082A               	movf	(utoa@buf),w
  4945+ 0D7B  0084               	movwf	fsr0
  4946+ 0D7C  0872               	movf	(??_utoa+0+0),w
  4947+ 0D7D  0080               	movwf	indf
  4948+                          	
  4949+ 0D7E                     l30001538:	
  4950+ 0D7E  3001               	movlw	low(01h)
  4951+ 0D7F  02AA               	subwf	(utoa@buf),f
  4952+                          	
  4953+ 0D80                     l30001539:	
  4954+                          	line	35
  4955+ 0D80  082C               	movf	((utoa@val+1)),w
  4956+ 0D81  042B               	iorwf	((utoa@val)),w
  4957+ 0D82  1D03               	skipz
  4958+ 0D83  2D85               	goto	u3841
  4959+ 0D84  2D86               	goto	u3840
  4960+ 0D85                     u3841:
  4961+ 0D85  2D3A               	goto	l30001533
  4962+ 0D86                     u3840:
  4963+                          	
  4964+ 0D86                     l144:	
  4965+ 0D86  0008               	return
  4966+                          	opt stack 0
  4967+                          GLOBAL	__end_of_utoa
  4968+ 0D87                     	__end_of_utoa:
  4969+                          ; =============== function _utoa ends ============
  4970+                          
  4971+                          psect	text215,local,class=CODE,delta=2
  4972+                          global __ptext215
  4973+ 0A0B                     __ptext215:
  4974+                          	line	37
  4975+                          	signat	_utoa,12409
  4976+                          	global	_UART_Write_Text
  4977+                          
  4978+                          ; *************** function _UART_Write_Text *****************
  4979+                          ; Defined at:
  4980+                          ;		line 523 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  4981+                          ; Parameters:    Size  Location     Type
  4982+                          ;  text            2    2[BANK0 ] PTR unsigned char 
  4983+                          ;		 -> kata(16), kata1(16), STR_2(12), STR_3(12), 
  4984+                          ;		 -> STR_4(9), STR_5(4), STR_6(10), 
  4985+                          ; Auto vars:     Size  Location     Type
  4986+                          ;  n               2    0[BANK0 ] int 
  4987+                          ; Return value:  Size  Location     Type
  4988+                          ;		None               void
  4989+                          ; Registers used:
  4990+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4991+                          ; Tracked objects:
  4992+                          ;		On entry : 0/0
  4993+                          ;		On exit  : 0/0
  4994+                          ;		Unchanged: 0/0
  4995+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996+                          ;      Locals:         2       4       0       0       0
  4997+                          ;      Temp:     2
  4998+                          ;      Total:    6
  4999+                          ; This function calls:
  5000+                          ;		_UART_Write
  5001+                          ; This function is called by:
  5002+                          ;		_kirim_data
  5003+                          ;		_reset
  5004+                          ; This function uses a non-reentrant model
  5005+                          ; 
  5006+                          psect	text215
  5007+                          	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  5008+                          	line	523
  5009+                          	global	__size_of_UART_Write_Text
  5010+ 0038                     	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  5011+                          ;MVC.c: 522: void UART_Write_Text(char *text)
  5012+                          ;MVC.c: 523: {
  5013+                          	
  5014+ 0A0B                     _UART_Write_Text:	
  5015+                          	opt stack 5
  5016+                          ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5017+                          	line	525
  5018+                          	
  5019+ 0A0B                     l30001608:	
  5020+                          ;MVC.c: 524: int n;
  5021+                          ;MVC.c: 525: for(n=0;text[n]!='\0';n++)
  5022+ 0A0B  3000               	movlw	low(0)
  5023+ 0A0C  1283               	bcf	status, 5	;RP0=0, select bank0
  5024+ 0A0D  1303               	bcf	status, 6	;RP1=0, select bank0
  5025+ 0A0E  00A0               	movwf	(UART_Write_Text@n)
  5026+ 0A0F  3000               	movlw	high(0)
  5027+ 0A10  00A1               	movwf	((UART_Write_Text@n))+1
  5028+ 0A11  2A2E               	goto	l30001611
  5029+                          	
  5030+ 0A12                     l30001609:	
  5031+                          	line	526
  5032+                          ;MVC.c: 526: UART_Write(text[n]);
  5033+ 0A12  0823               	movf	(UART_Write_Text@text+1),w
  5034+ 0A13  00F2               	movwf	(??_UART_Write_Text+0+0+1)
  5035+ 0A14  0822               	movf	(UART_Write_Text@text),w
  5036+ 0A15  00F1               	movwf	(??_UART_Write_Text+0+0)
  5037+ 0A16  0820               	movf	(UART_Write_Text@n),w
  5038+ 0A17  0771               	addwf	(??_UART_Write_Text+0+0),w
  5039+ 0A18  0084               	movwf	fsr0
  5040+ 0A19  0872               	movf	(??_UART_Write_Text+0+1),w
  5041+ 0A1A  1803               	skipnc
  5042+ 0A1B  0A72               	incf	(??_UART_Write_Text+0+1),w
  5043+                          	FNCALL _UART_Write_Text,stringtab
  5044+ 0A1C  120A  158A  2300   	fcall	stringtab
      +       120A  158A         
  5045+ 0A21  120A  158A  20EC   	fcall	_UART_Write
      +       120A  158A         
  5046+                          	
  5047+ 0A26                     l30001610:	
  5048+                          	line	525
  5049+ 0A26  3001               	movlw	low(01h)
  5050+ 0A27  1283               	bcf	status, 5	;RP0=0, select bank0
  5051+ 0A28  1303               	bcf	status, 6	;RP1=0, select bank0
  5052+ 0A29  07A0               	addwf	(UART_Write_Text@n),f
  5053+ 0A2A  1803               	skipnc
  5054+ 0A2B  0AA1               	incf	(UART_Write_Text@n+1),f
  5055+ 0A2C  3000               	movlw	high(01h)
  5056+ 0A2D  07A1               	addwf	(UART_Write_Text@n+1),f
  5057+                          	
  5058+ 0A2E                     l30001611:	
  5059+ 0A2E  0823               	movf	(UART_Write_Text@text+1),w
  5060+ 0A2F  00F2               	movwf	(??_UART_Write_Text+0+0+1)
  5061+ 0A30  0822               	movf	(UART_Write_Text@text),w
  5062+ 0A31  00F1               	movwf	(??_UART_Write_Text+0+0)
  5063+ 0A32  0820               	movf	(UART_Write_Text@n),w
  5064+ 0A33  0771               	addwf	(??_UART_Write_Text+0+0),w
  5065+ 0A34  0084               	movwf	fsr0
  5066+ 0A35  0872               	movf	(??_UART_Write_Text+0+1),w
  5067+ 0A36  1803               	skipnc
  5068+ 0A37  0A72               	incf	(??_UART_Write_Text+0+1),w
  5069+                          	FNCALL _UART_Write_Text,stringtab
  5070+ 0A38  120A  158A  2300   	fcall	stringtab
      +       120A  158A         
  5071+ 0A3D  3800               	iorlw	0
  5072+ 0A3E  1D03               	skipz
  5073+ 0A3F  2A41               	goto	u4301
  5074+ 0A40  2A42               	goto	u4300
  5075+ 0A41                     u4301:
  5076+ 0A41  2A12               	goto	l30001609
  5077+ 0A42                     u4300:
  5078+                          	
  5079+ 0A42                     l133:	
  5080+ 0A42  0008               	return
  5081+                          	opt stack 0
  5082+                          GLOBAL	__end_of_UART_Write_Text
  5083+ 0A43                     	__end_of_UART_Write_Text:
  5084+                          ; =============== function _UART_Write_Text ends ============
  5085+                          
  5086+                          psect	text216,local,class=CODE,delta=2
  5087+                          global __ptext216
  5088+ 09A3                     __ptext216:
  5089+                          	line	527
  5090+                          	signat	_UART_Write_Text,4216
  5091+                          	global	_send_string
  5092+                          
  5093+                          ; *************** function _send_string *****************
  5094+                          ; Defined at:
  5095+                          ;		line 406 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  5096+                          ; Parameters:    Size  Location     Type
  5097+                          ;  s               1    wreg     PTR const unsigned char 
  5098+                          ;		 -> STR_1(16), STR_7(5), STR_8(5), 
  5099+                          ; Auto vars:     Size  Location     Type
  5100+                          ;  s               1   10[BANK0 ] PTR const unsigned char 
  5101+                          ;		 -> STR_1(16), STR_7(5), STR_8(5), 
  5102+                          ;  i               1    0        unsigned char 
  5103+                          ; Return value:  Size  Location     Type
  5104+                          ;		None               void
  5105+                          ; Registers used:
  5106+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5107+                          ; Tracked objects:
  5108+                          ;		On entry : 0/0
  5109+                          ;		On exit  : 0/0
  5110+                          ;		Unchanged: 0/0
  5111+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112+                          ;      Locals:         0       3       0       0       0
  5113+                          ;      Temp:     1
  5114+                          ;      Total:    3
  5115+                          ; This function calls:
  5116+                          ;		_send_char
  5117+                          ;		_delay
  5118+                          ; This function is called by:
  5119+                          ;		_main
  5120+                          ;		_tamp
  5121+                          ; This function uses a non-reentrant model
  5122+                          ; 
  5123+                          psect	text216
  5124+                          	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  5125+                          	line	406
  5126+                          	global	__size_of_send_string
  5127+ 0032                     	__size_of_send_string	equ	__end_of_send_string-_send_string
  5128+                          ;MVC.c: 405: void send_string(const char *s)
  5129+                          ;MVC.c: 406: {
  5130+                          	
  5131+ 09A3                     _send_string:	
  5132+                          	opt stack 5
  5133+                          ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5134+                          ;send_string@s stored from wreg
  5135+ 09A3  1283               	bcf	status, 5	;RP0=0, select bank0
  5136+ 09A4  1303               	bcf	status, 6	;RP1=0, select bank0
  5137+ 09A5  00AA               	movwf	(send_string@s)
  5138+                          	
  5139+ 09A6                     l30001429:	
  5140+ 09A6  29B8               	goto	l30001432
  5141+                          	
  5142+ 09A7                     l30001430:	
  5143+                          	line	408
  5144+ 09A7  082A               	movf	(send_string@s),w
  5145+                          	FNCALL _send_string,stringtab
  5146+ 09A8  120A  158A  2309   	fcall	stringdir
      +       120A  158A         
  5147+ 09AD  120A  158A  261D   	fcall	_send_char
      +       120A  158A         
  5148+                          	
  5149+ 09B2                     l30001431:	
  5150+ 09B2  3001               	movlw	(01h)
  5151+ 09B3  1283               	bcf	status, 5	;RP0=0, select bank0
  5152+ 09B4  1303               	bcf	status, 6	;RP1=0, select bank0
  5153+ 09B5  00A8               	movwf	(??_send_string+0+0)
  5154+ 09B6  0828               	movf	(??_send_string+0+0),w
  5155+ 09B7  07AA               	addwf	(send_string@s),f
  5156+                          	
  5157+ 09B8                     l30001432:	
  5158+ 09B8  082A               	movf	(send_string@s),w
  5159+ 09B9  1D03               	skipz
  5160+ 09BA  29BC               	goto	u3430
  5161+ 09BB  29C7               	goto	l30001434
  5162+ 09BC                     u3430:
  5163+                          	
  5164+ 09BC                     l30001433:	
  5165+ 09BC  082A               	movf	(send_string@s),w
  5166+                          	FNCALL _send_string,stringtab
  5167+ 09BD  120A  158A  2309   	fcall	stringdir
      +       120A  158A         
  5168+ 09C2  3800               	iorlw	0
  5169+ 09C3  1D03               	skipz
  5170+ 09C4  29C6               	goto	u3441
  5171+ 09C5  29C7               	goto	u3440
  5172+ 09C6                     u3441:
  5173+ 09C6  29A7               	goto	l30001430
  5174+ 09C7                     u3440:
  5175+                          	
  5176+ 09C7                     l30001434:	
  5177+                          	line	409
  5178+                          ;MVC.c: 409: delay(300);
  5179+ 09C7  3000               	movlw	0
  5180+ 09C8  00A3               	movwf	(?_delay+3)
  5181+ 09C9  3000               	movlw	0
  5182+ 09CA  00A2               	movwf	(?_delay+2)
  5183+ 09CB  3001               	movlw	01h
  5184+ 09CC  00A1               	movwf	(?_delay+1)
  5185+ 09CD  302C               	movlw	02Ch
  5186+ 09CE  00A0               	movwf	(?_delay)
  5187+                          
  5188+ 09CF  120A  158A  2173   	fcall	_delay
      +       120A  158A         
  5189+                          	
  5190+ 09D4                     l100:	
  5191+ 09D4  0008               	return
  5192+                          	opt stack 0
  5193+                          GLOBAL	__end_of_send_string
  5194+ 09D5                     	__end_of_send_string:
  5195+                          ; =============== function _send_string ends ============
  5196+                          
  5197+                          psect	text217,local,class=CODE,delta=2
  5198+                          global __ptext217
  5199+ 0BF2                     __ptext217:
  5200+                          	line	411
  5201+                          	signat	_send_string,4216
  5202+                          	global	_lcd_goto
  5203+                          
  5204+                          ; *************** function _lcd_goto *****************
  5205+                          ; Defined at:
  5206+                          ;		line 344 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  5207+                          ; Parameters:    Size  Location     Type
  5208+                          ;  data            1    wreg     unsigned char 
  5209+                          ; Auto vars:     Size  Location     Type
  5210+                          ;  data            1    7[BANK0 ] unsigned char 
  5211+                          ; Return value:  Size  Location     Type
  5212+                          ;		None               void
  5213+                          ; Registers used:
  5214+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5215+                          ; Tracked objects:
  5216+                          ;		On entry : 0/0
  5217+                          ;		On exit  : 0/0
  5218+                          ;		Unchanged: 0/0
  5219+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220+                          ;      Locals:         0       1       0       0       0
  5221+                          ;      Temp:     0
  5222+                          ;      Total:    1
  5223+                          ; This function calls:
  5224+                          ;		_send_config
  5225+                          ;		_delay
  5226+                          ; This function is called by:
  5227+                          ;		_main
  5228+                          ;		_tamp
  5229+                          ; This function uses a non-reentrant model
  5230+                          ; 
  5231+                          psect	text217
  5232+                          	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  5233+                          	line	344
  5234+                          	global	__size_of_lcd_goto
  5235+ 002B                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  5236+                          ;MVC.c: 343: void lcd_goto(unsigned char data)
  5237+                          ;MVC.c: 344: {
  5238+                          	
  5239+ 0BF2                     _lcd_goto:	
  5240+                          	opt stack 5
  5241+                          ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5242+                          ;lcd_goto@data stored from wreg
  5243+ 0BF2  1283               	bcf	status, 5	;RP0=0, select bank0
  5244+ 0BF3  1303               	bcf	status, 6	;RP1=0, select bank0
  5245+ 0BF4  00A7               	movwf	(lcd_goto@data)
  5246+                          	
  5247+ 0BF5                     l30001466:	
  5248+                          	line	345
  5249+                          ;MVC.c: 345: if(data < 16)
  5250+ 0BF5  3010               	movlw	(010h)
  5251+ 0BF6  0227               	subwf	(lcd_goto@data),w
  5252+ 0BF7  1803               	skipnc
  5253+ 0BF8  2BFA               	goto	u3551
  5254+ 0BF9  2BFB               	goto	u3550
  5255+ 0BFA                     u3551:
  5256+ 0BFA  2C03               	goto	l30001468
  5257+ 0BFB                     u3550:
  5258+                          	
  5259+ 0BFB                     l30001467:	
  5260+                          	line	347
  5261+                          ;MVC.c: 346: {
  5262+                          ;MVC.c: 347: send_config(0x80 + data);
  5263+ 0BFB  0827               	movf	(lcd_goto@data),w
  5264+ 0BFC  3E80               	addlw	080h
  5265+ 0BFD  120A  158A  2587   	fcall	_send_config
      +       120A  158A         
  5266+ 0C02  2C0D               	goto	l30001470
  5267+                          	
  5268+ 0C03                     l30001468:	
  5269+                          	line	351
  5270+                          ;MVC.c: 349: else
  5271+                          ;MVC.c: 350: {
  5272+                          ;MVC.c: 351: data = data - 20;
  5273+ 0C03  0827               	movf	(lcd_goto@data),w
  5274+ 0C04  3EEC               	addlw	0ECh
  5275+ 0C05  00A7               	movwf	(lcd_goto@data)
  5276+                          	
  5277+ 0C06                     l30001469:	
  5278+                          	line	352
  5279+                          ;MVC.c: 352: send_config(0xc0 + data);
  5280+ 0C06  0827               	movf	(lcd_goto@data),w
  5281+ 0C07  3EC0               	addlw	0C0h
  5282+ 0C08  120A  158A  2587   	fcall	_send_config
      +       120A  158A         
  5283+                          	
  5284+ 0C0D                     l30001470:	
  5285+                          	line	354
  5286+                          ;MVC.c: 353: }
  5287+                          ;MVC.c: 354: delay(200);
  5288+ 0C0D  3000               	movlw	0
  5289+ 0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5290+ 0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5291+ 0C10  00A3               	movwf	(?_delay+3)
  5292+ 0C11  3000               	movlw	0
  5293+ 0C12  00A2               	movwf	(?_delay+2)
  5294+ 0C13  3000               	movlw	0
  5295+ 0C14  00A1               	movwf	(?_delay+1)
  5296+ 0C15  30C8               	movlw	0C8h
  5297+ 0C16  00A0               	movwf	(?_delay)
  5298+                          
  5299+ 0C17  120A  158A  2173   	fcall	_delay
      +       120A  158A         
  5300+                          	
  5301+ 0C1C                     l67:	
  5302+ 0C1C  0008               	return
  5303+                          	opt stack 0
  5304+                          GLOBAL	__end_of_lcd_goto
  5305+ 0C1D                     	__end_of_lcd_goto:
  5306+                          ; =============== function _lcd_goto ends ============
  5307+                          
  5308+                          psect	text218,local,class=CODE,delta=2
  5309+                          global __ptext218
  5310+ 0EB3                     __ptext218:
  5311+                          	line	356
  5312+                          	signat	_lcd_goto,4216
  5313+                          	global	___aldiv
  5314+                          
  5315+                          ; *************** function ___aldiv *****************
  5316+                          ; Defined at:
  5317+                          ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\aldiv.c"
  5318+                          ; Parameters:    Size  Location     Type
  5319+                          ;  dividend        4    6[BANK0 ] long 
  5320+                          ;  divisor         4   10[BANK0 ] long 
  5321+                          ; Auto vars:     Size  Location     Type
  5322+                          ;  quotient        4    2[BANK0 ] long 
  5323+                          ;  sign            1    1[BANK0 ] unsigned char 
  5324+                          ;  counter         1    0[BANK0 ] unsigned char 
  5325+                          ; Return value:  Size  Location     Type
  5326+                          ;                  4    6[BANK0 ] long 
  5327+                          ; Registers used:
  5328+                          ;		wreg, status,2, status,0
  5329+                          ; Tracked objects:
  5330+                          ;		On entry : 0/0
  5331+                          ;		On exit  : 0/0
  5332+                          ;		Unchanged: 0/0
  5333+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5334+                          ;      Locals:         1      14       0       0       0
  5335+                          ;      Temp:     1
  5336+                          ;      Total:   15
  5337+                          ; This function calls:
  5338+                          ;		Nothing
  5339+                          ; This function is called by:
  5340+                          ;		_UART_Init
  5341+                          ; This function uses a non-reentrant model
  5342+                          ; 
  5343+                          psect	text218
  5344+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\aldiv.c"
  5345+                          	line	5
  5346+                          	global	__size_of___aldiv
  5347+ 00A2                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  5348+                          	
  5349+ 0EB3                     ___aldiv:	
  5350+                          	opt stack 5
  5351+                          ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5352+                          	line	9
  5353+                          	
  5354+ 0EB3                     l30001291:	
  5355+ 0EB3  1003               	clrc
  5356+ 0EB4  3000               	movlw	0
  5357+ 0EB5  1803               	btfsc	status,0
  5358+ 0EB6  3001               	movlw	1
  5359+ 0EB7  1283               	bcf	status, 5	;RP0=0, select bank0
  5360+ 0EB8  1303               	bcf	status, 6	;RP1=0, select bank0
  5361+ 0EB9  00A1               	movwf	(___aldiv@sign)
  5362+                          	
  5363+ 0EBA                     l30001292:	
  5364+                          	line	10
  5365+ 0EBA  1FAD               	btfss	(___aldiv@divisor+3),7
  5366+ 0EBB  2EBD               	goto	u3041
  5367+ 0EBC  2EBE               	goto	u3040
  5368+ 0EBD                     u3041:
  5369+ 0EBD  2ECC               	goto	l30001295
  5370+ 0EBE                     u3040:
  5371+                          	
  5372+ 0EBE                     l30001293:	
  5373+                          	line	11
  5374+ 0EBE  09AA               	comf	(___aldiv@divisor),f
  5375+ 0EBF  09AB               	comf	(___aldiv@divisor+1),f
  5376+ 0EC0  09AC               	comf	(___aldiv@divisor+2),f
  5377+ 0EC1  09AD               	comf	(___aldiv@divisor+3),f
  5378+ 0EC2  0AAA               	incf	(___aldiv@divisor),f
  5379+ 0EC3  1903               	skipnz
  5380+ 0EC4  0AAB               	incf	(___aldiv@divisor+1),f
  5381+ 0EC5  1903               	skipnz
  5382+ 0EC6  0AAC               	incf	(___aldiv@divisor+2),f
  5383+ 0EC7  1903               	skipnz
  5384+ 0EC8  0AAD               	incf	(___aldiv@divisor+3),f
  5385+                          	
  5386+ 0EC9                     l30001294:	
  5387+                          	line	12
  5388+ 0EC9  01A1               	clrf	(___aldiv@sign)
  5389+ 0ECA  1403               	bsf	status,0
  5390+ 0ECB  0DA1               	rlf	(___aldiv@sign),f
  5391+                          	
  5392+ 0ECC                     l30001295:	
  5393+                          	line	14
  5394+ 0ECC  1FA9               	btfss	(___aldiv@dividend+3),7
  5395+ 0ECD  2ECF               	goto	u3051
  5396+ 0ECE  2ED0               	goto	u3050
  5397+ 0ECF                     u3051:
  5398+ 0ECF  2EDF               	goto	l30001298
  5399+ 0ED0                     u3050:
  5400+                          	
  5401+ 0ED0                     l30001296:	
  5402+                          	line	15
  5403+ 0ED0  09A6               	comf	(___aldiv@dividend),f
  5404+ 0ED1  09A7               	comf	(___aldiv@dividend+1),f
  5405+ 0ED2  09A8               	comf	(___aldiv@dividend+2),f
  5406+ 0ED3  09A9               	comf	(___aldiv@dividend+3),f
  5407+ 0ED4  0AA6               	incf	(___aldiv@dividend),f
  5408+ 0ED5  1903               	skipnz
  5409+ 0ED6  0AA7               	incf	(___aldiv@dividend+1),f
  5410+ 0ED7  1903               	skipnz
  5411+ 0ED8  0AA8               	incf	(___aldiv@dividend+2),f
  5412+ 0ED9  1903               	skipnz
  5413+ 0EDA  0AA9               	incf	(___aldiv@dividend+3),f
  5414+                          	
  5415+ 0EDB                     l30001297:	
  5416+                          	line	16
  5417+ 0EDB  3001               	movlw	(01h)
  5418+ 0EDC  00F0               	movwf	(??___aldiv+0+0)
  5419+ 0EDD  0870               	movf	(??___aldiv+0+0),w
  5420+ 0EDE  06A1               	xorwf	(___aldiv@sign),f
  5421+                          	
  5422+ 0EDF                     l30001298:	
  5423+                          	line	18
  5424+ 0EDF  3000               	movlw	0
  5425+ 0EE0  00A5               	movwf	(___aldiv@quotient+3)
  5426+ 0EE1  3000               	movlw	0
  5427+ 0EE2  00A4               	movwf	(___aldiv@quotient+2)
  5428+ 0EE3  3000               	movlw	0
  5429+ 0EE4  00A3               	movwf	(___aldiv@quotient+1)
  5430+ 0EE5  3000               	movlw	0
  5431+ 0EE6  00A2               	movwf	(___aldiv@quotient)
  5432+                          
  5433+                          	
  5434+ 0EE7                     l30001299:	
  5435+                          	line	19
  5436+ 0EE7  082D               	movf	(___aldiv@divisor+3),w
  5437+ 0EE8  042C               	iorwf	(___aldiv@divisor+2),w
  5438+ 0EE9  042B               	iorwf	(___aldiv@divisor+1),w
  5439+ 0EEA  042A               	iorwf	(___aldiv@divisor),w
  5440+ 0EEB  1903               	skipnz
  5441+ 0EEC  2EEE               	goto	u3061
  5442+ 0EED  2EEF               	goto	u3060
  5443+ 0EEE                     u3061:
  5444+ 0EEE  2F3D               	goto	l30001309
  5445+ 0EEF                     u3060:
  5446+                          	
  5447+ 0EEF                     l30001300:	
  5448+                          	line	20
  5449+ 0EEF  01A0               	clrf	(___aldiv@counter)
  5450+ 0EF0  1403               	bsf	status,0
  5451+ 0EF1  0DA0               	rlf	(___aldiv@counter),f
  5452+ 0EF2  2F00               	goto	l30001302
  5453+                          	
  5454+ 0EF3                     l30001301:	
  5455+                          	line	22
  5456+ 0EF3  3001               	movlw	01h
  5457+ 0EF4  00F0               	movwf	(??___aldiv+0+0)
  5458+ 0EF5                     u3075:
  5459+ 0EF5  1003               	clrc
  5460+ 0EF6  0DAA               	rlf	(___aldiv@divisor),f
  5461+ 0EF7  0DAB               	rlf	(___aldiv@divisor+1),f
  5462+ 0EF8  0DAC               	rlf	(___aldiv@divisor+2),f
  5463+ 0EF9  0DAD               	rlf	(___aldiv@divisor+3),f
  5464+ 0EFA  0BF0               	decfsz	(??___aldiv+0+0)
  5465+ 0EFB  2EF5               	goto	u3075
  5466+                          	line	23
  5467+ 0EFC  3001               	movlw	(01h)
  5468+ 0EFD  00F0               	movwf	(??___aldiv+0+0)
  5469+ 0EFE  0870               	movf	(??___aldiv+0+0),w
  5470+ 0EFF  07A0               	addwf	(___aldiv@counter),f
  5471+                          	
  5472+ 0F00                     l30001302:	
  5473+                          	line	21
  5474+ 0F00  1FAD               	btfss	(___aldiv@divisor+3),(31)&7
  5475+ 0F01  2F03               	goto	u3081
  5476+ 0F02  2F04               	goto	u3080
  5477+ 0F03                     u3081:
  5478+ 0F03  2EF3               	goto	l30001301
  5479+ 0F04                     u3080:
  5480+                          	
  5481+ 0F04                     l30001303:	
  5482+                          	line	26
  5483+ 0F04  3001               	movlw	01h
  5484+ 0F05  00F0               	movwf	(??___aldiv+0+0)
  5485+ 0F06                     u3095:
  5486+ 0F06  1003               	clrc
  5487+ 0F07  0DA2               	rlf	(___aldiv@quotient),f
  5488+ 0F08  0DA3               	rlf	(___aldiv@quotient+1),f
  5489+ 0F09  0DA4               	rlf	(___aldiv@quotient+2),f
  5490+ 0F0A  0DA5               	rlf	(___aldiv@quotient+3),f
  5491+ 0F0B  0BF0               	decfsz	(??___aldiv+0+0)
  5492+ 0F0C  2F06               	goto	u3095
  5493+                          	
  5494+ 0F0D                     l30001304:	
  5495+                          	line	27
  5496+ 0F0D  082D               	movf	(___aldiv@divisor+3),w
  5497+ 0F0E  0229               	subwf	(___aldiv@dividend+3),w
  5498+ 0F0F  1D03               	skipz
  5499+ 0F10  2F1B               	goto	u3105
  5500+ 0F11  082C               	movf	(___aldiv@divisor+2),w
  5501+ 0F12  0228               	subwf	(___aldiv@dividend+2),w
  5502+ 0F13  1D03               	skipz
  5503+ 0F14  2F1B               	goto	u3105
  5504+ 0F15  082B               	movf	(___aldiv@divisor+1),w
  5505+ 0F16  0227               	subwf	(___aldiv@dividend+1),w
  5506+ 0F17  1D03               	skipz
  5507+ 0F18  2F1B               	goto	u3105
  5508+ 0F19  082A               	movf	(___aldiv@divisor),w
  5509+ 0F1A  0226               	subwf	(___aldiv@dividend),w
  5510+ 0F1B                     u3105:
  5511+ 0F1B  1C03               	skipc
  5512+ 0F1C  2F1E               	goto	u3101
  5513+ 0F1D  2F1F               	goto	u3100
  5514+ 0F1E                     u3101:
  5515+ 0F1E  2F2E               	goto	l30001307
  5516+ 0F1F                     u3100:
  5517+                          	
  5518+ 0F1F                     l30001305:	
  5519+                          	line	28
  5520+ 0F1F  082A               	movf	(___aldiv@divisor),w
  5521+ 0F20  02A6               	subwf	(___aldiv@dividend),f
  5522+ 0F21  082B               	movf	(___aldiv@divisor+1),w
  5523+ 0F22  1C03               	skipc
  5524+ 0F23  0F2B               	incfsz	(___aldiv@divisor+1),w
  5525+ 0F24  02A7               	subwf	(___aldiv@dividend+1),f
  5526+ 0F25  082C               	movf	(___aldiv@divisor+2),w
  5527+ 0F26  1C03               	skipc
  5528+ 0F27  0F2C               	incfsz	(___aldiv@divisor+2),w
  5529+ 0F28  02A8               	subwf	(___aldiv@dividend+2),f
  5530+ 0F29  082D               	movf	(___aldiv@divisor+3),w
  5531  0F2A  1C03               	skipc
  5532  0F2B  0F2D               	incfsz	(___aldiv@divisor+3),w
  5533  0F2C  02A9               	subwf	(___aldiv@dividend+3),f
  5534                           	
  5535  0F2D                     l30001306:	
  5536                           	line	29
  5537  0F2D  1422               	bsf	(___aldiv@quotient)+(0/8),(0)&7
  5538                           	
  5539  0F2E                     l30001307:	
  5540                           	line	31
  5541  0F2E  3001               	movlw	01h
  5542  0F2F                     u3115:
  5543  0F2F  1003               	clrc
  5544  0F30  0CAD               	rrf	(___aldiv@divisor+3),f
  5545  0F31  0CAC               	rrf	(___aldiv@divisor+2),f
  5546  0F32  0CAB               	rrf	(___aldiv@divisor+1),f
  5547  0F33  0CAA               	rrf	(___aldiv@divisor),f
  5548  0F34  3EFF               	addlw	-1
  5549  0F35  1D03               	skipz
  5550  0F36  2F2F               	goto	u3115
  5551                           
  5552                           	
  5553  0F37                     l30001308:	
  5554                           	line	32
  5555  0F37  3001               	movlw	low(01h)
  5556  0F38  02A0               	subwf	(___aldiv@counter),f
  5557  0F39  1D03               	btfss	status,2
  5558  0F3A  2F3C               	goto	u3121
  5559  0F3B  2F3D               	goto	u3120
  5560  0F3C                     u3121:
  5561  0F3C  2F04               	goto	l30001303
  5562  0F3D                     u3120:
  5563                           	
  5564  0F3D                     l30001309:	
  5565                           	line	34
  5566  0F3D  0821               	movf	(___aldiv@sign),w
  5567  0F3E  1D03               	skipz
  5568  0F3F  2F41               	goto	u3130
  5569  0F40  2F4C               	goto	l30001311
  5570  0F41                     u3130:
  5571                           	
  5572  0F41                     l30001310:	
  5573                           	line	35
  5574  0F41  09A2               	comf	(___aldiv@quotient),f
  5575  0F42  09A3               	comf	(___aldiv@quotient+1),f
  5576  0F43  09A4               	comf	(___aldiv@quotient+2),f
  5577  0F44  09A5               	comf	(___aldiv@quotient+3),f
  5578  0F45  0AA2               	incf	(___aldiv@quotient),f
  5579  0F46  1903               	skipnz
  5580  0F47  0AA3               	incf	(___aldiv@quotient+1),f
  5581  0F48  1903               	skipnz
  5582  0F49  0AA4               	incf	(___aldiv@quotient+2),f
  5583  0F4A  1903               	skipnz
  5584  0F4B  0AA5               	incf	(___aldiv@quotient+3),f
  5585                           	
  5586  0F4C                     l30001311:	
  5587                           	line	36
  5588  0F4C  0825               	movf	(___aldiv@quotient+3),w
  5589  0F4D  00A9               	movwf	(?___aldiv+3)
  5590  0F4E  0824               	movf	(___aldiv@quotient+2),w
  5591  0F4F  00A8               	movwf	(?___aldiv+2)
  5592  0F50  0823               	movf	(___aldiv@quotient+1),w
  5593  0F51  00A7               	movwf	(?___aldiv+1)
  5594  0F52  0822               	movf	(___aldiv@quotient),w
  5595  0F53  00A6               	movwf	(?___aldiv)
  5596                           
  5597                           	
  5598  0F54                     l369:	
  5599  0F54  0008               	return
  5600                           	opt stack 0
  5601                           GLOBAL	__end_of___aldiv
  5602  0F55                     	__end_of___aldiv:
  5603                           ; =============== function ___aldiv ends ============
  5604                           
  5605                           psect	text219,local,class=CODE,delta=2
  5606                           global __ptext219
  5607  09D5                     __ptext219:
  5608                           	line	37
  5609                           	signat	___aldiv,8316
  5610                           	global	___lltoft
  5611                           
  5612                           ; *************** function ___lltoft *****************
  5613                           ; Defined at:
  5614                           ;		line 36 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lltoft.c"
  5615                           ; Parameters:    Size  Location     Type
  5616                           ;  c               4    6[BANK0 ] unsigned long 
  5617                           ; Auto vars:     Size  Location     Type
  5618                           ;  exp             1    5[BANK0 ] unsigned char 
  5619                           ; Return value:  Size  Location     Type
  5620                           ;                  3    6[BANK0 ] float 
  5621                           ; Registers used:
  5622                           ;		wreg, status,2, status,0, pclath, cstack
  5623                           ; Tracked objects:
  5624                           ;		On entry : 0/0
  5625                           ;		On exit  : 0/0
  5626                           ;		Unchanged: 0/0
  5627                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628                           ;      Locals:         1       5       0       0       0
  5629                           ;      Temp:     1
  5630                           ;      Total:    6
  5631                           ; This function calls:
  5632                           ;		___ftpack
  5633                           ; This function is called by:
  5634                           ;		_Read_ADC
  5635                           ; This function uses a non-reentrant model
  5636                           ; 
  5637                           psect	text219
  5638                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lltoft.c"
  5639                           	line	36
  5640                           	global	__size_of___lltoft
  5641  0036                     	__size_of___lltoft	equ	__end_of___lltoft-___lltoft
  5642                           	
  5643  09D5                     ___lltoft:	
  5644                           	opt stack 5
  5645                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5646                           	line	38
  5647                           	
  5648  09D5                     l30001600:	
  5649  09D5  308E               	movlw	(08Eh)
  5650  09D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5651  09D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5652  09D8  00A5               	movwf	(___lltoft@exp)
  5653  09D9  29E7               	goto	l30001602
  5654                           	
  5655  09DA                     l30001601:	
  5656                           	line	42
  5657  09DA  3001               	movlw	01h
  5658  09DB                     u4255:
  5659  09DB  1003               	clrc
  5660  09DC  0CA9               	rrf	(___lltoft@c+3),f
  5661  09DD  0CA8               	rrf	(___lltoft@c+2),f
  5662  09DE  0CA7               	rrf	(___lltoft@c+1),f
  5663  09DF  0CA6               	rrf	(___lltoft@c),f
  5664  09E0  3EFF               	addlw	-1
  5665  09E1  1D03               	skipz
  5666  09E2  29DB               	goto	u4255
  5667                           
  5668                           	line	43
  5669  09E3  3001               	movlw	(01h)
  5670  09E4  00F3               	movwf	(??___lltoft+0+0)
  5671  09E5  0873               	movf	(??___lltoft+0+0),w
  5672  09E6  07A5               	addwf	(___lltoft@exp),f
  5673                           	
  5674  09E7                     l30001602:	
  5675                           	line	41
  5676  09E7  30FF               	movlw	high highword(-16777216)
  5677  09E8  0529               	andwf	(___lltoft@c+3),w
  5678  09E9  1D03               	btfss	status,2
  5679  09EA  29EC               	goto	u4261
  5680  09EB  29ED               	goto	u4260
  5681  09EC                     u4261:
  5682  09EC  29DA               	goto	l30001601
  5683  09ED                     u4260:
  5684                           	
  5685  09ED                     l30001603:	
  5686                           	line	45
  5687  09ED  0826               	movf	(___lltoft@c),w
  5688  09EE  00A0               	movwf	(?___ftpack)
  5689  09EF  0827               	movf	(___lltoft@c+1),w
  5690  09F0  00A1               	movwf	(?___ftpack+1)
  5691  09F1  0828               	movf	(___lltoft@c+2),w
  5692  09F2  00A2               	movwf	(?___ftpack+2)
  5693  09F3  0825               	movf	(___lltoft@exp),w
  5694  09F4  00F3               	movwf	(??___lltoft+0+0)
  5695  09F5  0873               	movf	(??___lltoft+0+0),w
  5696  09F6  00A3               	movwf	0+(?___ftpack)+03h
  5697  09F7  1003               	clrc
  5698  09F8  3000               	movlw	0
  5699  09F9  1803               	btfsc	status,0
  5700  09FA  3001               	movlw	1
  5701  09FB  00A4               	movwf	0+(?___ftpack)+04h
  5702  09FC  120A  158A  2488   	fcall	___ftpack
              120A  158A         
  5703  0A01  1383               	bcf	status, 7	;select IRP bank0
  5704  0A02  1283               	bcf	status, 5	;RP0=0, select bank0
  5705  0A03  1303               	bcf	status, 6	;RP1=0, select bank0
  5706  0A04  0820               	movf	(0+(?___ftpack)),w
  5707  0A05  00A6               	movwf	(?___lltoft)
  5708  0A06  0821               	movf	(1+(?___ftpack)),w
  5709  0A07  00A7               	movwf	(?___lltoft+1)
  5710  0A08  0822               	movf	(2+(?___ftpack)),w
  5711  0A09  00A8               	movwf	(?___lltoft+2)
  5712                           	
  5713  0A0A                     l400:	
  5714  0A0A  0008               	return
  5715                           	opt stack 0
  5716                           GLOBAL	__end_of___lltoft
  5717  0A0B                     	__end_of___lltoft:
  5718                           ; =============== function ___lltoft ends ============
  5719                           
  5720                           psect	text220,local,class=CODE,delta=2
  5721                           global __ptext220
  5722  00D4                     __ptext220:
  5723                           	line	46
  5724                           	signat	___lltoft,4219
  5725                           	global	___ftmul
  5726                           
  5727                           ; *************** function ___ftmul *****************
  5728                           ; Defined at:
  5729                           ;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\ftmul.c"
  5730                           ; Parameters:    Size  Location     Type
  5731                           ;  f1              3   20[BANK0 ] float 
  5732                           ;  f2              3   23[BANK0 ] float 
  5733                           ; Auto vars:     Size  Location     Type
  5734                           ;  f3_as_produc    3   15[BANK0 ] unsigned um
  5735                           ;  sign            1   19[BANK0 ] unsigned char 
  5736                           ;  cntr            1   18[BANK0 ] unsigned char 
  5737                           ;  exp             1   14[BANK0 ] unsigned char 
  5738                           ; Return value:  Size  Location     Type
  5739                           ;                  3   20[BANK0 ] float 
  5740                           ; Registers used:
  5741                           ;		wreg, status,2, status,0, pclath, cstack
  5742                           ; Tracked objects:
  5743                           ;		On entry : 0/0
  5744                           ;		On exit  : 0/0
  5745                           ;		Unchanged: 0/0
  5746                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5747                           ;      Locals:         0      16       0       0       0
  5748                           ;      Temp:     4
  5749                           ;      Total:   16
  5750                           ; This function calls:
  5751                           ;		___ftpack
  5752                           ; This function is called by:
  5753                           ;		_Read_ADC
  5754                           ; This function uses a non-reentrant model
  5755                           ; 
  5756                           psect	text220
  5757                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\ftmul.c"
  5758                           	line	52
  5759                           	global	__size_of___ftmul
  5760  00DC                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5761                           	
  5762  00D4                     ___ftmul:	
  5763                           	opt stack 5
  5764                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5765                           	line	56
  5766                           	
  5767  00D4                     l30001341:	
  5768  00D4  1283               	bcf	status, 5	;RP0=0, select bank0
  5769  00D5  1303               	bcf	status, 6	;RP1=0, select bank0
  5770  00D6  0834               	movf	(___ftmul@f1),w
  5771  00D7  00AA               	movwf	(??___ftmul+0+0)
  5772  00D8  0835               	movf	(___ftmul@f1+1),w
  5773  00D9  00AB               	movwf	(??___ftmul+0+0+1)
  5774  00DA  0836               	movf	(___ftmul@f1+2),w
  5775  00DB  00AC               	movwf	(??___ftmul+0+0+2)
  5776  00DC  1003               	clrc
  5777  00DD  0D2B               	rlf	(??___ftmul+0+1),w
  5778  00DE  0D2C               	rlf	(??___ftmul+0+2),w
  5779  00DF  00AE               	movwf	(___ftmul@exp)
  5780  00E0  08AE               	movf	((___ftmul@exp))&07fh,f
  5781  00E1  1D03               	skipz
  5782  00E2  28E4               	goto	u3151
  5783  00E3  28E5               	goto	u3150
  5784  00E4                     u3151:
  5785  00E4  28EC               	goto	l30001344
  5786  00E5                     u3150:
  5787                           	
  5788  00E5                     l30001342:	
  5789                           	line	57
  5790  00E5  3000               	movlw	0x0
  5791  00E6  00B4               	movwf	(?___ftmul)
  5792  00E7  3000               	movlw	0x0
  5793  00E8  00B5               	movwf	(?___ftmul+1)
  5794  00E9  3000               	movlw	0x0
  5795  00EA  00B6               	movwf	(?___ftmul+2)
  5796  00EB  29AF               	goto	l230
  5797                           	
  5798  00EC                     l30001344:	
  5799                           	line	58
  5800  00EC  0837               	movf	(___ftmul@f2),w
  5801  00ED  00AA               	movwf	(??___ftmul+0+0)
  5802  00EE  0838               	movf	(___ftmul@f2+1),w
  5803  00EF  00AB               	movwf	(??___ftmul+0+0+1)
  5804  00F0  0839               	movf	(___ftmul@f2+2),w
  5805  00F1  00AC               	movwf	(??___ftmul+0+0+2)
  5806  00F2  1003               	clrc
  5807  00F3  0D2B               	rlf	(??___ftmul+0+1),w
  5808  00F4  0D2C               	rlf	(??___ftmul+0+2),w
  5809  00F5  00B3               	movwf	(___ftmul@sign)
  5810  00F6  08B3               	movf	((___ftmul@sign))&07fh,f
  5811  00F7  1D03               	skipz
  5812  00F8  28FA               	goto	u3161
  5813  00F9  28FB               	goto	u3160
  5814  00FA                     u3161:
  5815  00FA  2902               	goto	l30001347
  5816  00FB                     u3160:
  5817                           	
  5818  00FB                     l30001345:	
  5819                           	line	59
  5820  00FB  3000               	movlw	0x0
  5821  00FC  00B4               	movwf	(?___ftmul)
  5822  00FD  3000               	movlw	0x0
  5823  00FE  00B5               	movwf	(?___ftmul+1)
  5824  00FF  3000               	movlw	0x0
  5825  0100  00B6               	movwf	(?___ftmul+2)
  5826  0101  29AF               	goto	l230
  5827                           	
  5828  0102                     l30001347:	
  5829                           	line	60
  5830  0102  0833               	movf	(___ftmul@sign),w
  5831  0103  3E7B               	addlw	07Bh
  5832  0104  00AA               	movwf	(??___ftmul+0+0)
  5833  0105  082A               	movf	(??___ftmul+0+0),w
  5834  0106  07AE               	addwf	(___ftmul@exp),f
  5835                           	line	61
  5836  0107  0834               	movf	(___ftmul@f1),w
  5837  0108  00AA               	movwf	(??___ftmul+0+0)
  5838  0109  0835               	movf	(___ftmul@f1+1),w
  5839  010A  00AB               	movwf	(??___ftmul+0+0+1)
  5840  010B  0836               	movf	(___ftmul@f1+2),w
  5841  010C  00AC               	movwf	(??___ftmul+0+0+2)
  5842  010D  3010               	movlw	010h
  5843  010E                     u3175:
  5844  010E  1003               	clrc
  5845  010F  0CAC               	rrf	(??___ftmul+0+2),f
  5846  0110  0CAB               	rrf	(??___ftmul+0+1),f
  5847  0111  0CAA               	rrf	(??___ftmul+0+0),f
  5848  0112                     u3170:
  5849  0112  3EFF               	addlw	-1
  5850  0113  1D03               	skipz
  5851  0114  290E               	goto	u3175
  5852  0115  082A               	movf	0+(??___ftmul+0+0),w
  5853  0116  00B3               	movwf	(___ftmul@sign)
  5854                           	line	62
  5855  0117  0837               	movf	(___ftmul@f2),w
  5856  0118  00AA               	movwf	(??___ftmul+0+0)
  5857  0119  0838               	movf	(___ftmul@f2+1),w
  5858  011A  00AB               	movwf	(??___ftmul+0+0+1)
  5859  011B  0839               	movf	(___ftmul@f2+2),w
  5860  011C  00AC               	movwf	(??___ftmul+0+0+2)
  5861  011D  3010               	movlw	010h
  5862  011E                     u3185:
  5863  011E  1003               	clrc
  5864  011F  0CAC               	rrf	(??___ftmul+0+2),f
  5865  0120  0CAB               	rrf	(??___ftmul+0+1),f
  5866  0121  0CAA               	rrf	(??___ftmul+0+0),f
  5867  0122                     u3180:
  5868  0122  3EFF               	addlw	-1
  5869  0123  1D03               	skipz
  5870  0124  291E               	goto	u3185
  5871  0125  082A               	movf	0+(??___ftmul+0+0),w
  5872  0126  00AD               	movwf	(??___ftmul+3+0)
  5873  0127  082D               	movf	(??___ftmul+3+0),w
  5874  0128  06B3               	xorwf	(___ftmul@sign),f
  5875                           	line	63
  5876  0129  3080               	movlw	(080h)
  5877  012A  00AA               	movwf	(??___ftmul+0+0)
  5878  012B  082A               	movf	(??___ftmul+0+0),w
  5879  012C  05B3               	andwf	(___ftmul@sign),f
  5880                           	
  5881  012D                     l30001348:	
  5882                           	line	64
  5883  012D  17B5               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5884                           	
  5885  012E                     l30001349:	
  5886                           	line	66
  5887  012E  17B8               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5888                           	
  5889  012F                     l30001350:	
  5890                           	line	67
  5891  012F  30FF               	movlw	0FFh
  5892  0130  05B7               	andwf	(___ftmul@f2),f
  5893  0131  30FF               	movlw	0FFh
  5894  0132  05B8               	andwf	(___ftmul@f2+1),f
  5895  0133  3000               	movlw	0
  5896  0134  05B9               	andwf	(___ftmul@f2+2),f
  5897                           	
  5898  0135                     l30001351:	
  5899                           	line	68
  5900  0135  3000               	movlw	0
  5901  0136  00AF               	movwf	(___ftmul@f3_as_product)
  5902  0137  3000               	movlw	0
  5903  0138  00B0               	movwf	(___ftmul@f3_as_product+1)
  5904  0139  3000               	movlw	0
  5905  013A  00B1               	movwf	(___ftmul@f3_as_product+2)
  5906                           	
  5907  013B                     l30001352:	
  5908                           	line	69
  5909  013B  3007               	movlw	(07h)
  5910  013C  00B2               	movwf	(___ftmul@cntr)
  5911                           	
  5912  013D                     l30001353:	
  5913                           	line	71
  5914  013D  1C34               	btfss	(___ftmul@f1),(0)&7
  5915  013E  2940               	goto	u3191
  5916  013F  2941               	goto	u3190
  5917  0140                     u3191:
  5918  0140  2951               	goto	l30001355
  5919  0141                     u3190:
  5920                           	
  5921  0141                     l30001354:	
  5922                           	line	72
  5923  0141  0837               	movf	(___ftmul@f2),w
  5924  0142  07AF               	addwf	(___ftmul@f3_as_product),f
  5925  0143  0838               	movf	(___ftmul@f2+1),w
  5926  0144  1103               	clrz
  5927  0145  1803               	skipnc
  5928  0146  0A38               	incf	(___ftmul@f2+1),w
  5929  0147  1903               	skipnz
  5930  0148  294A               	goto	u3201
  5931  0149  07B0               	addwf	(___ftmul@f3_as_product+1),f
  5932  014A                     u3201:
  5933  014A  0839               	movf	(___ftmul@f2+2),w
  5934  014B  1103               	clrz
  5935  014C  1803               	skipnc
  5936  014D  0A39               	incf	(___ftmul@f2+2),w
  5937  014E  1903               	skipnz
  5938  014F  2951               	goto	u3202
  5939  0150  07B1               	addwf	(___ftmul@f3_as_product+2),f
  5940  0151                     u3202:
  5941                           
  5942                           	
  5943  0151                     l30001355:	
  5944                           	line	73
  5945  0151  3001               	movlw	01h
  5946  0152                     u3215:
  5947  0152  1003               	clrc
  5948  0153  0CB6               	rrf	(___ftmul@f1+2),f
  5949  0154  0CB5               	rrf	(___ftmul@f1+1),f
  5950  0155  0CB4               	rrf	(___ftmul@f1),f
  5951  0156  3EFF               	addlw	-1
  5952  0157  1D03               	skipz
  5953  0158  2952               	goto	u3215
  5954                           
  5955                           	
  5956  0159                     l30001356:	
  5957                           	line	74
  5958  0159  3001               	movlw	01h
  5959  015A                     u3225:
  5960  015A  1003               	clrc
  5961  015B  0DB7               	rlf	(___ftmul@f2),f
  5962  015C  0DB8               	rlf	(___ftmul@f2+1),f
  5963  015D  0DB9               	rlf	(___ftmul@f2+2),f
  5964  015E  3EFF               	addlw	-1
  5965  015F  1D03               	skipz
  5966  0160  295A               	goto	u3225
  5967                           	
  5968  0161                     l30001357:	
  5969                           	line	75
  5970  0161  3001               	movlw	low(01h)
  5971  0162  02B2               	subwf	(___ftmul@cntr),f
  5972  0163  1D03               	btfss	status,2
  5973  0164  2966               	goto	u3231
  5974  0165  2967               	goto	u3230
  5975  0166                     u3231:
  5976  0166  293D               	goto	l30001353
  5977  0167                     u3230:
  5978                           	
  5979  0167                     l30001358:	
  5980                           	line	76
  5981  0167  3009               	movlw	(09h)
  5982  0168  00B2               	movwf	(___ftmul@cntr)
  5983                           	
  5984  0169                     l30001359:	
  5985                           	line	78
  5986  0169  1C34               	btfss	(___ftmul@f1),(0)&7
  5987  016A  296C               	goto	u3241
  5988  016B  296D               	goto	u3240
  5989  016C                     u3241:
  5990  016C  297D               	goto	l30001361
  5991  016D                     u3240:
  5992                           	
  5993  016D                     l30001360:	
  5994                           	line	79
  5995  016D  0837               	movf	(___ftmul@f2),w
  5996  016E  07AF               	addwf	(___ftmul@f3_as_product),f
  5997  016F  0838               	movf	(___ftmul@f2+1),w
  5998  0170  1103               	clrz
  5999  0171  1803               	skipnc
  6000  0172  0A38               	incf	(___ftmul@f2+1),w
  6001  0173  1903               	skipnz
  6002  0174  2976               	goto	u3251
  6003  0175  07B0               	addwf	(___ftmul@f3_as_product+1),f
  6004  0176                     u3251:
  6005  0176  0839               	movf	(___ftmul@f2+2),w
  6006  0177  1103               	clrz
  6007  0178  1803               	skipnc
  6008  0179  0A39               	incf	(___ftmul@f2+2),w
  6009  017A  1903               	skipnz
  6010  017B  297D               	goto	u3252
  6011  017C  07B1               	addwf	(___ftmul@f3_as_product+2),f
  6012  017D                     u3252:
  6013                           
  6014                           	
  6015  017D                     l30001361:	
  6016                           	line	80
  6017  017D  3001               	movlw	01h
  6018  017E                     u3265:
  6019  017E  1003               	clrc
  6020  017F  0CB6               	rrf	(___ftmul@f1+2),f
  6021  0180  0CB5               	rrf	(___ftmul@f1+1),f
  6022  0181  0CB4               	rrf	(___ftmul@f1),f
  6023  0182  3EFF               	addlw	-1
  6024  0183  1D03               	skipz
  6025  0184  297E               	goto	u3265
  6026                           
  6027                           	
  6028  0185                     l30001362:	
  6029                           	line	81
  6030  0185  3001               	movlw	01h
  6031  0186                     u3275:
  6032  0186  1003               	clrc
  6033  0187  0CB1               	rrf	(___ftmul@f3_as_product+2),f
  6034  0188  0CB0               	rrf	(___ftmul@f3_as_product+1),f
  6035  0189  0CAF               	rrf	(___ftmul@f3_as_product),f
  6036  018A  3EFF               	addlw	-1
  6037  018B  1D03               	skipz
  6038  018C  2986               	goto	u3275
  6039                           
  6040                           	
  6041  018D                     l30001363:	
  6042                           	line	82
  6043  018D  3001               	movlw	low(01h)
  6044  018E  02B2               	subwf	(___ftmul@cntr),f
  6045  018F  1D03               	btfss	status,2
  6046  0190  2992               	goto	u3281
  6047  0191  2993               	goto	u3280
  6048  0192                     u3281:
  6049  0192  2969               	goto	l30001359
  6050  0193                     u3280:
  6051                           	
  6052  0193                     l30001364:	
  6053                           	line	83
  6054  0193  082F               	movf	(___ftmul@f3_as_product),w
  6055  0194  00A0               	movwf	(?___ftpack)
  6056  0195  0830               	movf	(___ftmul@f3_as_product+1),w
  6057  0196  00A1               	movwf	(?___ftpack+1)
  6058  0197  0831               	movf	(___ftmul@f3_as_product+2),w
  6059  0198  00A2               	movwf	(?___ftpack+2)
  6060  0199  082E               	movf	(___ftmul@exp),w
  6061  019A  00AA               	movwf	(??___ftmul+0+0)
  6062  019B  082A               	movf	(??___ftmul+0+0),w
  6063  019C  00A3               	movwf	0+(?___ftpack)+03h
  6064  019D  0833               	movf	(___ftmul@sign),w
  6065  019E  00AB               	movwf	(??___ftmul+1+0)
  6066  019F  082B               	movf	(??___ftmul+1+0),w
  6067  01A0  00A4               	movwf	0+(?___ftpack)+04h
  6068  01A1  120A  158A  2488   	fcall	___ftpack
              120A  118A         
  6069  01A6  1383               	bcf	status, 7	;select IRP bank0
  6070  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  6071  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  6072  01A9  0820               	movf	(0+(?___ftpack)),w
  6073  01AA  00B4               	movwf	(?___ftmul)
  6074  01AB  0821               	movf	(1+(?___ftpack)),w
  6075  01AC  00B5               	movwf	(?___ftmul+1)
  6076  01AD  0822               	movf	(2+(?___ftpack)),w
  6077  01AE  00B6               	movwf	(?___ftmul+2)
  6078                           	
  6079  01AF                     l230:	
  6080  01AF  0008               	return
  6081                           	opt stack 0
  6082                           GLOBAL	__end_of___ftmul
  6083  01B0                     	__end_of___ftmul:
  6084                           ; =============== function ___ftmul ends ============
  6085                           
  6086                           psect	text221,local,class=CODE,delta=2
  6087                           global __ptext221
  6088  0B58                     __ptext221:
  6089                           	line	84
  6090                           	signat	___ftmul,8315
  6091                           	global	___llmod
  6092                           
  6093                           ; *************** function ___llmod *****************
  6094                           ; Defined at:
  6095                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\llmod.c"
  6096                           ; Parameters:    Size  Location     Type
  6097                           ;  dividend        4    0[BANK0 ] unsigned long 
  6098                           ;  divisor         4    4[BANK0 ] unsigned long 
  6099                           ; Auto vars:     Size  Location     Type
  6100                           ;  counter         1    1[COMMON] unsigned char 
  6101                           ; Return value:  Size  Location     Type
  6102                           ;                  4    0[BANK0 ] unsigned long 
  6103                           ; Registers used:
  6104                           ;		wreg, status,2, status,0
  6105                           ; Tracked objects:
  6106                           ;		On entry : 0/0
  6107                           ;		On exit  : 0/0
  6108                           ;		Unchanged: 0/0
  6109                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6110                           ;      Locals:         2       8       0       0       0
  6111                           ;      Temp:     1
  6112                           ;      Total:   10
  6113                           ; This function calls:
  6114                           ;		Nothing
  6115                           ; This function is called by:
  6116                           ;		_send_dec
  6117                           ; This function uses a non-reentrant model
  6118                           ; 
  6119                           psect	text221
  6120                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\llmod.c"
  6121                           	line	5
  6122                           	global	__size_of___llmod
  6123  004F                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  6124                           	
  6125  0B58                     ___llmod:	
  6126                           	opt stack 4
  6127                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6128                           	line	8
  6129                           	
  6130  0B58                     l30001221:	
  6131  0B58  1283               	bcf	status, 5	;RP0=0, select bank0
  6132  0B59  1303               	bcf	status, 6	;RP1=0, select bank0
  6133  0B5A  0827               	movf	(___llmod@divisor+3),w
  6134  0B5B  0426               	iorwf	(___llmod@divisor+2),w
  6135  0B5C  0425               	iorwf	(___llmod@divisor+1),w
  6136  0B5D  0424               	iorwf	(___llmod@divisor),w
  6137  0B5E  1903               	skipnz
  6138  0B5F  2B61               	goto	u2731
  6139  0B60  2B62               	goto	u2730
  6140  0B61                     u2731:
  6141  0B61  2BA6               	goto	l314
  6142  0B62                     u2730:
  6143                           	
  6144  0B62                     l30001222:	
  6145                           	line	9
  6146  0B62  01F1               	clrf	(___llmod@counter)
  6147  0B63  1403               	bsf	status,0
  6148  0B64  0DF1               	rlf	(___llmod@counter),f
  6149  0B65  2B73               	goto	l30001224
  6150                           	
  6151  0B66                     l30001223:	
  6152                           	line	11
  6153  0B66  3001               	movlw	01h
  6154  0B67  00F0               	movwf	(??___llmod+0+0)
  6155  0B68                     u2745:
  6156  0B68  1003               	clrc
  6157  0B69  0DA4               	rlf	(___llmod@divisor),f
  6158  0B6A  0DA5               	rlf	(___llmod@divisor+1),f
  6159  0B6B  0DA6               	rlf	(___llmod@divisor+2),f
  6160  0B6C  0DA7               	rlf	(___llmod@divisor+3),f
  6161  0B6D  0BF0               	decfsz	(??___llmod+0+0)
  6162  0B6E  2B68               	goto	u2745
  6163                           	line	12
  6164  0B6F  3001               	movlw	(01h)
  6165  0B70  00F0               	movwf	(??___llmod+0+0)
  6166  0B71  0870               	movf	(??___llmod+0+0),w
  6167  0B72  07F1               	addwf	(___llmod@counter),f
  6168                           	
  6169  0B73                     l30001224:	
  6170                           	line	10
  6171  0B73  1FA7               	btfss	(___llmod@divisor+3),(31)&7
  6172  0B74  2B76               	goto	u2751
  6173  0B75  2B77               	goto	u2750
  6174  0B76                     u2751:
  6175  0B76  2B66               	goto	l30001223
  6176  0B77                     u2750:
  6177                           	
  6178  0B77                     l30001225:	
  6179                           	line	15
  6180  0B77  0827               	movf	(___llmod@divisor+3),w
  6181  0B78  0223               	subwf	(___llmod@dividend+3),w
  6182  0B79  1D03               	skipz
  6183  0B7A  2B85               	goto	u2765
  6184  0B7B  0826               	movf	(___llmod@divisor+2),w
  6185  0B7C  0222               	subwf	(___llmod@dividend+2),w
  6186  0B7D  1D03               	skipz
  6187  0B7E  2B85               	goto	u2765
  6188  0B7F  0825               	movf	(___llmod@divisor+1),w
  6189  0B80  0221               	subwf	(___llmod@dividend+1),w
  6190  0B81  1D03               	skipz
  6191  0B82  2B85               	goto	u2765
  6192  0B83  0824               	movf	(___llmod@divisor),w
  6193  0B84  0220               	subwf	(___llmod@dividend),w
  6194  0B85                     u2765:
  6195  0B85  1C03               	skipc
  6196  0B86  2B88               	goto	u2761
  6197  0B87  2B89               	goto	u2760
  6198  0B88                     u2761:
  6199  0B88  2B97               	goto	l30001227
  6200  0B89                     u2760:
  6201                           	
  6202  0B89                     l30001226:	
  6203                           	line	16
  6204  0B89  0824               	movf	(___llmod@divisor),w
  6205  0B8A  02A0               	subwf	(___llmod@dividend),f
  6206  0B8B  0825               	movf	(___llmod@divisor+1),w
  6207  0B8C  1C03               	skipc
  6208  0B8D  0F25               	incfsz	(___llmod@divisor+1),w
  6209  0B8E  02A1               	subwf	(___llmod@dividend+1),f
  6210  0B8F  0826               	movf	(___llmod@divisor+2),w
  6211  0B90  1C03               	skipc
  6212  0B91  0F26               	incfsz	(___llmod@divisor+2),w
  6213  0B92  02A2               	subwf	(___llmod@dividend+2),f
  6214  0B93  0827               	movf	(___llmod@divisor+3),w
  6215  0B94  1C03               	skipc
  6216  0B95  0F27               	incfsz	(___llmod@divisor+3),w
  6217  0B96  02A3               	subwf	(___llmod@dividend+3),f
  6218                           	
  6219  0B97                     l30001227:	
  6220                           	line	17
  6221  0B97  3001               	movlw	01h
  6222  0B98                     u2775:
  6223  0B98  1003               	clrc
  6224  0B99  0CA7               	rrf	(___llmod@divisor+3),f
  6225  0B9A  0CA6               	rrf	(___llmod@divisor+2),f
  6226  0B9B  0CA5               	rrf	(___llmod@divisor+1),f
  6227  0B9C  0CA4               	rrf	(___llmod@divisor),f
  6228  0B9D  3EFF               	addlw	-1
  6229  0B9E  1D03               	skipz
  6230  0B9F  2B98               	goto	u2775
  6231                           
  6232                           	
  6233  0BA0                     l30001228:	
  6234                           	line	18
  6235  0BA0  3001               	movlw	low(01h)
  6236  0BA1  02F1               	subwf	(___llmod@counter),f
  6237  0BA2  1D03               	btfss	status,2
  6238  0BA3  2BA5               	goto	u2781
  6239  0BA4  2BA6               	goto	u2780
  6240  0BA5                     u2781:
  6241  0BA5  2B77               	goto	l30001225
  6242  0BA6                     u2780:
  6243                           	
  6244  0BA6                     l314:	
  6245                           	line	20
  6246                           	
  6247  0BA6                     l313:	
  6248  0BA6  0008               	return
  6249                           	opt stack 0
  6250                           GLOBAL	__end_of___llmod
  6251  0BA7                     	__end_of___llmod:
  6252                           ; =============== function ___llmod ends ============
  6253                           
  6254                           psect	text222,local,class=CODE,delta=2
  6255                           global __ptext222
  6256  0D87                     __ptext222:
  6257                           	line	21
  6258                           	signat	___llmod,8316
  6259                           	global	_send_config
  6260                           
  6261                           ; *************** function _send_config *****************
  6262                           ; Defined at:
  6263                           ;		line 285 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  6264                           ; Parameters:    Size  Location     Type
  6265                           ;  data            1    wreg     unsigned char 
  6266                           ; Auto vars:     Size  Location     Type
  6267                           ;  data            1    4[BANK0 ] unsigned char 
  6268                           ;  test            1    6[BANK0 ] unsigned char 
  6269                           ;  i               1    5[BANK0 ] unsigned char 
  6270                           ; Return value:  Size  Location     Type
  6271                           ;		None               void
  6272                           ; Registers used:
  6273                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6274                           ; Tracked objects:
  6275                           ;		On entry : 0/0
  6276                           ;		On exit  : 0/0
  6277                           ;		Unchanged: 0/0
  6278                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6279                           ;      Locals:         1       3       0       0       0
  6280                           ;      Temp:     1
  6281                           ;      Total:    4
  6282                           ; This function calls:
  6283                           ;		_delay
  6284                           ;		_e_pulse
  6285                           ; This function is called by:
  6286                           ;		_main
  6287                           ;		_lcd_clr
  6288                           ;		_lcd_goto
  6289                           ; This function uses a non-reentrant model
  6290                           ; 
  6291                           psect	text222
  6292                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  6293                           	line	285
  6294                           	global	__size_of_send_config
  6295  0096                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  6296                           ;MVC.c: 284: void send_config(unsigned char data)
  6297                           ;MVC.c: 285: {
  6298                           	
  6299  0D87                     _send_config:	
  6300                           	opt stack 4
  6301                           ; Regs used in _send_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6302                           ;send_config@data stored from wreg
  6303                           	line	289
  6304  0D87  1283               	bcf	status, 5	;RP0=0, select bank0
  6305  0D88  1303               	bcf	status, 6	;RP1=0, select bank0
  6306  0D89  00A4               	movwf	(send_config@data)
  6307                           	
  6308  0D8A                     l30001479:	
  6309                           ;MVC.c: 286: unsigned char test;
  6310                           ;MVC.c: 287: unsigned char i;
  6311                           ;MVC.c: 289: RB7 = 0;
  6312  0D8A  1386               	bcf	(55/8),(55)&7
  6313                           	line	290
  6314                           ;MVC.c: 290: for(i = 0; i < 8; i++)
  6315  0D8B  1003               	clrc
  6316  0D8C  3000               	movlw	0
  6317  0D8D  1803               	btfsc	status,0
  6318  0D8E  3001               	movlw	1
  6319  0D8F  00A5               	movwf	(send_config@i)
  6320                           	
  6321  0D90                     l30001482:	
  6322                           	line	292
  6323                           ;MVC.c: 291: {
  6324                           ;MVC.c: 292: test = (data >> i) & 0b00000001;
  6325  0D90  0824               	movf	(send_config@data),w
  6326  0D91  00F4               	movwf	(??_send_config+0+0)
  6327  0D92  0A25               	incf	(send_config@i),w
  6328  0D93  2D96               	goto	u3584
  6329  0D94                     u3585:
  6330  0D94  1003               	clrc
  6331  0D95  0CF4               	rrf	(??_send_config+0+0),f
  6332  0D96                     u3584:
  6333  0D96  3EFF               	addlw	-1
  6334  0D97  1D03               	skipz
  6335  0D98  2D94               	goto	u3585
  6336  0D99  0874               	movf	0+(??_send_config+0+0),w
  6337  0D9A  3901               	andlw	01h
  6338  0D9B  00A6               	movwf	(send_config@test)
  6339  0D9C  2DE6               	goto	l30001499
  6340                           	
  6341  0D9D                     l30001483:	
  6342                           	line	296
  6343                           ;MVC.c: 296: if(test == 1) RD0 = 1;
  6344  0D9D  0826               	movf	(send_config@test),w
  6345  0D9E  3A01               	xorlw	01h
  6346  0D9F  1D03               	skipz
  6347  0DA0  2DA2               	goto	u3591
  6348  0DA1  2DA3               	goto	u3590
  6349  0DA2                     u3591:
  6350  0DA2  2DA5               	goto	l43
  6351  0DA3                     u3590:
  6352                           	
  6353  0DA3                     l30001484:	
  6354  0DA3  1408               	bsf	(64/8),(64)&7
  6355  0DA4  2DA6               	goto	l30001485
  6356                           	
  6357  0DA5                     l43:	
  6358                           	line	297
  6359                           ;MVC.c: 297: else RD0 = 0;
  6360  0DA5  1008               	bcf	(64/8),(64)&7
  6361                           	
  6362  0DA6                     l30001485:	
  6363                           	line	299
  6364                           ;MVC.c: 299: if(test == 1) RD1 = 1;
  6365  0DA6  0826               	movf	(send_config@test),w
  6366  0DA7  3A01               	xorlw	01h
  6367  0DA8  1D03               	skipz
  6368  0DA9  2DAB               	goto	u3601
  6369  0DAA  2DAC               	goto	u3600
  6370  0DAB                     u3601:
  6371  0DAB  2DAE               	goto	l46
  6372  0DAC                     u3600:
  6373                           	
  6374  0DAC                     l30001486:	
  6375  0DAC  1488               	bsf	(65/8),(65)&7
  6376  0DAD  2DAF               	goto	l30001487
  6377                           	
  6378  0DAE                     l46:	
  6379                           	line	300
  6380                           ;MVC.c: 300: else RD1 = 0;
  6381  0DAE  1088               	bcf	(65/8),(65)&7
  6382                           	
  6383  0DAF                     l30001487:	
  6384                           	line	302
  6385                           ;MVC.c: 302: if(test == 1) RD2 = 1;
  6386  0DAF  0826               	movf	(send_config@test),w
  6387  0DB0  3A01               	xorlw	01h
  6388  0DB1  1D03               	skipz
  6389  0DB2  2DB4               	goto	u3611
  6390  0DB3  2DB5               	goto	u3610
  6391  0DB4                     u3611:
  6392  0DB4  2DB7               	goto	l49
  6393  0DB5                     u3610:
  6394                           	
  6395  0DB5                     l30001488:	
  6396  0DB5  1508               	bsf	(66/8),(66)&7
  6397  0DB6  2DB8               	goto	l30001489
  6398                           	
  6399  0DB7                     l49:	
  6400                           	line	303
  6401                           ;MVC.c: 303: else RD2 = 0;
  6402  0DB7  1108               	bcf	(66/8),(66)&7
  6403                           	
  6404  0DB8                     l30001489:	
  6405                           	line	305
  6406                           ;MVC.c: 305: if(test == 1) RD3 = 1;
  6407  0DB8  0826               	movf	(send_config@test),w
  6408  0DB9  3A01               	xorlw	01h
  6409  0DBA  1D03               	skipz
  6410  0DBB  2DBD               	goto	u3621
  6411  0DBC  2DBE               	goto	u3620
  6412  0DBD                     u3621:
  6413  0DBD  2DC0               	goto	l52
  6414  0DBE                     u3620:
  6415                           	
  6416  0DBE                     l30001490:	
  6417  0DBE  1588               	bsf	(67/8),(67)&7
  6418  0DBF  2DC1               	goto	l30001491
  6419                           	
  6420  0DC0                     l52:	
  6421                           	line	306
  6422                           ;MVC.c: 306: else RD3 = 0;
  6423  0DC0  1188               	bcf	(67/8),(67)&7
  6424                           	
  6425  0DC1                     l30001491:	
  6426                           	line	308
  6427                           ;MVC.c: 308: if(test == 1) RD4 = 1;
  6428  0DC1  0826               	movf	(send_config@test),w
  6429  0DC2  3A01               	xorlw	01h
  6430  0DC3  1D03               	skipz
  6431  0DC4  2DC6               	goto	u3631
  6432  0DC5  2DC7               	goto	u3630
  6433  0DC6                     u3631:
  6434  0DC6  2DC9               	goto	l55
  6435  0DC7                     u3630:
  6436                           	
  6437  0DC7                     l30001492:	
  6438  0DC7  1608               	bsf	(68/8),(68)&7
  6439  0DC8  2DCA               	goto	l30001493
  6440                           	
  6441  0DC9                     l55:	
  6442                           	line	309
  6443                           ;MVC.c: 309: else RD4 = 0;
  6444  0DC9  1208               	bcf	(68/8),(68)&7
  6445                           	
  6446  0DCA                     l30001493:	
  6447                           	line	311
  6448                           ;MVC.c: 311: if(test == 1) RD5 = 1;
  6449  0DCA  0826               	movf	(send_config@test),w
  6450  0DCB  3A01               	xorlw	01h
  6451  0DCC  1D03               	skipz
  6452  0DCD  2DCF               	goto	u3641
  6453  0DCE  2DD0               	goto	u3640
  6454  0DCF                     u3641:
  6455  0DCF  2DD2               	goto	l58
  6456  0DD0                     u3640:
  6457                           	
  6458  0DD0                     l30001494:	
  6459  0DD0  1688               	bsf	(69/8),(69)&7
  6460  0DD1  2DD3               	goto	l30001495
  6461                           	
  6462  0DD2                     l58:	
  6463                           	line	312
  6464                           ;MVC.c: 312: else RD5 = 0;
  6465  0DD2  1288               	bcf	(69/8),(69)&7
  6466                           	
  6467  0DD3                     l30001495:	
  6468                           	line	314
  6469                           ;MVC.c: 314: if(test == 1) RD6 = 1;
  6470  0DD3  0826               	movf	(send_config@test),w
  6471  0DD4  3A01               	xorlw	01h
  6472  0DD5  1D03               	skipz
  6473  0DD6  2DD8               	goto	u3651
  6474  0DD7  2DD9               	goto	u3650
  6475  0DD8                     u3651:
  6476  0DD8  2DDB               	goto	l61
  6477  0DD9                     u3650:
  6478                           	
  6479  0DD9                     l30001496:	
  6480  0DD9  1708               	bsf	(70/8),(70)&7
  6481  0DDA  2DDC               	goto	l30001497
  6482                           	
  6483  0DDB                     l61:	
  6484                           	line	315
  6485                           ;MVC.c: 315: else RD6 = 0;
  6486  0DDB  1308               	bcf	(70/8),(70)&7
  6487                           	
  6488  0DDC                     l30001497:	
  6489                           	line	317
  6490                           ;MVC.c: 317: if(test == 1) RD7 = 1;
  6491  0DDC  0826               	movf	(send_config@test),w
  6492  0DDD  3A01               	xorlw	01h
  6493  0DDE  1D03               	skipz
  6494  0DDF  2DE1               	goto	u3661
  6495  0DE0  2DE2               	goto	u3660
  6496  0DE1                     u3661:
  6497  0DE1  2DE4               	goto	l64
  6498  0DE2                     u3660:
  6499                           	
  6500  0DE2                     l30001498:	
  6501  0DE2  1788               	bsf	(71/8),(71)&7
  6502  0DE3  2E00               	goto	l30001500
  6503                           	
  6504  0DE4                     l64:	
  6505                           	line	318
  6506                           ;MVC.c: 318: else RD7 = 0;
  6507  0DE4  1388               	bcf	(71/8),(71)&7
  6508  0DE5  2E00               	goto	l30001500
  6509                           	
  6510  0DE6                     l30001499:	
  6511                           	line	293
  6512  0DE6  0825               	movf	(send_config@i),w
  6513  0DE7  3A00               		xorlw	0^0
  6514  0DE8  1903               	skipnz
  6515  0DE9  2D9D               	goto	l30001483
  6516  0DEA  3A01               	xorlw	1^0
  6517  0DEB  1903               	skipnz
  6518  0DEC  2DA6               	goto	l30001485
  6519  0DED  3A03               	xorlw	2^1
  6520  0DEE  1903               	skipnz
  6521  0DEF  2DAF               	goto	l30001487
  6522  0DF0  3A01               	xorlw	3^2
  6523  0DF1  1903               	skipnz
  6524  0DF2  2DB8               	goto	l30001489
  6525  0DF3  3A07               	xorlw	4^3
  6526  0DF4  1903               	skipnz
  6527  0DF5  2DC1               	goto	l30001491
  6528  0DF6  3A01               	xorlw	5^4
  6529  0DF7  1903               	skipnz
  6530  0DF8  2DCA               	goto	l30001493
  6531  0DF9  3A03               	xorlw	6^5
  6532  0DFA  1903               	skipnz
  6533  0DFB  2DD3               	goto	l30001495
  6534  0DFC  3A01               	xorlw	7^6
  6535  0DFD  1903               	skipnz
  6536  0DFE  2DDC               	goto	l30001497
  6537  0DFF  2E00               	goto	l30001500
  6538                           
  6539                           	
  6540  0E00                     l30001500:	
  6541                           	line	290
  6542  0E00  3001               	movlw	(01h)
  6543  0E01  00F4               	movwf	(??_send_config+0+0)
  6544  0E02  0874               	movf	(??_send_config+0+0),w
  6545  0E03  07A5               	addwf	(send_config@i),f
  6546                           	
  6547  0E04                     l30001501:	
  6548  0E04  3008               	movlw	(08h)
  6549  0E05  0225               	subwf	(send_config@i),w
  6550  0E06  1C03               	skipc
  6551  0E07  2E09               	goto	u3671
  6552  0E08  2E0A               	goto	u3670
  6553  0E09                     u3671:
  6554  0E09  2D90               	goto	l30001482
  6555  0E0A                     u3670:
  6556                           	
  6557  0E0A                     l30001502:	
  6558                           	line	321
  6559                           ;MVC.c: 320: }
  6560                           ;MVC.c: 321: delay(50);
  6561  0E0A  3000               	movlw	0
  6562  0E0B  00A3               	movwf	(?_delay+3)
  6563  0E0C  3000               	movlw	0
  6564  0E0D  00A2               	movwf	(?_delay+2)
  6565  0E0E  3000               	movlw	0
  6566  0E0F  00A1               	movwf	(?_delay+1)
  6567  0E10  3032               	movlw	032h
  6568  0E11  00A0               	movwf	(?_delay)
  6569                           
  6570  0E12  120A  158A  2173   	fcall	_delay
              120A  158A         
  6571                           	line	322
  6572                           ;MVC.c: 322: e_pulse();
  6573  0E17  120A  158A  2128   	fcall	_e_pulse
              120A  158A         
  6574                           	
  6575  0E1C                     l36:	
  6576  0E1C  0008               	return
  6577                           	opt stack 0
  6578                           GLOBAL	__end_of_send_config
  6579  0E1D                     	__end_of_send_config:
  6580                           ; =============== function _send_config ends ============
  6581                           
  6582                           psect	text223,local,class=CODE,delta=2
  6583                           global __ptext223
  6584  0C1F                     __ptext223:
  6585                           	line	323
  6586                           	signat	_send_config,4216
  6587                           	global	___lldiv
  6588                           
  6589                           ; *************** function ___lldiv *****************
  6590                           ; Defined at:
  6591                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lldiv.c"
  6592                           ; Parameters:    Size  Location     Type
  6593                           ;  dividend        4    5[BANK0 ] unsigned long 
  6594                           ;  divisor         4    9[BANK0 ] unsigned long 
  6595                           ; Auto vars:     Size  Location     Type
  6596                           ;  quotient        4    0[BANK0 ] unsigned long 
  6597                           ;  counter         1    4[BANK0 ] unsigned char 
  6598                           ; Return value:  Size  Location     Type
  6599                           ;                  4    5[BANK0 ] unsigned long 
  6600                           ; Registers used:
  6601                           ;		wreg, status,2, status,0
  6602                           ; Tracked objects:
  6603                           ;		On entry : 0/0
  6604                           ;		On exit  : 0/0
  6605                           ;		Unchanged: 0/0
  6606                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6607                           ;      Locals:         1      13       0       0       0
  6608                           ;      Temp:     1
  6609                           ;      Total:   14
  6610                           ; This function calls:
  6611                           ;		Nothing
  6612                           ; This function is called by:
  6613                           ;		_send_dec
  6614                           ; This function uses a non-reentrant model
  6615                           ; 
  6616                           psect	text223
  6617                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lldiv.c"
  6618                           	line	5
  6619                           	global	__size_of___lldiv
  6620  0069                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  6621                           	
  6622  0C1F                     ___lldiv:	
  6623                           	opt stack 4
  6624                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6625                           	line	9
  6626                           	
  6627  0C1F                     l30001503:	
  6628  0C1F  3000               	movlw	0
  6629  0C20  1283               	bcf	status, 5	;RP0=0, select bank0
  6630  0C21  1303               	bcf	status, 6	;RP1=0, select bank0
  6631  0C22  00A3               	movwf	(___lldiv@quotient+3)
  6632  0C23  3000               	movlw	0
  6633  0C24  00A2               	movwf	(___lldiv@quotient+2)
  6634  0C25  3000               	movlw	0
  6635  0C26  00A1               	movwf	(___lldiv@quotient+1)
  6636  0C27  3000               	movlw	0
  6637  0C28  00A0               	movwf	(___lldiv@quotient)
  6638                           
  6639                           	line	10
  6640  0C29  082C               	movf	(___lldiv@divisor+3),w
  6641  0C2A  042B               	iorwf	(___lldiv@divisor+2),w
  6642  0C2B  042A               	iorwf	(___lldiv@divisor+1),w
  6643  0C2C  0429               	iorwf	(___lldiv@divisor),w
  6644  0C2D  1903               	skipnz
  6645  0C2E  2C30               	goto	u3681
  6646  0C2F  2C31               	goto	u3680
  6647  0C30                     u3681:
  6648  0C30  2C7F               	goto	l30001513
  6649  0C31                     u3680:
  6650                           	
  6651  0C31                     l30001504:	
  6652                           	line	11
  6653  0C31  01A4               	clrf	(___lldiv@counter)
  6654  0C32  1403               	bsf	status,0
  6655  0C33  0DA4               	rlf	(___lldiv@counter),f
  6656  0C34  2C42               	goto	l30001506
  6657                           	
  6658  0C35                     l30001505:	
  6659                           	line	13
  6660  0C35  3001               	movlw	01h
  6661  0C36  00F0               	movwf	(??___lldiv+0+0)
  6662  0C37                     u3695:
  6663  0C37  1003               	clrc
  6664  0C38  0DA9               	rlf	(___lldiv@divisor),f
  6665  0C39  0DAA               	rlf	(___lldiv@divisor+1),f
  6666  0C3A  0DAB               	rlf	(___lldiv@divisor+2),f
  6667  0C3B  0DAC               	rlf	(___lldiv@divisor+3),f
  6668  0C3C  0BF0               	decfsz	(??___lldiv+0+0)
  6669  0C3D  2C37               	goto	u3695
  6670                           	line	14
  6671  0C3E  3001               	movlw	(01h)
  6672  0C3F  00F0               	movwf	(??___lldiv+0+0)
  6673  0C40  0870               	movf	(??___lldiv+0+0),w
  6674  0C41  07A4               	addwf	(___lldiv@counter),f
  6675                           	
  6676  0C42                     l30001506:	
  6677                           	line	12
  6678  0C42  1FAC               	btfss	(___lldiv@divisor+3),(31)&7
  6679  0C43  2C45               	goto	u3701
  6680  0C44  2C46               	goto	u3700
  6681  0C45                     u3701:
  6682  0C45  2C35               	goto	l30001505
  6683  0C46                     u3700:
  6684                           	
  6685  0C46                     l30001507:	
  6686                           	line	17
  6687  0C46  3001               	movlw	01h
  6688  0C47  00F0               	movwf	(??___lldiv+0+0)
  6689  0C48                     u3715:
  6690  0C48  1003               	clrc
  6691  0C49  0DA0               	rlf	(___lldiv@quotient),f
  6692  0C4A  0DA1               	rlf	(___lldiv@quotient+1),f
  6693  0C4B  0DA2               	rlf	(___lldiv@quotient+2),f
  6694  0C4C  0DA3               	rlf	(___lldiv@quotient+3),f
  6695  0C4D  0BF0               	decfsz	(??___lldiv+0+0)
  6696  0C4E  2C48               	goto	u3715
  6697                           	
  6698  0C4F                     l30001508:	
  6699                           	line	18
  6700  0C4F  082C               	movf	(___lldiv@divisor+3),w
  6701  0C50  0228               	subwf	(___lldiv@dividend+3),w
  6702  0C51  1D03               	skipz
  6703  0C52  2C5D               	goto	u3725
  6704  0C53  082B               	movf	(___lldiv@divisor+2),w
  6705  0C54  0227               	subwf	(___lldiv@dividend+2),w
  6706  0C55  1D03               	skipz
  6707  0C56  2C5D               	goto	u3725
  6708  0C57  082A               	movf	(___lldiv@divisor+1),w
  6709  0C58  0226               	subwf	(___lldiv@dividend+1),w
  6710  0C59  1D03               	skipz
  6711  0C5A  2C5D               	goto	u3725
  6712  0C5B  0829               	movf	(___lldiv@divisor),w
  6713  0C5C  0225               	subwf	(___lldiv@dividend),w
  6714  0C5D                     u3725:
  6715  0C5D  1C03               	skipc
  6716  0C5E  2C60               	goto	u3721
  6717  0C5F  2C61               	goto	u3720
  6718  0C60                     u3721:
  6719  0C60  2C70               	goto	l30001511
  6720  0C61                     u3720:
  6721                           	
  6722  0C61                     l30001509:	
  6723                           	line	19
  6724  0C61  0829               	movf	(___lldiv@divisor),w
  6725  0C62  02A5               	subwf	(___lldiv@dividend),f
  6726  0C63  082A               	movf	(___lldiv@divisor+1),w
  6727  0C64  1C03               	skipc
  6728  0C65  0F2A               	incfsz	(___lldiv@divisor+1),w
  6729  0C66  02A6               	subwf	(___lldiv@dividend+1),f
  6730  0C67  082B               	movf	(___lldiv@divisor+2),w
  6731  0C68  1C03               	skipc
  6732  0C69  0F2B               	incfsz	(___lldiv@divisor+2),w
  6733  0C6A  02A7               	subwf	(___lldiv@dividend+2),f
  6734  0C6B  082C               	movf	(___lldiv@divisor+3),w
  6735  0C6C  1C03               	skipc
  6736  0C6D  0F2C               	incfsz	(___lldiv@divisor+3),w
  6737  0C6E  02A8               	subwf	(___lldiv@dividend+3),f
  6738                           	
  6739  0C6F                     l30001510:	
  6740                           	line	20
  6741  0C6F  1420               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  6742                           	
  6743  0C70                     l30001511:	
  6744                           	line	22
  6745  0C70  3001               	movlw	01h
  6746  0C71                     u3735:
  6747  0C71  1003               	clrc
  6748  0C72  0CAC               	rrf	(___lldiv@divisor+3),f
  6749  0C73  0CAB               	rrf	(___lldiv@divisor+2),f
  6750  0C74  0CAA               	rrf	(___lldiv@divisor+1),f
  6751  0C75  0CA9               	rrf	(___lldiv@divisor),f
  6752  0C76  3EFF               	addlw	-1
  6753  0C77  1D03               	skipz
  6754  0C78  2C71               	goto	u3735
  6755                           
  6756                           	
  6757  0C79                     l30001512:	
  6758                           	line	23
  6759  0C79  3001               	movlw	low(01h)
  6760  0C7A  02A4               	subwf	(___lldiv@counter),f
  6761  0C7B  1D03               	btfss	status,2
  6762  0C7C  2C7E               	goto	u3741
  6763  0C7D  2C7F               	goto	u3740
  6764  0C7E                     u3741:
  6765  0C7E  2C46               	goto	l30001507
  6766  0C7F                     u3740:
  6767                           	
  6768  0C7F                     l30001513:	
  6769                           	line	25
  6770  0C7F  0823               	movf	(___lldiv@quotient+3),w
  6771  0C80  00A8               	movwf	(?___lldiv+3)
  6772  0C81  0822               	movf	(___lldiv@quotient+2),w
  6773  0C82  00A7               	movwf	(?___lldiv+2)
  6774  0C83  0821               	movf	(___lldiv@quotient+1),w
  6775  0C84  00A6               	movwf	(?___lldiv+1)
  6776  0C85  0820               	movf	(___lldiv@quotient),w
  6777  0C86  00A5               	movwf	(?___lldiv)
  6778                           
  6779                           	
  6780  0C87                     l348:	
  6781  0C87  0008               	return
  6782                           	opt stack 0
  6783                           GLOBAL	__end_of___lldiv
  6784  0C88                     	__end_of___lldiv:
  6785                           ; =============== function ___lldiv ends ============
  6786                           
  6787                           psect	text224,local,class=CODE,delta=2
  6788                           global __ptext224
  6789  08EC                     __ptext224:
  6790                           	line	26
  6791                           	signat	___lldiv,8316
  6792                           	global	_UART_Write
  6793                           
  6794                           ; *************** function _UART_Write *****************
  6795                           ; Defined at:
  6796                           ;		line 517 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  6797                           ; Parameters:    Size  Location     Type
  6798                           ;  data            1    wreg     unsigned char 
  6799                           ; Auto vars:     Size  Location     Type
  6800                           ;  data            1    0[COMMON] unsigned char 
  6801                           ; Return value:  Size  Location     Type
  6802                           ;		None               void
  6803                           ; Registers used:
  6804                           ;		wreg
  6805                           ; Tracked objects:
  6806                           ;		On entry : 0/0
  6807                           ;		On exit  : 0/0
  6808                           ;		Unchanged: 0/0
  6809                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6810                           ;      Locals:         1       0       0       0       0
  6811                           ;      Temp:     0
  6812                           ;      Total:    1
  6813                           ; This function calls:
  6814                           ;		Nothing
  6815                           ; This function is called by:
  6816                           ;		_kirim_data
  6817                           ;		_UART_Write_Text
  6818                           ; This function uses a non-reentrant model
  6819                           ; 
  6820                           psect	text224
  6821                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  6822                           	line	517
  6823                           	global	__size_of_UART_Write
  6824  000C                     	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  6825                           ;MVC.c: 516: void UART_Write(char data)
  6826                           ;MVC.c: 517: {
  6827                           	
  6828  08EC                     _UART_Write:	
  6829                           	opt stack 4
  6830                           ; Regs used in _UART_Write: [wreg]
  6831                           ;UART_Write@data stored from wreg
  6832  08EC  00F0               	movwf	(UART_Write@data)
  6833                           	
  6834  08ED                     l30001617:	
  6835                           	
  6836  08ED                     l130:	
  6837                           	line	518
  6838  08ED  1683               	bsf	status, 5	;RP0=1, select bank1
  6839  08EE  1303               	bcf	status, 6	;RP1=0, select bank1
  6840  08EF  1C98               	btfss	(1217/8)^080h,(1217)&7
  6841  08F0  28F2               	goto	u4311
  6842  08F1  28F3               	goto	u4310
  6843  08F2                     u4311:
  6844  08F2  28ED               	goto	l130
  6845  08F3                     u4310:
  6846                           	
  6847  08F3                     l30001618:	
  6848                           	line	519
  6849                           ;MVC.c: 519: TXREG = data;
  6850  08F3  0870               	movf	(UART_Write@data),w
  6851  08F4  1283               	bcf	status, 5	;RP0=0, select bank0
  6852  08F5  1303               	bcf	status, 6	;RP1=0, select bank0
  6853  08F6  0099               	movwf	(25)	;volatile
  6854                           	
  6855  08F7                     l129:	
  6856  08F7  0008               	return
  6857                           	opt stack 0
  6858                           GLOBAL	__end_of_UART_Write
  6859  08F8                     	__end_of_UART_Write:
  6860                           ; =============== function _UART_Write ends ============
  6861                           
  6862                           psect	text225,local,class=CODE,delta=2
  6863                           global __ptext225
  6864  0A43                     __ptext225:
  6865                           	line	520
  6866                           	signat	_UART_Write,4216
  6867                           	global	___lwmod
  6868                           
  6869                           ; *************** function ___lwmod *****************
  6870                           ; Defined at:
  6871                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  6872                           ; Parameters:    Size  Location     Type
  6873                           ;  dividend        2    0[BANK0 ] unsigned int 
  6874                           ;  divisor         2    2[BANK0 ] unsigned int 
  6875                           ; Auto vars:     Size  Location     Type
  6876                           ;  counter         1    1[COMMON] unsigned char 
  6877                           ; Return value:  Size  Location     Type
  6878                           ;                  2    0[BANK0 ] unsigned int 
  6879                           ; Registers used:
  6880                           ;		wreg, status,2, status,0
  6881                           ; Tracked objects:
  6882                           ;		On entry : 0/0
  6883                           ;		On exit  : 0/0
  6884                           ;		Unchanged: 0/0
  6885                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6886                           ;      Locals:         2       4       0       0       0
  6887                           ;      Temp:     1
  6888                           ;      Total:    6
  6889                           ; This function calls:
  6890                           ;		Nothing
  6891                           ; This function is called by:
  6892                           ;		_utoa
  6893                           ; This function uses a non-reentrant model
  6894                           ; 
  6895                           psect	text225
  6896                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  6897                           	line	5
  6898                           	global	__size_of___lwmod
  6899  0039                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6900                           	
  6901  0A43                     ___lwmod:	
  6902                           	opt stack 4
  6903                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6904                           	line	8
  6905                           	
  6906  0A43                     l30001241:	
  6907  0A43  1283               	bcf	status, 5	;RP0=0, select bank0
  6908  0A44  1303               	bcf	status, 6	;RP1=0, select bank0
  6909  0A45  0823               	movf	(___lwmod@divisor+1),w
  6910  0A46  0422               	iorwf	(___lwmod@divisor),w
  6911  0A47  1903               	skipnz
  6912  0A48  2A4A               	goto	u2861
  6913  0A49  2A4B               	goto	u2860
  6914  0A4A                     u2861:
  6915  0A4A  2A7B               	goto	l172
  6916  0A4B                     u2860:
  6917                           	
  6918  0A4B                     l30001242:	
  6919                           	line	9
  6920  0A4B  01F1               	clrf	(___lwmod@counter)
  6921  0A4C  1403               	bsf	status,0
  6922  0A4D  0DF1               	rlf	(___lwmod@counter),f
  6923  0A4E  2A5A               	goto	l30001245
  6924                           	
  6925  0A4F                     l30001243:	
  6926                           	line	11
  6927  0A4F  3001               	movlw	01h
  6928  0A50                     u2875:
  6929  0A50  1003               	clrc
  6930  0A51  0DA2               	rlf	(___lwmod@divisor),f
  6931  0A52  0DA3               	rlf	(___lwmod@divisor+1),f
  6932  0A53  3EFF               	addlw	-1
  6933  0A54  1D03               	skipz
  6934  0A55  2A50               	goto	u2875
  6935                           	
  6936  0A56                     l30001244:	
  6937                           	line	12
  6938  0A56  3001               	movlw	(01h)
  6939  0A57  00F0               	movwf	(??___lwmod+0+0)
  6940  0A58  0870               	movf	(??___lwmod+0+0),w
  6941  0A59  07F1               	addwf	(___lwmod@counter),f
  6942                           	
  6943  0A5A                     l30001245:	
  6944                           	line	10
  6945  0A5A  1FA3               	btfss	(___lwmod@divisor+1),(15)&7
  6946  0A5B  2A5D               	goto	u2881
  6947  0A5C  2A5E               	goto	u2880
  6948  0A5D                     u2881:
  6949  0A5D  2A4F               	goto	l30001243
  6950  0A5E                     u2880:
  6951                           	
  6952  0A5E                     l30001246:	
  6953                           	line	15
  6954  0A5E  0823               	movf	(___lwmod@divisor+1),w
  6955  0A5F  0221               	subwf	(___lwmod@dividend+1),w
  6956  0A60  1D03               	skipz
  6957  0A61  2A64               	goto	u2895
  6958  0A62  0822               	movf	(___lwmod@divisor),w
  6959  0A63  0220               	subwf	(___lwmod@dividend),w
  6960  0A64                     u2895:
  6961  0A64  1C03               	skipc
  6962  0A65  2A67               	goto	u2891
  6963  0A66  2A68               	goto	u2890
  6964  0A67                     u2891:
  6965  0A67  2A6E               	goto	l30001248
  6966  0A68                     u2890:
  6967                           	
  6968  0A68                     l30001247:	
  6969                           	line	16
  6970  0A68  0822               	movf	(___lwmod@divisor),w
  6971  0A69  02A0               	subwf	(___lwmod@dividend),f
  6972  0A6A  0823               	movf	(___lwmod@divisor+1),w
  6973  0A6B  1C03               	skipc
  6974  0A6C  03A1               	decf	(___lwmod@dividend+1),f
  6975  0A6D  02A1               	subwf	(___lwmod@dividend+1),f
  6976                           	
  6977  0A6E                     l30001248:	
  6978                           	line	17
  6979  0A6E  3001               	movlw	01h
  6980  0A6F                     u2905:
  6981  0A6F  1003               	clrc
  6982  0A70  0CA3               	rrf	(___lwmod@divisor+1),f
  6983  0A71  0CA2               	rrf	(___lwmod@divisor),f
  6984  0A72  3EFF               	addlw	-1
  6985  0A73  1D03               	skipz
  6986  0A74  2A6F               	goto	u2905
  6987                           	
  6988  0A75                     l30001249:	
  6989                           	line	18
  6990  0A75  3001               	movlw	low(01h)
  6991  0A76  02F1               	subwf	(___lwmod@counter),f
  6992  0A77  1D03               	btfss	status,2
  6993  0A78  2A7A               	goto	u2911
  6994  0A79  2A7B               	goto	u2910
  6995  0A7A                     u2911:
  6996  0A7A  2A5E               	goto	l30001246
  6997  0A7B                     u2910:
  6998                           	
  6999  0A7B                     l172:	
  7000                           	line	20
  7001                           	
  7002  0A7B                     l171:	
  7003  0A7B  0008               	return
  7004                           	opt stack 0
  7005                           GLOBAL	__end_of___lwmod
  7006  0A7C                     	__end_of___lwmod:
  7007                           ; =============== function ___lwmod ends ============
  7008                           
  7009                           psect	text226,local,class=CODE,delta=2
  7010                           global __ptext226
  7011  0BA7                     __ptext226:
  7012                           	line	21
  7013                           	signat	___lwmod,8314
  7014                           	global	___lwdiv
  7015                           
  7016                           ; *************** function ___lwdiv *****************
  7017                           ; Defined at:
  7018                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  7019                           ; Parameters:    Size  Location     Type
  7020                           ;  dividend        2    3[BANK0 ] unsigned int 
  7021                           ;  divisor         2    5[BANK0 ] unsigned int 
  7022                           ; Auto vars:     Size  Location     Type
  7023                           ;  quotient        2    1[BANK0 ] unsigned int 
  7024                           ;  counter         1    0[BANK0 ] unsigned char 
  7025                           ; Return value:  Size  Location     Type
  7026                           ;                  2    3[BANK0 ] unsigned int 
  7027                           ; Registers used:
  7028                           ;		wreg, status,2, status,0
  7029                           ; Tracked objects:
  7030                           ;		On entry : 0/0
  7031                           ;		On exit  : 0/0
  7032                           ;		Unchanged: 0/0
  7033                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7034                           ;      Locals:         1       7       0       0       0
  7035                           ;      Temp:     1
  7036                           ;      Total:    8
  7037                           ; This function calls:
  7038                           ;		Nothing
  7039                           ; This function is called by:
  7040                           ;		_utoa
  7041                           ; This function uses a non-reentrant model
  7042                           ; 
  7043                           psect	text226
  7044                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  7045                           	line	5
  7046                           	global	__size_of___lwdiv
  7047  004B                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7048                           	
  7049  0BA7                     ___lwdiv:	
  7050                           	opt stack 4
  7051                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7052                           	line	9
  7053                           	
  7054  0BA7                     l30001515:	
  7055  0BA7  3000               	movlw	low(0)
  7056  0BA8  1283               	bcf	status, 5	;RP0=0, select bank0
  7057  0BA9  1303               	bcf	status, 6	;RP1=0, select bank0
  7058  0BAA  00A1               	movwf	(___lwdiv@quotient)
  7059  0BAB  3000               	movlw	high(0)
  7060  0BAC  00A2               	movwf	((___lwdiv@quotient))+1
  7061                           	line	10
  7062  0BAD  0826               	movf	(___lwdiv@divisor+1),w
  7063  0BAE  0425               	iorwf	(___lwdiv@divisor),w
  7064  0BAF  1903               	skipnz
  7065  0BB0  2BB2               	goto	u3751
  7066  0BB1  2BB3               	goto	u3750
  7067  0BB2                     u3751:
  7068  0BB2  2BEB               	goto	l30001525
  7069  0BB3                     u3750:
  7070                           	
  7071  0BB3                     l30001516:	
  7072                           	line	11
  7073  0BB3  01A0               	clrf	(___lwdiv@counter)
  7074  0BB4  1403               	bsf	status,0
  7075  0BB5  0DA0               	rlf	(___lwdiv@counter),f
  7076  0BB6  2BC2               	goto	l30001519
  7077                           	
  7078  0BB7                     l30001517:	
  7079                           	line	13
  7080  0BB7  3001               	movlw	01h
  7081  0BB8                     u3765:
  7082  0BB8  1003               	clrc
  7083  0BB9  0DA5               	rlf	(___lwdiv@divisor),f
  7084  0BBA  0DA6               	rlf	(___lwdiv@divisor+1),f
  7085  0BBB  3EFF               	addlw	-1
  7086  0BBC  1D03               	skipz
  7087  0BBD  2BB8               	goto	u3765
  7088                           	
  7089  0BBE                     l30001518:	
  7090                           	line	14
  7091  0BBE  3001               	movlw	(01h)
  7092  0BBF  00F0               	movwf	(??___lwdiv+0+0)
  7093  0BC0  0870               	movf	(??___lwdiv+0+0),w
  7094  0BC1  07A0               	addwf	(___lwdiv@counter),f
  7095                           	
  7096  0BC2                     l30001519:	
  7097                           	line	12
  7098  0BC2  1FA6               	btfss	(___lwdiv@divisor+1),(15)&7
  7099  0BC3  2BC5               	goto	u3771
  7100  0BC4  2BC6               	goto	u3770
  7101  0BC5                     u3771:
  7102  0BC5  2BB7               	goto	l30001517
  7103  0BC6                     u3770:
  7104                           	
  7105  0BC6                     l30001520:	
  7106                           	line	17
  7107  0BC6  3001               	movlw	01h
  7108  0BC7                     u3785:
  7109  0BC7  1003               	clrc
  7110  0BC8  0DA1               	rlf	(___lwdiv@quotient),f
  7111  0BC9  0DA2               	rlf	(___lwdiv@quotient+1),f
  7112  0BCA  3EFF               	addlw	-1
  7113  0BCB  1D03               	skipz
  7114  0BCC  2BC7               	goto	u3785
  7115                           	line	18
  7116  0BCD  0826               	movf	(___lwdiv@divisor+1),w
  7117  0BCE  0224               	subwf	(___lwdiv@dividend+1),w
  7118  0BCF  1D03               	skipz
  7119  0BD0  2BD3               	goto	u3795
  7120  0BD1  0825               	movf	(___lwdiv@divisor),w
  7121  0BD2  0223               	subwf	(___lwdiv@dividend),w
  7122  0BD3                     u3795:
  7123  0BD3  1C03               	skipc
  7124  0BD4  2BD6               	goto	u3791
  7125  0BD5  2BD7               	goto	u3790
  7126  0BD6                     u3791:
  7127  0BD6  2BDE               	goto	l30001523
  7128  0BD7                     u3790:
  7129                           	
  7130  0BD7                     l30001521:	
  7131                           	line	19
  7132  0BD7  0825               	movf	(___lwdiv@divisor),w
  7133  0BD8  02A3               	subwf	(___lwdiv@dividend),f
  7134  0BD9  0826               	movf	(___lwdiv@divisor+1),w
  7135  0BDA  1C03               	skipc
  7136  0BDB  03A4               	decf	(___lwdiv@dividend+1),f
  7137  0BDC  02A4               	subwf	(___lwdiv@dividend+1),f
  7138                           	
  7139  0BDD                     l30001522:	
  7140                           	line	20
  7141  0BDD  1421               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7142                           	
  7143  0BDE                     l30001523:	
  7144                           	line	22
  7145  0BDE  3001               	movlw	01h
  7146  0BDF                     u3805:
  7147  0BDF  1003               	clrc
  7148  0BE0  0CA6               	rrf	(___lwdiv@divisor+1),f
  7149  0BE1  0CA5               	rrf	(___lwdiv@divisor),f
  7150  0BE2  3EFF               	addlw	-1
  7151  0BE3  1D03               	skipz
  7152  0BE4  2BDF               	goto	u3805
  7153                           	
  7154  0BE5                     l30001524:	
  7155                           	line	23
  7156  0BE5  3001               	movlw	low(01h)
  7157  0BE6  02A0               	subwf	(___lwdiv@counter),f
  7158  0BE7  1D03               	btfss	status,2
  7159  0BE8  2BEA               	goto	u3811
  7160  0BE9  2BEB               	goto	u3810
  7161  0BEA                     u3811:
  7162  0BEA  2BC6               	goto	l30001520
  7163  0BEB                     u3810:
  7164                           	
  7165  0BEB                     l30001525:	
  7166                           	line	25
  7167  0BEB  0822               	movf	(___lwdiv@quotient+1),w
  7168  0BEC  01A4               	clrf	(?___lwdiv+1)
  7169  0BED  07A4               	addwf	(?___lwdiv+1)
  7170  0BEE  0821               	movf	(___lwdiv@quotient),w
  7171  0BEF  01A3               	clrf	(?___lwdiv)
  7172  0BF0  07A3               	addwf	(?___lwdiv)
  7173                           
  7174                           	
  7175  0BF1                     l162:	
  7176  0BF1  0008               	return
  7177                           	opt stack 0
  7178                           GLOBAL	__end_of___lwdiv
  7179  0BF2                     	__end_of___lwdiv:
  7180                           ; =============== function ___lwdiv ends ============
  7181                           
  7182                           psect	text227,local,class=CODE,delta=2
  7183                           global __ptext227
  7184  0E1D                     __ptext227:
  7185                           	line	26
  7186                           	signat	___lwdiv,8314
  7187                           	global	_send_char
  7188                           
  7189                           ; *************** function _send_char *****************
  7190                           ; Defined at:
  7191                           ;		line 361 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7192                           ; Parameters:    Size  Location     Type
  7193                           ;  data            1    wreg     unsigned char 
  7194                           ; Auto vars:     Size  Location     Type
  7195                           ;  data            1    5[BANK0 ] unsigned char 
  7196                           ;  test            1    7[BANK0 ] unsigned char 
  7197                           ;  i               1    6[BANK0 ] unsigned char 
  7198                           ; Return value:  Size  Location     Type
  7199                           ;		None               void
  7200                           ; Registers used:
  7201                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7202                           ; Tracked objects:
  7203                           ;		On entry : 0/0
  7204                           ;		On exit  : 0/0
  7205                           ;		Unchanged: 0/0
  7206                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7207                           ;      Locals:         0       4       0       0       0
  7208                           ;      Temp:     1
  7209                           ;      Total:    4
  7210                           ; This function calls:
  7211                           ;		_delay
  7212                           ;		_e_pulse
  7213                           ; This function is called by:
  7214                           ;		_send_string
  7215                           ;		_send_dec
  7216                           ; This function uses a non-reentrant model
  7217                           ; 
  7218                           psect	text227
  7219                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7220                           	line	361
  7221                           	global	__size_of_send_char
  7222  0096                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  7223                           ;MVC.c: 360: void send_char(unsigned char data)
  7224                           ;MVC.c: 361: {
  7225                           	
  7226  0E1D                     _send_char:	
  7227                           	opt stack 4
  7228                           ; Regs used in _send_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7229                           ;send_char@data stored from wreg
  7230                           	line	364
  7231  0E1D  1283               	bcf	status, 5	;RP0=0, select bank0
  7232  0E1E  1303               	bcf	status, 6	;RP1=0, select bank0
  7233  0E1F  00A5               	movwf	(send_char@data)
  7234                           	
  7235  0E20                     l30001405:	
  7236                           ;MVC.c: 362: unsigned char test;
  7237                           ;MVC.c: 363: unsigned char i;
  7238                           ;MVC.c: 364: RB7 = 1;
  7239  0E20  1786               	bsf	(55/8),(55)&7
  7240                           	line	365
  7241                           ;MVC.c: 365: for(i = 0; i < 8; i++)
  7242  0E21  1003               	clrc
  7243  0E22  3000               	movlw	0
  7244  0E23  1803               	btfsc	status,0
  7245  0E24  3001               	movlw	1
  7246  0E25  00A6               	movwf	(send_char@i)
  7247                           	
  7248  0E26                     l30001408:	
  7249                           	line	367
  7250                           ;MVC.c: 366: {
  7251                           ;MVC.c: 367: test = (data >> i) & 0b00000001;
  7252  0E26  0825               	movf	(send_char@data),w
  7253  0E27  00A4               	movwf	(??_send_char+0+0)
  7254  0E28  0A26               	incf	(send_char@i),w
  7255  0E29  2E2C               	goto	u3334
  7256  0E2A                     u3335:
  7257  0E2A  1003               	clrc
  7258  0E2B  0CA4               	rrf	(??_send_char+0+0),f
  7259  0E2C                     u3334:
  7260  0E2C  3EFF               	addlw	-1
  7261  0E2D  1D03               	skipz
  7262  0E2E  2E2A               	goto	u3335
  7263  0E2F  0824               	movf	0+(??_send_char+0+0),w
  7264  0E30  3901               	andlw	01h
  7265  0E31  00A7               	movwf	(send_char@test)
  7266  0E32  2E7C               	goto	l30001425
  7267                           	
  7268  0E33                     l30001409:	
  7269                           	line	371
  7270                           ;MVC.c: 371: if(test == 1) RD0 = 1;
  7271  0E33  0827               	movf	(send_char@test),w
  7272  0E34  3A01               	xorlw	01h
  7273  0E35  1D03               	skipz
  7274  0E36  2E38               	goto	u3341
  7275  0E37  2E39               	goto	u3340
  7276  0E38                     u3341:
  7277  0E38  2E3B               	goto	l77
  7278  0E39                     u3340:
  7279                           	
  7280  0E39                     l30001410:	
  7281  0E39  1408               	bsf	(64/8),(64)&7
  7282  0E3A  2E3C               	goto	l30001411
  7283                           	
  7284  0E3B                     l77:	
  7285                           	line	372
  7286                           ;MVC.c: 372: else RD0 = 0;
  7287  0E3B  1008               	bcf	(64/8),(64)&7
  7288                           	
  7289  0E3C                     l30001411:	
  7290                           	line	374
  7291                           ;MVC.c: 374: if(test == 1) RD1 = 1;
  7292  0E3C  0827               	movf	(send_char@test),w
  7293  0E3D  3A01               	xorlw	01h
  7294  0E3E  1D03               	skipz
  7295  0E3F  2E41               	goto	u3351
  7296  0E40  2E42               	goto	u3350
  7297  0E41                     u3351:
  7298  0E41  2E44               	goto	l80
  7299  0E42                     u3350:
  7300                           	
  7301  0E42                     l30001412:	
  7302  0E42  1488               	bsf	(65/8),(65)&7
  7303  0E43  2E45               	goto	l30001413
  7304                           	
  7305  0E44                     l80:	
  7306                           	line	375
  7307                           ;MVC.c: 375: else RD1 = 0;
  7308  0E44  1088               	bcf	(65/8),(65)&7
  7309                           	
  7310  0E45                     l30001413:	
  7311                           	line	377
  7312                           ;MVC.c: 377: if(test == 1) RD2 = 1;
  7313  0E45  0827               	movf	(send_char@test),w
  7314  0E46  3A01               	xorlw	01h
  7315  0E47  1D03               	skipz
  7316  0E48  2E4A               	goto	u3361
  7317  0E49  2E4B               	goto	u3360
  7318  0E4A                     u3361:
  7319  0E4A  2E4D               	goto	l83
  7320  0E4B                     u3360:
  7321                           	
  7322  0E4B                     l30001414:	
  7323  0E4B  1508               	bsf	(66/8),(66)&7
  7324  0E4C  2E4E               	goto	l30001415
  7325                           	
  7326  0E4D                     l83:	
  7327                           	line	378
  7328                           ;MVC.c: 378: else RD2 = 0;
  7329  0E4D  1108               	bcf	(66/8),(66)&7
  7330                           	
  7331  0E4E                     l30001415:	
  7332                           	line	380
  7333                           ;MVC.c: 380: if(test == 1) RD3 = 1;
  7334  0E4E  0827               	movf	(send_char@test),w
  7335  0E4F  3A01               	xorlw	01h
  7336  0E50  1D03               	skipz
  7337  0E51  2E53               	goto	u3371
  7338  0E52  2E54               	goto	u3370
  7339  0E53                     u3371:
  7340  0E53  2E56               	goto	l86
  7341  0E54                     u3370:
  7342                           	
  7343  0E54                     l30001416:	
  7344  0E54  1588               	bsf	(67/8),(67)&7
  7345  0E55  2E57               	goto	l30001417
  7346                           	
  7347  0E56                     l86:	
  7348                           	line	381
  7349                           ;MVC.c: 381: else RD3 = 0;
  7350  0E56  1188               	bcf	(67/8),(67)&7
  7351                           	
  7352  0E57                     l30001417:	
  7353                           	line	383
  7354                           ;MVC.c: 383: if(test == 1) RD4 = 1;
  7355  0E57  0827               	movf	(send_char@test),w
  7356  0E58  3A01               	xorlw	01h
  7357  0E59  1D03               	skipz
  7358  0E5A  2E5C               	goto	u3381
  7359  0E5B  2E5D               	goto	u3380
  7360  0E5C                     u3381:
  7361  0E5C  2E5F               	goto	l89
  7362  0E5D                     u3380:
  7363                           	
  7364  0E5D                     l30001418:	
  7365  0E5D  1608               	bsf	(68/8),(68)&7
  7366  0E5E  2E60               	goto	l30001419
  7367                           	
  7368  0E5F                     l89:	
  7369                           	line	384
  7370                           ;MVC.c: 384: else RD4 = 0;
  7371  0E5F  1208               	bcf	(68/8),(68)&7
  7372                           	
  7373  0E60                     l30001419:	
  7374                           	line	386
  7375                           ;MVC.c: 386: if(test == 1) RD5 = 1;
  7376  0E60  0827               	movf	(send_char@test),w
  7377  0E61  3A01               	xorlw	01h
  7378  0E62  1D03               	skipz
  7379  0E63  2E65               	goto	u3391
  7380  0E64  2E66               	goto	u3390
  7381  0E65                     u3391:
  7382  0E65  2E68               	goto	l92
  7383  0E66                     u3390:
  7384                           	
  7385  0E66                     l30001420:	
  7386  0E66  1688               	bsf	(69/8),(69)&7
  7387  0E67  2E69               	goto	l30001421
  7388                           	
  7389  0E68                     l92:	
  7390                           	line	387
  7391                           ;MVC.c: 387: else RD5 = 0;
  7392  0E68  1288               	bcf	(69/8),(69)&7
  7393                           	
  7394  0E69                     l30001421:	
  7395                           	line	389
  7396                           ;MVC.c: 389: if(test == 1) RD6 = 1;
  7397  0E69  0827               	movf	(send_char@test),w
  7398  0E6A  3A01               	xorlw	01h
  7399  0E6B  1D03               	skipz
  7400  0E6C  2E6E               	goto	u3401
  7401  0E6D  2E6F               	goto	u3400
  7402  0E6E                     u3401:
  7403  0E6E  2E71               	goto	l95
  7404  0E6F                     u3400:
  7405                           	
  7406  0E6F                     l30001422:	
  7407  0E6F  1708               	bsf	(70/8),(70)&7
  7408  0E70  2E72               	goto	l30001423
  7409                           	
  7410  0E71                     l95:	
  7411                           	line	390
  7412                           ;MVC.c: 390: else RD6 = 0;
  7413  0E71  1308               	bcf	(70/8),(70)&7
  7414                           	
  7415  0E72                     l30001423:	
  7416                           	line	392
  7417                           ;MVC.c: 392: if(test == 1) RD7 = 1;
  7418  0E72  0827               	movf	(send_char@test),w
  7419  0E73  3A01               	xorlw	01h
  7420  0E74  1D03               	skipz
  7421  0E75  2E77               	goto	u3411
  7422  0E76  2E78               	goto	u3410
  7423  0E77                     u3411:
  7424  0E77  2E7A               	goto	l98
  7425  0E78                     u3410:
  7426                           	
  7427  0E78                     l30001424:	
  7428  0E78  1788               	bsf	(71/8),(71)&7
  7429  0E79  2E96               	goto	l30001426
  7430                           	
  7431  0E7A                     l98:	
  7432                           	line	393
  7433                           ;MVC.c: 393: else RD7 = 0;
  7434  0E7A  1388               	bcf	(71/8),(71)&7
  7435  0E7B  2E96               	goto	l30001426
  7436                           	
  7437  0E7C                     l30001425:	
  7438                           	line	368
  7439  0E7C  0826               	movf	(send_char@i),w
  7440  0E7D  3A00               		xorlw	0^0
  7441  0E7E  1903               	skipnz
  7442  0E7F  2E33               	goto	l30001409
  7443  0E80  3A01               	xorlw	1^0
  7444  0E81  1903               	skipnz
  7445  0E82  2E3C               	goto	l30001411
  7446  0E83  3A03               	xorlw	2^1
  7447  0E84  1903               	skipnz
  7448  0E85  2E45               	goto	l30001413
  7449  0E86  3A01               	xorlw	3^2
  7450  0E87  1903               	skipnz
  7451  0E88  2E4E               	goto	l30001415
  7452  0E89  3A07               	xorlw	4^3
  7453  0E8A  1903               	skipnz
  7454  0E8B  2E57               	goto	l30001417
  7455  0E8C  3A01               	xorlw	5^4
  7456  0E8D  1903               	skipnz
  7457  0E8E  2E60               	goto	l30001419
  7458  0E8F  3A03               	xorlw	6^5
  7459  0E90  1903               	skipnz
  7460  0E91  2E69               	goto	l30001421
  7461  0E92  3A01               	xorlw	7^6
  7462  0E93  1903               	skipnz
  7463  0E94  2E72               	goto	l30001423
  7464  0E95  2E96               	goto	l30001426
  7465                           
  7466                           	
  7467  0E96                     l30001426:	
  7468                           	line	365
  7469  0E96  3001               	movlw	(01h)
  7470  0E97  00A4               	movwf	(??_send_char+0+0)
  7471  0E98  0824               	movf	(??_send_char+0+0),w
  7472  0E99  07A6               	addwf	(send_char@i),f
  7473                           	
  7474  0E9A                     l30001427:	
  7475  0E9A  3008               	movlw	(08h)
  7476  0E9B  0226               	subwf	(send_char@i),w
  7477  0E9C  1C03               	skipc
  7478  0E9D  2E9F               	goto	u3421
  7479  0E9E  2EA0               	goto	u3420
  7480  0E9F                     u3421:
  7481  0E9F  2E26               	goto	l30001408
  7482  0EA0                     u3420:
  7483                           	
  7484  0EA0                     l30001428:	
  7485                           	line	396
  7486                           ;MVC.c: 395: }
  7487                           ;MVC.c: 396: delay(50);
  7488  0EA0  3000               	movlw	0
  7489  0EA1  00A3               	movwf	(?_delay+3)
  7490  0EA2  3000               	movlw	0
  7491  0EA3  00A2               	movwf	(?_delay+2)
  7492  0EA4  3000               	movlw	0
  7493  0EA5  00A1               	movwf	(?_delay+1)
  7494  0EA6  3032               	movlw	032h
  7495  0EA7  00A0               	movwf	(?_delay)
  7496                           
  7497  0EA8  120A  158A  2173   	fcall	_delay
              120A  158A         
  7498                           	line	398
  7499                           ;MVC.c: 398: e_pulse();
  7500  0EAD  120A  158A  2128   	fcall	_e_pulse
              120A  158A         
  7501                           	
  7502  0EB2                     l70:	
  7503  0EB2  0008               	return
  7504                           	opt stack 0
  7505                           GLOBAL	__end_of_send_char
  7506  0EB3                     	__end_of_send_char:
  7507                           ; =============== function _send_char ends ============
  7508                           
  7509                           psect	text228,local,class=CODE,delta=2
  7510                           global __ptext228
  7511  0C88                     __ptext228:
  7512                           	line	399
  7513                           	signat	_send_char,4216
  7514                           	global	___ftpack
  7515                           
  7516                           ; *************** function ___ftpack *****************
  7517                           ; Defined at:
  7518                           ;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\float.c"
  7519                           ; Parameters:    Size  Location     Type
  7520                           ;  arg             3    0[BANK0 ] unsigned um
  7521                           ;  exp             1    3[BANK0 ] unsigned char 
  7522                           ;  sign            1    4[BANK0 ] unsigned char 
  7523                           ; Auto vars:     Size  Location     Type
  7524                           ;		None
  7525                           ; Return value:  Size  Location     Type
  7526                           ;                  3    0[BANK0 ] float 
  7527                           ; Registers used:
  7528                           ;		wreg, status,2, status,0
  7529                           ; Tracked objects:
  7530                           ;		On entry : 0/0
  7531                           ;		On exit  : 0/0
  7532                           ;		Unchanged: 0/0
  7533                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7534                           ;      Locals:         3       5       0       0       0
  7535                           ;      Temp:     3
  7536                           ;      Total:    8
  7537                           ; This function calls:
  7538                           ;		Nothing
  7539                           ; This function is called by:
  7540                           ;		___ftadd
  7541                           ;		___ftmul
  7542                           ;		___lltoft
  7543                           ; This function uses a non-reentrant model
  7544                           ; 
  7545                           psect	text228
  7546                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\float.c"
  7547                           	line	63
  7548                           	global	__size_of___ftpack
  7549  007C                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  7550                           	
  7551  0C88                     ___ftpack:	
  7552                           	opt stack 4
  7553                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7554                           	line	64
  7555                           	
  7556  0C88                     l30001585:	
  7557  0C88  1283               	bcf	status, 5	;RP0=0, select bank0
  7558  0C89  1303               	bcf	status, 6	;RP1=0, select bank0
  7559  0C8A  0823               	movf	(___ftpack@exp),w
  7560  0C8B  1D03               	skipz
  7561  0C8C  2C8E               	goto	u4130
  7562  0C8D  2C95               	goto	l30001587
  7563  0C8E                     u4130:
  7564                           	
  7565  0C8E                     l30001586:	
  7566  0C8E  0822               	movf	(___ftpack@arg+2),w
  7567  0C8F  0421               	iorwf	(___ftpack@arg+1),w
  7568  0C90  0420               	iorwf	(___ftpack@arg),w
  7569  0C91  1D03               	skipz
  7570  0C92  2C94               	goto	u4141
  7571  0C93  2C95               	goto	u4140
  7572  0C94                     u4141:
  7573  0C94  2CA8               	goto	l30001590
  7574  0C95                     u4140:
  7575                           	
  7576  0C95                     l30001587:	
  7577                           	line	65
  7578  0C95  3000               	movlw	0x0
  7579  0C96  00A0               	movwf	(?___ftpack)
  7580  0C97  3000               	movlw	0x0
  7581  0C98  00A1               	movwf	(?___ftpack+1)
  7582  0C99  3000               	movlw	0x0
  7583  0C9A  00A2               	movwf	(?___ftpack+2)
  7584  0C9B  2D03               	goto	l486
  7585                           	
  7586  0C9C                     l30001589:	
  7587                           	line	67
  7588  0C9C  3001               	movlw	(01h)
  7589  0C9D  00F0               	movwf	(??___ftpack+0+0)
  7590  0C9E  0870               	movf	(??___ftpack+0+0),w
  7591  0C9F  07A3               	addwf	(___ftpack@exp),f
  7592                           	line	68
  7593  0CA0  3001               	movlw	01h
  7594  0CA1                     u4155:
  7595  0CA1  1003               	clrc
  7596  0CA2  0CA2               	rrf	(___ftpack@arg+2),f
  7597  0CA3  0CA1               	rrf	(___ftpack@arg+1),f
  7598  0CA4  0CA0               	rrf	(___ftpack@arg),f
  7599  0CA5  3EFF               	addlw	-1
  7600  0CA6  1D03               	skipz
  7601  0CA7  2CA1               	goto	u4155
  7602                           
  7603                           	
  7604  0CA8                     l30001590:	
  7605                           	line	66
  7606  0CA8  30FE               	movlw	low highword(0FE0000h)
  7607  0CA9  0522               	andwf	(___ftpack@arg+2),w
  7608  0CAA  1D03               	btfss	status,2
  7609  0CAB  2CAD               	goto	u4161
  7610  0CAC  2CAE               	goto	u4160
  7611  0CAD                     u4161:
  7612  0CAD  2C9C               	goto	l30001589
  7613  0CAE                     u4160:
  7614  0CAE  2CCB               	goto	l491
  7615                           	
  7616  0CAF                     l30001591:	
  7617                           	line	71
  7618  0CAF  3001               	movlw	(01h)
  7619  0CB0  00F0               	movwf	(??___ftpack+0+0)
  7620  0CB1  0870               	movf	(??___ftpack+0+0),w
  7621  0CB2  07A3               	addwf	(___ftpack@exp),f
  7622                           	
  7623  0CB3                     l30001592:	
  7624                           	line	72
  7625  0CB3  3001               	movlw	01h
  7626  0CB4  07A0               	addwf	(___ftpack@arg),f
  7627  0CB5  3000               	movlw	0
  7628  0CB6  1103               	clrz
  7629  0CB7  1803               	skipnc
  7630  0CB8  3E01               	addlw	1
  7631  0CB9  1903               	skipnz
  7632  0CBA  2CBC               	goto	u4171
  7633  0CBB  07A1               	addwf	(___ftpack@arg+1),f
  7634  0CBC                     u4171:
  7635  0CBC  3000               	movlw	0
  7636  0CBD  1103               	clrz
  7637  0CBE  1803               	skipnc
  7638  0CBF  3E01               	addlw	1
  7639  0CC0  1903               	skipnz
  7640  0CC1  2CC3               	goto	u4172
  7641  0CC2  07A2               	addwf	(___ftpack@arg+2),f
  7642  0CC3                     u4172:
  7643                           
  7644                           	
  7645  0CC3                     l30001593:	
  7646                           	line	73
  7647  0CC3  3001               	movlw	01h
  7648  0CC4                     u4185:
  7649  0CC4  1003               	clrc
  7650  0CC5  0CA2               	rrf	(___ftpack@arg+2),f
  7651  0CC6  0CA1               	rrf	(___ftpack@arg+1),f
  7652  0CC7  0CA0               	rrf	(___ftpack@arg),f
  7653  0CC8  3EFF               	addlw	-1
  7654  0CC9  1D03               	skipz
  7655  0CCA  2CC4               	goto	u4185
  7656                           
  7657                           	
  7658  0CCB                     l491:	
  7659                           	line	70
  7660  0CCB  30FF               	movlw	low highword(0FF0000h)
  7661  0CCC  0522               	andwf	(___ftpack@arg+2),w
  7662  0CCD  1D03               	btfss	status,2
  7663  0CCE  2CD0               	goto	u4191
  7664  0CCF  2CD1               	goto	u4190
  7665  0CD0                     u4191:
  7666  0CD0  2CAF               	goto	l30001591
  7667  0CD1                     u4190:
  7668  0CD1  2CDC               	goto	l30001595
  7669                           	
  7670  0CD2                     l30001594:	
  7671                           	line	76
  7672  0CD2  3001               	movlw	low(01h)
  7673  0CD3  02A3               	subwf	(___ftpack@exp),f
  7674                           	line	77
  7675  0CD4  3001               	movlw	01h
  7676  0CD5                     u4205:
  7677  0CD5  1003               	clrc
  7678  0CD6  0DA0               	rlf	(___ftpack@arg),f
  7679  0CD7  0DA1               	rlf	(___ftpack@arg+1),f
  7680  0CD8  0DA2               	rlf	(___ftpack@arg+2),f
  7681  0CD9  3EFF               	addlw	-1
  7682  0CDA  1D03               	skipz
  7683  0CDB  2CD5               	goto	u4205
  7684                           	
  7685  0CDC                     l30001595:	
  7686                           	line	75
  7687  0CDC  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  7688  0CDD  2CDF               	goto	u4211
  7689  0CDE  2CE0               	goto	u4210
  7690  0CDF                     u4211:
  7691  0CDF  2CD2               	goto	l30001594
  7692  0CE0                     u4210:
  7693                           	
  7694  0CE0                     l496:	
  7695                           	line	79
  7696  0CE0  1823               	btfsc	(___ftpack@exp),(0)&7
  7697  0CE1  2CE3               	goto	u4221
  7698  0CE2  2CE4               	goto	u4220
  7699  0CE3                     u4221:
  7700  0CE3  2CEA               	goto	l497
  7701  0CE4                     u4220:
  7702                           	
  7703  0CE4                     l30001596:	
  7704                           	line	80
  7705  0CE4  30FF               	movlw	0FFh
  7706  0CE5  05A0               	andwf	(___ftpack@arg),f
  7707  0CE6  307F               	movlw	07Fh
  7708  0CE7  05A1               	andwf	(___ftpack@arg+1),f
  7709  0CE8  30FF               	movlw	0FFh
  7710  0CE9  05A2               	andwf	(___ftpack@arg+2),f
  7711                           	
  7712  0CEA                     l497:	
  7713                           	line	81
  7714  0CEA  1003               	clrc
  7715  0CEB  0CA3               	rrf	(___ftpack@exp),f
  7716                           
  7717                           	
  7718  0CEC                     l30001597:	
  7719                           	line	82
  7720  0CEC  0823               	movf	(___ftpack@exp),w
  7721  0CED  00F0               	movwf	(??___ftpack+0+0)
  7722  0CEE  01F1               	clrf	(??___ftpack+0+0+1)
  7723  0CEF  01F2               	clrf	(??___ftpack+0+0+2)
  7724  0CF0  3010               	movlw	010h
  7725  0CF1                     u4235:
  7726  0CF1  1003               	clrc
  7727  0CF2  0DF0               	rlf	(??___ftpack+0+0),f
  7728  0CF3  0DF1               	rlf	(??___ftpack+0+1),f
  7729  0CF4  0DF2               	rlf	(??___ftpack+0+2),f
  7730  0CF5                     u4230:
  7731  0CF5  3EFF               	addlw	-1
  7732  0CF6  1D03               	skipz
  7733  0CF7  2CF1               	goto	u4235
  7734  0CF8  0870               	movf	0+(??___ftpack+0+0),w
  7735  0CF9  04A0               	iorwf	(___ftpack@arg),f
  7736  0CFA  0871               	movf	1+(??___ftpack+0+0),w
  7737  0CFB  04A1               	iorwf	(___ftpack@arg+1),f
  7738  0CFC  0872               	movf	2+(??___ftpack+0+0),w
  7739  0CFD  04A2               	iorwf	(___ftpack@arg+2),f
  7740                           	
  7741  0CFE                     l30001598:	
  7742                           	line	83
  7743  0CFE  0824               	movf	(___ftpack@sign),w
  7744  0CFF  1D03               	skipz
  7745  0D00  2D02               	goto	u4240
  7746  0D01  2D03               	goto	l498
  7747  0D02                     u4240:
  7748                           	
  7749  0D02                     l30001599:	
  7750                           	line	84
  7751  0D02  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  7752                           	
  7753  0D03                     l498:	
  7754                           	line	85
  7755                           	
  7756  0D03                     l486:	
  7757  0D03  0008               	return
  7758                           	opt stack 0
  7759                           GLOBAL	__end_of___ftpack
  7760  0D04                     	__end_of___ftpack:
  7761                           ; =============== function ___ftpack ends ============
  7762                           
  7763                           psect	text229,local,class=CODE,delta=2
  7764                           global __ptext229
  7765  0928                     __ptext229:
  7766                           	line	86
  7767                           	signat	___ftpack,12411
  7768                           	global	_e_pulse
  7769                           
  7770                           ; *************** function _e_pulse *****************
  7771                           ; Defined at:
  7772                           ;		line 276 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7773                           ; Parameters:    Size  Location     Type
  7774                           ;		None
  7775                           ; Auto vars:     Size  Location     Type
  7776                           ;		None
  7777                           ; Return value:  Size  Location     Type
  7778                           ;		None               void
  7779                           ; Registers used:
  7780                           ;		wreg, status,2, status,0, pclath, cstack
  7781                           ; Tracked objects:
  7782                           ;		On entry : 0/0
  7783                           ;		On exit  : 0/0
  7784                           ;		Unchanged: 0/0
  7785                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7786                           ;      Locals:         0       0       0       0       0
  7787                           ;      Temp:     0
  7788                           ;      Total:    0
  7789                           ; This function calls:
  7790                           ;		_delay
  7791                           ; This function is called by:
  7792                           ;		_send_config
  7793                           ;		_send_char
  7794                           ; This function uses a non-reentrant model
  7795                           ; 
  7796                           psect	text229
  7797                           	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7798                           	line	276
  7799                           	global	__size_of_e_pulse
  7800  0021                     	__size_of_e_pulse	equ	__end_of_e_pulse-_e_pulse
  7801                           ;MVC.c: 275: void e_pulse(void)
  7802                           ;MVC.c: 276: {
  7803                           	
  7804  0928                     _e_pulse:	
  7805                           	opt stack 3
  7806                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  7807                           	line	277
  7808                           	
  7809  0928                     l30001476:	
  7810                           ;MVC.c: 277: RB6 = 1;
  7811  0928  1283               	bcf	status, 5	;RP0=0, select bank0
  7812  0929  1303               	bcf	status, 6	;RP1=0, select bank0
  7813  092A  1706               	bsf	(54/8),(54)&7
  7814                           	
  7815  092B                     l30001477:	
  7816                           	line	278
  7817                           ;MVC.c: 278: delay(50);
  7818  092B  3000               	movlw	0
  7819  092C  00A3               	movwf	(?_delay+3)
  7820  092D  3000               	movlw	0
  7821+ 092E  00A2               	movwf	(?_delay+2)
  7822+ 092F  3000               	movlw	0
  7823+ 0930  00A1               	movwf	(?_delay+1)
  7824+ 0931  3032               	movlw	032h
  7825+ 0932  00A0               	movwf	(?_delay)
  7826+                          
  7827+ 0933  120A  158A  2173   	fcall	_delay
      +       120A  158A         
  7828+                          	
  7829+ 0938                     l30001478:	
  7830+                          	line	279
  7831+                          ;MVC.c: 279: RB6 = 0;
  7832+ 0938  1283               	bcf	status, 5	;RP0=0, select bank0
  7833+ 0939  1303               	bcf	status, 6	;RP1=0, select bank0
  7834+ 093A  1306               	bcf	(54/8),(54)&7
  7835+                          	line	280
  7836+                          ;MVC.c: 280: delay(50);
  7837+ 093B  3000               	movlw	0
  7838+ 093C  00A3               	movwf	(?_delay+3)
  7839+ 093D  3000               	movlw	0
  7840+ 093E  00A2               	movwf	(?_delay+2)
  7841+ 093F  3000               	movlw	0
  7842+ 0940  00A1               	movwf	(?_delay+1)
  7843+ 0941  3032               	movlw	032h
  7844+ 0942  00A0               	movwf	(?_delay)
  7845+                          
  7846+ 0943  120A  158A  2173   	fcall	_delay
      +       120A  158A         
  7847+                          	
  7848+ 0948                     l35:	
  7849+ 0948  0008               	return
  7850+                          	opt stack 0
  7851+                          GLOBAL	__end_of_e_pulse
  7852+ 0949                     	__end_of_e_pulse:
  7853+                          ; =============== function _e_pulse ends ============
  7854+                          
  7855+                          psect	text230,local,class=CODE,delta=2
  7856+                          global __ptext230
  7857+ 0973                     __ptext230:
  7858+                          	line	281
  7859+                          	signat	_e_pulse,88
  7860+                          	global	_delay
  7861+                          
  7862+                          ; *************** function _delay *****************
  7863+                          ; Defined at:
  7864+                          ;		line 269 in file "C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7865+                          ; Parameters:    Size  Location     Type
  7866+                          ;  data            4    0[BANK0 ] unsigned long 
  7867+                          ; Auto vars:     Size  Location     Type
  7868+                          ;		None
  7869+                          ; Return value:  Size  Location     Type
  7870+                          ;		None               void
  7871+                          ; Registers used:
  7872+                          ;		wreg
  7873+                          ; Tracked objects:
  7874+                          ;		On entry : 0/0
  7875+                          ;		On exit  : 0/0
  7876+                          ;		Unchanged: 0/0
  7877+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7878+                          ;      Locals:         4       4       0       0       0
  7879+                          ;      Temp:     4
  7880+                          ;      Total:    8
  7881+                          ; This function calls:
  7882+                          ;		Nothing
  7883+                          ; This function is called by:
  7884+                          ;		_Read_ADC
  7885+                          ;		_e_pulse
  7886+                          ;		_send_config
  7887+                          ;		_lcd_clr
  7888+                          ;		_lcd_goto
  7889+                          ;		_send_char
  7890+                          ;		_send_string
  7891+                          ; This function uses a non-reentrant model
  7892+                          ; 
  7893+                          psect	text230
  7894+                          	file	"C:\Users\LENOVO\Desktop\ReadAbsEncoder\MVC.c"
  7895+                          	line	269
  7896+                          	global	__size_of_delay
  7897+ 0030                     	__size_of_delay	equ	__end_of_delay-_delay
  7898+                          ;MVC.c: 268: void delay(unsigned long data)
  7899+                          ;MVC.c: 269: {
  7900+                          	
  7901+ 0973                     _delay:	
  7902+                          	opt stack 2
  7903+                          ; Regs used in _delay: [wreg]
  7904+                          	line	270
  7905+                          	
  7906+ 0973                     l30001605:	
  7907+                          ;MVC.c: 270: for( ; data > 0; data -= 1);
  7908+ 0973  1283               	bcf	status, 5	;RP0=0, select bank0
  7909+ 0974  1303               	bcf	status, 6	;RP1=0, select bank0
  7910+ 0975  0823               	movf	(delay@data+3),w
  7911+ 0976  0422               	iorwf	(delay@data+2),w
  7912+ 0977  0421               	iorwf	(delay@data+1),w
  7913+ 0978  0420               	iorwf	(delay@data),w
  7914+ 0979  1D03               	skipz
  7915+ 097A  297C               	goto	u4271
  7916+ 097B  297D               	goto	u4270
  7917+ 097C                     u4271:
  7918+ 097C  297E               	goto	l30001607
  7919+ 097D                     u4270:
  7920+ 097D  29A2               	goto	l31
  7921+                          	
  7922+ 097E                     l30001607:	
  7923+ 097E  3001               	movlw	low(01h)
  7924+ 097F  00F0               	movwf	(??_delay+0+0)
  7925+ 0980  3000               	movlw	high(01h)
  7926+ 0981  00F1               	movwf	(??_delay+0+0+1)
  7927+ 0982  3000               	movlw	low highword(01h)
  7928+ 0983  00F2               	movwf	(??_delay+0+0+2)
  7929+ 0984  3000               	movlw	high highword(01h)
  7930+ 0985  00F3               	movwf	(??_delay+0+0+3)
  7931+ 0986  0870               	movf	0+(??_delay+0+0),w
  7932+ 0987  02A0               	subwf	(delay@data),f
  7933+ 0988  0871               	movf	1+(??_delay+0+0),w
  7934+ 0989  1C03               	skipc
  7935+ 098A  0F71               	incfsz	1+(??_delay+0+0),w
  7936+ 098B  298D               	goto	u4285
  7937+ 098C  298E               	goto	u4286
  7938+ 098D                     u4285:
  7939+ 098D  02A1               	subwf	(delay@data+1),f
  7940+ 098E                     u4286:
  7941+ 098E  0872               	movf	2+(??_delay+0+0),w
  7942+ 098F  1C03               	skipc
  7943+ 0990  0F72               	incfsz	2+(??_delay+0+0),w
  7944+ 0991  2993               	goto	u4287
  7945+ 0992  2994               	goto	u4288
  7946+ 0993                     u4287:
  7947+ 0993  02A2               	subwf	(delay@data+2),f
  7948+ 0994                     u4288:
  7949+ 0994  0873               	movf	3+(??_delay+0+0),w
  7950+ 0995  1C03               	skipc
  7951+ 0996  0F73               	incfsz	3+(??_delay+0+0),w
  7952+ 0997  2999               	goto	u4289
  7953+ 0998  299A               	goto	u4280
  7954+ 0999                     u4289:
  7955+ 0999  02A3               	subwf	(delay@data+3),f
  7956+ 099A                     u4280:
  7957+                          
  7958+ 099A  0823               	movf	(delay@data+3),w
  7959+ 099B  0422               	iorwf	(delay@data+2),w
  7960+ 099C  0421               	iorwf	(delay@data+1),w
  7961+ 099D  0420               	iorwf	(delay@data),w
  7962+ 099E  1D03               	skipz
  7963+ 099F  29A1               	goto	u4291
  7964+ 09A0  29A2               	goto	u4290
  7965+ 09A1                     u4291:
  7966+ 09A1  297E               	goto	l30001607
  7967+ 09A2                     u4290:
  7968+                          	
  7969+ 09A2                     l31:	
  7970+ 09A2  0008               	return
  7971+                          	opt stack 0
  7972+                          GLOBAL	__end_of_delay
  7973+ 09A3                     	__end_of_delay:
  7974+                          ; =============== function _delay ends ============
  7975+                          
  7976+                          psect	text231,local,class=CODE,delta=2
  7977+                          global __ptext231
  7978+ 0003                     __ptext231:
  7979+                          	line	271
  7980+                          	signat	_delay,4216
  7981+                          	global	btemp
  7982+ 007E                     	btemp set 07Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Fri Jun 12 15:33:06 2015

     UART_Write_Text@text 0022          ?_UART_Write_Text 0022              ___aldiv@sign 0021  
                       _A 0075                         _B 004C                         _j 005C  
                       _k 005E                         pc 0002            __size_of_delay 0030  
                      _DA 04A5                        _BF 04A0                        l31 09A2  
                      l23 0AFF                        _DC 0019                        l24 03BE  
                      l25 02B8                        l17 0AB4                        l18 0022  
                      l35 0948                        l43 0DA5                        l36 0E1C  
                      l52 0DC0                        l28 0315                        l61 0DDB  
                      l70 0EB2                        l46 0DAE                        l55 0DC9  
                _iDelay_H 0054                        l80 0E44                        l64 0DE4  
                      l49 0DB7                        l58 0DD2                        l66 090D  
                      l83 0E4D                        l67 0C1C                  _iDelay_L 0058  
                      l92 0E68                        l77 0E3B                        l86 0E56  
                      l95 0E71                        l89 0E5F                        l98 0E7A  
                      _PD 001B                        _RD 0C60                        _UA 04A1  
                      _TO 001C                        _RW 04A2                        _WR 0C61  
          __size_of_reset 001B                        fsr 0004               __pbssCOMMON 0075  
                     l100 09D4                       l104 07FF                       l130 08ED  
                     l115 02A3         ??_UART_Write_Text 0071                       l133 0A42  
                     l230 01AF                       l206 04B4                       l142 0972  
                     l151 0D74                       l400 0A0A                       l144 0D86  
                     l129 08F7                       l313 0BA6                       l162 0BF1  
                     l314 0BA6                       l171 0A7B                       l172 0A7B  
                     l194 0552                       l283 0FFF                       l348 0C87  
                     l197 0436                       l198 043B                       _CM0 04E0  
                     _CM1 04E1                       _CM2 04E2                       l369 0F54  
                     l491 0CCB                       l486 0D03                       l496 0CE0  
                     l497 0CEA                       l498 0D03                       _CKE 04A6  
                     _IBF 044F                       _CIS 04E3                       _CKP 00A4  
                     _GIE 005F                       _BOR 0470                       _RA0 0028  
                ___ftpack 0C88                       _RA1 0029                       _RB0 0030  
                     _RA2 002A                       _RB1 0031                       _RA3 002B  
                     _RC0 0038                       _RB2 0032                       _RA4 002C  
                     _RC1 0039                       _RB3 0033                       _RA5 002D  
                     _RD0 0040                       _RC2 003A                       _RB4 0034  
                     _RD1 0041                       _RC3 003B                       _RB5 0035  
                     _RE0 0048                       _RD2 0042                       _RC4 003C  
                     _RB6 0036                       _RE1 0049                       _RD3 0043  
                     _RC5 003D                       _RB7 0037                       _RE2 004A  
                     _RD4 0044                       _RC6 003E                       _RD5 0045  
                     _RC7 003F                       _OBF 044E                       _RD6 0046  
                     _RD7 0047                       _FSR 0004                       _PCL 0002  
                     _PS0 0408                       _PR2 0092                       _PS1 0409  
                     _PS2 040A                       _PEN 048A                       _RP0 001D  
                     _IRP 001F                       _RP1 001E                       _SEN 0488  
                     _PSA 040B                       _POR 0471                       _RX9 00C6  
                     _SMP 04A7                       _TX9 04C6                  ___lltoft 09D5  
               ?___ftpack 0020         __size_of_Read_ADC 011B                       fsr0 0004  
                     indf 0000               _send_config 0D87          __size_of___aldiv 00A2  
         ___aldiv@divisor 002A                 ?___lltoft 0026          __size_of___ftadd 0194  
         ___aldiv@counter 0020          __size_of___lldiv 0069          __size_of___ftmul 00DC  
        __size_of___llmod 004F          __size_of___fttol 00AB              ??_kirim_data 0072  
        __size_of___lwdiv 004B          __size_of___lwmod 0039       __end_of_send_config 0E1D  
              ??___ftpack 0070                ??___lltoft 0073              lcd_goto@data 0027  
             _send_string 09A3                  _flag_ADC 03C8                   ??_delay 0070  
        __size_of_e_pulse 0021          __size_of_lcd_clr 0016                      _ADIE 0466  
                    _ADIF 0066                      _ADFM 04FF                      _ADGO 00FA  
                 ??_reset 0020                      _ADON 00F8                      _CHS0 00FB  
                    _CHS1 00FC                      _CHS2 00FD       __end_of_send_string 09D5  
                    _EEIE 046C                      _EEIF 006C                      STR_1 0B0F  
                    STR_2 0B1F                      STR_3 0B2B                      STR_4 0B41  
                    STR_5 0B54                      STR_6 0B37                      _GCEN 048F  
                    STR_7 0B4F                      STR_8 0B4A                      _CMIE 046E  
                    _CMIF 006E                      _BRGH 04C2                      _T0IE 005D  
                    _T0IF 005A                      _CREN 00C4                      _T0CS 040D  
                    _FERR 00C2                      u2000 01DD                      u2001 01DE  
                    u2010 01FE                      u2002 01E3                      u2003 01E4  
                    u2020 0220                      _IBOV 044D                      _CVR0 04E8  
                    u2021 021F                      _CVR1 04E9                      u2030 0236  
                    _CVR2 04EA                      u2015 01F9                      _CVR3 04EB  
                    u2040 024B                      u2041 024C                      u2050 026C  
                    u2042 0251                      u2043 0252                      u2035 0231  
                    _T0SE 040C                      _CSRC 04C7                      u3100 0F1F  
                    u2060 0291                      u3101 0F1E                      u2061 0290  
                    _INDF 0000                      u2055 0267                      u3120 0F3D  
                    u3040 0EBE                      u4000 0485                      u3201 014A  
                    u3121 0F3C                      u3105 0F1B                      u3041 0EBD  
                    u4001 0484                      u3202 0151                      u3130 0F41  
                    u3050 0ED0                      u3115 0F2F                      u3051 0ECF  
                    u3060 0EEF                      u4020 0495                      u3061 0EEE  
                    u4101 04F6                      u4021 0494                      u3230 0167  
                    u3150 00E5                      u4110 0501                      u4102 04FD  
                    u4030 049D                      u3310 0319                      u3231 0166  
                    u3215 0152                      u3151 00E4                      u4111 0500  
                    u4031 049C                      u4015 0486                      u3311 0318  
                    u3400 0E6F                      u3240 016D                      u3160 00FB  
                    u3080 0F04                      u3401 0E6E                      u3241 016C  
                    u3225 015A                      u3161 00FA                      u3081 0F03  
                    u4121 0510                      u3305 02D2                      u4210 0CE0  
                    u4130 0C8E                      u3410 0E78                      u3170 0112  
                    u4122 0517                      u4050 04B4                      u4211 0CDF  
                    u3411 0E77                      u3251 0176                      u3075 0EF5  
                    u4051 04B3                      u4220 0CE4                      u4140 0C95  
                    u3420 0EA0                      u3340 0E39                      u3252 017D  
                    u3180 0122                      u4300 0A42                      u3500 06BE  
                    u4060 04B8                      u4221 0CE3                      u4205 0CD5  
                    u4141 0C94                      u3421 0E9F                      u3341 0E38  
                    u4301 0A41                      u3501 06BD                      u4061 04B7  
                    u4045 049F                      u3325 032F                      u4230 0CF5  
                    u3350 0E42                      u3334 0E2C                      u4310 08F3  
                    u3190 0141                      u3430 09BC                      u3510 0705  
                    u3351 0E41                      u3335 0E2A                      u4311 08F2  
                    u3191 0140                      u3175 010E                      u3095 0F06  
                    u3511 0704                      u4071 04C7                      _PIE1 008C  
                    u4240 0D02                      u4160 0CAE                      u3360 0E4B  
                    u3600 0DAC                      u3280 0193                      u3440 09C7  
                    u3520 074C                      u4400 0FE8                      u4320 0F72  
                    u4080 04D2                      u4072 04CE                      _PIE2 008D  
                    u4161 0CAD                      u3361 0E4A                      u3601 0DAB  
                    u3281 0192                      u3265 017E                      u3185 011E  
                    u3441 09C6                      u3521 074B                      u4401 0FE7  
                    u4321 0F71                      u4081 04D1                      u3370 0E54  
                    u3610 0DB5                      u2730 0B62                      u3530 0793  
                    u3450 055B                      u4410 0FEC                      u4330 0F90  
                    u3290 02BC                      u4235 0CF1                      u4171 0CBC  
                    u4155 0CA1                      u3371 0E53                      u3611 0DB4  
                    u2731 0B61                      u3275 0186                      u3531 0792  
                    u3451 055A                      u4091 04E1                      u3291 02BB  
                    u4172 0CC3                      u3380 0E5D                      u3700 0C46  
                    u3620 0DBE                      u4260 09ED                      u3540 07D8  
                    u3460 05A2                      u4340 0FAB                      u4092 04E8  
                    u3381 0E5C                      u3701 0C45                      u3621 0DBD  
                    u4261 09EC                      u3461 05A1                      u4341 0FAA  
                    u4270 097D                      u4190 0CD1                      u3390 0E66  
                    u2910 0A7B                      u3630 0DC7                      u2750 0B77  
                    u3550 0BFB                      u3470 05E9                      u4350 0FB2  
                    _CVRR 04ED                      u4271 097C                      u4191 0CD0  
                    u3391 0E65                      u2911 0A7A                      u3631 0DC6  
                    u2751 0B76                      u4255 09DB                      u3551 0BFA  
                    u3471 05E8                      u4351 0FB1                      u4335 0F8C  
                    u4280 099A                      u3720 0C61                      u3640 0DD0  
                    u2760 0B89                      u3480 0630                      u3560 000E  
                    u4185 0CC4                      u2905 0A6F                      u3721 0C60  
                    u3641 0DCF                      u2761 0B88                      u2745 0B68  
                    u3481 062F                      u3561 000D                      u4290 09A2  
                    u3810 0BEB                      u3650 0DD9                      u3490 0677  
                    u4370 0FC8                      u3570 0022                      u4291 09A1  
                    u3811 0BEA                      u3715 0C48                      u3651 0DD8  
                    u3491 0676                      u4371 0FC7                      u3571 0021  
                    _PEIE 005E                      u2860 0A4B                      u3740 0C7F  
                    u3660 0DE2                      u2780 0BA6                      u3820 0D31  
                    u4380 0FCF                      u3900 0418                      u4285 098D  
                    u3805 0BDF                      u2861 0A4A                      u3741 0C7E  
                    u3725 0C5D                      u3661 0DE1                      u2781 0BA5  
                    u2765 0B85                      u3821 0D30                      u4381 0FCE  
                    u4365 0FB4                      u3901 0417                      _INTE 005C  
                    u4286 098E                      u3750 0BB3                      u3670 0E0A  
                    u3590 0DA3                      u3830 0D70                      u3910 0424  
                    u1990 01C8                      _INTF 0059                      u4287 0993  
                    u3751 0BB2                      u3735 0C71                      u3671 0E09  
                    u3591 0DA2                      u2775 0B98                      u3831 0D6F  
                    u3911 0423                      _RBIE 005B                      u4288 0994  
                    u2880 0A5E                      u3680 0C31                      u3584 0D96  
                    u3840 0D86                      u3920 0435                      _RBIF 0058  
                    u4289 0999                      u2881 0A5D                      u3681 0C30  
                    u3585 0D94                      u3841 0D85                      u3921 0434  
                    u3770 0BC6                      u2890 0A68                      u3930 043A  
                    u3850 0950                      u3771 0BC5                      u2891 0A67  
                    u2875 0A50                      u4395 0FD4                      u3931 0439  
                    u1995 01C3                      u3851 094F                      _RCIE 0465  
                    u3940 044F                      u3860 03F1                      _RCEN 048B  
                    _RCIF 0065                      u3765 0BB8                      u3941 044E  
                    u3790 0BD7                      u3870 03F7                      u3791 0BD6  
                    u2895 0A64                      u3695 0C37                      u3871 03F6  
                    u3960 045F                      u3880 0403                      _PCON 008E  
                    u3785 0BC7                      u3961 045E                      u3881 0402  
                    _PIR1 000C                      u3970 0467                      u3890 0412  
                    _PIR2 000D                      u3795 0BD3                      u3971 0466  
                    u3955 0450                      u3990 047E                      u3991 047D  
                    u3985 0469                      _OERR 00C1                      _RBPU 040F  
                    _RX9D 00C0                      _TMR0 0001                      _TMR2 0011  
                    _WCOL 00A7                      _SPEN 00C7                      _RSEN 0489  
                    _TX9D 04C0                      _SREN 00C5                      _TRMT 04C1  
                    _STOP 04A4                      _TXIE 0464                      _ZERO 001A  
                    _WREN 0C62                      _TXEN 04C5                      _TXIF 0064  
                    _SYNC 04C4                  _lcd_goto 0BF2                 ?_lcd_goto 0028  
   _flag_output_pulsa_Pin 03CA                      _kata 00BC                      _main 0023  
                    _itoa 0949                _posisi_NOW 00B4                      _tamp 0AB5  
                    _time 00B8          ___aldiv@dividend 0026                      btemp 007E  
                    _utoa 0D04                _UART_Write 08EC              ___ftadd@exp1 00DE  
            ___ftadd@exp2 00DD                      start 0000              ___ftadd@sign 00DC  
      __end_of_UART_Write 08F8                ??_lcd_goto 0020         __size_of___ftpack 007C  
            ?_send_config 0027         __size_of___lltoft 0036                UART_Init@x 0071  
         send_config@data 0024       start_initialization 090E                  clear_ram 08E4  
         send_config@test 0026                  _send_dec 0553              ?_send_string 0074  
               ?_send_dec 002D      __size_of_send_config 0096               ?_UART_Write 0071  
         __end_of___aldiv 0F55           __end_of___ftadd 0553                 stringcode 0B08  
         __end_of___lldiv 0C88           __end_of___ftmul 01B0           __end_of___llmod 0BA7  
         __end_of___fttol 1000           __end_of___lwdiv 0BF2                ___ftadd@f1 00DF  
              ___ftadd@f2 00E2           __end_of___lwmod 0A7C                   _CCP1CON 0017  
                 _CCP2CON 001D                ??_send_dec 0074   __end_of_UART_Write_Text 0A43  
                 _ACKSTAT 048E      __size_of_send_string 0032                     _C1INV 04E4  
                   _C2INV 04E5                     _C1OUT 04E6                     _C2OUT 04E7  
                   _ADCS0 00FE                     _ADCS1 00FF                     _ADCS2 04FE  
                   _ADDEN 00C3                     ?_main 0044                     _ACKEN 048C  
                   _ACKDT 048D                 __ptext210 03BF                 __ptext211 0F55  
               __ptext203 0003                 __ptext220 00D4                 __ptext212 0553  
               __ptext204 0A7C                 __ptext221 0B58                 __ptext213 08F8  
               __ptext205 0AB5                 __ptext230 0973                 __ptext222 0D87  
               __ptext214 0D04                 __ptext206 0949                 __ptext231 0003  
               __ptext223 0C1F                 __ptext215 0A0B                 __ptext207 01B0  
               __ptext224 08EC                 __ptext216 09A3                 __ptext208 02A4  
               __ptext225 0A43                 __ptext217 0BF2                 __ptext209 0008  
               __ptext226 0BA7                 __ptext218 0EB3                 __ptext227 0E1D  
               __ptext219 09D5                 __ptext228 0C88                 __ptext229 0928  
                   _BCLIE 046B                     _BCLIF 006B                     _CCP1X 00BD  
       __size_of_lcd_goto 002B                     _CCP1Y 00BC                     _CCP2X 00ED  
                   _CCP2Y 00EC                     ?_itoa 0031           __end_of_e_pulse 0949  
                   _EEADR 010D                     ?_tamp 0033             __end_of_delay 09A3  
         ___lwdiv@divisor 0025                     _CARRY 0018                     _EEPGD 0C67  
                   _CMCON 009C                     ?_utoa 002B     ___ftmul@f3_as_product 002F  
                   _T1CON 0010                     _T2CON 0012                   _T1CKPS0 0084  
                 _T1CKPS1 0085                     _PCFG0 04F8                     _PCFG1 04F9  
                   _PCFG2 04FA                     _PCFG3 04FB                   _T2CKPS0 0090  
                 _T2CKPS1 0091           ___lwdiv@counter 0020                     _CVREN 04EF  
         __end_of_lcd_clr 090E                     _CVROE 04EE                     _RCREG 001A  
              ___ftmul@f1 0034                ___ftmul@f2 0037                     _RCSTA 0018  
           __end_of_reset 0023              ___ftpack@arg 0020                     _TMR1H 000F  
                   _TMR1L 000E                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                   _T1OSCEN 0083                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _PSPIE 0467  
                   _PSPIF 0067              ___ftpack@exp 0023                     _START 04A3  
                   _SSPM0 00A0                     _SSPM1 00A1                     _SSPM2 00A2  
                   _SSPM3 00A3                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063                     _SSPEN 00A5  
              ___fttol@f1 00EB                     _SSPOV 00A6                     _WRERR 0C63  
                   _TXREG 0019          ___aldiv@quotient 0022                     _TXSTA 0098  
               __pstrings 0B00                ___lltoft@c 0026            __pcstackCOMMON 0070  
                   _delay 0973                     _kata1 00CC               _posisi_LAST 00B0  
            ___ftmul@cntr 0032                   _PSPMODE 044C           ___llmod@divisor 0024  
            ___ftmul@sign 0033         __size_of_send_dec 02AD              ??_UART_Write 0070  
                   _reset 0008                  itoa@base 0033                   _SSPCON2 0091  
         ___llmod@counter 0071            UART_Write@data 0070                   _SSPSTAT 0094  
                 _TOUTPS0 0093                   _TOUTPS1 0094                   _TOUTPS2 0095  
                 _TOUTPS3 0096                     pclath 000A              ___fttol@exp1 00EA  
            ___fttol@lval 00E6             send_char@data 0025                     utoa@c 0029  
                   utoa@v 0027                     status 0003             send_char@test 0027  
        __end_of_Read_ADC 03BF                 delay@data 0020             ??_send_config 0074  
     __size_of_kirim_data 0039              ___lltoft@exp 0025             __size_of_main 00B1  
              __pbssBANK0 0044                __pbssBANK1 00A0                 _send_char 0E1D  
                l30001300 0EEF                  l30001060 0220             __size_of_itoa 002A  
                l30001221 0B58                  l30001301 0EF3                  l30001061 0285  
                l30001222 0B62                  l30001310 0F41                  l30001302 0F00  
                l30001062 0288                  l30001223 0B66                  l30001311 0F4C  
                l30001303 0F04                  l30001063 0291                  l30001224 0B73  
                l30001304 0F0D                  l30001064 0295                  l30001400 009D  
                l30001241 0A43                  l30001225 0B77                  l30001305 0F1F  
                l30001065 0296                  l30001401 00AF                  l30001410 0E39  
                l30001242 0A4B                  l30001226 0B89                  l30001306 0F2D  
                l30001066 0299                  l30001058 01B0                  l30001402 00C1  
                l30001411 0E3C                  l30001243 0A4F                  l30001227 0B97  
                l30001307 0F2E                  l30001067 029C                  l30001059 0217  
                l30001403 00C6                  l30001420 0E66                  l30001412 0E42  
                l30001244 0A56                  l30001500 0E00                  l30001228 0BA0  
                l30001308 0F37                  l30001068 029D                  l30001404 00CB  
                l30001421 0E69                  l30001413 0E45                  l30001405 0E20  
                l30001245 0A5A                  l30001501 0E04                  l30001341 00D4  
                l30001309 0F3D                  l30001069 02A0                  l30001422 0E6F  
                l30001414 0E4B                  l30001246 0A5E                  l30001510 0C6F  
                l30001502 0E0A                  l30001350 012F                  l30001342 00E5  
                l30001430 09A7                  l30001423 0E72                  l30001415 0E4E  
                l30001247 0A68                  l30001511 0C70                  l30001503 0C1F  
                l30001351 0135                  l30001431 09B2                  l30001424 0E78  
                l30001416 0E54                  l30001408 0E26                  l30001520 0BC6  
                l30001248 0A6E                  l30001512 0C79                  l30001504 0C31  
                l30001360 016D                  l30001352 013B                  l30001344 00EC  
                l30001600 09D5                  l30001432 09B8                  l30001440 05A2  
                l30001417 0E57                  l30001409 0E33                  l30001425 0E7C  
                l30001521 0BD7                  l30001249 0A75                  l30001505 0C35  
                l30001513 0C7F                  l30001361 017D                  l30001353 013D  
                l30001345 00FB                  l30001601 09DA                  l30001433 09BC  
                l30001441 05C2                  l30001426 0E96                  l30001418 0E5D  
                l30001522 0BDD                  l30001506 0C42                  l30001362 0185  
                l30001354 0141                  l30001602 09E7                  l30001434 09C7  
                l30001610 0A26                  l30001530 0D2B                  l30001450 0697  
                l30001442 05E1                  l30001370 0305                  l30001427 0E9A  
                l30001419 0E60                  l30001523 0BDE                  l30001515 0BA7  
                l30001507 0C46                  l30001363 018D                  l30001355 0151  
                l30001347 0102                  l30001603 09ED                  l30001291 0EB3  
                l30001611 0A2E                  l30001531 0D31                  l30001451 06B6  
                l30001443 05E9                  l30001371 0312                  l30001435 0AB5  
                l30001428 0EA0                  l30001524 0BE5                  l30001516 0BB3  
                l30001508 0C4F                  l30001364 0193                  l30001356 0159  
                l30001348 012D                  l30001292 0EBA                  l30001532 0D38  
                l30001460 078B                  l30001452 06BE                  l30001444 0609  
                l30001436 0553                  l30001620 0F72                  l30001372 0319  
                l30001540 094C                  l30001612 0A7C                  l30001380 0042  
                l30001605 0973                  l30001517 0BB7                  l30001525 0BEB  
                l30001509 0C61                  l30001357 0161                  l30001349 012E  
                l30001293 0EBE                  l30001429 09A6                  l30001533 0D3A  
                l30001461 0793                  l30001453 06DE                  l30001445 0628  
                l30001437 055B                  l30001373 033D                  l30001541 094C  
                l30001613 0A92                  l30001381 0049                  l30001518 0BBE  
                l30001358 0167                  l30001294 0EC9                  l30001470 0C0D  
                l30001534 0D50                  l30001462 07B3                  l30001454 06FD  
                l30001446 0630                  l30001438 057B                  l30001622 0F7B  
                l30001550 03F7                  l30001366 02A4                  l30001542 0950  
                l30001614 0A98                  l30001390 0066                  l30001382 004E  
                l30001374 0023                  l30001607 097E                  l30001519 0BC2  
                l30001359 0169                  l30001295 0ECC                  l30001535 0D6A  
                l30001527 0D07                  l30001471 08F8                  l30001463 07D2  
                l30001455 0705                  l30001447 0650                  l30001439 059A  
                l30001631 0FB3                  l30001623 0F97                  l30001551 0403  
                l30001367 02A8                  l30001543 0957                  l30001615 0AA3  
                l30001391 006C                  l30001383 0053                  l30001375 0030  
                l30001296 0ED0                  l30001608 0A0B                  l30001536 0D70  
                l30001528 0D0D                  l30001472 08FE                  l30001464 07D8  
                l30001456 0725                  l30001448 066F                  l30001632 0FC9  
                l30001624 0F98                  l30001560 0435                  l30001368 02B5  
                l30001544 095B                  l30001616 0AAE                  l30001392 0072  
                l30001384 0058                  l30001376 0034                  l30001617 08ED  
                l30001297 0EDB                  l30001609 0A12                  l30001537 0D78  
                l30001529 0D27                  l30001465 07F8                  l30001457 0744  
                l30001449 0677                  l30001625 0F9E                  l30001561 043A  
                l30001553 040C                  l30001473 0008                  l30001369 02BC  
                l30001545 0960                  l30001393 0078                  l30001385 005D  
                l30001377 0036                  l30001618 08F3                  l30001490 0DBE  
                l30001482 0D90                  l30001298 0EDF                  l30001466 0BF5  
                l30001538 0D7E                  l30001458 074C                  l30001626 0FA5  
                l30001570 0485                  l30001562 043C                  l30001554 0412  
                l30001474 000E                  l30001394 007E                  l30001386 0060  
                l30001378 0038                  l30001491 0DC1                  l30001483 0D9D  
                l30001299 0EE7                  l30001467 0BFB                  l30001539 0D80  
                l30001459 076C                  l30001635 0FD0                  l30001627 0FA7  
                l30001619 0F55                  l30001571 048F                  l30001563 0442  
                l30001555 0418                  l30001547 03BF                  l30001475 001C  
           __size_of_tamp 004B                  l30001395 0084                  l30001387 0063  
                l30001379 003D                  l30001476 0928                  l30001492 0DC7  
                l30001484 0DA3                  l30001468 0C03                  l30001636 0FE3  
                l30001628 0FAB                  l30001580 04FD                  l30001572 0495  
                l30001564 044F                  l30001556 0424                  l30001548 03ED  
                l30001396 0088                  l30001388 0064                  l30001477 092B  
                l30001493 0DCA                  l30001485 0DA6                  l30001469 0C06  
                l30001637 0FE8                  l30001581 0501                  l30001573 049E  
                l30001565 0459                  l30001549 03F1                  l30001397 008C  
                l30001389 0065                  l30001478 0938                  l30001590 0CA8  
                l30001494 0DD0                  l30001486 0DAC                  l30001638 0FEC  
                l30001582 0517                  l30001574 04AE                  l30001566 045F  
                l30001558 042D                  l30001398 0092                  l30001591 0CAF  
                l30001495 0DD3                  l30001487 0DAF                  l30001479 0D8A  
                l30001639 0FF7                  l30001583 051A                  l30001575 04B8  
                l30001567 0468                  l30001559 0431                  l30001399 0098  
                l30001592 0CB3                  l30001496 0DD9                  l30001488 0DB5  
                l30001576 04CE                  l30001568 0478                  l30001593 0CC3  
                l30001585 0C88                  l30001497 0DDC                  l30001489 0DB8  
                l30001577 04D2                  l30001569 047F                  l30001594 0CD2  
                l30001586 0C8E                  l30001498 0DE2                  l30001578 04E8  
                l30001595 0CDC                  l30001587 0C95                  l30001499 0DE6  
                l30001579 04ED                  l30001596 0CE4                  l30001597 0CEC  
                l30001589 0C9C                  l30001598 0CFE                  l30001599 0D02  
           ??_send_string 0028         __end_of_send_char 0EB3               __stringbase 0B0E  
           __size_of_utoa 0083                   ___aldiv 0EB3                   ___ftadd 03BF  
                ?___aldiv 0026                   ___lldiv 0C1F                   ___ftmul 00D4  
                 ___llmod 0B58                   ___fttol 0F55                  ?___ftadd 00DF  
                 ___lwdiv 0BA7                   ___lwmod 0A43                  ?___lldiv 0025  
                ?___ftmul 0034                  ?___llmod 0020                  ?___fttol 00EB  
              ?_send_char 0074                 ??___aldiv 0070                  ?___lwdiv 0023  
                ?___lwmod 0020                 ??___ftadd 003A                 ??___lldiv 0070  
               ??___ftmul 002A                 ??___llmod 0070                 ??___fttol 003D  
               ??___lwdiv 0070                 ??___lwmod 0070                    ??_main 002E  
                 _e_pulse 0928                    ??_itoa 0073                    ??_tamp 0032  
                ?_e_pulse 0024                    ??_utoa 0072          __end_of___ftpack 0D04  
                 _lcd_clr 08F8                  ?_lcd_clr 0027          __end_of___lltoft 0A0B  
               _UART_Init 01B0                  utoa@base 002D                 ??_e_pulse 0074  
              __pmaintext 0023           send_dec@num_dig 0031         __end_of_UART_Init 02A4  
               ??_lcd_clr 0020          ___lwmod@dividend 0020               ??_send_char 0024  
               _Baca_ADC1 00A8                ?_UART_Init 003A                    ?_delay 0020  
                stringdir 0B09                  stringjmp 0B0D                  stringtab 0B00  
                  _ADCON0 001F                    _ADCON1 009F                    _CCP1M0 00B8  
                  _CCP1M1 00B9                    _CCP1M2 00BA                    _CCP1M3 00BB  
                  _CCP2M0 00E8                    _CCP2M1 00E9                    _CCP2M2 00EA  
                  _CCP2M3 00EB                    _CCP1IE 0462          ___lwdiv@dividend 0023  
                  _CCP1IF 0062                    _CCP2IE 0468                    _CCP2IF 0068  
         _flag_baca_pulsa 03C9                    _ADRESH 001E                    _EEADRH 010F  
                  _ADRESL 009E                    _EEADRL 010D                    _EEDATA 010C  
                  _CCPR1H 0016                    _EEDATH 010E                    _CCPR2H 001C  
                  _CCPR1L 0015                    _CCPR2L 001B                    _EECON1 018C  
                  _EECON2 018D                    ?_reset 0027              __end_of_main 00D4  
            __end_of_itoa 0973              __end_of_tamp 0B00                    _GODONE 00FA  
    end_of_initialization 0924              __end_of_utoa 0D87                    _CVRCON 009D  
                _AN_CH0_H 00A0                  _AN_CH0_L 00A4                  _AN_CH1_H 0044  
                _AN_CH1_L 0048                    _T1SYNC 0082                    _INTEDG 040E  
                  _PCLATH 000A                    _INTCON 000B          __end_of_lcd_goto 0C1D  
           __pcstackBANK0 0020             __pcstackBANK1 00DC              send_dec@data 002D  
             ??_UART_Init 002E                    _TMR0IE 005D                    _TMR0IF 005A  
                  _TMR1IE 0460                    _TMR1IF 0060                    _TMR1CS 0081  
                  _TMR2IE 0461                    _TMR2IF 0061                    _OPTION 0081  
                  _TMR1ON 0080                    _TMR2ON 0092               ___ftmul@exp 002E  
                  _SSPADD 0093                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISB0 0430                    _TRISA2 042A                    _TRISB1 0431  
                  _TRISA3 042B                    _TRISC0 0438                    _TRISB2 0432  
                  _TRISA4 042C                    _TRISC1 0439                    _TRISB3 0433  
                  _TRISA5 042D                    _TRISD0 0440                    _TRISC2 043A  
                  _TRISB4 0434                    _TRISD1 0441                    _TRISC3 043B  
                  _TRISB5 0435                    _TRISE0 0448                    _TRISD2 0442  
                  _TRISC4 043C                    _TRISB6 0436                    _TRISE1 0449  
                  _TRISD3 0443                    _TRISC5 043D                    _TRISB7 0437  
                  _TRISE2 044A                    _TRISD4 0444                    _TRISC6 043E  
                  _TRISD5 0445                    _TRISC7 043F                    _TRISD6 0446  
                  _TRISD7 0447                    _STATUS 0003             ___ftpack@sign 0024  
                 itoa@buf 0030                    _SSPCON 0014                    _SSPBUF 0013  
                 itoa@val 0031             _counter_pulsa 00AC          UART_Write_Text@n 0020  
__size_of_UART_Write_Text 0038                    _iDelay 0050          __end_of_send_dec 0800  
            send_config@i 0025            __pbitbssCOMMON 03C8          ___llmod@dividend 0020  
                 utoa@buf 002A       __size_of_UART_Write 000C          ___lwdiv@quotient 0021  
                 utoa@val 002B           ___lwmod@divisor 0022        __size_of_send_char 0096  
         ___lwmod@counter 0071                    clrloop 08E5          ___lldiv@dividend 0025  
           ___fttol@sign1 00E5        __size_of_UART_Init 00F4         UART_Init@baudrate 003A  
         ___lldiv@divisor 0029                _kirim_data 0A7C                send_char@i 0026  
         ___lldiv@counter 0024        __end_of_kirim_data 0AB5              send_string@s 002A  
                _Read_ADC 02A4                 ?_Read_ADC 0044           _UART_Write_Text 0A0B  
        ___lldiv@quotient 0020               ?_kirim_data 0073                ??_Read_ADC 0040  
