

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Thu Jun 25 15:14:47 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 6 "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 6 "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
    45  2007  3F32               	dw 0x3f32 ;#
    46                           ;COMMON:	_main->_UART_Init
    47                           ;COMMON:	_UART_Init->___aldiv
    48                           ;BANK0:	_UART_Init->___aldiv
    49                           ;BANK0:	_main->_UART_Init
    50                           ;COMMON:	_UART_Init->___aldiv
    51                           ;BANK0:	_UART_Init->___aldiv
    52                           	FNCALL	_main,_ad_setup
    53                           	FNCALL	_main,_UART_Init
    54                           	FNCALL	_main,_UART_Data_Ready
    55                           	FNCALL	_main,_UART_Read
    56                           	FNCALL	_main,_atoi
    57                           	FNCALL	_main,_read_ad
    58                           	FNCALL	_main,_itoa
    59                           	FNCALL	_main,_UART_Write_Text
    60                           	FNCALL	_main,_UART_Write
    61                           	FNCALL	_UART_Write_Text,_UART_Write
    62                           	FNCALL	_atoi,___wmul
    63                           	FNCALL	_atoi,_isdigit
    64                           	FNCALL	_itoa,_utoa
    65                           	FNCALL	_read_ad,_ad_setgetchannel
    66                           	FNCALL	_UART_Init,___aldiv
    67                           	FNCALL	_utoa,___lwdiv
    68                           	FNCALL	_utoa,___lwmod
    69                           	FNROOT	_main
    70                           	global	_ADCON0
    71                           psect	text91,local,class=CODE,delta=2
    72                           global __ptext91
    73  0003                     __ptext91:
    74  001F                     _ADCON0  equ     31
    75                           	global	_ADRESH
    76  001E                     _ADRESH  equ     30
    77                           	global	_CCP1CON
    78  0017                     _CCP1CON  equ     23
    79                           	global	_CCP2CON
    80  001D                     _CCP2CON  equ     29
    81                           	global	_CCPR1H
    82  0016                     _CCPR1H  equ     22
    83                           	global	_CCPR1L
    84  0015                     _CCPR1L  equ     21
    85                           	global	_CCPR2H
    86  001C                     _CCPR2H  equ     28
    87                           	global	_CCPR2L
    88  001B                     _CCPR2L  equ     27
    89                           	global	_FSR
    90  0004                     _FSR  equ     4
    91                           	global	_INDF
    92  0000                     _INDF  equ     0
    93                           	global	_INTCON
    94  000B                     _INTCON  equ     11
    95                           	global	_PCL
    96  0002                     _PCL  equ     2
    97                           	global	_PCLATH
    98  000A                     _PCLATH  equ     10
    99                           	global	_PIR1
   100  000C                     _PIR1  equ     12
   101                           	global	_PIR2
   102  000D                     _PIR2  equ     13
   103                           	global	_PORTA
   104  0005                     _PORTA  equ     5
   105                           	global	_PORTB
   106  0006                     _PORTB  equ     6
   107                           	global	_PORTC
   108  0007                     _PORTC  equ     7
   109                           	global	_PORTD
   110  0008                     _PORTD  equ     8
   111                           	global	_PORTE
   112  0009                     _PORTE  equ     9
   113                           	global	_RCREG
   114  001A                     _RCREG  equ     26
   115                           	global	_RCSTA
   116  0018                     _RCSTA  equ     24
   117                           	global	_SSPBUF
   118  0013                     _SSPBUF  equ     19
   119                           	global	_SSPCON
   120  0014                     _SSPCON  equ     20
   121                           	global	_STATUS
   122  0003                     _STATUS  equ     3
   123                           	global	_T1CON
   124  0010                     _T1CON  equ     16
   125                           	global	_T2CON
   126  0012                     _T2CON  equ     18
   127                           	global	_TMR0
   128  0001                     _TMR0  equ     1
   129                           	global	_TMR1H
   130  000F                     _TMR1H  equ     15
   131                           	global	_TMR1L
   132  000E                     _TMR1L  equ     14
   133                           	global	_TMR2
   134  0011                     _TMR2  equ     17
   135                           	global	_TXREG
   136  0019                     _TXREG  equ     25
   137                           	global	_ADCS0
   138  00FE                     _ADCS0  equ     254
   139                           	global	_ADCS1
   140  00FF                     _ADCS1  equ     255
   141                           	global	_ADDEN
   142  00C3                     _ADDEN  equ     195
   143                           	global	_ADGO
   144  00FA                     _ADGO  equ     250
   145                           	global	_ADIF
   146  0066                     _ADIF  equ     102
   147                           	global	_ADON
   148  00F8                     _ADON  equ     248
   149                           	global	_BCLIF
   150  006B                     _BCLIF  equ     107
   151                           	global	_CARRY
   152  0018                     _CARRY  equ     24
   153                           	global	_CCP1IF
   154  0062                     _CCP1IF  equ     98
   155                           	global	_CCP1M0
   156  00B8                     _CCP1M0  equ     184
   157                           	global	_CCP1M1
   158  00B9                     _CCP1M1  equ     185
   159                           	global	_CCP1M2
   160  00BA                     _CCP1M2  equ     186
   161                           	global	_CCP1M3
   162  00BB                     _CCP1M3  equ     187
   163                           	global	_CCP1X
   164  00BD                     _CCP1X  equ     189
   165                           	global	_CCP1Y
   166  00BC                     _CCP1Y  equ     188
   167                           	global	_CCP2IF
   168  0068                     _CCP2IF  equ     104
   169                           	global	_CCP2M0
   170  00E8                     _CCP2M0  equ     232
   171                           	global	_CCP2M1
   172  00E9                     _CCP2M1  equ     233
   173                           	global	_CCP2M2
   174  00EA                     _CCP2M2  equ     234
   175                           	global	_CCP2M3
   176  00EB                     _CCP2M3  equ     235
   177                           	global	_CCP2X
   178  00ED                     _CCP2X  equ     237
   179                           	global	_CCP2Y
   180  00EC                     _CCP2Y  equ     236
   181                           	global	_CHS0
   182  00FB                     _CHS0  equ     251
   183                           	global	_CHS1
   184  00FC                     _CHS1  equ     252
   185                           	global	_CHS2
   186  00FD                     _CHS2  equ     253
   187                           	global	_CKP
   188  00A4                     _CKP  equ     164
   189                           	global	_CMIF
   190  006E                     _CMIF  equ     110
   191                           	global	_CREN
   192  00C4                     _CREN  equ     196
   193                           	global	_DC
   194  0019                     _DC  equ     25
   195                           	global	_EEIF
   196  006C                     _EEIF  equ     108
   197                           	global	_FERR
   198  00C2                     _FERR  equ     194
   199                           	global	_GIE
   200  005F                     _GIE  equ     95
   201                           	global	_GODONE
   202  00FA                     _GODONE  equ     250
   203                           	global	_INTE
   204  005C                     _INTE  equ     92
   205                           	global	_INTF
   206  0059                     _INTF  equ     89
   207                           	global	_IRP
   208  001F                     _IRP  equ     31
   209                           	global	_OERR
   210  00C1                     _OERR  equ     193
   211                           	global	_PD
   212  001B                     _PD  equ     27
   213                           	global	_PEIE
   214  005E                     _PEIE  equ     94
   215                           	global	_PSPIF
   216  0067                     _PSPIF  equ     103
   217                           	global	_RA0
   218  0028                     _RA0  equ     40
   219                           	global	_RA1
   220  0029                     _RA1  equ     41
   221                           	global	_RA2
   222  002A                     _RA2  equ     42
   223                           	global	_RA3
   224  002B                     _RA3  equ     43
   225                           	global	_RA4
   226  002C                     _RA4  equ     44
   227                           	global	_RA5
   228  002D                     _RA5  equ     45
   229                           	global	_RB0
   230  0030                     _RB0  equ     48
   231+                          	global	_RB1
   232+ 0031                     _RB1  equ     49
   233+                          	global	_RB2
   234+ 0032                     _RB2  equ     50
   235+                          	global	_RB3
   236+ 0033                     _RB3  equ     51
   237                           	global	_RB4
   238  0034                     _RB4  equ     52
   239+                          	global	_RB5
   240+ 0035                     _RB5  equ     53
   241+                          	global	_RB6
   242+ 0036                     _RB6  equ     54
   243+                          	global	_RB7
   244+ 0037                     _RB7  equ     55
   245+                          	global	_RBIE
   246+ 005B                     _RBIE  equ     91
   247+                          	global	_RBIF
   248+ 0058                     _RBIF  equ     88
   249                           	global	_RC0
   250  0038                     _RC0  equ     56
   251+                          	global	_RC1
   252+ 0039                     _RC1  equ     57
   253+                          	global	_RC2
   254+ 003A                     _RC2  equ     58
   255+                          	global	_RC3
   256+ 003B                     _RC3  equ     59
   257+                          	global	_RC4
   258+ 003C                     _RC4  equ     60
   259+                          	global	_RC5
   260+ 003D                     _RC5  equ     61
   261+                          	global	_RC6
   262+ 003E                     _RC6  equ     62
   263+                          	global	_RC7
   264+ 003F                     _RC7  equ     63
   265                           	global	_RCIF
   266  0065                     _RCIF  equ     101
   267                           	global	_RD0
   268  0040                     _RD0  equ     64
   269+                          	global	_RD1
   270+ 0041                     _RD1  equ     65
   271                           	global	_RD2
   272  0042                     _RD2  equ     66
   273                           	global	_RD3
   274  0043                     _RD3  equ     67
   275+                          	global	_RD4
   276+ 0044                     _RD4  equ     68
   277                           	global	_RD5
   278  0045                     _RD5  equ     69
   279+                          	global	_RD6
   280+ 0046                     _RD6  equ     70
   281                           	global	_RD7
   282  0047                     _RD7  equ     71
   283+                          	global	_RE0
   284+ 0048                     _RE0  equ     72
   285+                          	global	_RE1
   286+ 0049                     _RE1  equ     73
   287+                          	global	_RE2
   288+ 004A                     _RE2  equ     74
   289+                          	global	_RP0
   290+ 001D                     _RP0  equ     29
   291+                          	global	_RP1
   292+ 001E                     _RP1  equ     30
   293                           	global	_RX9
   294  00C6                     _RX9  equ     198
   295+                          	global	_RX9D
   296+ 00C0                     _RX9D  equ     192
   297+                          	global	_SPEN
   298+ 00C7                     _SPEN  equ     199
   299+                          	global	_SREN
   300+ 00C5                     _SREN  equ     197
   301+                          	global	_SSPEN
   302+ 00A5                     _SSPEN  equ     165
   303+                          	global	_SSPIF
   304+ 0063                     _SSPIF  equ     99
   305                           	global	_SSPM0
   306  00A0                     _SSPM0  equ     160
   307+                          	global	_SSPM1
   308+ 00A1                     _SSPM1  equ     161
   309                           	global	_SSPM2
   310  00A2                     _SSPM2  equ     162
   311+                          	global	_SSPM3
   312+ 00A3                     _SSPM3  equ     163
   313+                          	global	_SSPOV
   314+ 00A6                     _SSPOV  equ     166
   315+                          	global	_T0IE
   316+ 005D                     _T0IE  equ     93
   317+                          	global	_T0IF
   318+ 005A                     _T0IF  equ     90
   319+                          	global	_T1CKPS0
   320+ 0084                     _T1CKPS0  equ     132
   321                           	global	_T1CKPS1
   322  0085                     _T1CKPS1  equ     133
   323+                          	global	_T1OSCEN
   324+ 0083                     _T1OSCEN  equ     131
   325+                          	global	_T1SYNC
   326+ 0082                     _T1SYNC  equ     130
   327+                          	global	_T2CKPS0
   328+ 0090                     _T2CKPS0  equ     144
   329+                          	global	_T2CKPS1
   330+ 0091                     _T2CKPS1  equ     145
   331+                          	global	_TMR0IE
   332+ 005D                     _TMR0IE  equ     93
   333                           	global	_TMR0IF
   334  005A                     _TMR0IF  equ     90
   335+                          	global	_TMR1CS
   336+ 0081                     _TMR1CS  equ     129
   337                           	global	_TMR1IF
   338  0060                     _TMR1IF  equ     96
   339+                          	global	_TMR1ON
   340+ 0080                     _TMR1ON  equ     128
   341+                          	global	_TMR2IF
   342+ 0061                     _TMR2IF  equ     97
   343+                          	global	_TMR2ON
   344+ 0092                     _TMR2ON  equ     146
   345+                          	global	_TO
   346+ 001C                     _TO  equ     28
   347+                          	global	_TOUTPS0
   348+ 0093                     _TOUTPS0  equ     147
   349                           	global	_TOUTPS1
   350  0094                     _TOUTPS1  equ     148
   351+                          	global	_TOUTPS2
   352+ 0095                     _TOUTPS2  equ     149
   353+                          	global	_TOUTPS3
   354+ 0096                     _TOUTPS3  equ     150
   355+                          	global	_TXIF
   356+ 0064                     _TXIF  equ     100
   357+                          	global	_WCOL
   358+ 00A7                     _WCOL  equ     167
   359+                          	global	_ZERO
   360+ 001A                     _ZERO  equ     26
   361                           	global	_ADCON1
   362  009F                     _ADCON1  equ     159
   363+                          	global	_ADRESL
   364+ 009E                     _ADRESL  equ     158
   365                           	global	_CMCON
   366  009C                     _CMCON  equ     156
   367+                          	global	_CVRCON
   368+ 009D                     _CVRCON  equ     157
   369+                          	global	_OPTION
   370+ 0081                     _OPTION  equ     129
   371+                          	global	_PCON
   372+ 008E                     _PCON  equ     142
   373+                          	global	_PIE1
   374+ 008C                     _PIE1  equ     140
   375+                          	global	_PIE2
   376+ 008D                     _PIE2  equ     141
   377                           	global	_PR2
   378  0092                     _PR2  equ     146
   379+                          	global	_SPBRG
   380+ 0099                     _SPBRG  equ     153
   381+                          	global	_SSPADD
   382+ 0093                     _SSPADD  equ     147
   383+                          	global	_SSPCON2
   384+ 0091                     _SSPCON2  equ     145
   385+                          	global	_SSPSTAT
   386+ 0094                     _SSPSTAT  equ     148
   387+                          	global	_TRISA
   388+ 0085                     _TRISA  equ     133
   389                           	global	_TRISB
   390  0086                     _TRISB  equ     134
   391+                          	global	_TRISC
   392+ 0087                     _TRISC  equ     135
   393                           	global	_TRISD
   394  0088                     _TRISD  equ     136
   395+                          	global	_TRISE
   396+ 0089                     _TRISE  equ     137
   397+                          	global	_TXSTA
   398+ 0098                     _TXSTA  equ     152
   399+                          	global	_ACKDT
   400+ 048D                     _ACKDT  equ     1165
   401+                          	global	_ACKEN
   402+ 048C                     _ACKEN  equ     1164
   403+                          	global	_ACKSTAT
   404+ 048E                     _ACKSTAT  equ     1166
   405                           	global	_ADCS2
   406  04FE                     _ADCS2  equ     1278
   407+                          	global	_ADFM
   408+ 04FF                     _ADFM  equ     1279
   409+                          	global	_ADIE
   410+ 0466                     _ADIE  equ     1126
   411+                          	global	_BCLIE
   412+ 046B                     _BCLIE  equ     1131
   413+                          	global	_BF
   414+ 04A0                     _BF  equ     1184
   415+                          	global	_BOR
   416+ 0470                     _BOR  equ     1136
   417                           	global	_BRGH
   418  04C2                     _BRGH  equ     1218
   419+                          	global	_C1INV
   420+ 04E4                     _C1INV  equ     1252
   421                           	global	_C1OUT
   422  04E6                     _C1OUT  equ     1254
   423+                          	global	_C2INV
   424+ 04E5                     _C2INV  equ     1253
   425+                          	global	_C2OUT
   426+ 04E7                     _C2OUT  equ     1255
   427+                          	global	_CCP1IE
   428+ 0462                     _CCP1IE  equ     1122
   429+                          	global	_CCP2IE
   430+ 0468                     _CCP2IE  equ     1128
   431                           	global	_CIS
   432  04E3                     _CIS  equ     1251
   433                           	global	_CKE
   434  04A6                     _CKE  equ     1190
   435                           	global	_CM0
   436  04E0                     _CM0  equ     1248
   437                           	global	_CM1
   438  04E1                     _CM1  equ     1249
   439                           	global	_CM2
   440  04E2                     _CM2  equ     1250
   441                           	global	_CMIE
   442  046E                     _CMIE  equ     1134
   443                           	global	_CSRC
   444  04C7                     _CSRC  equ     1223
   445                           	global	_CVR0
   446  04E8                     _CVR0  equ     1256
   447                           	global	_CVR1
   448  04E9                     _CVR1  equ     1257
   449                           	global	_CVR2
   450  04EA                     _CVR2  equ     1258
   451                           	global	_CVR3
   452  04EB                     _CVR3  equ     1259
   453                           	global	_CVREN
   454  04EF                     _CVREN  equ     1263
   455                           	global	_CVROE
   456  04EE                     _CVROE  equ     1262
   457                           	global	_CVRR
   458  04ED                     _CVRR  equ     1261
   459                           	global	_DA
   460  04A5                     _DA  equ     1189
   461                           	global	_EEIE
   462  046C                     _EEIE  equ     1132
   463                           	global	_GCEN
   464  048F                     _GCEN  equ     1167
   465                           	global	_IBF
   466  044F                     _IBF  equ     1103
   467                           	global	_IBOV
   468  044D                     _IBOV  equ     1101
   469                           	global	_INTEDG
   470  040E                     _INTEDG  equ     1038
   471                           	global	_OBF
   472  044E                     _OBF  equ     1102
   473                           	global	_PCFG0
   474  04F8                     _PCFG0  equ     1272
   475                           	global	_PCFG1
   476  04F9                     _PCFG1  equ     1273
   477                           	global	_PCFG2
   478  04FA                     _PCFG2  equ     1274
   479                           	global	_PCFG3
   480  04FB                     _PCFG3  equ     1275
   481                           	global	_PEN
   482  048A                     _PEN  equ     1162
   483                           	global	_POR
   484  0471                     _POR  equ     1137
   485                           	global	_PS0
   486  0408                     _PS0  equ     1032
   487                           	global	_PS1
   488  0409                     _PS1  equ     1033
   489                           	global	_PS2
   490  040A                     _PS2  equ     1034
   491                           	global	_PSA
   492  040B                     _PSA  equ     1035
   493                           	global	_PSPIE
   494  0467                     _PSPIE  equ     1127
   495                           	global	_PSPMODE
   496  044C                     _PSPMODE  equ     1100
   497                           	global	_RBPU
   498  040F                     _RBPU  equ     1039
   499                           	global	_RCEN
   500  048B                     _RCEN  equ     1163
   501                           	global	_RCIE
   502  0465                     _RCIE  equ     1125
   503                           	global	_RSEN
   504  0489                     _RSEN  equ     1161
   505                           	global	_RW
   506  04A2                     _RW  equ     1186
   507                           	global	_SEN
   508  0488                     _SEN  equ     1160
   509                           	global	_SMP
   510  04A7                     _SMP  equ     1191
   511                           	global	_SSPIE
   512  0463                     _SSPIE  equ     1123
   513                           	global	_START
   514  04A3                     _START  equ     1187
   515                           	global	_STOP
   516  04A4                     _STOP  equ     1188
   517                           	global	_SYNC
   518  04C4                     _SYNC  equ     1220
   519                           	global	_T0CS
   520  040D                     _T0CS  equ     1037
   521                           	global	_T0SE
   522  040C                     _T0SE  equ     1036
   523                           	global	_TMR1IE
   524  0460                     _TMR1IE  equ     1120
   525                           	global	_TMR2IE
   526  0461                     _TMR2IE  equ     1121
   527                           	global	_TRISA0
   528  0428                     _TRISA0  equ     1064
   529                           	global	_TRISA1
   530  0429                     _TRISA1  equ     1065
   531                           	global	_TRISA2
   532  042A                     _TRISA2  equ     1066
   533                           	global	_TRISA3
   534  042B                     _TRISA3  equ     1067
   535                           	global	_TRISA4
   536  042C                     _TRISA4  equ     1068
   537                           	global	_TRISA5
   538  042D                     _TRISA5  equ     1069
   539                           	global	_TRISB0
   540  0430                     _TRISB0  equ     1072
   541                           	global	_TRISB1
   542  0431                     _TRISB1  equ     1073
   543                           	global	_TRISB2
   544  0432                     _TRISB2  equ     1074
   545                           	global	_TRISB3
   546  0433                     _TRISB3  equ     1075
   547                           	global	_TRISB4
   548  0434                     _TRISB4  equ     1076
   549                           	global	_TRISB5
   550  0435                     _TRISB5  equ     1077
   551                           	global	_TRISB6
   552  0436                     _TRISB6  equ     1078
   553                           	global	_TRISB7
   554  0437                     _TRISB7  equ     1079
   555                           	global	_TRISC0
   556  0438                     _TRISC0  equ     1080
   557                           	global	_TRISC1
   558  0439                     _TRISC1  equ     1081
   559                           	global	_TRISC2
   560  043A                     _TRISC2  equ     1082
   561                           	global	_TRISC3
   562  043B                     _TRISC3  equ     1083
   563                           	global	_TRISC4
   564  043C                     _TRISC4  equ     1084
   565                           	global	_TRISC5
   566  043D                     _TRISC5  equ     1085
   567                           	global	_TRISC6
   568  043E                     _TRISC6  equ     1086
   569                           	global	_TRISC7
   570  043F                     _TRISC7  equ     1087
   571                           	global	_TRISD0
   572  0440                     _TRISD0  equ     1088
   573                           	global	_TRISD1
   574  0441                     _TRISD1  equ     1089
   575                           	global	_TRISD2
   576  0442                     _TRISD2  equ     1090
   577                           	global	_TRISD3
   578  0443                     _TRISD3  equ     1091
   579                           	global	_TRISD4
   580  0444                     _TRISD4  equ     1092
   581                           	global	_TRISD5
   582  0445                     _TRISD5  equ     1093
   583                           	global	_TRISD6
   584  0446                     _TRISD6  equ     1094
   585                           	global	_TRISD7
   586  0447                     _TRISD7  equ     1095
   587                           	global	_TRISE0
   588  0448                     _TRISE0  equ     1096
   589                           	global	_TRISE1
   590  0449                     _TRISE1  equ     1097
   591                           	global	_TRISE2
   592  044A                     _TRISE2  equ     1098
   593                           	global	_TRMT
   594  04C1                     _TRMT  equ     1217
   595                           	global	_TX9
   596  04C6                     _TX9  equ     1222
   597                           	global	_TX9D
   598  04C0                     _TX9D  equ     1216
   599                           	global	_TXEN
   600  04C5                     _TXEN  equ     1221
   601                           	global	_TXIE
   602  0464                     _TXIE  equ     1124
   603                           	global	_UA
   604  04A1                     _UA  equ     1185
   605                           	global	_EEADR
   606  010D                     _EEADR  equ     269
   607                           	global	_EEADRH
   608  010F                     _EEADRH  equ     271
   609                           	global	_EEADRL
   610  010D                     _EEADRL  equ     269
   611                           	global	_EEDATA
   612  010C                     _EEDATA  equ     268
   613                           	global	_EEDATH
   614  010E                     _EEDATH  equ     270
   615                           	global	_EECON1
   616  018C                     _EECON1  equ     396
   617                           	global	_EECON2
   618  018D                     _EECON2  equ     397
   619                           	global	_EEPGD
   620  0C67                     _EEPGD  equ     3175
   621                           	global	_RD
   622  0C60                     _RD  equ     3168
   623                           	global	_WR
   624  0C61                     _WR  equ     3169
   625                           	global	_WREN
   626  0C62                     _WREN  equ     3170
   627                           	global	_WRERR
   628  0C63                     _WRERR  equ     3171
   629                           	file	"SPI bi banging TLC2543.as"
   630                           	line	#
   631                           psect cinit,class=CODE,delta=2
   632                           global start_initialization
   633  02CC                     start_initialization:
   634                           
   635                           psect cinit,class=CODE,delta=2
   636                           global end_of_initialization
   637                           
   638                           ;End of C runtime variable initationation code
   639                           
   640  02CC                     end_of_initialization:
   641  02CC  0183               clrf status
   642  02CD  120A  118A  2E2D   ljmp _main	;jump to C main() function
   643                           psect	cstackCOMMON,class=COMMON,space=1
   644                           global __pcstackCOMMON
   645  0070                     __pcstackCOMMON:
   646                           	global	??_UART_Data_Ready
   647  0070                     ??_UART_Data_Ready: ;@ 0x0
   648                           	global	??_UART_Write
   649  0070                     ??_UART_Write: ;@ 0x0
   650                           	global	??___aldiv
   651  0070                     ??___aldiv: ;@ 0x0
   652                           	global	??_UART_Write_Text
   653  0070                     ??_UART_Write_Text: ;@ 0x0
   654                           	global	??_UART_Read
   655  0070                     ??_UART_Read: ;@ 0x0
   656                           	global	?_ad_setup
   657  0070                     ?_ad_setup: ;@ 0x0
   658                           	global	??_ad_setup
   659  0070                     ??_ad_setup: ;@ 0x0
   660                           	global	??_isdigit
   661  0070                     ??_isdigit: ;@ 0x0
   662                           	global	??_ad_setgetchannel
   663  0070                     ??_ad_setgetchannel: ;@ 0x0
   664                           	global	??___lwmod
   665  0070                     ??___lwmod: ;@ 0x0
   666                           	global	??___lwdiv
   667  0070                     ??___lwdiv: ;@ 0x0
   668                           	global	??___wmul
   669  0070                     ??___wmul: ;@ 0x0
   670                           	global	?_UART_Data_Ready
   671  0070                     ?_UART_Data_Ready: ;@ 0x0
   672                           	global	?_UART_Read
   673  0070                     ?_UART_Read: ;@ 0x0
   674                           	global	UART_Write@data
   675  0070                     UART_Write@data:	; 1 bytes @ 0x0
   676                           	global	_isdigit$354
   677  0070                     _isdigit$354:	; 1 bytes @ 0x0
   678                           	global	___wmul@product
   679  0070                     ___wmul@product:	; 2 bytes @ 0x0
   680  0070                     	ds	1
   681                           	global	?_UART_Write
   682  0071                     ?_UART_Write: ;@ 0x1
   683                           	global	isdigit@c
   684  0071                     isdigit@c:	; 1 bytes @ 0x1
   685                           	global	___aldiv@counter
   686  0071                     ___aldiv@counter:	; 1 bytes @ 0x1
   687                           	global	UART_Write_Text@text
   688  0071                     UART_Write_Text@text:	; 1 bytes @ 0x1
   689                           	global	___lwmod@counter
   690  0071                     ___lwmod@counter:	; 1 bytes @ 0x1
   691                           	global	___lwdiv@quotient
   692  0071                     ___lwdiv@quotient:	; 2 bytes @ 0x1
   693  0071                     	ds	1
   694                           	global	?_isdigit
   695  0072                     ?_isdigit: ;@ 0x2
   696                           	global	___aldiv@sign
   697  0072                     ___aldiv@sign:	; 1 bytes @ 0x2
   698                           	global	?___lwmod
   699  0072                     ?___lwmod: ;@ 0x2
   700                           	global	?___wmul
   701  0072                     ?___wmul: ;@ 0x2
   702                           	global	___lwmod@dividend
   703  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   704                           	global	___wmul@multiplier
   705  0072                     ___wmul@multiplier:	; 2 bytes @ 0x2
   706                           	global	UART_Write_Text@i
   707  0072                     UART_Write_Text@i:	; 2 bytes @ 0x2
   708  0072                     	ds	1
   709                           	global	??_read_ad
   710  0073                     ??_read_ad: ;@ 0x3
   711                           	global	___lwdiv@counter
   712  0073                     ___lwdiv@counter:	; 1 bytes @ 0x3
   713                           	global	ad_setgetchannel@ch_config
   714  0073                     ad_setgetchannel@ch_config:	; 2 bytes @ 0x3
   715                           	global	___aldiv@quotient
   716  0073                     ___aldiv@quotient:	; 4 bytes @ 0x3
   717  0073                     	ds	1
   718                           	global	?_UART_Write_Text
   719  0074                     ?_UART_Write_Text: ;@ 0x4
   720                           	global	___wmul@multiplicand
   721  0074                     ___wmul@multiplicand:	; 2 bytes @ 0x4
   722                           	global	___lwmod@divisor
   723  0074                     ___lwmod@divisor:	; 2 bytes @ 0x4
   724  0074                     	ds	1
   725                           	global	ad_setgetchannel@channel
   726  0075                     ad_setgetchannel@channel:	; 1 bytes @ 0x5
   727  0075                     	ds	1
   728                           	global	??_utoa
   729  0076                     ??_utoa: ;@ 0x6
   730                           	global	??_atoi
   731  0076                     ??_atoi: ;@ 0x6
   732                           	global	ad_setgetchannel@data
   733  0076                     ad_setgetchannel@data:	; 2 bytes @ 0x6
   734  0076                     	ds	1
   735                           	global	??_itoa
   736  0077                     ??_itoa: ;@ 0x7
   737                           	global	UART_Init@x
   738  0077                     UART_Init@x:	; 2 bytes @ 0x7
   739  0077                     	ds	1
   740                           	global	ad_setgetchannel@i
   741  0078                     ad_setgetchannel@i:	; 1 bytes @ 0x8
   742  0078                     	ds	1
   743                           	global	??_main
   744  0079                     ??_main: ;@ 0x9
   745  0079                     	ds	1
   746                           	global	?_main
   747  007A                     ?_main: ;@ 0xA
   748                           psect	cstackBANK0,class=BANK0,space=1
   749                           global __pcstackBANK0
   750  0020                     __pcstackBANK0:
   751                           	global	?_ad_setgetchannel
   752  0020                     ?_ad_setgetchannel: ;@ 0x0
   753                           	global	?___lwdiv
   754  0020                     ?___lwdiv: ;@ 0x0
   755                           	global	?___aldiv
   756  0020                     ?___aldiv: ;@ 0x0
   757                           	global	atoi@sign
   758  0020                     atoi@sign:	; 1 bytes @ 0x0
   759                           	global	___lwdiv@dividend
   760  0020                     ___lwdiv@dividend:	; 2 bytes @ 0x0
   761                           	global	___aldiv@dividend
   762  0020                     ___aldiv@dividend:	; 4 bytes @ 0x0
   763  0020                     	ds	1
   764                           	global	atoi@a
   765  0021                     atoi@a:	; 2 bytes @ 0x1
   766  0021                     	ds	1
   767                           	global	___lwdiv@divisor
   768  0022                     ___lwdiv@divisor:	; 2 bytes @ 0x2
   769                           	global	read_ad@temp
   770  0022                     read_ad@temp:	; 2 bytes @ 0x2
   771  0022                     	ds	1
   772                           	global	atoi@s
   773  0023                     atoi@s:	; 1 bytes @ 0x3
   774  0023                     	ds	1
   775                           	global	read_ad@channel
   776  0024                     read_ad@channel:	; 1 bytes @ 0x4
   777                           	global	?_atoi
   778  0024                     ?_atoi: ;@ 0x4
   779                           	global	utoa@v
   780  0024                     utoa@v:	; 2 bytes @ 0x4
   781                           	global	___aldiv@divisor
   782  0024                     ___aldiv@divisor:	; 4 bytes @ 0x4
   783  0024                     	ds	1
   784                           	global	?_read_ad
   785  0025                     ?_read_ad: ;@ 0x5
   786  0025                     	ds	1
   787                           	global	utoa@c
   788  0026                     utoa@c:	; 1 bytes @ 0x6
   789  0026                     	ds	1
   790                           	global	utoa@buf
   791  0027                     utoa@buf:	; 1 bytes @ 0x7
   792  0027                     	ds	1
   793                           	global	??_UART_Init
   794  0028                     ??_UART_Init: ;@ 0x8
   795                           	global	?_utoa
   796  0028                     ?_utoa: ;@ 0x8
   797                           	global	utoa@val
   798  0028                     utoa@val:	; 2 bytes @ 0x8
   799  0028                     	ds	2
   800                           	global	utoa@base
   801  002A                     utoa@base:	; 2 bytes @ 0xA
   802  002A                     	ds	3
   803                           	global	itoa@buf
   804  002D                     itoa@buf:	; 1 bytes @ 0xD
   805  002D                     	ds	1
   806                           	global	?_itoa
   807  002E                     ?_itoa: ;@ 0xE
   808                           	global	itoa@val
   809  002E                     itoa@val:	; 2 bytes @ 0xE
   810  002E                     	ds	2
   811                           	global	itoa@base
   812  0030                     itoa@base:	; 2 bytes @ 0x10
   813  0030                     	ds	4
   814                           	global	?_UART_Init
   815  0034                     ?_UART_Init: ;@ 0x14
   816                           	global	UART_Init@baudrate
   817  0034                     UART_Init@baudrate:	; 4 bytes @ 0x14
   818  0034                     	ds	4
   819                           	global	main@buff1
   820  0038                     main@buff1:	; 3 bytes @ 0x18
   821  0038                     	ds	3
   822                           	global	main@buff2
   823  003B                     main@buff2:	; 4 bytes @ 0x1B
   824  003B                     	ds	4
   825                           	global	main@buff
   826  003F                     main@buff:	; 4 bytes @ 0x1F
   827  003F                     	ds	4
   828                           	global	main@temp
   829  0043                     main@temp:	; 2 bytes @ 0x23
   830  0043                     	ds	2
   831                           	global	main@channel
   832  0045                     main@channel:	; 2 bytes @ 0x25
   833  0045                     	ds	2
   834                           	global	main@ready
   835  0047                     main@ready:	; 2 bytes @ 0x27
   836  0047                     	ds	2
   837                           	global	main@i
   838  0049                     main@i:	; 2 bytes @ 0x29
   839  0049                     	ds	2
   840                           ;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   841                           ;Auto spaces:   Size  Autos    Used
   842                           ; COMMON          14     10      10
   843                           ; BANK0           80     43      43
   844                           ; BANK1           80      0       0
   845                           ; BANK3           96      0       0
   846                           ; BANK2           96      0       0
   847                           
   848                           
   849                           ;Pointer list with targets:
   850                           
   851                           ;UART_Write_Text@text	PTR unsigned char  size(1); Largest target is 4
   852                           ;		 -> main@buff2(BANK0[4]), 
   853                           ;sp__itoa	PTR unsigned char  size(1); Largest target is 4
   854                           ;		 -> main@buff2(BANK0[4]), 
   855                           ;?_ad_setgetchannel	unsigned int  size(1); Largest target is 0
   856                           ;?_read_ad	unsigned int  size(1); Largest target is 0
   857                           ;?___aldiv	long  size(1); Largest target is 0
   858                           ;atoi@s	PTR const unsigned char  size(1); Largest target is 3
   859                           ;		 -> main@buff1(BANK0[3]), 
   860                           ;itoa@cp	PTR unsigned char  size(1); Largest target is 4
   861                           ;		 -> main@buff2(BANK0[4]), 
   862                           ;itoa@buf	PTR unsigned char  size(1); Largest target is 4
   863                           ;		 -> main@buff2(BANK0[4]), 
   864                           ;sp__utoa	PTR unsigned char  size(1); Largest target is 4
   865                           ;		 -> main@buff2(BANK0[4]), 
   866                           ;utoa@buf	PTR unsigned char  size(1); Largest target is 4
   867                           ;		 -> main@buff2(BANK0[4]), 
   868                           ;?_atoi	int  size(1); Largest target is 0
   869                           ;?_itoa	PTR unsigned char  size(1); Largest target is 4
   870                           ;		 -> main@buff2(BANK0[4]), 
   871                           ;?___wmul	unsigned int  size(1); Largest target is 0
   872                           ;?_utoa	PTR unsigned char  size(1); Largest target is 4
   873                           ;		 -> main@buff2(BANK0[4]), 
   874                           ;?___lwdiv	unsigned int  size(1); Largest target is 0
   875                           ;?___lwmod	unsigned int  size(1); Largest target is 0
   876                           
   877                           
   878                           ;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   879                           
   880                           
   881                           ;Call graph:                      Base Space Used Autos Args Refs Density
   882                           ;_main                                               22    0 1748   0.00
   883                           ;                                    9 COMMO    1
   884                           ;                                   24 BANK0   19
   885                           ;           _ad_setup
   886                           ;          _UART_Init
   887                           ;    _UART_Data_Ready
   888                           ;          _UART_Read
   889                           ;               _atoi
   890                           ;            _read_ad
   891                           ;               _itoa
   892                           ;    _UART_Write_Text
   893                           ;         _UART_Write
   894                           ;  _UART_Write_Text                                   3    0   82   0.00
   895                           ;                                    1 COMMO    3
   896                           ;         _UART_Write
   897                           ;  _atoi                                              6    2  286   0.00
   898                           ;                                    6 COMMO    2
   899                           ;                                    0 BANK0    6
   900                           ;             ___wmul
   901                           ;            _isdigit
   902                           ;  _itoa                                              3    4  579   0.00
   903                           ;                                    7 COMMO    1
   904                           ;                                   12 BANK0    6
   905                           ;               _utoa
   906                           ;  _read_ad                                           3    2  152   0.00
   907                           ;                                    2 BANK0    5
   908                           ;   _ad_setgetchannel
   909                           ;  _UART_Read                                         0    0    0   0.00
   910                           ;  _UART_Init                                        14    4  336   0.00
   911                           ;                                    7 COMMO    2
   912                           ;                                    8 BANK0   16
   913                           ;            ___aldiv
   914                           ;  _ad_setup                                          0    0    0   0.00
   915                           ;  _UART_Data_Ready                                   0    0    0   0.00
   916                           ;    _UART_Write                                      1    0   16   0.00
   917                           ;                                    0 COMMO    1
   918                           ;    _utoa                                            5    4  459   0.00
   919                           ;                                    6 COMMO    1
   920                           ;                                    4 BANK0    8
   921                           ;            ___lwdiv
   922                           ;            ___lwmod
   923                           ;    ___aldiv                                         7    8  222   0.00
   924                           ;                                    0 COMMO    7
   925                           ;                                    0 BANK0    8
   926                           ;    ___wmul                                          2    4   68   0.00
   927                           ;                                    0 COMMO    6
   928                           ;    _ad_setgetchannel                                9    2  102   0.00
   929                           ;                                    0 COMMO    9
   930                           ;                                    0 BANK0    2
   931                           ;    _isdigit                                         2    0   50   0.00
   932                           ;                                    0 COMMO    2
   933                           ;      ___lwdiv                                       4    4  120   0.00
   934                           ;                                    0 COMMO    4
   935                           ;                                    0 BANK0    4
   936                           ;      ___lwmod                                       2    4  117   0.00
   937                           ;                                    0 COMMO    6
   938                           ; Estimated maximum call depth 3
   939                           ; Address spaces:
   940                           
   941                           ;Name               Size   Autos  Total    Cost      Usage
   942                           ;BITCOMMON            E      0       0       0        0.0%
   943                           ;CODE                 0      0       0       0        0.0%
   944                           ;NULL                 0      0       0       0        0.0%
   945                           ;COMMON               E      A       A       1       71.4%
   946                           ;SFR0                 0      0       0       1        0.0%
   947                           ;BITSFR0              0      0       0       1        0.0%
   948                           ;BITSFR1              0      0       0       2        0.0%
   949                           ;SFR1                 0      0       0       2        0.0%
   950                           ;ABS                  0      0      10       2        0.0%
   951                           ;STACK                0      0       0       3        0.0%
   952                           ;BITBANK0            50      0       0       4        0.0%
   953                           ;SFR3                 0      0       0       4        0.0%
   954                           ;BITSFR3              0      0       0       4        0.0%
   955                           ;BANK0               50     2B      2B       5       53.8%
   956                           ;BITSFR2              0      0       0       5        0.0%
   957                           ;SFR2                 0      0       0       5        0.0%
   958                           ;BITBANK1            50      0       0       6        0.0%
   959                           ;BANK1               50      0       0       7        0.0%
   960                           ;BITBANK3            60      0       0       8        0.0%
   961                           ;BANK3               60      0       0       9        0.0%
   962                           ;BITBANK2            60      0       0      10        0.0%
   963                           ;BANK2               60      0       0      11        0.0%
   964                           ;DATA                 0      0      10      12        0.0%
   965                           ;EEDATA             100      0       0    1000        0.0%
   966                           
   967                           	global	_main
   968                           psect	maintext,local,class=CODE,delta=2
   969                           global __pmaintext
   970  062D                     __pmaintext:
   971                           
   972                           ; *************** function _main *****************
   973                           ; Defined at:
   974                           ;		line 86 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
   975                           ; Parameters:    Size  Location     Type
   976                           ;		None
   977                           ; Auto vars:     Size  Location     Type
   978                           ;  buff2           4   27[BANK0 ] unsigned char [4]
   979                           ;  buff            4   31[BANK0 ] unsigned char [4]
   980                           ;  buff1           3   24[BANK0 ] unsigned char [3]
   981                           ;  i               2   41[BANK0 ] int 
   982                           ;  ready           2   39[BANK0 ] int 
   983                           ;  temp            2   35[BANK0 ] int 
   984                           ;  channel         2   37[BANK0 ] int 
   985                           ;  temp1           2    0        int 
   986                           ; Return value:  Size  Location     Type
   987                           ;		None               void
   988                           ; Registers used:
   989                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
                                 p+3, pclath, cstack
   990                           ; Tracked objects:
   991                           ;		On entry : 17F/0
   992                           ;		On exit  : 0/0
   993                           ;		Unchanged: 0/0
   994                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995                           ;      Locals:         1      19       0       0       0
   996                           ;      Temp:     1
   997                           ;      Total:   20
   998                           ; This function calls:
   999                           ;		_ad_setup
  1000                           ;		_UART_Init
  1001                           ;		_UART_Data_Ready
  1002                           ;		_UART_Read
  1003                           ;		_atoi
  1004                           ;		_read_ad
  1005                           ;		_itoa
  1006                           ;		_UART_Write_Text
  1007                           ;		_UART_Write
  1008                           ; This function is called by:
  1009                           ;		Startup code after reset
  1010                           ; This function uses a non-reentrant model
  1011                           ; 
  1012                           psect	maintext
  1013                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  1014                           	line	86
  1015                           	global	__size_of_main
  1016  00DF                     	__size_of_main	equ	__end_of_main-_main
  1017                           ;main.c: 84: void _delay(unsigned long cycles);
  1018                           ;main.c: 85: void main()
  1019                           ;main.c: 86: { ADCON1=0b00000111;
  1020                           	
  1021  062D                     _main:	
  1022                           	opt stack 8
  1023                           ; Regs used in _main: [allreg]
  1024                           	
  1025  062D                     l30000601:	
  1026  062D  3007               	movlw	(07h)
  1027  062E  1683               	bsf	status, 5	;RP0=1, select bank1
  1028  062F  1303               	bcf	status, 6	;RP1=0, select bank1
  1029  0630  009F               	movwf	(159)^080h	;volatile
  1030                           	line	87
  1031                           ;main.c: 87: TRISC=0b00010000;
  1032  0631  3010               	movlw	(010h)
  1033  0632  0087               	movwf	(135)^080h	;volatile
  1034                           	line	88
  1035                           ;main.c: 88: TRISB=0b00000001;
  1036  0633  3001               	movlw	(01h)
  1037  0634  0086               	movwf	(134)^080h	;volatile
  1038                           	
  1039  0635                     l30000602:	
  1040                           	line	89
  1041                           ;main.c: 89: TRISA=0b00000000;
  1042  0635  1003               	clrc
  1043  0636  3000               	movlw	0
  1044  0637  1803               	btfsc	status,0
  1045  0638  3001               	movlw	1
  1046  0639  0085               	movwf	(133)^080h	;volatile
  1047                           	
  1048  063A                     l30000603:	
  1049                           	line	90
  1050                           ;main.c: 90: ad_setup();
  1051  063A  120A  118A  22D6   	fcall	_ad_setup
              120A  118A         
  1052                           	
  1053  063F                     l30000604:	
  1054                           	line	92
  1055                           ;main.c: 91: int channel;
  1056                           ;main.c: 92: int ready=0;
  1057  063F  3000               	movlw	low(0)
  1058  0640  1283               	bcf	status, 5	;RP0=0, select bank0
  1059  0641  1303               	bcf	status, 6	;RP1=0, select bank0
  1060  0642  00C7               	movwf	(main@ready)
  1061  0643  3000               	movlw	high(0)
  1062  0644  00C8               	movwf	((main@ready))+1
  1063                           	
  1064  0645                     l30000605:	
  1065                           	line	97
  1066                           ;main.c: 93: char buff[4];
  1067                           ;main.c: 94: char buff1[3];
  1068                           ;main.c: 95: char buff2[4];
  1069                           ;main.c: 96: int temp,temp1,i;
  1070                           ;main.c: 97: UART_Init(9600);
  1071  0645  3000               	movlw	0
  1072  0646  00B7               	movwf	(?_UART_Init+3)
  1073  0647  3000               	movlw	0
  1074  0648  00B6               	movwf	(?_UART_Init+2)
  1075  0649  3025               	movlw	025h
  1076  064A  00B5               	movwf	(?_UART_Init+1)
  1077  064B  3080               	movlw	080h
  1078  064C  00B4               	movwf	(?_UART_Init)
  1079                           
  1080  064D  120A  118A  270C   	fcall	_UART_Init
              120A  118A         
  1081                           	
  1082  0652                     l30000606:	
  1083                           	line	104
  1084                           ;main.c: 100: {
  1085                           ;main.c: 104: if(UART_Data_Ready())
  1086  0652  120A  118A  22D0   	fcall	_UART_Data_Ready
              120A  118A         
  1087  0657  3A00               	xorlw	0
  1088  0658  1903               	skipnz
  1089  0659  2E5B               	goto	u701
  1090  065A  2E5C               	goto	u700
  1091  065B                     u701:
  1092  065B  2E89               	goto	l39
  1093  065C                     u700:
  1094                           	
  1095  065C                     l30000607:	
  1096                           	line	106
  1097                           ;main.c: 105: {
  1098                           ;main.c: 106: for(i=0;i<4;i++){
  1099  065C  3000               	movlw	low(0)
  1100  065D  1283               	bcf	status, 5	;RP0=0, select bank0
  1101  065E  1303               	bcf	status, 6	;RP1=0, select bank0
  1102  065F  00C9               	movwf	(main@i)
  1103  0660  3000               	movlw	high(0)
  1104  0661  00CA               	movwf	((main@i))+1
  1105                           	
  1106  0662                     l30000609:	
  1107                           	line	107
  1108                           ;main.c: 107: buff[i] =UART_Read();
  1109  0662  120A  118A  22DD   	fcall	_UART_Read
              120A  118A         
  1110  0667  00F9               	movwf	(??_main+0+0)
  1111  0668  1283               	bcf	status, 5	;RP0=0, select bank0
  1112  0669  1303               	bcf	status, 6	;RP1=0, select bank0
  1113  066A  0849               	movf	(main@i),w
  1114  066B  3E3F               	addlw	(main@buff)&0ffh
  1115  066C  0084               	movwf	fsr0
  1116  066D  0879               	movf	(??_main+0+0),w
  1117  066E  1383               	bcf	status, 7	;select IRP bank0
  1118  066F  0080               	movwf	indf
  1119                           	
  1120  0670                     l30000610:	
  1121                           	line	106
  1122  0670  3001               	movlw	low(01h)
  1123  0671  07C9               	addwf	(main@i),f
  1124  0672  1803               	skipnc
  1125  0673  0ACA               	incf	(main@i+1),f
  1126  0674  3000               	movlw	high(01h)
  1127  0675  07CA               	addwf	(main@i+1),f
  1128                           	
  1129  0676                     l30000611:	
  1130  0676  084A               	movf	(main@i+1),w
  1131  0677  3A80               	xorlw	80h
  1132  0678  00F9               	movwf	(??_main+0+0)
  1133  0679  3080               	movlw	(high(04h))^80h
  1134  067A  0279               	subwf	(??_main+0+0),w
  1135  067B  1D03               	skipz
  1136  067C  2E7F               	goto	u715
  1137  067D  3004               	movlw	low(04h)
  1138  067E  0249               	subwf	(main@i),w
  1139  067F                     u715:
  1140                           
  1141  067F  1C03               	skipc
  1142  0680  2E82               	goto	u711
  1143  0681  2E83               	goto	u710
  1144  0682                     u711:
  1145  0682  2E62               	goto	l30000609
  1146  0683                     u710:
  1147                           	
  1148  0683                     l30000612:	
  1149                           	line	110
  1150                           ;main.c: 109: }
  1151                           ;main.c: 110: ready=1;
  1152  0683  3001               	movlw	low(01h)
  1153  0684  1283               	bcf	status, 5	;RP0=0, select bank0
  1154  0685  1303               	bcf	status, 6	;RP1=0, select bank0
  1155  0686  00C7               	movwf	(main@ready)
  1156  0687  3000               	movlw	high(01h)
  1157  0688  00C8               	movwf	((main@ready))+1
  1158                           	
  1159  0689                     l39:	
  1160                           	line	113
  1161                           ;main.c: 111: }
  1162                           ;main.c: 113: if (ready){
  1163  0689  1283               	bcf	status, 5	;RP0=0, select bank0
  1164  068A  1303               	bcf	status, 6	;RP1=0, select bank0
  1165  068B  0848               	movf	(main@ready+1),w
  1166  068C  0447               	iorwf	(main@ready),w
  1167  068D  1903               	skipnz
  1168  068E  2E90               	goto	u721
  1169  068F  2E91               	goto	u720
  1170  0690                     u721:
  1171  0690  2E52               	goto	l30000606
  1172  0691                     u720:
  1173                           	
  1174  0691                     l30000613:	
  1175                           	line	115
  1176                           ;main.c: 115: if (buff[0]=='A')
  1177  0691  083F               	movf	(main@buff),w
  1178  0692  3A41               	xorlw	041h
  1179  0693  1D03               	skipz
  1180  0694  2E96               	goto	u731
  1181  0695  2E97               	goto	u730
  1182  0696                     u731:
  1183  0696  2EBC               	goto	l30000619
  1184  0697                     u730:
  1185                           	
  1186  0697                     l30000614:	
  1187                           	line	118
  1188                           ;main.c: 117: {
  1189                           ;main.c: 118: for (i=0;i<3;i++)
  1190  0697  3000               	movlw	low(0)
  1191  0698  00C9               	movwf	(main@i)
  1192  0699  3000               	movlw	high(0)
  1193  069A  00CA               	movwf	((main@i))+1
  1194                           	
  1195  069B                     l30000616:	
  1196                           	line	120
  1197                           ;main.c: 119: {
  1198                           ;main.c: 120: buff1[i]=buff[i+1];
  1199  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  1200  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  1201  069D  0849               	movf	(main@i),w
  1202  069E  3E01               	addlw	01h
  1203  069F  3E3F               	addlw	(main@buff)&0ffh
  1204  06A0  0084               	movwf	fsr0
  1205  06A1  1383               	bcf	status, 7	;select IRP bank0
  1206  06A2  0800               	movf	indf,w
  1207  06A3  00F9               	movwf	(??_main+0+0)
  1208  06A4  0849               	movf	(main@i),w
  1209  06A5  3E38               	addlw	(main@buff1)&0ffh
  1210  06A6  0084               	movwf	fsr0
  1211  06A7  0879               	movf	(??_main+0+0),w
  1212  06A8  0080               	movwf	indf
  1213                           	
  1214  06A9                     l30000617:	
  1215                           	line	118
  1216  06A9  3001               	movlw	low(01h)
  1217  06AA  07C9               	addwf	(main@i),f
  1218  06AB  1803               	skipnc
  1219  06AC  0ACA               	incf	(main@i+1),f
  1220  06AD  3000               	movlw	high(01h)
  1221  06AE  07CA               	addwf	(main@i+1),f
  1222                           	
  1223  06AF                     l30000618:	
  1224  06AF  084A               	movf	(main@i+1),w
  1225  06B0  3A80               	xorlw	80h
  1226  06B1  00F9               	movwf	(??_main+0+0)
  1227  06B2  3080               	movlw	(high(03h))^80h
  1228  06B3  0279               	subwf	(??_main+0+0),w
  1229  06B4  1D03               	skipz
  1230  06B5  2EB8               	goto	u745
  1231  06B6  3003               	movlw	low(03h)
  1232  06B7  0249               	subwf	(main@i),w
  1233  06B8                     u745:
  1234                           
  1235  06B8  1C03               	skipc
  1236  06B9  2EBB               	goto	u741
  1237  06BA  2EBC               	goto	u740
  1238  06BB                     u741:
  1239  06BB  2E9B               	goto	l30000616
  1240  06BC                     u740:
  1241                           	
  1242  06BC                     l30000619:	
  1243                           	line	124
  1244                           ;main.c: 122: }
  1245                           ;main.c: 123: }
  1246                           ;main.c: 124: channel= atoi(buff1);
  1247  06BC  3038               	movlw	((main@buff1))&0ffh
  1248  06BD  120A  118A  2500   	fcall	_atoi
              120A  118A         
  1249  06C2  1383               	bcf	status, 7	;select IRP bank0
  1250  06C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1251  06C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1252  06C5  0825               	movf	(1+(?_atoi)),w
  1253  06C6  01C6               	clrf	(main@channel+1)
  1254  06C7  07C6               	addwf	(main@channel+1)
  1255  06C8  0824               	movf	(0+(?_atoi)),w
  1256  06C9  01C5               	clrf	(main@channel)
  1257  06CA  07C5               	addwf	(main@channel)
  1258                           
  1259                           	
  1260  06CB                     l30000620:	
  1261                           	line	125
  1262                           ;main.c: 125: temp=read_ad(channel);
  1263  06CB  0845               	movf	(main@channel),w
  1264  06CC  120A  118A  2327   	fcall	_read_ad
              120A  118A         
  1265  06D1  1383               	bcf	status, 7	;select IRP bank0
  1266  06D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1267  06D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1268  06D4  0826               	movf	(1+(?_read_ad)),w
  1269  06D5  01C4               	clrf	(main@temp+1)
  1270  06D6  07C4               	addwf	(main@temp+1)
  1271  06D7  0825               	movf	(0+(?_read_ad)),w
  1272  06D8  01C3               	clrf	(main@temp)
  1273  06D9  07C3               	addwf	(main@temp)
  1274                           
  1275                           	
  1276  06DA                     l30000621:	
  1277                           	line	126
  1278                           ;main.c: 126: itoa(buff2,temp,10);
  1279  06DA  0844               	movf	(main@temp+1),w
  1280  06DB  01AF               	clrf	(?_itoa+1)
  1281  06DC  07AF               	addwf	(?_itoa+1)
  1282  06DD  0843               	movf	(main@temp),w
  1283  06DE  01AE               	clrf	(?_itoa)
  1284  06DF  07AE               	addwf	(?_itoa)
  1285                           
  1286  06E0  300A               	movlw	low(0Ah)
  1287  06E1  00B0               	movwf	0+(?_itoa)+02h
  1288  06E2  3000               	movlw	high(0Ah)
  1289  06E3  00B1               	movwf	(0+(?_itoa)+02h)+1
  1290  06E4  303B               	movlw	((main@buff2))&0ffh
  1291  06E5  120A  118A  2378   	fcall	_itoa
              120A  118A         
  1292                           	
  1293  06EA                     l30000622:	
  1294                           	line	127
  1295                           ;main.c: 127: UART_Write_Text(buff2);
  1296  06EA  303B               	movlw	((main@buff2))&0ffh
  1297  06EB  120A  118A  2308   	fcall	_UART_Write_Text
              120A  118A         
  1298                           	
  1299  06F0                     l30000623:	
  1300                           	line	128
  1301                           ;main.c: 128: UART_Write('\n');
  1302  06F0  300A               	movlw	(0Ah)
  1303  06F1  120A  118A  22E5   	fcall	_UART_Write
              120A  118A         
  1304                           	line	129
  1305                           ;main.c: 129: UART_Write_Text(buff2);
  1306  06F6  303B               	movlw	((main@buff2))&0ffh
  1307  06F7  120A  118A  2308   	fcall	_UART_Write_Text
              120A  118A         
  1308                           	
  1309  06FC                     l30000624:	
  1310                           	line	130
  1311                           ;main.c: 130: UART_Write('\n');
  1312  06FC  300A               	movlw	(0Ah)
  1313  06FD  120A  118A  22E5   	fcall	_UART_Write
              120A  118A         
  1314                           	
  1315  0702                     l30000625:	
  1316                           	line	131
  1317                           ;main.c: 131: ready =0;
  1318  0702  3000               	movlw	low(0)
  1319  0703  1283               	bcf	status, 5	;RP0=0, select bank0
  1320  0704  1303               	bcf	status, 6	;RP1=0, select bank0
  1321  0705  00C7               	movwf	(main@ready)
  1322  0706  3000               	movlw	high(0)
  1323  0707  00C8               	movwf	((main@ready))+1
  1324  0708  2E52               	goto	l30000606
  1325                           	global	start
  1326  0709  120A  118A  2800   	ljmp	start
  1327                           	opt stack 0
  1328                           GLOBAL	__end_of_main
  1329  070C                     	__end_of_main:
  1330                           ; =============== function _main ends ============
  1331                           
  1332                           psect	maintext
  1333                           	line	136
  1334                           	signat	_main,88
  1335                           	global	_UART_Write_Text
  1336                           psect	text92,local,class=CODE,delta=2
  1337                           global __ptext92
  1338  0308                     __ptext92:
  1339                           
  1340                           ; *************** function _UART_Write_Text *****************
  1341                           ; Defined at:
  1342                           ;		line 54 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1343                           ; Parameters:    Size  Location     Type
  1344                           ;  text            1    wreg     PTR unsigned char 
  1345                           ;		 -> main@buff2(4), 
  1346                           ; Auto vars:     Size  Location     Type
  1347                           ;  text            1    1[COMMON] PTR unsigned char 
  1348                           ;		 -> main@buff2(4), 
  1349                           ;  i               2    2[COMMON] int 
  1350                           ; Return value:  Size  Location     Type
  1351                           ;		None               void
  1352                           ; Registers used:
  1353                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1354                           ; Tracked objects:
  1355                           ;		On entry : 0/0
  1356                           ;		On exit  : 0/0
  1357                           ;		Unchanged: 0/0
  1358                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359                           ;      Locals:         3       0       0       0       0
  1360                           ;      Temp:     0
  1361                           ;      Total:    3
  1362                           ; This function calls:
  1363                           ;		_UART_Write
  1364                           ; This function is called by:
  1365                           ;		_main
  1366                           ; This function uses a non-reentrant model
  1367                           ; 
  1368                           psect	text92
  1369                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1370                           	line	54
  1371                           	global	__size_of_UART_Write_Text
  1372  001F                     	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  1373                           ;uart.h: 53: void UART_Write_Text(char *text)
  1374                           ;uart.h: 54: {
  1375                           	
  1376  0308                     _UART_Write_Text:	
  1377                           	opt stack 7
  1378                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1379                           ;UART_Write_Text@text stored from wreg
  1380                           	line	56
  1381  0308  00F1               	movwf	(UART_Write_Text@text)
  1382                           	
  1383  0309                     l30000739:	
  1384                           ;uart.h: 55: int i;
  1385                           ;uart.h: 56: for(i=0;text[i]!='\0';i++)
  1386  0309  3000               	movlw	low(0)
  1387  030A  00F2               	movwf	(UART_Write_Text@i)
  1388  030B  3000               	movlw	high(0)
  1389  030C  00F3               	movwf	((UART_Write_Text@i))+1
  1390  030D  2B1D               	goto	l30000742
  1391                           	
  1392  030E                     l30000740:	
  1393                           	line	57
  1394                           ;uart.h: 57: UART_Write(text[i]);
  1395  030E  0872               	movf	(UART_Write_Text@i),w
  1396  030F  0771               	addwf	(UART_Write_Text@text),w
  1397  0310  0084               	movwf	fsr0
  1398  0311  0800               	movf	indf,w
  1399  0312  120A  118A  22E5   	fcall	_UART_Write
              120A  118A         
  1400                           	
  1401  0317                     l30000741:	
  1402                           	line	56
  1403  0317  3001               	movlw	low(01h)
  1404  0318  07F2               	addwf	(UART_Write_Text@i),f
  1405  0319  1803               	skipnc
  1406  031A  0AF3               	incf	(UART_Write_Text@i+1),f
  1407  031B  3000               	movlw	high(01h)
  1408  031C  07F3               	addwf	(UART_Write_Text@i+1),f
  1409                           	
  1410  031D                     l30000742:	
  1411  031D  0872               	movf	(UART_Write_Text@i),w
  1412  031E  0771               	addwf	(UART_Write_Text@text),w
  1413  031F  0084               	movwf	fsr0
  1414  0320  1383               	bcf	status, 7	;select IRP bank0
  1415  0321  0880               	movf	indf,f
  1416  0322  1D03               	skipz
  1417  0323  2B25               	goto	u1201
  1418  0324  2B26               	goto	u1200
  1419  0325                     u1201:
  1420  0325  2B0E               	goto	l30000740
  1421  0326                     u1200:
  1422                           	
  1423  0326                     l24:	
  1424  0326  0008               	return
  1425                           	opt stack 0
  1426                           GLOBAL	__end_of_UART_Write_Text
  1427  0327                     	__end_of_UART_Write_Text:
  1428                           ; =============== function _UART_Write_Text ends ============
  1429                           
  1430                           psect	text93,local,class=CODE,delta=2
  1431                           global __ptext93
  1432  0500                     __ptext93:
  1433                           	line	58
  1434                           	signat	_UART_Write_Text,4216
  1435                           	global	_atoi
  1436                           
  1437                           ; *************** function _atoi *****************
  1438                           ; Defined at:
  1439                           ;		line 6 in file "../../common/atoi.c"
  1440                           ; Parameters:    Size  Location     Type
  1441                           ;  s               1    wreg     PTR const unsigned char 
  1442                           ;		 -> main@buff1(3), 
  1443                           ; Auto vars:     Size  Location     Type
  1444                           ;  s               1    3[BANK0 ] PTR const unsigned char 
  1445                           ;		 -> main@buff1(3), 
  1446                           ;  a               2    1[BANK0 ] int 
  1447                           ;  sign            1    0[BANK0 ] unsigned char 
  1448                           ; Return value:  Size  Location     Type
  1449                           ;                  2    4[BANK0 ] int 
  1450                           ; Registers used:
  1451                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1452                           ; Tracked objects:
  1453                           ;		On entry : 0/0
  1454                           ;		On exit  : 0/0
  1455                           ;		Unchanged: 0/0
  1456                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457                           ;      Locals:         2       6       0       0       0
  1458                           ;      Temp:     2
  1459                           ;      Total:    8
  1460                           ; This function calls:
  1461                           ;		___wmul
  1462                           ;		_isdigit
  1463                           ; This function is called by:
  1464                           ;		_main
  1465                           ; This function uses a non-reentrant model
  1466                           ; 
  1467                           psect	text93
  1468                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\atoi.c"
  1469                           	line	6
  1470                           	global	__size_of_atoi
  1471  008B                     	__size_of_atoi	equ	__end_of_atoi-_atoi
  1472                           	
  1473  0500                     _atoi:	
  1474                           	opt stack 7
  1475                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1476                           ;atoi@s stored from wreg
  1477  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  1478  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  1479  0502  00A3               	movwf	(atoi@s)
  1480                           	
  1481  0503                     l30000709:	
  1482  0503  2D08               	goto	l30000711
  1483                           	
  1484  0504                     l30000710:	
  1485                           	line	11
  1486  0504  3001               	movlw	(01h)
  1487  0505  00F6               	movwf	(??_atoi+0+0)
  1488  0506  0876               	movf	(??_atoi+0+0),w
  1489  0507  07A3               	addwf	(atoi@s),f
  1490                           	
  1491  0508                     l30000711:	
  1492                           	line	10
  1493  0508  0823               	movf	(atoi@s),w
  1494  0509  0084               	movwf	fsr0
  1495  050A  1383               	bcf	status, 7	;select IRP bank0
  1496  050B  0800               	movf	indf,w
  1497  050C  3A20               	xorlw	020h
  1498  050D  1903               	skipnz
  1499  050E  2D10               	goto	u1081
  1500  050F  2D11               	goto	u1080
  1501  0510                     u1081:
  1502  0510  2D04               	goto	l30000710
  1503  0511                     u1080:
  1504                           	
  1505  0511                     l30000712:	
  1506  0511  0823               	movf	(atoi@s),w
  1507  0512  0084               	movwf	fsr0
  1508  0513  0800               	movf	indf,w
  1509  0514  3A09               	xorlw	09h
  1510  0515  1903               	skipnz
  1511  0516  2D18               	goto	u1091
  1512  0517  2D19               	goto	u1090
  1513  0518                     u1091:
  1514  0518  2D04               	goto	l30000710
  1515  0519                     u1090:
  1516                           	
  1517  0519                     l30000713:	
  1518                           	line	12
  1519  0519  3000               	movlw	low(0)
  1520  051A  00A1               	movwf	(atoi@a)
  1521  051B  3000               	movlw	high(0)
  1522  051C  00A2               	movwf	((atoi@a))+1
  1523                           	
  1524  051D                     l30000714:	
  1525                           	line	13
  1526  051D  1003               	clrc
  1527  051E  3000               	movlw	0
  1528  051F  1803               	btfsc	status,0
  1529  0520  3001               	movlw	1
  1530  0521  00A0               	movwf	(atoi@sign)
  1531                           	
  1532  0522                     l30000715:	
  1533                           	line	14
  1534  0522  0823               	movf	(atoi@s),w
  1535  0523  0084               	movwf	fsr0
  1536  0524  0800               	movf	indf,w
  1537  0525  3A2D               	xorlw	02Dh
  1538  0526  1D03               	skipz
  1539  0527  2D29               	goto	u1101
  1540  0528  2D2A               	goto	u1100
  1541  0529                     u1101:
  1542  0529  2D33               	goto	l30000717
  1543  052A                     u1100:
  1544                           	
  1545  052A                     l30000716:	
  1546                           	line	15
  1547  052A  3001               	movlw	(01h)
  1548  052B  00F6               	movwf	(??_atoi+0+0)
  1549  052C  0876               	movf	(??_atoi+0+0),w
  1550  052D  07A0               	addwf	(atoi@sign),f
  1551                           	line	16
  1552  052E  3001               	movlw	(01h)
  1553  052F  00F6               	movwf	(??_atoi+0+0)
  1554  0530  0876               	movf	(??_atoi+0+0),w
  1555  0531  07A3               	addwf	(atoi@s),f
  1556  0532  2D66               	goto	l30000721
  1557                           	
  1558  0533                     l30000717:	
  1559                           	line	17
  1560  0533  0823               	movf	(atoi@s),w
  1561  0534  0084               	movwf	fsr0
  1562  0535  0800               	movf	indf,w
  1563  0536  3A2B               	xorlw	02Bh
  1564  0537  1D03               	skipz
  1565  0538  2D3A               	goto	u1111
  1566  0539  2D3B               	goto	u1110
  1567  053A                     u1111:
  1568  053A  2D66               	goto	l30000721
  1569  053B                     u1110:
  1570                           	
  1571  053B                     l30000718:	
  1572                           	line	18
  1573  053B  3001               	movlw	(01h)
  1574  053C  00F6               	movwf	(??_atoi+0+0)
  1575  053D  0876               	movf	(??_atoi+0+0),w
  1576  053E  07A3               	addwf	(atoi@s),f
  1577  053F  2D66               	goto	l30000721
  1578                           	
  1579  0540                     l30000719:	
  1580                           	line	20
  1581  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  1582  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  1583  0542  0822               	movf	(atoi@a+1),w
  1584  0543  01F3               	clrf	(?___wmul+1)
  1585  0544  07F3               	addwf	(?___wmul+1)
  1586  0545  0821               	movf	(atoi@a),w
  1587  0546  01F2               	clrf	(?___wmul)
  1588  0547  07F2               	addwf	(?___wmul)
  1589                           
  1590  0548  300A               	movlw	low(0Ah)
  1591  0549  00F4               	movwf	0+(?___wmul)+02h
  1592  054A  3000               	movlw	high(0Ah)
  1593  054B  00F5               	movwf	(0+(?___wmul)+02h)+1
  1594  054C  120A  118A  234F   	fcall	___wmul
              120A  118A         
  1595  0551  1283               	bcf	status, 5	;RP0=0, select bank0
  1596  0552  1303               	bcf	status, 6	;RP1=0, select bank0
  1597  0553  0823               	movf	(atoi@s),w
  1598  0554  0084               	movwf	fsr0
  1599  0555  1383               	bcf	status, 7	;select IRP bank0
  1600  0556  0800               	movf	indf,w
  1601  0557  0772               	addwf	(0+(?___wmul)),w
  1602  0558  00F6               	movwf	(??_atoi+0+0)
  1603  0559  0873               	movf	(1+(?___wmul)),w
  1604  055A  1803               	skipnc
  1605  055B  0A73               	incf	(1+(?___wmul)),w
  1606  055C  00F7               	movwf	((??_atoi+0+0))+1
  1607  055D  0876               	movf	0+(??_atoi+0+0),w
  1608  055E  3ED0               	addlw	low(0FFD0h)
  1609  055F  00A1               	movwf	(atoi@a)
  1610  0560  0877               	movf	1+(??_atoi+0+0),w
  1611  0561  1803               	skipnc
  1612  0562  3E01               	addlw	1
  1613  0563  3EFF               	addlw	high(0FFD0h)
  1614  0564  00A2               	movwf	1+(atoi@a)
  1615  0565  2D3B               	goto	l30000718
  1616                           	
  1617  0566                     l30000721:	
  1618                           	line	19
  1619  0566  0823               	movf	(atoi@s),w
  1620  0567  0084               	movwf	fsr0
  1621  0568  0800               	movf	indf,w
  1622  0569  120A  118A  22F1   	fcall	_isdigit
              120A  118A         
  1623  056E  1803               	btfsc	status,0
  1624  056F  2D71               	goto	u1121
  1625  0570  2D72               	goto	u1120
  1626  0571                     u1121:
  1627  0571  2D40               	goto	l30000719
  1628  0572                     u1120:
  1629                           	
  1630  0572                     l30000722:	
  1631                           	line	21
  1632  0572  1283               	bcf	status, 5	;RP0=0, select bank0
  1633  0573  1303               	bcf	status, 6	;RP1=0, select bank0
  1634  0574  0820               	movf	(atoi@sign),w
  1635  0575  1D03               	skipz
  1636  0576  2D78               	goto	u1130
  1637  0577  2D84               	goto	l30000725
  1638  0578                     u1130:
  1639                           	
  1640  0578                     l30000723:	
  1641                           	line	22
  1642  0578  0921               	comf	(atoi@a),w
  1643  0579  00F6               	movwf	??_atoi+0+0
  1644  057A  0922               	comf	(atoi@a+1),w
  1645  057B  00F7               	movwf	??_atoi+0+0+1
  1646  057C  0AF6               	incf	??_atoi+0+0,f
  1647  057D  1903               	skipnz
  1648  057E  0AF7               	incf	??_atoi+0+0+1,f
  1649  057F  0876               	movf	0+(??_atoi+0+0),w
  1650  0580  00A4               	movwf	(?_atoi)
  1651  0581  0877               	movf	1+(??_atoi+0+0),w
  1652  0582  00A5               	movwf	(?_atoi+1)
  1653  0583  2D8A               	goto	l51
  1654                           	
  1655  0584                     l30000725:	
  1656                           	line	23
  1657  0584  0822               	movf	(atoi@a+1),w
  1658  0585  01A5               	clrf	(?_atoi+1)
  1659  0586  07A5               	addwf	(?_atoi+1)
  1660  0587  0821               	movf	(atoi@a),w
  1661  0588  01A4               	clrf	(?_atoi)
  1662  0589  07A4               	addwf	(?_atoi)
  1663                           
  1664                           	
  1665  058A                     l51:	
  1666  058A  0008               	return
  1667                           	opt stack 0
  1668                           GLOBAL	__end_of_atoi
  1669  058B                     	__end_of_atoi:
  1670                           ; =============== function _atoi ends ============
  1671                           
  1672                           psect	text94,local,class=CODE,delta=2
  1673                           global __ptext94
  1674  0378                     __ptext94:
  1675                           	line	24
  1676                           	signat	_atoi,4218
  1677                           	global	_itoa
  1678                           
  1679                           ; *************** function _itoa *****************
  1680                           ; Defined at:
  1681                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  1682                           ; Parameters:    Size  Location     Type
  1683                           ;  buf             1    wreg     PTR unsigned char 
  1684                           ;		 -> main@buff2(4), 
  1685                           ;  val             2   14[BANK0 ] int 
  1686                           ;  base            2   16[BANK0 ] int 
  1687                           ; Auto vars:     Size  Location     Type
  1688                           ;  buf             1   13[BANK0 ] PTR unsigned char 
  1689                           ;		 -> main@buff2(4), 
  1690                           ;  cp              1    0        PTR unsigned char 
  1691                           ;		 -> main@buff2(4), 
  1692                           ; Return value:  Size  Location     Type
  1693                           ;                  1    wreg      PTR unsigned char 
  1694                           ; Registers used:
  1695                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1696                           ; Tracked objects:
  1697                           ;		On entry : 0/0
  1698                           ;		On exit  : 0/0
  1699                           ;		Unchanged: 0/0
  1700                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701                           ;      Locals:         1       6       0       0       0
  1702                           ;      Temp:     1
  1703                           ;      Total:    7
  1704                           ; This function calls:
  1705                           ;		_utoa
  1706                           ; This function is called by:
  1707                           ;		_main
  1708                           ; This function uses a non-reentrant model
  1709                           ; 
  1710                           psect	text94
  1711                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  1712                           	line	5
  1713                           	global	__size_of_itoa
  1714  002A                     	__size_of_itoa	equ	__end_of_itoa-_itoa
  1715                           	
  1716  0378                     _itoa:	
  1717                           	opt stack 7
  1718                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1719                           ;itoa@buf stored from wreg
  1720  0378  1283               	bcf	status, 5	;RP0=0, select bank0
  1721  0379  1303               	bcf	status, 6	;RP1=0, select bank0
  1722  037A  00AD               	movwf	(itoa@buf)
  1723                           	
  1724  037B                     l30000651:	
  1725                           	
  1726  037B                     l30000652:	
  1727                           	line	8
  1728  037B  1FAF               	btfss	(itoa@val+1),7
  1729  037C  2B7E               	goto	u851
  1730  037D  2B7F               	goto	u850
  1731  037E                     u851:
  1732  037E  2B8F               	goto	l30000656
  1733  037F                     u850:
  1734                           	
  1735  037F                     l30000653:	
  1736                           	line	9
  1737  037F  302D               	movlw	(02Dh)
  1738  0380  00F7               	movwf	(??_itoa+0+0)
  1739  0381  082D               	movf	(itoa@buf),w
  1740  0382  0084               	movwf	fsr0
  1741  0383  0877               	movf	(??_itoa+0+0),w
  1742  0384  1383               	bcf	status, 7	;select IRP bank0
  1743  0385  0080               	movwf	indf
  1744                           	
  1745  0386                     l30000654:	
  1746  0386  3001               	movlw	(01h)
  1747  0387  00F7               	movwf	(??_itoa+0+0)
  1748  0388  0877               	movf	(??_itoa+0+0),w
  1749  0389  07AD               	addwf	(itoa@buf),f
  1750                           	
  1751  038A                     l30000655:	
  1752                           	line	10
  1753  038A  09AE               	comf	(itoa@val),f
  1754  038B  09AF               	comf	(itoa@val+1),f
  1755  038C  0AAE               	incf	(itoa@val),f
  1756  038D  1903               	skipnz
  1757  038E  0AAF               	incf	(itoa@val+1),f
  1758                           	
  1759  038F                     l30000656:	
  1760                           	line	12
  1761  038F  082F               	movf	(itoa@val+1),w
  1762  0390  01A9               	clrf	(?_utoa+1)
  1763  0391  07A9               	addwf	(?_utoa+1)
  1764  0392  082E               	movf	(itoa@val),w
  1765  0393  01A8               	clrf	(?_utoa)
  1766  0394  07A8               	addwf	(?_utoa)
  1767                           
  1768  0395  0831               	movf	(itoa@base+1),w
  1769  0396  01AB               	clrf	1+(?_utoa)+02h
  1770  0397  07AB               	addwf	1+(?_utoa)+02h
  1771  0398  0830               	movf	(itoa@base),w
  1772  0399  01AA               	clrf	0+(?_utoa)+02h
  1773  039A  07AA               	addwf	0+(?_utoa)+02h
  1774                           
  1775  039B  082D               	movf	(itoa@buf),w
  1776  039C  120A  118A  247E   	fcall	_utoa
              120A  118A         
  1777                           	
  1778  03A1                     l67:	
  1779  03A1  0008               	return
  1780                           	opt stack 0
  1781                           GLOBAL	__end_of_itoa
  1782  03A2                     	__end_of_itoa:
  1783                           ; =============== function _itoa ends ============
  1784                           
  1785                           psect	text95,local,class=CODE,delta=2
  1786                           global __ptext95
  1787  0327                     __ptext95:
  1788                           	line	14
  1789                           	signat	_itoa,12409
  1790                           	global	_read_ad
  1791                           
  1792                           ; *************** function _read_ad *****************
  1793                           ; Defined at:
  1794                           ;		line 76 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  1795                           ; Parameters:    Size  Location     Type
  1796                           ;  channel         1    wreg     unsigned char 
  1797                           ; Auto vars:     Size  Location     Type
  1798                           ;  channel         1    4[BANK0 ] unsigned char 
  1799                           ;  temp            2    2[BANK0 ] unsigned int 
  1800                           ; Return value:  Size  Location     Type
  1801                           ;                  2    5[BANK0 ] unsigned int 
  1802                           ; Registers used:
  1803                           ;		wreg, status,2, status,0, pclath, cstack
  1804                           ; Tracked objects:
  1805                           ;		On entry : 0/0
  1806                           ;		On exit  : 0/0
  1807                           ;		Unchanged: 0/0
  1808                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809                           ;      Locals:         0       5       0       0       0
  1810                           ;      Temp:     0
  1811                           ;      Total:    5
  1812                           ; This function calls:
  1813                           ;		_ad_setgetchannel
  1814                           ; This function is called by:
  1815                           ;		_main
  1816                           ; This function uses a non-reentrant model
  1817                           ; 
  1818                           psect	text95
  1819                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  1820                           	line	76
  1821                           	global	__size_of_read_ad
  1822  0028                     	__size_of_read_ad	equ	__end_of_read_ad-_read_ad
  1823                           ;main.c: 75: unsigned int read_ad(unsigned char channel)
  1824                           ;main.c: 76: {
  1825                           	
  1826  0327                     _read_ad:	
  1827                           	opt stack 7
  1828                           ; Regs used in _read_ad: [wreg+status,2+status,0+pclath+cstack]
  1829                           ;read_ad@channel stored from wreg
  1830                           	line	79
  1831  0327  1283               	bcf	status, 5	;RP0=0, select bank0
  1832  0328  1303               	bcf	status, 6	;RP1=0, select bank0
  1833  0329  00A4               	movwf	(read_ad@channel)
  1834                           	
  1835  032A                     l30000673:	
  1836                           ;main.c: 77: unsigned int temp;
  1837                           ;main.c: 79: temp=ad_setgetchannel(channel);
  1838  032A  0824               	movf	(read_ad@channel),w
  1839  032B  120A  118A  242A   	fcall	_ad_setgetchannel
              120A  118A         
  1840  0330  1383               	bcf	status, 7	;select IRP bank0
  1841  0331  1283               	bcf	status, 5	;RP0=0, select bank0
  1842  0332  1303               	bcf	status, 6	;RP1=0, select bank0
  1843  0333  0821               	movf	(1+(?_ad_setgetchannel)),w
  1844  0334  01A3               	clrf	(read_ad@temp+1)
  1845  0335  07A3               	addwf	(read_ad@temp+1)
  1846  0336  0820               	movf	(0+(?_ad_setgetchannel)),w
  1847  0337  01A2               	clrf	(read_ad@temp)
  1848  0338  07A2               	addwf	(read_ad@temp)
  1849                           
  1850                           	line	80
  1851                           ;main.c: 80: temp=ad_setgetchannel(channel);
  1852  0339  0824               	movf	(read_ad@channel),w
  1853  033A  120A  118A  242A   	fcall	_ad_setgetchannel
              120A  118A         
  1854  033F  1383               	bcf	status, 7	;select IRP bank0
  1855  0340  1283               	bcf	status, 5	;RP0=0, select bank0
  1856  0341  1303               	bcf	status, 6	;RP1=0, select bank0
  1857  0342  0821               	movf	(1+(?_ad_setgetchannel)),w
  1858  0343  01A3               	clrf	(read_ad@temp+1)
  1859  0344  07A3               	addwf	(read_ad@temp+1)
  1860  0345  0820               	movf	(0+(?_ad_setgetchannel)),w
  1861  0346  01A2               	clrf	(read_ad@temp)
  1862  0347  07A2               	addwf	(read_ad@temp)
  1863                           
  1864                           	
  1865  0348                     l30000674:	
  1866                           	line	81
  1867                           ;main.c: 81: return temp;
  1868  0348  0823               	movf	(read_ad@temp+1),w
  1869  0349  01A6               	clrf	(?_read_ad+1)
  1870  034A  07A6               	addwf	(?_read_ad+1)
  1871  034B  0822               	movf	(read_ad@temp),w
  1872  034C  01A5               	clrf	(?_read_ad)
  1873  034D  07A5               	addwf	(?_read_ad)
  1874                           
  1875                           	
  1876  034E                     l34:	
  1877  034E  0008               	return
  1878                           	opt stack 0
  1879                           GLOBAL	__end_of_read_ad
  1880  034F                     	__end_of_read_ad:
  1881                           ; =============== function _read_ad ends ============
  1882                           
  1883                           psect	text96,local,class=CODE,delta=2
  1884                           global __ptext96
  1885  02DD                     __ptext96:
  1886                           	line	82
  1887                           	signat	_read_ad,4218
  1888                           	global	_UART_Read
  1889                           
  1890                           ; *************** function _UART_Read *****************
  1891                           ; Defined at:
  1892                           ;		line 34 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1893                           ; Parameters:    Size  Location     Type
  1894                           ;		None
  1895                           ; Auto vars:     Size  Location     Type
  1896                           ;		None
  1897                           ; Return value:  Size  Location     Type
  1898                           ;                  1    wreg      unsigned char 
  1899                           ; Registers used:
  1900                           ;		wreg
  1901                           ; Tracked objects:
  1902                           ;		On entry : 0/0
  1903                           ;		On exit  : 0/0
  1904                           ;		Unchanged: 0/0
  1905                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906                           ;      Locals:         0       0       0       0       0
  1907                           ;      Temp:     0
  1908                           ;      Total:    0
  1909                           ; This function calls:
  1910                           ;		Nothing
  1911                           ; This function is called by:
  1912                           ;		_main
  1913                           ; This function uses a non-reentrant model
  1914                           ; 
  1915                           psect	text96
  1916                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1917                           	line	34
  1918                           	global	__size_of_UART_Read
  1919  0008                     	__size_of_UART_Read	equ	__end_of_UART_Read-_UART_Read
  1920                           ;uart.h: 33: char UART_Read()
  1921                           ;uart.h: 34: {
  1922                           	
  1923  02DD                     _UART_Read:	
  1924                           	opt stack 7
  1925                           ; Regs used in _UART_Read: [wreg]
  1926                           	
  1927  02DD                     l30000743:	
  1928                           	
  1929  02DD                     l12:	
  1930                           	line	36
  1931  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  1932  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
  1933  02DF  1E8C               	btfss	(101/8),(101)&7
  1934  02E0  2AE2               	goto	u1211
  1935  02E1  2AE3               	goto	u1210
  1936  02E2                     u1211:
  1937  02E2  2ADD               	goto	l12
  1938  02E3                     u1210:
  1939                           	
  1940  02E3                     l30000744:	
  1941                           	line	37
  1942                           ;uart.h: 37: return RCREG;
  1943  02E3  081A               	movf	(26),w	;volatile
  1944                           	
  1945  02E4                     l11:	
  1946  02E4  0008               	return
  1947                           	opt stack 0
  1948                           GLOBAL	__end_of_UART_Read
  1949  02E5                     	__end_of_UART_Read:
  1950                           ; =============== function _UART_Read ends ============
  1951                           
  1952                           psect	text97,local,class=CODE,delta=2
  1953                           global __ptext97
  1954  070C                     __ptext97:
  1955                           	line	38
  1956                           	signat	_UART_Read,89
  1957                           	global	_UART_Init
  1958                           
  1959                           ; *************** function _UART_Init *****************
  1960                           ; Defined at:
  1961                           ;		line 2 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1962                           ; Parameters:    Size  Location     Type
  1963                           ;  baudrate        4   20[BANK0 ] const long 
  1964                           ; Auto vars:     Size  Location     Type
  1965                           ;  x               2    7[COMMON] unsigned int 
  1966                           ; Return value:  Size  Location     Type
  1967                           ;                  1    wreg      unsigned char 
  1968                           ; Registers used:
  1969                           ;		wreg, status,2, status,0, pclath, cstack
  1970                           ; Tracked objects:
  1971                           ;		On entry : 0/0
  1972                           ;		On exit  : 0/0
  1973                           ;		Unchanged: 0/0
  1974                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975                           ;      Locals:         2      16       0       0       0
  1976                           ;      Temp:    12
  1977                           ;      Total:   18
  1978                           ; This function calls:
  1979                           ;		___aldiv
  1980                           ; This function is called by:
  1981                           ;		_main
  1982                           ; This function uses a non-reentrant model
  1983                           ; 
  1984                           psect	text97
  1985                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  1986                           	line	2
  1987                           	global	__size_of_UART_Init
  1988  00F4                     	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  1989                           ;uart.h: 1: char UART_Init(const long int baudrate)
  1990                           ;uart.h: 2: {
  1991                           	
  1992  070C                     _UART_Init:	
  1993                           	opt stack 7
  1994                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1995                           	line	4
  1996                           	
  1997  070C                     l30000588:	
  1998                           ;uart.h: 3: unsigned int x;
  1999                           ;uart.h: 4: x = (11059200 - baudrate*64)/(baudrate*64);
  2000  070C  3000               	movlw	low(0A8C000h)
  2001  070D  1283               	bcf	status, 5	;RP0=0, select bank0
  2002  070E  1303               	bcf	status, 6	;RP1=0, select bank0
  2003  070F  00A8               	movwf	(??_UART_Init+0+0)
  2004  0710  30C0               	movlw	high(0A8C000h)
  2005  0711  00A9               	movwf	(??_UART_Init+0+0+1)
  2006  0712  30A8               	movlw	low highword(0A8C000h)
  2007  0713  00AA               	movwf	(??_UART_Init+0+0+2)
  2008  0714  3000               	movlw	high highword(0A8C000h)
  2009  0715  00AB               	movwf	(??_UART_Init+0+0+3)
  2010  0716  0834               	movf	(UART_Init@baudrate),w
  2011  0717  00AC               	movwf	(??_UART_Init+4+0)
  2012  0718  0835               	movf	(UART_Init@baudrate+1),w
  2013  0719  00AD               	movwf	(??_UART_Init+4+0+1)
  2014  071A  0836               	movf	(UART_Init@baudrate+2),w
  2015  071B  00AE               	movwf	(??_UART_Init+4+0+2)
  2016  071C  0837               	movf	(UART_Init@baudrate+3),w
  2017  071D  00AF               	movwf	(??_UART_Init+4+0+3)
  2018  071E  3006               	movlw	06h
  2019  071F                     u625:
  2020  071F  1003               	clrc
  2021  0720  0DAC               	rlf	(??_UART_Init+4+0),f
  2022  0721  0DAD               	rlf	(??_UART_Init+4+1),f
  2023  0722  0DAE               	rlf	(??_UART_Init+4+2),f
  2024  0723  0DAF               	rlf	(??_UART_Init+4+3),f
  2025  0724                     u620:
  2026  0724  3EFF               	addlw	-1
  2027  0725  1D03               	skipz
  2028  0726  2F1F               	goto	u625
  2029  0727  09AC               	comf	(??_UART_Init+4+0),f
  2030  0728  09AD               	comf	(??_UART_Init+4+1),f
  2031  0729  09AE               	comf	(??_UART_Init+4+2),f
  2032  072A  09AF               	comf	(??_UART_Init+4+3),f
  2033  072B  0AAC               	incf	(??_UART_Init+4+0),f
  2034  072C  1903               	skipnz
  2035  072D  0AAD               	incf	(??_UART_Init+4+1),f
  2036  072E  1903               	skipnz
  2037  072F  0AAE               	incf	(??_UART_Init+4+2),f
  2038  0730  1903               	skipnz
  2039  0731  0AAF               	incf	(??_UART_Init+4+3),f
  2040  0732  082C               	movf	0+(??_UART_Init+4+0),w
  2041  0733  07A8               	addwf	(??_UART_Init+0+0),f
  2042  0734  082D               	movf	1+(??_UART_Init+4+0),w
  2043  0735  1803               	skipnc
  2044  0736  0F2D               	incfsz	1+(??_UART_Init+4+0),w
  2045  0737  2F39               	goto	u630
  2046  0738  2F3A               	goto	u631
  2047  0739                     u630:
  2048  0739  07A9               	addwf	(??_UART_Init+0+1),f
  2049  073A                     u631:
  2050  073A  082E               	movf	2+(??_UART_Init+4+0),w
  2051  073B  1803               	skipnc
  2052  073C  0F2E               	incfsz	2+(??_UART_Init+4+0),w
  2053  073D  2F3F               	goto	u632
  2054  073E  2F40               	goto	u633
  2055  073F                     u632:
  2056  073F  07AA               	addwf	(??_UART_Init+0+2),f
  2057  0740                     u633:
  2058  0740  082F               	movf	3+(??_UART_Init+4+0),w
  2059  0741  1803               	skipnc
  2060  0742  0A2F               	incf	3+(??_UART_Init+4+0),w
  2061  0743  07AB               	addwf	(??_UART_Init+0+3),f
  2062  0744  082B               	movf	3+(??_UART_Init+0+0),w
  2063  0745  00A3               	movwf	(?___aldiv+3)
  2064  0746  082A               	movf	2+(??_UART_Init+0+0),w
  2065  0747  00A2               	movwf	(?___aldiv+2)
  2066  0748  0829               	movf	1+(??_UART_Init+0+0),w
  2067  0749  00A1               	movwf	(?___aldiv+1)
  2068  074A  0828               	movf	0+(??_UART_Init+0+0),w
  2069  074B  00A0               	movwf	(?___aldiv)
  2070                           
  2071  074C  0834               	movf	(UART_Init@baudrate),w
  2072  074D  00B0               	movwf	(??_UART_Init+8+0)
  2073  074E  0835               	movf	(UART_Init@baudrate+1),w
  2074  074F  00B1               	movwf	(??_UART_Init+8+0+1)
  2075  0750  0836               	movf	(UART_Init@baudrate+2),w
  2076  0751  00B2               	movwf	(??_UART_Init+8+0+2)
  2077  0752  0837               	movf	(UART_Init@baudrate+3),w
  2078  0753  00B3               	movwf	(??_UART_Init+8+0+3)
  2079  0754  3006               	movlw	06h
  2080  0755                     u645:
  2081  0755  1003               	clrc
  2082  0756  0DB0               	rlf	(??_UART_Init+8+0),f
  2083  0757  0DB1               	rlf	(??_UART_Init+8+1),f
  2084  0758  0DB2               	rlf	(??_UART_Init+8+2),f
  2085  0759  0DB3               	rlf	(??_UART_Init+8+3),f
  2086  075A                     u640:
  2087  075A  3EFF               	addlw	-1
  2088  075B  1D03               	skipz
  2089  075C  2F55               	goto	u645
  2090  075D  0833               	movf	3+(??_UART_Init+8+0),w
  2091  075E  00A7               	movwf	3+(?___aldiv)+04h
  2092  075F  0832               	movf	2+(??_UART_Init+8+0),w
  2093  0760  00A6               	movwf	2+(?___aldiv)+04h
  2094  0761  0831               	movf	1+(??_UART_Init+8+0),w
  2095  0762  00A5               	movwf	1+(?___aldiv)+04h
  2096  0763  0830               	movf	0+(??_UART_Init+8+0),w
  2097  0764  00A4               	movwf	0+(?___aldiv)+04h
  2098                           
  2099  0765  120A  118A  258B   	fcall	___aldiv
              120A  118A         
  2100  076A  1383               	bcf	status, 7	;select IRP bank0
  2101  076B  1283               	bcf	status, 5	;RP0=0, select bank0
  2102  076C  1303               	bcf	status, 6	;RP1=0, select bank0
  2103  076D  0821               	movf	(1+(?___aldiv)),w
  2104  076E  01F8               	clrf	(UART_Init@x+1)
  2105  076F  07F8               	addwf	(UART_Init@x+1)
  2106  0770  0820               	movf	(0+(?___aldiv)),w
  2107  0771  01F7               	clrf	(UART_Init@x)
  2108  0772  07F7               	addwf	(UART_Init@x)
  2109                           
  2110                           	
  2111  0773                     l30000589:	
  2112                           	line	5
  2113                           ;uart.h: 5: if(x>255)
  2114  0773  3001               	movlw	high(0100h)
  2115  0774  0278               	subwf	(UART_Init@x+1),w
  2116  0775  3000               	movlw	low(0100h)
  2117  0776  1903               	skipnz
  2118  0777  0277               	subwf	(UART_Init@x),w
  2119  0778  1C03               	skipc
  2120  0779  2F7B               	goto	u651
  2121  077A  2F7C               	goto	u650
  2122  077B                     u651:
  2123  077B  2FE4               	goto	l30000592
  2124  077C                     u650:
  2125                           	
  2126  077C                     l30000590:	
  2127                           	line	7
  2128                           ;uart.h: 6: {
  2129                           ;uart.h: 7: x = (11059200 - baudrate*16)/(baudrate*16);
  2130  077C  3000               	movlw	low(0A8C000h)
  2131  077D  00A8               	movwf	(??_UART_Init+0+0)
  2132  077E  30C0               	movlw	high(0A8C000h)
  2133  077F  00A9               	movwf	(??_UART_Init+0+0+1)
  2134  0780  30A8               	movlw	low highword(0A8C000h)
  2135  0781  00AA               	movwf	(??_UART_Init+0+0+2)
  2136  0782  3000               	movlw	high highword(0A8C000h)
  2137  0783  00AB               	movwf	(??_UART_Init+0+0+3)
  2138  0784  0834               	movf	(UART_Init@baudrate),w
  2139  0785  00AC               	movwf	(??_UART_Init+4+0)
  2140  0786  0835               	movf	(UART_Init@baudrate+1),w
  2141  0787  00AD               	movwf	(??_UART_Init+4+0+1)
  2142  0788  0836               	movf	(UART_Init@baudrate+2),w
  2143  0789  00AE               	movwf	(??_UART_Init+4+0+2)
  2144  078A  0837               	movf	(UART_Init@baudrate+3),w
  2145  078B  00AF               	movwf	(??_UART_Init+4+0+3)
  2146  078C  3004               	movlw	04h
  2147  078D                     u665:
  2148  078D  1003               	clrc
  2149  078E  0DAC               	rlf	(??_UART_Init+4+0),f
  2150  078F  0DAD               	rlf	(??_UART_Init+4+1),f
  2151  0790  0DAE               	rlf	(??_UART_Init+4+2),f
  2152  0791  0DAF               	rlf	(??_UART_Init+4+3),f
  2153  0792                     u660:
  2154  0792  3EFF               	addlw	-1
  2155  0793  1D03               	skipz
  2156  0794  2F8D               	goto	u665
  2157  0795  09AC               	comf	(??_UART_Init+4+0),f
  2158  0796  09AD               	comf	(??_UART_Init+4+1),f
  2159  0797  09AE               	comf	(??_UART_Init+4+2),f
  2160  0798  09AF               	comf	(??_UART_Init+4+3),f
  2161  0799  0AAC               	incf	(??_UART_Init+4+0),f
  2162  079A  1903               	skipnz
  2163  079B  0AAD               	incf	(??_UART_Init+4+1),f
  2164  079C  1903               	skipnz
  2165  079D  0AAE               	incf	(??_UART_Init+4+2),f
  2166  079E  1903               	skipnz
  2167  079F  0AAF               	incf	(??_UART_Init+4+3),f
  2168  07A0  082C               	movf	0+(??_UART_Init+4+0),w
  2169  07A1  07A8               	addwf	(??_UART_Init+0+0),f
  2170  07A2  082D               	movf	1+(??_UART_Init+4+0),w
  2171  07A3  1803               	skipnc
  2172  07A4  0F2D               	incfsz	1+(??_UART_Init+4+0),w
  2173  07A5  2FA7               	goto	u670
  2174  07A6  2FA8               	goto	u671
  2175  07A7                     u670:
  2176  07A7  07A9               	addwf	(??_UART_Init+0+1),f
  2177  07A8                     u671:
  2178  07A8  082E               	movf	2+(??_UART_Init+4+0),w
  2179  07A9  1803               	skipnc
  2180  07AA  0F2E               	incfsz	2+(??_UART_Init+4+0),w
  2181  07AB  2FAD               	goto	u672
  2182  07AC  2FAE               	goto	u673
  2183  07AD                     u672:
  2184  07AD  07AA               	addwf	(??_UART_Init+0+2),f
  2185  07AE                     u673:
  2186  07AE  082F               	movf	3+(??_UART_Init+4+0),w
  2187  07AF  1803               	skipnc
  2188  07B0  0A2F               	incf	3+(??_UART_Init+4+0),w
  2189  07B1  07AB               	addwf	(??_UART_Init+0+3),f
  2190  07B2  082B               	movf	3+(??_UART_Init+0+0),w
  2191  07B3  00A3               	movwf	(?___aldiv+3)
  2192  07B4  082A               	movf	2+(??_UART_Init+0+0),w
  2193  07B5  00A2               	movwf	(?___aldiv+2)
  2194  07B6  0829               	movf	1+(??_UART_Init+0+0),w
  2195  07B7  00A1               	movwf	(?___aldiv+1)
  2196  07B8  0828               	movf	0+(??_UART_Init+0+0),w
  2197  07B9  00A0               	movwf	(?___aldiv)
  2198                           
  2199  07BA  0834               	movf	(UART_Init@baudrate),w
  2200  07BB  00B0               	movwf	(??_UART_Init+8+0)
  2201  07BC  0835               	movf	(UART_Init@baudrate+1),w
  2202  07BD  00B1               	movwf	(??_UART_Init+8+0+1)
  2203  07BE  0836               	movf	(UART_Init@baudrate+2),w
  2204  07BF  00B2               	movwf	(??_UART_Init+8+0+2)
  2205  07C0  0837               	movf	(UART_Init@baudrate+3),w
  2206  07C1  00B3               	movwf	(??_UART_Init+8+0+3)
  2207  07C2  3004               	movlw	04h
  2208  07C3                     u685:
  2209  07C3  1003               	clrc
  2210  07C4  0DB0               	rlf	(??_UART_Init+8+0),f
  2211  07C5  0DB1               	rlf	(??_UART_Init+8+1),f
  2212  07C6  0DB2               	rlf	(??_UART_Init+8+2),f
  2213  07C7  0DB3               	rlf	(??_UART_Init+8+3),f
  2214  07C8                     u680:
  2215  07C8  3EFF               	addlw	-1
  2216  07C9  1D03               	skipz
  2217  07CA  2FC3               	goto	u685
  2218  07CB  0833               	movf	3+(??_UART_Init+8+0),w
  2219  07CC  00A7               	movwf	3+(?___aldiv)+04h
  2220  07CD  0832               	movf	2+(??_UART_Init+8+0),w
  2221  07CE  00A6               	movwf	2+(?___aldiv)+04h
  2222  07CF  0831               	movf	1+(??_UART_Init+8+0),w
  2223  07D0  00A5               	movwf	1+(?___aldiv)+04h
  2224  07D1  0830               	movf	0+(??_UART_Init+8+0),w
  2225  07D2  00A4               	movwf	0+(?___aldiv)+04h
  2226                           
  2227  07D3  120A  118A  258B   	fcall	___aldiv
              120A  118A         
  2228  07D8  1383               	bcf	status, 7	;select IRP bank0
  2229  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2230  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2231  07DB  0821               	movf	(1+(?___aldiv)),w
  2232  07DC  01F8               	clrf	(UART_Init@x+1)
  2233  07DD  07F8               	addwf	(UART_Init@x+1)
  2234  07DE  0820               	movf	(0+(?___aldiv)),w
  2235  07DF  01F7               	clrf	(UART_Init@x)
  2236  07E0  07F7               	addwf	(UART_Init@x)
  2237                           
  2238                           	
  2239  07E1                     l30000591:	
  2240                           	line	8
  2241                           ;uart.h: 8: BRGH = 1;
  2242  07E1  1683               	bsf	status, 5	;RP0=1, select bank1
  2243  07E2  1303               	bcf	status, 6	;RP1=0, select bank1
  2244  07E3  1518               	bsf	(1218/8)^080h,(1218)&7
  2245                           	
  2246  07E4                     l30000592:	
  2247                           	line	10
  2248                           ;uart.h: 9: }
  2249                           ;uart.h: 10: if(x<256)
  2250  07E4  3001               	movlw	high(0100h)
  2251  07E5  0278               	subwf	(UART_Init@x+1),w
  2252  07E6  3000               	movlw	low(0100h)
  2253  07E7  1903               	skipnz
  2254  07E8  0277               	subwf	(UART_Init@x),w
  2255  07E9  1803               	skipnc
  2256  07EA  2FEC               	goto	u691
  2257  07EB  2FED               	goto	u690
  2258  07EC                     u691:
  2259  07EC  2FFF               	goto	l6
  2260  07ED                     u690:
  2261                           	
  2262  07ED                     l30000593:	
  2263                           	line	12
  2264                           ;uart.h: 11: {
  2265                           ;uart.h: 12: SPBRG = x;
  2266  07ED  0877               	movf	(UART_Init@x),w
  2267  07EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2268  07EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2269  07F0  0099               	movwf	(153)^080h	;volatile
  2270                           	
  2271  07F1                     l30000594:	
  2272                           	line	13
  2273                           ;uart.h: 13: SYNC = 0;
  2274  07F1  1218               	bcf	(1220/8)^080h,(1220)&7
  2275                           	
  2276  07F2                     l30000595:	
  2277                           	line	14
  2278                           ;uart.h: 14: SPEN = 1;
  2279  07F2  1283               	bcf	status, 5	;RP0=0, select bank0
  2280  07F3  1303               	bcf	status, 6	;RP1=0, select bank0
  2281  07F4  1798               	bsf	(199/8),(199)&7
  2282                           	
  2283  07F5                     l30000596:	
  2284                           	line	15
  2285                           ;uart.h: 15: TRISC7 = 1;
  2286  07F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2287  07F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2288  07F7  1787               	bsf	(1087/8)^080h,(1087)&7
  2289                           	
  2290  07F8                     l30000597:	
  2291                           	line	16
  2292                           ;uart.h: 16: TRISC6 = 1;
  2293  07F8  1707               	bsf	(1086/8)^080h,(1086)&7
  2294                           	
  2295  07F9                     l30000598:	
  2296                           	line	17
  2297                           ;uart.h: 17: CREN = 1;
  2298  07F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2299  07FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2300  07FB  1618               	bsf	(196/8),(196)&7
  2301                           	
  2302  07FC                     l30000599:	
  2303                           	line	18
  2304                           ;uart.h: 18: TXEN = 1;
  2305  07FC  1683               	bsf	status, 5	;RP0=1, select bank1
  2306  07FD  1303               	bcf	status, 6	;RP1=0, select bank1
  2307  07FE  1698               	bsf	(1221/8)^080h,(1221)&7
  2308                           	
  2309  07FF                     l6:	
  2310  07FF  0008               	return
  2311                           	opt stack 0
  2312                           GLOBAL	__end_of_UART_Init
  2313  0800                     	__end_of_UART_Init:
  2314                           ; =============== function _UART_Init ends ============
  2315                           
  2316                           psect	text98,local,class=CODE,delta=2
  2317                           global __ptext98
  2318  02D6                     __ptext98:
  2319                           	line	22
  2320                           	signat	_UART_Init,4217
  2321                           	global	_ad_setup
  2322                           
  2323                           ; *************** function _ad_setup *****************
  2324                           ; Defined at:
  2325                           ;		line 41 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  2326                           ; Parameters:    Size  Location     Type
  2327                           ;		None
  2328                           ; Auto vars:     Size  Location     Type
  2329                           ;		None
  2330                           ; Return value:  Size  Location     Type
  2331                           ;		None               void
  2332                           ; Registers used:
  2333                           ;		None
  2334                           ; Tracked objects:
  2335                           ;		On entry : 0/0
  2336                           ;		On exit  : 0/0
  2337                           ;		Unchanged: 0/0
  2338                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339                           ;      Locals:         0       0       0       0       0
  2340                           ;      Temp:     0
  2341                           ;      Total:    0
  2342                           ; This function calls:
  2343                           ;		Nothing
  2344                           ; This function is called by:
  2345                           ;		_main
  2346                           ; This function uses a non-reentrant model
  2347                           ; 
  2348                           psect	text98
  2349                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  2350                           	line	41
  2351                           	global	__size_of_ad_setup
  2352  0007                     	__size_of_ad_setup	equ	__end_of_ad_setup-_ad_setup
  2353                           ;main.c: 40: void ad_setup()
  2354                           ;main.c: 41: {
  2355                           	
  2356  02D6                     _ad_setup:	
  2357                           	opt stack 7
  2358                           ; Regs used in _ad_setup: []
  2359                           	line	43
  2360                           	
  2361  02D6                     l30000746:	
  2362                           ;main.c: 43: TRISC5 = 0;
  2363  02D6  1683               	bsf	status, 5	;RP0=1, select bank1
  2364  02D7  1303               	bcf	status, 6	;RP1=0, select bank1
  2365  02D8  1287               	bcf	(1085/8)^080h,(1085)&7
  2366                           	line	44
  2367                           ;main.c: 44: TRISC4 = 1;
  2368  02D9  1607               	bsf	(1084/8)^080h,(1084)&7
  2369                           	line	46
  2370                           ;main.c: 46: TRISC3 = 0;
  2371  02DA  1187               	bcf	(1083/8)^080h,(1083)&7
  2372                           	line	47
  2373                           ;main.c: 47: TRISA0 = 0;
  2374  02DB  1005               	bcf	(1064/8)^080h,(1064)&7
  2375                           	
  2376  02DC                     l29:	
  2377  02DC  0008               	return
  2378                           	opt stack 0
  2379                           GLOBAL	__end_of_ad_setup
  2380  02DD                     	__end_of_ad_setup:
  2381                           ; =============== function _ad_setup ends ============
  2382                           
  2383                           psect	text99,local,class=CODE,delta=2
  2384                           global __ptext99
  2385  02D0                     __ptext99:
  2386                           	line	48
  2387                           	signat	_ad_setup,88
  2388                           	global	_UART_Data_Ready
  2389                           
  2390                           ; *************** function _UART_Data_Ready *****************
  2391                           ; Defined at:
  2392                           ;		line 30 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  2393                           ; Parameters:    Size  Location     Type
  2394                           ;		None
  2395                           ; Auto vars:     Size  Location     Type
  2396                           ;		None
  2397                           ; Return value:  Size  Location     Type
  2398                           ;                  1    wreg      unsigned char 
  2399                           ; Registers used:
  2400                           ;		wreg
  2401                           ; Tracked objects:
  2402                           ;		On entry : 0/0
  2403                           ;		On exit  : 0/0
  2404                           ;		Unchanged: 0/0
  2405                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406                           ;      Locals:         0       0       0       0       0
  2407                           ;      Temp:     0
  2408                           ;      Total:    0
  2409                           ; This function calls:
  2410                           ;		Nothing
  2411                           ; This function is called by:
  2412                           ;		_main
  2413                           ; This function uses a non-reentrant model
  2414                           ; 
  2415                           psect	text99
  2416                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  2417                           	line	30
  2418                           	global	__size_of_UART_Data_Ready
  2419  0006                     	__size_of_UART_Data_Ready	equ	__end_of_UART_Data_Ready-_UART_Data_Ready
  2420                           ;uart.h: 29: char UART_Data_Ready()
  2421                           ;uart.h: 30: {
  2422                           	
  2423  02D0                     _UART_Data_Ready:	
  2424                           	opt stack 7
  2425                           ; Regs used in _UART_Data_Ready: [wreg]
  2426                           	line	31
  2427                           	
  2428  02D0                     l30000747:	
  2429                           ;uart.h: 31: return RCIF;
  2430  02D0  3000               	movlw	0
  2431  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2432  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2433  02D3  1A8C               	btfsc	(101/8),(101)&7
  2434  02D4  3001               	movlw	1
  2435                           	
  2436  02D5                     l10:	
  2437  02D5  0008               	return
  2438                           	opt stack 0
  2439                           GLOBAL	__end_of_UART_Data_Ready
  2440  02D6                     	__end_of_UART_Data_Ready:
  2441                           ; =============== function _UART_Data_Ready ends ============
  2442                           
  2443                           psect	text100,local,class=CODE,delta=2
  2444                           global __ptext100
  2445  02E5                     __ptext100:
  2446                           	line	32
  2447                           	signat	_UART_Data_Ready,89
  2448                           	global	_UART_Write
  2449                           
  2450                           ; *************** function _UART_Write *****************
  2451                           ; Defined at:
  2452                           ;		line 48 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  2453                           ; Parameters:    Size  Location     Type
  2454                           ;  data            1    wreg     unsigned char 
  2455                           ; Auto vars:     Size  Location     Type
  2456                           ;  data            1    0[COMMON] unsigned char 
  2457                           ; Return value:  Size  Location     Type
  2458                           ;		None               void
  2459                           ; Registers used:
  2460                           ;		wreg
  2461                           ; Tracked objects:
  2462                           ;		On entry : 0/0
  2463                           ;		On exit  : 0/0
  2464                           ;		Unchanged: 0/0
  2465                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466                           ;      Locals:         1       0       0       0       0
  2467                           ;      Temp:     0
  2468                           ;      Total:    1
  2469                           ; This function calls:
  2470                           ;		Nothing
  2471                           ; This function is called by:
  2472                           ;		_UART_Write_Text
  2473                           ;		_main
  2474                           ; This function uses a non-reentrant model
  2475                           ; 
  2476                           psect	text100
  2477                           	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\uart.h"
  2478                           	line	48
  2479                           	global	__size_of_UART_Write
  2480  000C                     	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  2481                           ;uart.h: 47: void UART_Write(char data)
  2482                           ;uart.h: 48: {
  2483                           	
  2484  02E5                     _UART_Write:	
  2485                           	opt stack 6
  2486                           ; Regs used in _UART_Write: [wreg]
  2487                           ;UART_Write@data stored from wreg
  2488  02E5  00F0               	movwf	(UART_Write@data)
  2489                           	
  2490  02E6                     l30000749:	
  2491                           	
  2492  02E6                     l21:	
  2493                           	line	49
  2494  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2495  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2496  02E8  1C98               	btfss	(1217/8)^080h,(1217)&7
  2497  02E9  2AEB               	goto	u1221
  2498  02EA  2AEC               	goto	u1220
  2499  02EB                     u1221:
  2500  02EB  2AE6               	goto	l21
  2501  02EC                     u1220:
  2502                           	
  2503  02EC                     l30000750:	
  2504                           	line	50
  2505                           ;uart.h: 50: TXREG = data;
  2506  02EC  0870               	movf	(UART_Write@data),w
  2507  02ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2508  02EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2509  02EF  0099               	movwf	(25)	;volatile
  2510                           	
  2511  02F0                     l20:	
  2512  02F0  0008               	return
  2513                           	opt stack 0
  2514                           GLOBAL	__end_of_UART_Write
  2515  02F1                     	__end_of_UART_Write:
  2516                           ; =============== function _UART_Write ends ============
  2517                           
  2518                           psect	text101,local,class=CODE,delta=2
  2519                           global __ptext101
  2520  047E                     __ptext101:
  2521                           	line	51
  2522                           	signat	_UART_Write,4216
  2523                           	global	_utoa
  2524                           
  2525                           ; *************** function _utoa *****************
  2526                           ; Defined at:
  2527                           ;		line 18 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  2528                           ; Parameters:    Size  Location     Type
  2529                           ;  buf             1    wreg     PTR unsigned char 
  2530                           ;		 -> main@buff2(4), 
  2531                           ;  val             2    8[BANK0 ] unsigned int 
  2532                           ;  base            2   10[BANK0 ] int 
  2533                           ; Auto vars:     Size  Location     Type
  2534                           ;  buf             1    7[BANK0 ] PTR unsigned char 
  2535                           ;		 -> main@buff2(4), 
  2536                           ;  v               2    4[BANK0 ] unsigned int 
  2537                           ;  c               1    6[BANK0 ] unsigned char 
  2538                           ; Return value:  Size  Location     Type
  2539                           ;                  1    wreg      PTR unsigned char 
  2540                           ; Registers used:
  2541                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2542                           ; Tracked objects:
  2543                           ;		On entry : 0/0
  2544                           ;		On exit  : 0/0
  2545                           ;		Unchanged: 0/0
  2546                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2547                           ;      Locals:         1       8       0       0       0
  2548                           ;      Temp:     1
  2549                           ;      Total:    9
  2550                           ; This function calls:
  2551                           ;		___lwdiv
  2552                           ;		___lwmod
  2553                           ; This function is called by:
  2554                           ;		_itoa
  2555                           ; This function uses a non-reentrant model
  2556                           ; 
  2557                           psect	text101
  2558                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\itoa.c"
  2559                           	line	18
  2560                           	global	__size_of_utoa
  2561  0082                     	__size_of_utoa	equ	__end_of_utoa-_utoa
  2562                           	
  2563  047E                     _utoa:	
  2564                           	opt stack 6
  2565                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2566                           ;utoa@buf stored from wreg
  2567                           	line	22
  2568  047E  1283               	bcf	status, 5	;RP0=0, select bank0
  2569  047F  1303               	bcf	status, 6	;RP1=0, select bank0
  2570  0480  00A7               	movwf	(utoa@buf)
  2571                           	
  2572  0481                     l30000638:	
  2573  0481  0829               	movf	(utoa@val+1),w
  2574  0482  01A5               	clrf	(utoa@v+1)
  2575  0483  07A5               	addwf	(utoa@v+1)
  2576  0484  0828               	movf	(utoa@val),w
  2577  0485  01A4               	clrf	(utoa@v)
  2578  0486  07A4               	addwf	(utoa@v)
  2579                           
  2580                           	
  2581  0487                     l30000639:	
  2582                           	line	24
  2583  0487  0825               	movf	(utoa@v+1),w
  2584  0488  01A1               	clrf	(?___lwdiv+1)
  2585  0489  07A1               	addwf	(?___lwdiv+1)
  2586  048A  0824               	movf	(utoa@v),w
  2587  048B  01A0               	clrf	(?___lwdiv)
  2588  048C  07A0               	addwf	(?___lwdiv)
  2589                           
  2590  048D  082B               	movf	(utoa@base+1),w
  2591  048E  01A3               	clrf	1+(?___lwdiv)+02h
  2592  048F  07A3               	addwf	1+(?___lwdiv)+02h
  2593  0490  082A               	movf	(utoa@base),w
  2594  0491  01A2               	clrf	0+(?___lwdiv)+02h
  2595  0492  07A2               	addwf	0+(?___lwdiv)+02h
  2596                           
  2597  0493  120A  118A  23DF   	fcall	___lwdiv
              120A  118A         
  2598  0498  1383               	bcf	status, 7	;select IRP bank0
  2599  0499  1283               	bcf	status, 5	;RP0=0, select bank0
  2600  049A  1303               	bcf	status, 6	;RP1=0, select bank0
  2601  049B  0821               	movf	(1+(?___lwdiv)),w
  2602  049C  01A5               	clrf	(utoa@v+1)
  2603  049D  07A5               	addwf	(utoa@v+1)
  2604  049E  0820               	movf	(0+(?___lwdiv)),w
  2605  049F  01A4               	clrf	(utoa@v)
  2606  04A0  07A4               	addwf	(utoa@v)
  2607                           
  2608                           	
  2609  04A1                     l30000640:	
  2610                           	line	25
  2611  04A1  3001               	movlw	(01h)
  2612  04A2  00F6               	movwf	(??_utoa+0+0)
  2613  04A3  0876               	movf	(??_utoa+0+0),w
  2614  04A4  07A7               	addwf	(utoa@buf),f
  2615                           	
  2616  04A5                     l30000641:	
  2617                           	line	26
  2618  04A5  0825               	movf	((utoa@v+1)),w
  2619  04A6  0424               	iorwf	((utoa@v)),w
  2620  04A7  1D03               	skipz
  2621  04A8  2CAA               	goto	u821
  2622  04A9  2CAB               	goto	u820
  2623  04AA                     u821:
  2624  04AA  2C87               	goto	l30000639
  2625  04AB                     u820:
  2626                           	
  2627  04AB                     l30000642:	
  2628                           	line	27
  2629  04AB  1003               	clrc
  2630  04AC  0827               	movf	(utoa@buf),w
  2631  04AD  0084               	movwf	fsr0
  2632  04AE  3000               	movlw	0
  2633  04AF  1803               	btfsc	status,0
  2634  04B0  3001               	movlw	1
  2635  04B1  0080               	movwf	indf
  2636                           	
  2637  04B2                     l30000643:	
  2638  04B2  3001               	movlw	low(01h)
  2639  04B3  02A7               	subwf	(utoa@buf),f
  2640                           	
  2641  04B4                     l30000644:	
  2642                           	line	29
  2643  04B4  0829               	movf	(utoa@val+1),w
  2644  04B5  01F3               	clrf	(?___lwmod+1)
  2645  04B6  07F3               	addwf	(?___lwmod+1)
  2646  04B7  0828               	movf	(utoa@val),w
  2647  04B8  01F2               	clrf	(?___lwmod)
  2648  04B9  07F2               	addwf	(?___lwmod)
  2649                           
  2650  04BA  082B               	movf	(utoa@base+1),w
  2651  04BB  01F5               	clrf	1+(?___lwmod)+02h
  2652  04BC  07F5               	addwf	1+(?___lwmod)+02h
  2653  04BD  082A               	movf	(utoa@base),w
  2654  04BE  01F4               	clrf	0+(?___lwmod)+02h
  2655  04BF  07F4               	addwf	0+(?___lwmod)+02h
  2656                           
  2657  04C0  120A  118A  23A2   	fcall	___lwmod
              120A  118A         
  2658  04C5  0872               	movf	(0+(?___lwmod)),w
  2659  04C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2660  04C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2661  04C8  00A6               	movwf	(utoa@c)
  2662                           	
  2663  04C9                     l30000645:	
  2664                           	line	30
  2665  04C9  0829               	movf	(utoa@val+1),w
  2666  04CA  01A1               	clrf	(?___lwdiv+1)
  2667  04CB  07A1               	addwf	(?___lwdiv+1)
  2668  04CC  0828               	movf	(utoa@val),w
  2669  04CD  01A0               	clrf	(?___lwdiv)
  2670  04CE  07A0               	addwf	(?___lwdiv)
  2671                           
  2672  04CF  082B               	movf	(utoa@base+1),w
  2673  04D0  01A3               	clrf	1+(?___lwdiv)+02h
  2674  04D1  07A3               	addwf	1+(?___lwdiv)+02h
  2675  04D2  082A               	movf	(utoa@base),w
  2676  04D3  01A2               	clrf	0+(?___lwdiv)+02h
  2677  04D4  07A2               	addwf	0+(?___lwdiv)+02h
  2678                           
  2679  04D5  120A  118A  23DF   	fcall	___lwdiv
              120A  118A         
  2680  04DA  1383               	bcf	status, 7	;select IRP bank0
  2681  04DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2682  04DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2683  04DD  0821               	movf	(1+(?___lwdiv)),w
  2684  04DE  01A9               	clrf	(utoa@val+1)
  2685  04DF  07A9               	addwf	(utoa@val+1)
  2686  04E0  0820               	movf	(0+(?___lwdiv)),w
  2687  04E1  01A8               	clrf	(utoa@val)
  2688  04E2  07A8               	addwf	(utoa@val)
  2689                           
  2690                           	
  2691  04E3                     l30000646:	
  2692                           	line	31
  2693  04E3  300A               	movlw	(0Ah)
  2694  04E4  0226               	subwf	(utoa@c),w
  2695  04E5  1C03               	skipc
  2696  04E6  2CE8               	goto	u831
  2697  04E7  2CE9               	goto	u830
  2698  04E8                     u831:
  2699  04E8  2CED               	goto	l76
  2700  04E9                     u830:
  2701                           	
  2702  04E9                     l30000647:	
  2703                           	line	32
  2704  04E9  3007               	movlw	(07h)
  2705  04EA  00F6               	movwf	(??_utoa+0+0)
  2706  04EB  0876               	movf	(??_utoa+0+0),w
  2707  04EC  07A6               	addwf	(utoa@c),f
  2708                           	
  2709  04ED                     l76:	
  2710                           	line	33
  2711  04ED  3030               	movlw	(030h)
  2712  04EE  00F6               	movwf	(??_utoa+0+0)
  2713  04EF  0876               	movf	(??_utoa+0+0),w
  2714  04F0  07A6               	addwf	(utoa@c),f
  2715                           	
  2716  04F1                     l30000648:	
  2717                           	line	34
  2718  04F1  0826               	movf	(utoa@c),w
  2719  04F2  00F6               	movwf	(??_utoa+0+0)
  2720  04F3  0827               	movf	(utoa@buf),w
  2721  04F4  0084               	movwf	fsr0
  2722  04F5  0876               	movf	(??_utoa+0+0),w
  2723  04F6  0080               	movwf	indf
  2724                           	
  2725  04F7                     l30000649:	
  2726  04F7  3001               	movlw	low(01h)
  2727  04F8  02A7               	subwf	(utoa@buf),f
  2728                           	
  2729  04F9                     l30000650:	
  2730                           	line	35
  2731  04F9  0829               	movf	((utoa@val+1)),w
  2732  04FA  0428               	iorwf	((utoa@val)),w
  2733  04FB  1D03               	skipz
  2734  04FC  2CFE               	goto	u841
  2735  04FD  2CFF               	goto	u840
  2736  04FE                     u841:
  2737  04FE  2CB4               	goto	l30000644
  2738  04FF                     u840:
  2739                           	
  2740  04FF                     l69:	
  2741  04FF  0008               	return
  2742                           	opt stack 0
  2743                           GLOBAL	__end_of_utoa
  2744  0500                     	__end_of_utoa:
  2745                           ; =============== function _utoa ends ============
  2746                           
  2747                           psect	text102,local,class=CODE,delta=2
  2748                           global __ptext102
  2749  058B                     __ptext102:
  2750                           	line	37
  2751                           	signat	_utoa,12409
  2752                           	global	___aldiv
  2753                           
  2754                           ; *************** function ___aldiv *****************
  2755                           ; Defined at:
  2756                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\aldiv.c"
  2757                           ; Parameters:    Size  Location     Type
  2758                           ;  dividend        4    0[BANK0 ] long 
  2759                           ;  divisor         4    4[BANK0 ] long 
  2760                           ; Auto vars:     Size  Location     Type
  2761                           ;  quotient        4    3[COMMON] long 
  2762                           ;  sign            1    2[COMMON] unsigned char 
  2763                           ;  counter         1    1[COMMON] unsigned char 
  2764                           ; Return value:  Size  Location     Type
  2765                           ;                  4    0[BANK0 ] long 
  2766                           ; Registers used:
  2767                           ;		wreg, status,2, status,0
  2768                           ; Tracked objects:
  2769                           ;		On entry : 0/0
  2770                           ;		On exit  : 0/0
  2771                           ;		Unchanged: 0/0
  2772                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773                           ;      Locals:         7       8       0       0       0
  2774                           ;      Temp:     1
  2775                           ;      Total:   15
  2776                           ; This function calls:
  2777                           ;		Nothing
  2778                           ; This function is called by:
  2779                           ;		_UART_Init
  2780                           ; This function uses a non-reentrant model
  2781                           ; 
  2782                           psect	text102
  2783                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\aldiv.c"
  2784                           	line	5
  2785                           	global	__size_of___aldiv
  2786  00A2                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2787                           	
  2788  058B                     ___aldiv:	
  2789                           	opt stack 6
  2790                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2791                           	line	9
  2792                           	
  2793  058B                     l30000687:	
  2794  058B  1003               	clrc
  2795  058C  3000               	movlw	0
  2796  058D  1803               	btfsc	status,0
  2797  058E  3001               	movlw	1
  2798  058F  00F2               	movwf	(___aldiv@sign)
  2799                           	
  2800  0590                     l30000688:	
  2801                           	line	10
  2802  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  2803  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  2804  0592  1FA7               	btfss	(___aldiv@divisor+3),7
  2805  0593  2D95               	goto	u981
  2806  0594  2D96               	goto	u980
  2807  0595                     u981:
  2808  0595  2DA4               	goto	l30000691
  2809  0596                     u980:
  2810                           	
  2811  0596                     l30000689:	
  2812                           	line	11
  2813  0596  09A4               	comf	(___aldiv@divisor),f
  2814  0597  09A5               	comf	(___aldiv@divisor+1),f
  2815  0598  09A6               	comf	(___aldiv@divisor+2),f
  2816  0599  09A7               	comf	(___aldiv@divisor+3),f
  2817  059A  0AA4               	incf	(___aldiv@divisor),f
  2818  059B  1903               	skipnz
  2819  059C  0AA5               	incf	(___aldiv@divisor+1),f
  2820  059D  1903               	skipnz
  2821  059E  0AA6               	incf	(___aldiv@divisor+2),f
  2822  059F  1903               	skipnz
  2823  05A0  0AA7               	incf	(___aldiv@divisor+3),f
  2824                           	
  2825  05A1                     l30000690:	
  2826                           	line	12
  2827  05A1  01F2               	clrf	(___aldiv@sign)
  2828  05A2  1403               	bsf	status,0
  2829  05A3  0DF2               	rlf	(___aldiv@sign),f
  2830                           	
  2831  05A4                     l30000691:	
  2832                           	line	14
  2833  05A4  1FA3               	btfss	(___aldiv@dividend+3),7
  2834  05A5  2DA7               	goto	u991
  2835  05A6  2DA8               	goto	u990
  2836  05A7                     u991:
  2837  05A7  2DB7               	goto	l30000694
  2838  05A8                     u990:
  2839                           	
  2840  05A8                     l30000692:	
  2841                           	line	15
  2842  05A8  09A0               	comf	(___aldiv@dividend),f
  2843  05A9  09A1               	comf	(___aldiv@dividend+1),f
  2844  05AA  09A2               	comf	(___aldiv@dividend+2),f
  2845  05AB  09A3               	comf	(___aldiv@dividend+3),f
  2846  05AC  0AA0               	incf	(___aldiv@dividend),f
  2847  05AD  1903               	skipnz
  2848  05AE  0AA1               	incf	(___aldiv@dividend+1),f
  2849  05AF  1903               	skipnz
  2850  05B0  0AA2               	incf	(___aldiv@dividend+2),f
  2851  05B1  1903               	skipnz
  2852  05B2  0AA3               	incf	(___aldiv@dividend+3),f
  2853                           	
  2854  05B3                     l30000693:	
  2855                           	line	16
  2856  05B3  3001               	movlw	(01h)
  2857  05B4  00F0               	movwf	(??___aldiv+0+0)
  2858  05B5  0870               	movf	(??___aldiv+0+0),w
  2859  05B6  06F2               	xorwf	(___aldiv@sign),f
  2860                           	
  2861  05B7                     l30000694:	
  2862                           	line	18
  2863  05B7  3000               	movlw	0
  2864  05B8  00F6               	movwf	(___aldiv@quotient+3)
  2865  05B9  3000               	movlw	0
  2866  05BA  00F5               	movwf	(___aldiv@quotient+2)
  2867  05BB  3000               	movlw	0
  2868  05BC  00F4               	movwf	(___aldiv@quotient+1)
  2869  05BD  3000               	movlw	0
  2870  05BE  00F3               	movwf	(___aldiv@quotient)
  2871                           
  2872                           	
  2873  05BF                     l30000695:	
  2874                           	line	19
  2875  05BF  0827               	movf	(___aldiv@divisor+3),w
  2876  05C0  0426               	iorwf	(___aldiv@divisor+2),w
  2877  05C1  0425               	iorwf	(___aldiv@divisor+1),w
  2878  05C2  0424               	iorwf	(___aldiv@divisor),w
  2879  05C3  1903               	skipnz
  2880  05C4  2DC6               	goto	u1001
  2881  05C5  2DC7               	goto	u1000
  2882  05C6                     u1001:
  2883  05C6  2E15               	goto	l30000705
  2884  05C7                     u1000:
  2885                           	
  2886  05C7                     l30000696:	
  2887                           	line	20
  2888  05C7  01F1               	clrf	(___aldiv@counter)
  2889  05C8  1403               	bsf	status,0
  2890  05C9  0DF1               	rlf	(___aldiv@counter),f
  2891  05CA  2DD8               	goto	l30000698
  2892                           	
  2893  05CB                     l30000697:	
  2894                           	line	22
  2895  05CB  3001               	movlw	01h
  2896  05CC  00F0               	movwf	(??___aldiv+0+0)
  2897  05CD                     u1015:
  2898  05CD  1003               	clrc
  2899  05CE  0DA4               	rlf	(___aldiv@divisor),f
  2900  05CF  0DA5               	rlf	(___aldiv@divisor+1),f
  2901  05D0  0DA6               	rlf	(___aldiv@divisor+2),f
  2902  05D1  0DA7               	rlf	(___aldiv@divisor+3),f
  2903  05D2  0BF0               	decfsz	(??___aldiv+0+0)
  2904  05D3  2DCD               	goto	u1015
  2905                           	line	23
  2906  05D4  3001               	movlw	(01h)
  2907  05D5  00F0               	movwf	(??___aldiv+0+0)
  2908  05D6  0870               	movf	(??___aldiv+0+0),w
  2909  05D7  07F1               	addwf	(___aldiv@counter),f
  2910                           	
  2911  05D8                     l30000698:	
  2912                           	line	21
  2913  05D8  1FA7               	btfss	(___aldiv@divisor+3),(31)&7
  2914  05D9  2DDB               	goto	u1021
  2915  05DA  2DDC               	goto	u1020
  2916  05DB                     u1021:
  2917  05DB  2DCB               	goto	l30000697
  2918  05DC                     u1020:
  2919                           	
  2920  05DC                     l30000699:	
  2921                           	line	26
  2922  05DC  3001               	movlw	01h
  2923  05DD  00F0               	movwf	(??___aldiv+0+0)
  2924  05DE                     u1035:
  2925  05DE  1003               	clrc
  2926  05DF  0DF3               	rlf	(___aldiv@quotient),f
  2927  05E0  0DF4               	rlf	(___aldiv@quotient+1),f
  2928  05E1  0DF5               	rlf	(___aldiv@quotient+2),f
  2929  05E2  0DF6               	rlf	(___aldiv@quotient+3),f
  2930  05E3  0BF0               	decfsz	(??___aldiv+0+0)
  2931  05E4  2DDE               	goto	u1035
  2932                           	
  2933  05E5                     l30000700:	
  2934                           	line	27
  2935  05E5  0827               	movf	(___aldiv@divisor+3),w
  2936  05E6  0223               	subwf	(___aldiv@dividend+3),w
  2937  05E7  1D03               	skipz
  2938  05E8  2DF3               	goto	u1045
  2939  05E9  0826               	movf	(___aldiv@divisor+2),w
  2940  05EA  0222               	subwf	(___aldiv@dividend+2),w
  2941  05EB  1D03               	skipz
  2942  05EC  2DF3               	goto	u1045
  2943  05ED  0825               	movf	(___aldiv@divisor+1),w
  2944  05EE  0221               	subwf	(___aldiv@dividend+1),w
  2945  05EF  1D03               	skipz
  2946  05F0  2DF3               	goto	u1045
  2947  05F1  0824               	movf	(___aldiv@divisor),w
  2948  05F2  0220               	subwf	(___aldiv@dividend),w
  2949  05F3                     u1045:
  2950  05F3  1C03               	skipc
  2951  05F4  2DF6               	goto	u1041
  2952  05F5  2DF7               	goto	u1040
  2953  05F6                     u1041:
  2954  05F6  2E06               	goto	l30000703
  2955  05F7                     u1040:
  2956                           	
  2957  05F7                     l30000701:	
  2958                           	line	28
  2959  05F7  0824               	movf	(___aldiv@divisor),w
  2960  05F8  02A0               	subwf	(___aldiv@dividend),f
  2961  05F9  0825               	movf	(___aldiv@divisor+1),w
  2962  05FA  1C03               	skipc
  2963  05FB  0F25               	incfsz	(___aldiv@divisor+1),w
  2964  05FC  02A1               	subwf	(___aldiv@dividend+1),f
  2965  05FD  0826               	movf	(___aldiv@divisor+2),w
  2966  05FE  1C03               	skipc
  2967  05FF  0F26               	incfsz	(___aldiv@divisor+2),w
  2968  0600  02A2               	subwf	(___aldiv@dividend+2),f
  2969  0601  0827               	movf	(___aldiv@divisor+3),w
  2970  0602  1C03               	skipc
  2971  0603  0F27               	incfsz	(___aldiv@divisor+3),w
  2972  0604  02A3               	subwf	(___aldiv@dividend+3),f
  2973                           	
  2974  0605                     l30000702:	
  2975                           	line	29
  2976  0605  1473               	bsf	(___aldiv@quotient)+(0/8),(0)&7
  2977                           	
  2978  0606                     l30000703:	
  2979                           	line	31
  2980  0606  3001               	movlw	01h
  2981  0607                     u1055:
  2982  0607  1003               	clrc
  2983  0608  0CA7               	rrf	(___aldiv@divisor+3),f
  2984  0609  0CA6               	rrf	(___aldiv@divisor+2),f
  2985  060A  0CA5               	rrf	(___aldiv@divisor+1),f
  2986  060B  0CA4               	rrf	(___aldiv@divisor),f
  2987  060C  3EFF               	addlw	-1
  2988  060D  1D03               	skipz
  2989  060E  2E07               	goto	u1055
  2990                           
  2991                           	
  2992  060F                     l30000704:	
  2993                           	line	32
  2994  060F  3001               	movlw	low(01h)
  2995  0610  02F1               	subwf	(___aldiv@counter),f
  2996  0611  1D03               	btfss	status,2
  2997  0612  2E14               	goto	u1061
  2998  0613  2E15               	goto	u1060
  2999  0614                     u1061:
  3000  0614  2DDC               	goto	l30000699
  3001  0615                     u1060:
  3002                           	
  3003  0615                     l30000705:	
  3004                           	line	34
  3005  0615  0872               	movf	(___aldiv@sign),w
  3006  0616  1D03               	skipz
  3007  0617  2E19               	goto	u1070
  3008  0618  2E24               	goto	l30000707
  3009  0619                     u1070:
  3010                           	
  3011  0619                     l30000706:	
  3012                           	line	35
  3013  0619  09F3               	comf	(___aldiv@quotient),f
  3014  061A  09F4               	comf	(___aldiv@quotient+1),f
  3015  061B  09F5               	comf	(___aldiv@quotient+2),f
  3016  061C  09F6               	comf	(___aldiv@quotient+3),f
  3017  061D  0AF3               	incf	(___aldiv@quotient),f
  3018  061E  1903               	skipnz
  3019  061F  0AF4               	incf	(___aldiv@quotient+1),f
  3020  0620  1903               	skipnz
  3021  0621  0AF5               	incf	(___aldiv@quotient+2),f
  3022  0622  1903               	skipnz
  3023  0623  0AF6               	incf	(___aldiv@quotient+3),f
  3024                           	
  3025  0624                     l30000707:	
  3026                           	line	36
  3027  0624  0876               	movf	(___aldiv@quotient+3),w
  3028  0625  00A3               	movwf	(?___aldiv+3)
  3029+ 0626  0875               	movf	(___aldiv@quotient+2),w
  3030+ 0627  00A2               	movwf	(?___aldiv+2)
  3031+ 0628  0874               	movf	(___aldiv@quotient+1),w
  3032+ 0629  00A1               	movwf	(?___aldiv+1)
  3033+ 062A  0873               	movf	(___aldiv@quotient),w
  3034+ 062B  00A0               	movwf	(?___aldiv)
  3035+                          
  3036+                          	
  3037+ 062C                     l294:	
  3038+ 062C  0008               	return
  3039+                          	opt stack 0
  3040+                          GLOBAL	__end_of___aldiv
  3041+ 062D                     	__end_of___aldiv:
  3042+                          ; =============== function ___aldiv ends ============
  3043+                          
  3044+                          psect	text103,local,class=CODE,delta=2
  3045+                          global __ptext103
  3046+ 034F                     __ptext103:
  3047+                          	line	37
  3048+                          	signat	___aldiv,8316
  3049+                          	global	___wmul
  3050+                          
  3051+                          ; *************** function ___wmul *****************
  3052+                          ; Defined at:
  3053+                          ;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\wmul.c"
  3054+                          ; Parameters:    Size  Location     Type
  3055+                          ;  multiplier      2    2[COMMON] unsigned int 
  3056+                          ;  multiplicand    2    4[COMMON] unsigned int 
  3057+                          ; Auto vars:     Size  Location     Type
  3058+                          ;  product         2    0[COMMON] unsigned int 
  3059+                          ; Return value:  Size  Location     Type
  3060+                          ;                  2    2[COMMON] unsigned int 
  3061+                          ; Registers used:
  3062+                          ;		wreg, status,2, status,0
  3063+                          ; Tracked objects:
  3064+                          ;		On entry : 0/0
  3065+                          ;		On exit  : 0/0
  3066+                          ;		Unchanged: 0/0
  3067+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068+                          ;      Locals:         6       0       0       0       0
  3069+                          ;      Temp:     0
  3070+                          ;      Total:    6
  3071+                          ; This function calls:
  3072+                          ;		Nothing
  3073+                          ; This function is called by:
  3074+                          ;		_atoi
  3075+                          ; This function uses a non-reentrant model
  3076+                          ; 
  3077+                          psect	text103
  3078+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\wmul.c"
  3079+                          	line	3
  3080+                          	global	__size_of___wmul
  3081+ 0029                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  3082+                          	
  3083+ 034F                     ___wmul:	
  3084+                          	opt stack 6
  3085+                          ; Regs used in ___wmul: [wreg+status,2+status,0]
  3086+                          	line	4
  3087+                          	
  3088+ 034F                     l30000733:	
  3089+ 034F  3000               	movlw	low(0)
  3090+ 0350  00F0               	movwf	(___wmul@product)
  3091+ 0351  3000               	movlw	high(0)
  3092+ 0352  00F1               	movwf	((___wmul@product))+1
  3093+                          	
  3094+ 0353                     l30000734:	
  3095+                          	line	7
  3096+ 0353  1C72               	btfss	(___wmul@multiplier),(0)&7
  3097+ 0354  2B56               	goto	u1161
  3098+ 0355  2B57               	goto	u1160
  3099+ 0356                     u1161:
  3100+ 0356  2B5D               	goto	l86
  3101+ 0357                     u1160:
  3102+                          	
  3103+ 0357                     l30000735:	
  3104+                          	line	8
  3105+ 0357  0874               	movf	(___wmul@multiplicand),w
  3106+ 0358  07F0               	addwf	(___wmul@product),f
  3107+ 0359  1803               	skipnc
  3108+ 035A  0AF1               	incf	(___wmul@product+1),f
  3109+ 035B  0875               	movf	(___wmul@multiplicand+1),w
  3110+ 035C  07F1               	addwf	(___wmul@product+1),f
  3111+                          	
  3112+ 035D                     l86:	
  3113+                          	line	9
  3114+ 035D  3001               	movlw	01h
  3115+ 035E                     u1175:
  3116+ 035E  1003               	clrc
  3117+ 035F  0DF4               	rlf	(___wmul@multiplicand),f
  3118+ 0360  0DF5               	rlf	(___wmul@multiplicand+1),f
  3119+ 0361  3EFF               	addlw	-1
  3120+ 0362  1D03               	skipz
  3121+ 0363  2B5E               	goto	u1175
  3122+                          	
  3123+ 0364                     l30000736:	
  3124+                          	line	10
  3125+ 0364  3001               	movlw	01h
  3126+ 0365                     u1185:
  3127+ 0365  1003               	clrc
  3128+ 0366  0CF3               	rrf	(___wmul@multiplier+1),f
  3129+ 0367  0CF2               	rrf	(___wmul@multiplier),f
  3130+ 0368  3EFF               	addlw	-1
  3131+ 0369  1D03               	skipz
  3132+ 036A  2B65               	goto	u1185
  3133+                          	line	11
  3134+ 036B  0873               	movf	((___wmul@multiplier+1)),w
  3135+ 036C  0472               	iorwf	((___wmul@multiplier)),w
  3136+ 036D  1D03               	skipz
  3137+ 036E  2B70               	goto	u1191
  3138+ 036F  2B71               	goto	u1190
  3139+ 0370                     u1191:
  3140+ 0370  2B53               	goto	l30000734
  3141+ 0371                     u1190:
  3142+                          	
  3143+ 0371                     l30000737:	
  3144+                          	line	12
  3145+ 0371  0871               	movf	(___wmul@product+1),w
  3146+ 0372  01F3               	clrf	(?___wmul+1)
  3147+ 0373  07F3               	addwf	(?___wmul+1)
  3148+ 0374  0870               	movf	(___wmul@product),w
  3149+ 0375  01F2               	clrf	(?___wmul)
  3150+ 0376  07F2               	addwf	(?___wmul)
  3151+                          
  3152+                          	
  3153+ 0377                     l82:	
  3154+ 0377  0008               	return
  3155+                          	opt stack 0
  3156+                          GLOBAL	__end_of___wmul
  3157+ 0378                     	__end_of___wmul:
  3158+                          ; =============== function ___wmul ends ============
  3159+                          
  3160+                          psect	text104,local,class=CODE,delta=2
  3161+                          global __ptext104
  3162+ 042A                     __ptext104:
  3163+                          	line	13
  3164+                          	signat	___wmul,8314
  3165+                          	global	_ad_setgetchannel
  3166+                          
  3167+                          ; *************** function _ad_setgetchannel *****************
  3168+                          ; Defined at:
  3169+                          ;		line 51 in file "C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  3170+                          ; Parameters:    Size  Location     Type
  3171+                          ;  channel         1    wreg     unsigned char 
  3172+                          ; Auto vars:     Size  Location     Type
  3173+                          ;  channel         1    5[COMMON] unsigned char 
  3174+                          ;  data            2    6[COMMON] unsigned int 
  3175+                          ;  ch_config       2    3[COMMON] unsigned int 
  3176+                          ;  i               1    8[COMMON] char 
  3177+                          ; Return value:  Size  Location     Type
  3178+                          ;                  2    0[BANK0 ] unsigned int 
  3179+                          ; Registers used:
  3180+                          ;		wreg, status,2, status,0
  3181+                          ; Tracked objects:
  3182+                          ;		On entry : 0/0
  3183+                          ;		On exit  : 0/0
  3184+                          ;		Unchanged: 0/0
  3185+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186+                          ;      Locals:         9       2       0       0       0
  3187+                          ;      Temp:     3
  3188+                          ;      Total:   11
  3189+                          ; This function calls:
  3190+                          ;		Nothing
  3191+                          ; This function is called by:
  3192+                          ;		_read_ad
  3193+                          ; This function uses a non-reentrant model
  3194+                          ; 
  3195+                          psect	text104
  3196+                          	file	"C:\Users\LENOVO\Desktop\SPI bit banging TLC2543 Vers. 2\main.c"
  3197+                          	line	51
  3198+                          	global	__size_of_ad_setgetchannel
  3199+ 0054                     	__size_of_ad_setgetchannel	equ	__end_of_ad_setgetchannel-_ad_setgetchannel
  3200+                          ;main.c: 50: unsigned int ad_setgetchannel(unsigned char channel)
  3201+                          ;main.c: 51: {
  3202+                          	
  3203+ 042A                     _ad_setgetchannel:	
  3204+                          	opt stack 6
  3205+                          ; Regs used in _ad_setgetchannel: [wreg+status,2+status,0]
  3206+                          ;ad_setgetchannel@channel stored from wreg
  3207+                          	line	53
  3208+ 042A  00F5               	movwf	(ad_setgetchannel@channel)
  3209+                          	
  3210+ 042B                     l30000658:	
  3211+                          ;main.c: 52: signed char i;
  3212+                          ;main.c: 53: unsigned int data = 0x0;
  3213+ 042B  3000               	movlw	low(0)
  3214+ 042C  00F6               	movwf	(ad_setgetchannel@data)
  3215+ 042D  3000               	movlw	high(0)
  3216+ 042E  00F7               	movwf	((ad_setgetchannel@data))+1
  3217+                          	
  3218+ 042F                     l30000659:	
  3219+                          	line	56
  3220+                          ;main.c: 54: unsigned int ch_config;
  3221+                          ;main.c: 56: ch_config = channel<<8;
  3222+ 042F  0875               	movf	(ad_setgetchannel@channel),w
  3223+ 0430  00F0               	movwf	(??_ad_setgetchannel+0+0)
  3224+ 0431  01F1               	clrf	(??_ad_setgetchannel+0+0+1)
  3225+ 0432  3008               	movlw	08h
  3226+ 0433  00F2               	movwf	(??_ad_setgetchannel+2+0)
  3227+ 0434                     u865:
  3228+ 0434  1003               	clrc
  3229+ 0435  0DF0               	rlf	(??_ad_setgetchannel+0+0),f
  3230+ 0436  0DF1               	rlf	(??_ad_setgetchannel+0+1),f
  3231+ 0437  0BF2               	decfsz	(??_ad_setgetchannel+2+0),f
  3232+ 0438  2C34               	goto	u865
  3233+ 0439  0870               	movf	0+(??_ad_setgetchannel+0+0),w
  3234+ 043A  00F3               	movwf	(ad_setgetchannel@ch_config)
  3235+ 043B  0871               	movf	1+(??_ad_setgetchannel+0+0),w
  3236+ 043C  00F4               	movwf	(ad_setgetchannel@ch_config+1)
  3237+                          	
  3238+ 043D                     l30000660:	
  3239+                          	line	58
  3240+                          ;main.c: 58: RC3 = 0;
  3241+ 043D  1283               	bcf	status, 5	;RP0=0, select bank0
  3242+ 043E  1303               	bcf	status, 6	;RP1=0, select bank0
  3243+ 043F  1187               	bcf	(59/8),(59)&7
  3244+                          	
  3245+ 0440                     l30000661:	
  3246+                          	line	59
  3247+                          ;main.c: 59: RA0 = 0;
  3248+ 0440  1005               	bcf	(40/8),(40)&7
  3249+                          	line	60
  3250+                          ;main.c: 60: for(i=11; i>=0; i--)
  3251+ 0441  300B               	movlw	(0Bh)
  3252+ 0442  00F8               	movwf	(ad_setgetchannel@i)
  3253+                          	
  3254+ 0443                     l30000664:	
  3255+                          	line	63
  3256+                          ;main.c: 61: {
  3257+                          ;main.c: 63: RC5 = ((ch_config>>i) & 0x01);
  3258+ 0443  0874               	movf	(ad_setgetchannel@ch_config+1),w
  3259+ 0444  00F1               	movwf	(??_ad_setgetchannel+0+0+1)
  3260+ 0445  0873               	movf	(ad_setgetchannel@ch_config),w
  3261+ 0446  00F0               	movwf	(??_ad_setgetchannel+0+0)
  3262+ 0447  0A78               	incf	(ad_setgetchannel@i),w
  3263+ 0448  2C4C               	goto	u874
  3264+ 0449                     u875:
  3265+ 0449  1003               	clrc
  3266+ 044A  0CF1               	rrf	(??_ad_setgetchannel+0+1),f
  3267+ 044B  0CF0               	rrf	(??_ad_setgetchannel+0+0),f
  3268+ 044C                     u874:
  3269+ 044C  00F2               	movwf	(??_ad_setgetchannel+2+0)
  3270+ 044D  0B72               	decfsz	(??_ad_setgetchannel+2+0),w
  3271+ 044E  2C49               	goto	u875
  3272+ 044F  1870               	btfsc	0+(??_ad_setgetchannel+0+0),0
  3273+ 0450  2C52               	goto	u881
  3274+ 0451  2C56               	goto	u880
  3275+                          	
  3276+ 0452                     u881:
  3277+ 0452  1283               	bcf	status, 5	;RP0=0, select bank0
  3278+ 0453  1303               	bcf	status, 6	;RP1=0, select bank0
  3279+ 0454  1687               	bsf	(61/8),(61)&7
  3280+ 0455  2C59               	goto	u894
  3281+ 0456                     u880:
  3282+ 0456  1283               	bcf	status, 5	;RP0=0, select bank0
  3283+ 0457  1303               	bcf	status, 6	;RP1=0, select bank0
  3284+ 0458  1287               	bcf	(61/8),(61)&7
  3285+ 0459                     u894:
  3286+                          	
  3287+ 0459                     l30000665:	
  3288+                          	line	65
  3289+                          ;main.c: 65: data <<= 1;
  3290+ 0459  3001               	movlw	01h
  3291+ 045A                     u905:
  3292+ 045A  1003               	clrc
  3293+ 045B  0DF6               	rlf	(ad_setgetchannel@data),f
  3294+ 045C  0DF7               	rlf	(ad_setgetchannel@data+1),f
  3295+ 045D  3EFF               	addlw	-1
  3296+ 045E  1D03               	skipz
  3297+ 045F  2C5A               	goto	u905
  3298+                          	
  3299+ 0460                     l30000666:	
  3300+                          	line	66
  3301+                          ;main.c: 66: data |= RC4;
  3302+ 0460  1003               	clrc
  3303+ 0461  1A07               	btfsc	(60/8),(60)&7
  3304+ 0462  1403               	setc
  3305+ 0463  3000               	movlw	0
  3306+ 0464  1803               	skipnc
  3307+ 0465  3001               	movlw	1
  3308+                          
  3309+ 0466  00F0               	movwf	(??_ad_setgetchannel+0+0)
  3310+ 0467  01F1               	clrf	(??_ad_setgetchannel+0+0+1)
  3311+ 0468  0870               	movf	0+(??_ad_setgetchannel+0+0),w
  3312+ 0469  04F6               	iorwf	(ad_setgetchannel@data),f
  3313+ 046A  0871               	movf	1+(??_ad_setgetchannel+0+0),w
  3314+ 046B  04F7               	iorwf	(ad_setgetchannel@data+1),f
  3315+                          	
  3316+ 046C                     l30000667:	
  3317+                          	line	67
  3318+                          ;main.c: 67: RC3 = 1;
  3319+ 046C  1587               	bsf	(59/8),(59)&7
  3320+                          	
  3321+ 046D                     l30000668:	
  3322+                          	line	68
  3323+                          ;main.c: 68: RC3 = 0;
  3324+ 046D  1187               	bcf	(59/8),(59)&7
  3325+                          	
  3326+ 046E                     l30000669:	
  3327+                          	line	60
  3328+ 046E  30FF               	movlw	(-1)
  3329+ 046F  00F0               	movwf	(??_ad_setgetchannel+0+0)
  3330+ 0470  0870               	movf	(??_ad_setgetchannel+0+0),w
  3331+ 0471  07F8               	addwf	(ad_setgetchannel@i),f
  3332+                          	
  3333+ 0472                     l30000670:	
  3334+ 0472  1FF8               	btfss	(ad_setgetchannel@i),7
  3335+ 0473  2C75               	goto	u911
  3336+ 0474  2C76               	goto	u910
  3337+ 0475                     u911:
  3338+ 0475  2C43               	goto	l30000664
  3339+ 0476                     u910:
  3340+                          	
  3341+ 0476                     l32:	
  3342+                          	line	70
  3343+                          ;main.c: 69: }
  3344+                          ;main.c: 70: RA0 = 1;
  3345+ 0476  1405               	bsf	(40/8),(40)&7
  3346+                          	
  3347+ 0477                     l30000671:	
  3348+                          	line	71
  3349+                          ;main.c: 71: return data;
  3350+ 0477  0877               	movf	(ad_setgetchannel@data+1),w
  3351+ 0478  01A1               	clrf	(?_ad_setgetchannel+1)
  3352+ 0479  07A1               	addwf	(?_ad_setgetchannel+1)
  3353+ 047A  0876               	movf	(ad_setgetchannel@data),w
  3354+ 047B  01A0               	clrf	(?_ad_setgetchannel)
  3355+ 047C  07A0               	addwf	(?_ad_setgetchannel)
  3356+                          
  3357+                          	
  3358+ 047D                     l30:	
  3359+ 047D  0008               	return
  3360+                          	opt stack 0
  3361+                          GLOBAL	__end_of_ad_setgetchannel
  3362+ 047E                     	__end_of_ad_setgetchannel:
  3363+                          ; =============== function _ad_setgetchannel ends ============
  3364+                          
  3365+                          psect	text105,local,class=CODE,delta=2
  3366+                          global __ptext105
  3367+ 02F1                     __ptext105:
  3368+                          	line	72
  3369+                          	signat	_ad_setgetchannel,4218
  3370+                          	global	_isdigit
  3371+                          
  3372+                          ; *************** function _isdigit *****************
  3373+                          ; Defined at:
  3374+                          ;		line 13 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\isdigit.c"
  3375+                          ; Parameters:    Size  Location     Type
  3376+                          ;  c               1    wreg     unsigned char 
  3377+                          ; Auto vars:     Size  Location     Type
  3378+                          ;  c               1    1[COMMON] unsigned char 
  3379+                          ; Return value:  Size  Location     Type
  3380+                          ;		None               void
  3381+                          ; Registers used:
  3382+                          ;		wreg, status,2, status,0
  3383+                          ; Tracked objects:
  3384+                          ;		On entry : 0/0
  3385+                          ;		On exit  : 0/0
  3386+                          ;		Unchanged: 0/0
  3387+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388+                          ;      Locals:         2       0       0       0       0
  3389+                          ;      Temp:     0
  3390+                          ;      Total:    2
  3391+                          ; This function calls:
  3392+                          ;		Nothing
  3393+                          ; This function is called by:
  3394+                          ;		_atoi
  3395+                          ; This function uses a non-reentrant model
  3396+                          ; 
  3397+                          psect	text105
  3398+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\isdigit.c"
  3399+                          	line	13
  3400+                          	global	__size_of_isdigit
  3401+ 0017                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  3402+                          	
  3403+ 02F1                     _isdigit:	
  3404+                          	opt stack 6
  3405+                          ; Regs used in _isdigit: [wreg+status,2+status,0]
  3406+                          ;isdigit@c stored from wreg
  3407+ 02F1  00F1               	movwf	(isdigit@c)
  3408+                          	
  3409+ 02F2                     l30000727:	
  3410+                          	line	14
  3411+ 02F2  1003               	clrc
  3412+ 02F3  3000               	movlw	0
  3413+ 02F4  1803               	btfsc	status,0
  3414+ 02F5  3001               	movlw	1
  3415+ 02F6  00F0               	movwf	(_isdigit$354)
  3416+                          	
  3417+ 02F7                     l30000728:	
  3418+ 02F7  303A               	movlw	(03Ah)
  3419+ 02F8  0271               	subwf	(isdigit@c),w
  3420+ 02F9  1803               	skipnc
  3421+ 02FA  2AFC               	goto	u1141
  3422+ 02FB  2AFD               	goto	u1140
  3423+ 02FC                     u1141:
  3424+ 02FC  2B06               	goto	l30000731
  3425+ 02FD                     u1140:
  3426+                          	
  3427+ 02FD                     l30000729:	
  3428+ 02FD  3030               	movlw	(030h)
  3429+ 02FE  0271               	subwf	(isdigit@c),w
  3430+ 02FF  1C03               	skipc
  3431+ 0300  2B02               	goto	u1151
  3432+ 0301  2B03               	goto	u1150
  3433+ 0302                     u1151:
  3434+ 0302  2B06               	goto	l30000731
  3435+ 0303                     u1150:
  3436+                          	
  3437+ 0303                     l30000730:	
  3438+ 0303  01F0               	clrf	(_isdigit$354)
  3439+ 0304  1403               	bsf	status,0
  3440+ 0305  0DF0               	rlf	(_isdigit$354),f
  3441+                          	
  3442+ 0306                     l30000731:	
  3443+ 0306  0C70               	rrf	(_isdigit$354),w
  3444+                          	
  3445+                          	
  3446+ 0307                     l62:	
  3447+ 0307  0008               	return
  3448+                          	opt stack 0
  3449+                          GLOBAL	__end_of_isdigit
  3450+ 0308                     	__end_of_isdigit:
  3451+                          ; =============== function _isdigit ends ============
  3452+                          
  3453+                          psect	text106,local,class=CODE,delta=2
  3454+                          global __ptext106
  3455+ 03DF                     __ptext106:
  3456+                          	line	15
  3457+                          	signat	_isdigit,4216
  3458+                          	global	___lwdiv
  3459+                          
  3460+                          ; *************** function ___lwdiv *****************
  3461+                          ; Defined at:
  3462+                          ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  3463+                          ; Parameters:    Size  Location     Type
  3464+                          ;  dividend        2    0[BANK0 ] unsigned int 
  3465+                          ;  divisor         2    2[BANK0 ] unsigned int 
  3466+                          ; Auto vars:     Size  Location     Type
  3467+                          ;  quotient        2    1[COMMON] unsigned int 
  3468+                          ;  counter         1    3[COMMON] unsigned char 
  3469+                          ; Return value:  Size  Location     Type
  3470+                          ;                  2    0[BANK0 ] unsigned int 
  3471+                          ; Registers used:
  3472+                          ;		wreg, status,2, status,0
  3473+                          ; Tracked objects:
  3474+                          ;		On entry : 0/0
  3475+                          ;		On exit  : 0/0
  3476+                          ;		Unchanged: 0/0
  3477+                          ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478+                          ;      Locals:         4       4       0       0       0
  3479+                          ;      Temp:     1
  3480+                          ;      Total:    8
  3481+                          ; This function calls:
  3482+                          ;		Nothing
  3483+                          ; This function is called by:
  3484+                          ;		_utoa
  3485+                          ; This function uses a non-reentrant model
  3486+                          ; 
  3487+                          psect	text106
  3488+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  3489+                          	line	5
  3490+                          	global	__size_of___lwdiv
  3491+ 004B                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3492+                          	
  3493+ 03DF                     ___lwdiv:	
  3494+                          	opt stack 5
  3495+                          ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3496+                          	line	9
  3497+                          	
  3498+ 03DF                     l30000626:	
  3499+ 03DF  3000               	movlw	low(0)
  3500+ 03E0  00F1               	movwf	(___lwdiv@quotient)
  3501+ 03E1  3000               	movlw	high(0)
  3502+ 03E2  00F2               	movwf	((___lwdiv@quotient))+1
  3503+                          	line	10
  3504+ 03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  3505+ 03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  3506+ 03E5  0823               	movf	(___lwdiv@divisor+1),w
  3507+ 03E6  0422               	iorwf	(___lwdiv@divisor),w
  3508+ 03E7  1903               	skipnz
  3509+ 03E8  2BEA               	goto	u751
  3510+ 03E9  2BEB               	goto	u750
  3511+ 03EA                     u751:
  3512+ 03EA  2C23               	goto	l30000636
  3513+ 03EB                     u750:
  3514+                          	
  3515+ 03EB                     l30000627:	
  3516+                          	line	11
  3517+ 03EB  01F3               	clrf	(___lwdiv@counter)
  3518+ 03EC  1403               	bsf	status,0
  3519+ 03ED  0DF3               	rlf	(___lwdiv@counter),f
  3520+ 03EE  2BFA               	goto	l30000630
  3521+                          	
  3522+ 03EF                     l30000628:	
  3523+                          	line	13
  3524+ 03EF  3001               	movlw	01h
  3525+ 03F0                     u765:
  3526+ 03F0  1003               	clrc
  3527+ 03F1  0DA2               	rlf	(___lwdiv@divisor),f
  3528+ 03F2  0DA3               	rlf	(___lwdiv@divisor+1),f
  3529+ 03F3  3EFF               	addlw	-1
  3530+ 03F4  1D03               	skipz
  3531+ 03F5  2BF0               	goto	u765
  3532+                          	
  3533+ 03F6                     l30000629:	
  3534+                          	line	14
  3535+ 03F6  3001               	movlw	(01h)
  3536+ 03F7  00F0               	movwf	(??___lwdiv+0+0)
  3537+ 03F8  0870               	movf	(??___lwdiv+0+0),w
  3538+ 03F9  07F3               	addwf	(___lwdiv@counter),f
  3539+                          	
  3540+ 03FA                     l30000630:	
  3541+                          	line	12
  3542+ 03FA  1FA3               	btfss	(___lwdiv@divisor+1),(15)&7
  3543+ 03FB  2BFD               	goto	u771
  3544+ 03FC  2BFE               	goto	u770
  3545+ 03FD                     u771:
  3546+ 03FD  2BEF               	goto	l30000628
  3547+ 03FE                     u770:
  3548+                          	
  3549+ 03FE                     l30000631:	
  3550+                          	line	17
  3551+ 03FE  3001               	movlw	01h
  3552+ 03FF                     u785:
  3553+ 03FF  1003               	clrc
  3554+ 0400  0DF1               	rlf	(___lwdiv@quotient),f
  3555+ 0401  0DF2               	rlf	(___lwdiv@quotient+1),f
  3556+ 0402  3EFF               	addlw	-1
  3557+ 0403  1D03               	skipz
  3558+ 0404  2BFF               	goto	u785
  3559+                          	line	18
  3560+ 0405  0823               	movf	(___lwdiv@divisor+1),w
  3561+ 0406  0221               	subwf	(___lwdiv@dividend+1),w
  3562+ 0407  1D03               	skipz
  3563+ 0408  2C0B               	goto	u795
  3564+ 0409  0822               	movf	(___lwdiv@divisor),w
  3565+ 040A  0220               	subwf	(___lwdiv@dividend),w
  3566+ 040B                     u795:
  3567+ 040B  1C03               	skipc
  3568+ 040C  2C0E               	goto	u791
  3569+ 040D  2C0F               	goto	u790
  3570+ 040E                     u791:
  3571+ 040E  2C16               	goto	l30000634
  3572+ 040F                     u790:
  3573+                          	
  3574+ 040F                     l30000632:	
  3575+                          	line	19
  3576+ 040F  0822               	movf	(___lwdiv@divisor),w
  3577+ 0410  02A0               	subwf	(___lwdiv@dividend),f
  3578+ 0411  0823               	movf	(___lwdiv@divisor+1),w
  3579+ 0412  1C03               	skipc
  3580+ 0413  03A1               	decf	(___lwdiv@dividend+1),f
  3581+ 0414  02A1               	subwf	(___lwdiv@dividend+1),f
  3582+                          	
  3583+ 0415                     l30000633:	
  3584+                          	line	20
  3585+ 0415  1471               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3586+                          	
  3587+ 0416                     l30000634:	
  3588+                          	line	22
  3589+ 0416  3001               	movlw	01h
  3590+ 0417                     u805:
  3591+ 0417  1003               	clrc
  3592+ 0418  0CA3               	rrf	(___lwdiv@divisor+1),f
  3593+ 0419  0CA2               	rrf	(___lwdiv@divisor),f
  3594+ 041A  3EFF               	addlw	-1
  3595+ 041B  1D03               	skipz
  3596+ 041C  2C17               	goto	u805
  3597+                          	
  3598+ 041D                     l30000635:	
  3599                           	line	23
  3600  041D  3001               	movlw	low(01h)
  3601  041E  02F3               	subwf	(___lwdiv@counter),f
  3602  041F  1D03               	btfss	status,2
  3603  0420  2C22               	goto	u811
  3604  0421  2C23               	goto	u810
  3605  0422                     u811:
  3606  0422  2BFE               	goto	l30000631
  3607  0423                     u810:
  3608                           	
  3609  0423                     l30000636:	
  3610                           	line	25
  3611  0423  0872               	movf	(___lwdiv@quotient+1),w
  3612  0424  01A1               	clrf	(?___lwdiv+1)
  3613  0425  07A1               	addwf	(?___lwdiv+1)
  3614  0426  0871               	movf	(___lwdiv@quotient),w
  3615  0427  01A0               	clrf	(?___lwdiv)
  3616  0428  07A0               	addwf	(?___lwdiv)
  3617                           
  3618                           	
  3619  0429                     l87:	
  3620  0429  0008               	return
  3621                           	opt stack 0
  3622                           GLOBAL	__end_of___lwdiv
  3623  042A                     	__end_of___lwdiv:
  3624                           ; =============== function ___lwdiv ends ============
  3625                           
  3626                           psect	text107,local,class=CODE,delta=2
  3627                           global __ptext107
  3628  03A2                     __ptext107:
  3629                           	line	26
  3630                           	signat	___lwdiv,8314
  3631                           	global	___lwmod
  3632                           
  3633                           ; *************** function ___lwmod *****************
  3634                           ; Defined at:
  3635                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  3636                           ; Parameters:    Size  Location     Type
  3637                           ;  dividend        2    2[COMMON] unsigned int 
  3638                           ;  divisor         2    4[COMMON] unsigned int 
  3639                           ; Auto vars:     Size  Location     Type
  3640                           ;  counter         1    1[COMMON] unsigned char 
  3641                           ; Return value:  Size  Location     Type
  3642                           ;                  2    2[COMMON] unsigned int 
  3643                           ; Registers used:
  3644                           ;		wreg, status,2, status,0
  3645                           ; Tracked objects:
  3646                           ;		On entry : 0/0
  3647                           ;		On exit  : 0/0
  3648                           ;		Unchanged: 0/0
  3649                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650                           ;      Locals:         6       0       0       0       0
  3651                           ;      Temp:     1
  3652                           ;      Total:    6
  3653                           ; This function calls:
  3654                           ;		Nothing
  3655                           ; This function is called by:
  3656                           ;		_utoa
  3657                           ; This function uses a non-reentrant model
  3658                           ; 
  3659                           psect	text107
  3660                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  3661                           	line	5
  3662                           	global	__size_of___lwmod
  3663  003D                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3664                           	
  3665  03A2                     ___lwmod:	
  3666                           	opt stack 5
  3667                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3668                           	line	8
  3669                           	
  3670  03A2                     l30000676:	
  3671  03A2  0875               	movf	(___lwmod@divisor+1),w
  3672  03A3  0474               	iorwf	(___lwmod@divisor),w
  3673  03A4  1903               	skipnz
  3674  03A5  2BA7               	goto	u921
  3675  03A6  2BA8               	goto	u920
  3676  03A7                     u921:
  3677  03A7  2BD8               	goto	l30000685
  3678  03A8                     u920:
  3679                           	
  3680  03A8                     l30000677:	
  3681                           	line	9
  3682  03A8  01F1               	clrf	(___lwmod@counter)
  3683  03A9  1403               	bsf	status,0
  3684  03AA  0DF1               	rlf	(___lwmod@counter),f
  3685  03AB  2BB7               	goto	l30000680
  3686                           	
  3687  03AC                     l30000678:	
  3688                           	line	11
  3689  03AC  3001               	movlw	01h
  3690  03AD                     u935:
  3691  03AD  1003               	clrc
  3692  03AE  0DF4               	rlf	(___lwmod@divisor),f
  3693  03AF  0DF5               	rlf	(___lwmod@divisor+1),f
  3694  03B0  3EFF               	addlw	-1
  3695  03B1  1D03               	skipz
  3696  03B2  2BAD               	goto	u935
  3697                           	
  3698  03B3                     l30000679:	
  3699                           	line	12
  3700  03B3  3001               	movlw	(01h)
  3701  03B4  00F0               	movwf	(??___lwmod+0+0)
  3702  03B5  0870               	movf	(??___lwmod+0+0),w
  3703  03B6  07F1               	addwf	(___lwmod@counter),f
  3704                           	
  3705  03B7                     l30000680:	
  3706                           	line	10
  3707  03B7  1FF5               	btfss	(___lwmod@divisor+1),(15)&7
  3708  03B8  2BBA               	goto	u941
  3709  03B9  2BBB               	goto	u940
  3710  03BA                     u941:
  3711  03BA  2BAC               	goto	l30000678
  3712  03BB                     u940:
  3713                           	
  3714  03BB                     l30000681:	
  3715                           	line	15
  3716  03BB  0875               	movf	(___lwmod@divisor+1),w
  3717  03BC  0273               	subwf	(___lwmod@dividend+1),w
  3718  03BD  1D03               	skipz
  3719  03BE  2BC1               	goto	u955
  3720  03BF  0874               	movf	(___lwmod@divisor),w
  3721  03C0  0272               	subwf	(___lwmod@dividend),w
  3722  03C1                     u955:
  3723  03C1  1C03               	skipc
  3724  03C2  2BC4               	goto	u951
  3725  03C3  2BC5               	goto	u950
  3726  03C4                     u951:
  3727  03C4  2BCB               	goto	l30000683
  3728  03C5                     u950:
  3729                           	
  3730  03C5                     l30000682:	
  3731                           	line	16
  3732  03C5  0874               	movf	(___lwmod@divisor),w
  3733  03C6  02F2               	subwf	(___lwmod@dividend),f
  3734  03C7  0875               	movf	(___lwmod@divisor+1),w
  3735  03C8  1C03               	skipc
  3736  03C9  03F3               	decf	(___lwmod@dividend+1),f
  3737  03CA  02F3               	subwf	(___lwmod@dividend+1),f
  3738                           	
  3739  03CB                     l30000683:	
  3740                           	line	17
  3741  03CB  3001               	movlw	01h
  3742  03CC                     u965:
  3743  03CC  1003               	clrc
  3744  03CD  0CF5               	rrf	(___lwmod@divisor+1),f
  3745  03CE  0CF4               	rrf	(___lwmod@divisor),f
  3746  03CF  3EFF               	addlw	-1
  3747  03D0  1D03               	skipz
  3748  03D1  2BCC               	goto	u965
  3749                           	
  3750  03D2                     l30000684:	
  3751                           	line	18
  3752  03D2  3001               	movlw	low(01h)
  3753  03D3  02F1               	subwf	(___lwmod@counter),f
  3754  03D4  1D03               	btfss	status,2
  3755  03D5  2BD7               	goto	u971
  3756  03D6  2BD8               	goto	u970
  3757  03D7                     u971:
  3758  03D7  2BBB               	goto	l30000681
  3759  03D8                     u970:
  3760                           	
  3761  03D8                     l30000685:	
  3762                           	line	20
  3763  03D8  0873               	movf	(___lwmod@dividend+1),w
  3764  03D9  01F3               	clrf	(?___lwmod+1)
  3765  03DA  07F3               	addwf	(?___lwmod+1)
  3766  03DB  0872               	movf	(___lwmod@dividend),w
  3767  03DC  01F2               	clrf	(?___lwmod)
  3768  03DD  07F2               	addwf	(?___lwmod)
  3769                           
  3770                           	
  3771  03DE                     l96:	
  3772  03DE  0008               	return
  3773                           	opt stack 0
  3774                           GLOBAL	__end_of___lwmod
  3775  03DF                     	__end_of___lwmod:
  3776                           ; =============== function ___lwmod ends ============
  3777                           
  3778                           psect	text108,local,class=CODE,delta=2
  3779                           global __ptext108
  3780  0003                     __ptext108:


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Thu Jun 25 15:14:47 2015

      UART_Write_Text@text 0071           ?_UART_Write_Text 0074               ___aldiv@sign 0072  
                        l6 07FF                         l10 02D5                         l11 02E4  
                       l20 02F0                         l12 02DD                         l21 02E6  
                       _DA 04A5                         l30 047D                         _BF 04A0  
                       _DC 0019                         l32 0476                         l24 0326  
                       l34 034E                         l51 058A                         l29 02DC  
                       l62 0307                         l39 0689                         l82 0377  
                       l67 03A1                         l76 04ED                         l69 04FF  
                       l86 035D                         l87 0429                         l96 03DE  
                       _PD 001B                         _RD 0C60                         _UA 04A1  
                       _TO 001C                         _RW 04A2                         _WR 0C61  
          __size_of___wmul 0029  __size_of_ad_setgetchannel 0054          ??_UART_Write_Text 0070  
                      l294 062C                        _CM0 04E0                        _CM1 04E1  
                      _CM2 04E2                        _CKE 04A6                        _IBF 044F  
                      _CIS 04E3                        _CKP 00A4                        _GIE 005F  
                      _BOR 0470                        _RA0 0028                        _RA1 0029  
                      _RB0 0030                        _RA2 002A                        _RB1 0031  
                      _RA3 002B                        _RC0 0038                        _RB2 0032  
                      _RA4 002C                        _RC1 0039                        _RB3 0033  
                      _RA5 002D                        _RD0 0040                        _RC2 003A  
                      _RB4 0034                        _RD1 0041                        _RC3 003B  
                      _RB5 0035                        _RE0 0048                        _RD2 0042  
                      _RC4 003C                        _RB6 0036                        _RE1 0049  
                      _RD3 0043                        _RC5 003D                        _RB7 0037  
                      _RE2 004A                        _RD4 0044                        _RC6 003E  
                      _RD5 0045                        _RC7 003F                        _OBF 044E  
                      _RD6 0046                        _RD7 0047                        _FSR 0004  
                      _PCL 0002                        _PS0 0408                        _PR2 0092  
                      _PS1 0409                        _PS2 040A                        _PEN 048A  
                      _RP0 001D                        _IRP 001F                        _RP1 001E  
                      u620 0724                        u700 065C                        u701 065B  
                      u630 0739                        u710 0683                        u631 073A  
                      u711 0682                        u640 075A                        u632 073F  
                      u720 0691                        u633 0740                        u625 071F  
                      u721 0690                        u810 0423                        u650 077C  
                      u730 0697                        u811 0422                        u651 077B  
                      u731 0696                        u715 067F                        u820 04AB  
                      u660 0792                        u740 06BC                        _SEN 0488  
                      u805 0417                        u821 04AA                        u645 0755  
                      u741 06BB                        u750 03EB                        u910 0476  
                      u830 04E9                        u670 07A7                        u751 03EA  
                      u911 0475                        u831 04E8                        u671 07A8  
                      _PSA 040B                        u920 03A8                        u840 04FF  
                      u680 07C8                        u672 07AD                        u921 03A7  
                      u905 045A                        u841 04FE                        u673 07AE  
                      u665 078D                        u745 06B8                        u770 03FE  
                      u690 07ED                        u850 037F                        u771 03FD  
                      u691 07EC                        u851 037E                        u940 03BB  
                      u941 03BA                        u765 03F0                        u685 07C3  
                      u950 03C5                        u790 040F                        u951 03C4  
                      u935 03AD                        u791 040E                        u880 0456  
                      _POR 0471                        u785 03FF                        u881 0452  
                      u865 0434                        _RX9 00C6                        u970 03D8  
                      u874 044C                        u971 03D7                        u955 03C1  
                      u795 040B                        u875 0449                        u980 0596  
                      u965 03CC                        u981 0595                        u894 0459  
                      u990 05A8                        _SMP 04A7                        u991 05A7  
                      _TX9 04C6            _UART_Data_Ready 02D0                        fsr0 0004  
                      indf 0000           __size_of___aldiv 00A2            ___aldiv@divisor 0024  
                 _ad_setup 02D6            ___aldiv@counter 0071           __size_of___lwdiv 004B  
                ?_ad_setup 0070           __size_of___lwmod 003D           ?_UART_Data_Ready 0070  
               ??_ad_setup 0070                       _ADIE 0466                       _ADIF 0066  
                     _ADFM 04FF                       _ADGO 00FA                       _ADON 00F8  
                     _CHS0 00FB                       _CHS1 00FC                       _CHS2 00FD  
                 __ptext91 0003                   __ptext92 0308                   __ptext93 0500  
                 __ptext94 0378                       _EEIE 046C                   __ptext95 0327  
                     _EEIF 006C                   __ptext96 02DD                   __ptext97 070C  
                 __ptext98 02D6                   __ptext99 02D0                       _GCEN 048F  
                     _CMIE 046E                       _CMIF 006E                       _BRGH 04C2  
                     _T0IE 005D                       u1000 05C7                       _T0IF 005A  
                     _CREN 00C4                       u1001 05C6                       _T0CS 040D  
                     _FERR 00C2                       u1020 05DC                       u1100 052A  
                     u1021 05DB                       u1101 0529                       u1110 053B  
                     u1015 05CD                       u1111 053A                       u1040 05F7  
                     u1120 0572                       u1200 0326                       u1041 05F6  
                     u1121 0571                       u1201 0325                       u1210 02E3  
                     u1130 0578                       u1035 05DE                       u1211 02E2  
                     u1140 02FD                       u1060 0615                       u1220 02EC  
                     _IBOV 044D                       _CVR0 04E8                       u1141 02FC  
                     u1061 0614                       u1045 05F3                       u1221 02EB  
                     _CVR1 04E9                       u1150 0303                       u1070 0619  
                     _CVR2 04EA                       u1151 0302                       u1055 0607  
                     _CVR3 04EB                       u1160 0357                       u1080 0511  
                     u1161 0356                       u1081 0510                       u1090 0519  
                     u1091 0518                       _T0SE 040C                       _CSRC 04C7  
                     u1190 0371                       _INDF 0000                       u1191 0370  
                     u1175 035E                       u1185 0365                       _PIE1 008C  
                     _PIE2 008D             read_ad@channel 0024                       _CVRR 04ED  
                     _PEIE 005E                       _INTE 005C                       _INTF 0059  
                     _RBIE 005B                       _RBIF 0058                       _RCIE 0465  
                     _RCEN 048B                       _RCIF 0065                       _PCON 008E  
                     _PIR1 000C                       _PIR2 000D                       _OERR 00C1  
                     _RBPU 040F                       _RX9D 00C0                       _TMR0 0001  
                     _TMR2 0011                       _WCOL 00A7                       _SPEN 00C7  
                     _RSEN 0489                       _TX9D 04C0                       _SREN 00C5  
                     _TRMT 04C1                       _STOP 04A4                       _TXIE 0464  
                     _ZERO 001A                       _WREN 0C62                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4           __size_of_read_ad 0028  
         __size_of_isdigit 0017          ??_UART_Data_Ready 0070                       _atoi 0500  
                     _main 062D                       _itoa 0378           ___aldiv@dividend 0020  
         _ad_setgetchannel 042A                       _utoa 047E                 _UART_Write 02E5  
                     start 0000         __end_of_UART_Write 02F1                 UART_Init@x 0077  
      start_initialization 02CC          __size_of_ad_setup 0007          ?_ad_setgetchannel 0020  
              read_ad@temp 0022                ?_UART_Write 0071                    ?___wmul 0072  
          __end_of___aldiv 062D                   ??___wmul 0070            __end_of___lwdiv 042A  
          __end_of___lwmod 03DF                    _CCP1CON 0017                    _CCP2CON 001D  
                 atoi@sign 0020    __end_of_UART_Write_Text 0327                    _ACKSTAT 048E  
           ___wmul@product 0070                      _C1INV 04E4                      _C2INV 04E5  
                    _C1OUT 04E6                      _C2OUT 04E7                      ?_atoi 0024  
                    _ADCS0 00FE                      _ADCS1 00FF                      _ADCS2 04FE  
                    _ADDEN 00C3                      ?_main 007A                      _ACKEN 048C  
                __ptext100 02E5                  __ptext101 047E                  __ptext102 058B  
                    _ACKDT 048D                  __ptext103 034F                  __ptext104 042A  
  ad_setgetchannel@channel 0075                  __ptext105 02F1                   main@buff 003F  
                __ptext106 03DF                  __ptext107 03A2                  __ptext108 0003  
                    _BCLIE 046B                      _BCLIF 006B                      _CCP1X 00BD  
                    _CCP1Y 00BC                      _CCP2X 00ED                      _CCP2Y 00EC  
                    ?_itoa 002E                      _EEADR 010D            ___lwdiv@divisor 0022  
                    _CARRY 0018                      _EEPGD 0C67                      _CMCON 009C  
                 main@temp 0043                      ?_utoa 0028                      _T1CON 0010  
                    _T2CON 0012                    _T1CKPS0 0084                    _T1CKPS1 0085  
                    _PCFG0 04F8                      _PCFG1 04F9                      _PCFG2 04FA  
                    _PCFG3 04FB                    _T2CKPS0 0090                    _T2CKPS1 0091  
          ___lwdiv@counter 0073                      _CVREN 04EF                      _CVROE 04EE  
                    _RCREG 001A                      _RCSTA 0018                      _TMR1H 000F  
                    _TMR1L 000E                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                    _T1OSCEN 0083                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _PSPIE 0467  
                    _PSPIF 0067                      _START 04A3                      _SSPM0 00A0  
                    _SSPM1 00A1                      _SSPM2 00A2                      _SSPM3 00A3  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _SSPEN 00A5                      _SSPOV 00A6  
                    _WRERR 0C63                      _TXREG 0019           ___aldiv@quotient 0073  
                    _TXSTA 0098            __end_of_read_ad 034F            __end_of_isdigit 0308  
           __pcstackCOMMON 0070         ??_ad_setgetchannel 0070                    _PSPMODE 044C  
             ??_UART_Write 0070                   itoa@base 0030                    _SSPCON2 0091  
                    atoi@a 0021             UART_Write@data 0070                      atoi@s 0023  
                 isdigit@c 0071                      main@i 0049                    _SSPSTAT 0094  
                  _TOUTPS0 0093                    _TOUTPS1 0094                    _TOUTPS2 0095  
                  _TOUTPS3 0096    __end_of_UART_Data_Ready 02D6          ad_setgetchannel@i 0078  
                    utoa@c 0026                      utoa@v 0024                      status 0003  
        ___wmul@multiplier 0072              __size_of_atoi 008B              __size_of_main 00DF  
            __size_of_itoa 002A                   l30000601 062D                   l30000610 0670  
                 l30000602 0635                   l30000611 0676                   l30000603 063A  
                 l30000700 05E5                   l30000620 06CB                   l30000612 0683  
                 l30000604 063F                   l30000701 05F7                   l30000621 06DA  
                 l30000613 0691                   l30000605 0645                   l30000630 03FA  
                 l30000702 0605                   l30000710 0504                   l30000622 06EA  
                 l30000614 0697                   l30000606 0652                   l30000631 03FE  
                 l30000703 0606                   l30000711 0508                   l30000623 06F0  
                 l30000607 065C                   l30000632 040F                   l30000704 060F  
                 l30000640 04A1                   l30000712 0511                   l30000624 06FC  
                 l30000616 069B                   l30000633 0415                   l30000705 0615  
                 l30000641 04A5                   l30000721 0566                   l30000713 0519  
                 l30000625 0702                   l30000617 06A9                   l30000609 0662  
                 l30000634 0416                   l30000626 03DF                   l30000730 0303  
                 l30000706 0619                   l30000650 04F9                   l30000642 04AB  
                 l30000722 0572                   l30000714 051D                   l30000618 06AF  
                 l30000635 041D                   l30000627 03EB                   l30000731 0306  
                 l30000707 0624                   l30000643 04B2                   l30000651 037B  
                 l30000723 0578                   l30000715 0522                   l30000619 06BC  
                 l30000628 03EF                   l30000636 0423                   l30000660 043D  
                 l30000644 04B4                   l30000652 037B                   l30000716 052A  
                 l30000740 030E                   l30000629 03F6                   l30000661 0440  
                 l30000733 034F                   l30000645 04C9                   l30000653 037F  
                 l30000725 0584                   l30000717 0533                   l30000709 0503  
                 l30000741 0317                   l30000670 0472                   l30000734 0353  
                 l30000646 04E3                   l30000638 0481                   l30000750 02EC  
                 l30000590 077C                   l30000654 0386                   l30000718 053B  
                 l30000742 031D                   l30000727 02F2                   l30000671 0477  
                 l30000735 0357                   l30000647 04E9                   l30000639 0487  
                 l30000591 07E1                   l30000743 02DD                   l30000655 038A  
                 l30000719 0540                   l30000680 03B7                   l30000728 02F7  
                 l30000664 0443                   l30000736 0364                   l30000648 04F1  
                 l30000592 07E4                   l30000744 02E3                   l30000656 038F  
                 l30000681 03BB                   l30000729 02FD                   l30000665 0459  
                 l30000737 0371                   l30000649 04F7                   l30000593 07ED  
                 l30000673 032A                   l30000682 03C5                   l30000666 0460  
                 l30000658 042B                   l30000690 05A1                   l30000746 02D6  
                 l30000594 07F1                   l30000674 0348                   l30000683 03CB  
                 l30000667 046C                   l30000659 042F                   l30000691 05A4  
                 l30000747 02D0                   l30000595 07F2                   l30000739 0309  
                 l30000684 03D2                   l30000676 03A2                   l30000668 046D  
                 l30000692 05A8                   l30000596 07F5                   l30000588 070C  
                 l30000677 03A8                   l30000685 03D8                   l30000669 046E  
                 l30000693 05B3                   l30000749 02E6                   l30000597 07F8  
                 l30000589 0773                   l30000678 03AC                   l30000694 05B7  
                 l30000598 07F9                   l30000679 03B3                   l30000695 05BF  
                 l30000687 058B                   l30000599 07FC                   l30000696 05C7  
                 l30000688 0590                   l30000697 05CB                   l30000689 0596  
                 l30000698 05D8                   l30000699 05DC              __size_of_utoa 0082  
                  ___aldiv 058B                   ?___aldiv 0020       ad_setgetchannel@data 0076  
                  ___lwdiv 03DF                    ___lwmod 03A2                  ??___aldiv 0070  
                 ?___lwdiv 0020                   ?___lwmod 0072                  ??___lwdiv 0070  
                ??___lwmod 0070                     ??_atoi 0076                     ??_main 0079  
                   ??_itoa 0077                     ??_utoa 0076                main@channel 0045  
                _UART_Init 070C                  _UART_Read 02DD                   utoa@base 002A  
               __pmaintext 062D  ad_setgetchannel@ch_config 0073          __end_of_UART_Init 0800  
        __end_of_UART_Read 02E5           __end_of_ad_setup 02DD           ___lwmod@dividend 0072  
                  _read_ad 0327                    _isdigit 02F1                   ?_read_ad 0025  
                 ?_isdigit 0072                 ?_UART_Init 0034                 ?_UART_Read 0070  
                ??_read_ad 0073                  ??_isdigit 0070                     _ADCON0 001F  
                   _ADCON1 009F                  main@buff1 0038                  main@buff2 003B  
                   _CCP1M0 00B8                     _CCP1M1 00B9                     _CCP1M2 00BA  
                   _CCP1M3 00BB                     _CCP2M0 00E8                     _CCP2M1 00E9  
                   _CCP2M2 00EA                     _CCP2M3 00EB                     _CCP1IE 0462  
         ___lwdiv@dividend 0020                     _CCP1IF 0062                     _CCP2IE 0468  
                   _CCP2IF 0068             __end_of___wmul 0378                     _ADRESH 001E  
                   _EEADRH 010F                     _ADRESL 009E                     _EEADRL 010D  
                   _EEDATA 010C                     _CCPR1H 0016                     _EEDATH 010E  
                   _CCPR2H 001C                     _CCPR1L 0015                     _CCPR2L 001B  
                   _EECON1 018C                     _EECON2 018D                  main@ready 0047  
             __end_of_atoi 058B               __end_of_main 070C               __end_of_itoa 03A2  
                   _GODONE 00FA       end_of_initialization 02CC               __end_of_utoa 0500  
                   _CVRCON 009D                     _T1SYNC 0082                     _INTEDG 040E  
                   _PCLATH 000A                     _INTCON 000B              __pcstackBANK0 0020  
              ??_UART_Init 0028                ??_UART_Read 0070                     _TMR0IE 005D  
                   _TMR0IF 005A                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR1CS 0081                     _TMR2IE 0461                     _TMR2IF 0061  
                   _OPTION 0081                     _TMR1ON 0080                     _TMR2ON 0092  
                   _SSPADD 0093                     _TRISA0 0428                     _TRISA1 0429  
                   _TRISB0 0430                     _TRISA2 042A                     _TRISB1 0431  
                   _TRISA3 042B                     _TRISC0 0438                     _TRISB2 0432  
                   _TRISA4 042C                     _TRISC1 0439                     _TRISB3 0433  
                   _TRISA5 042D                     _TRISD0 0440                     _TRISC2 043A  
                   _TRISB4 0434                     _TRISD1 0441                     _TRISC3 043B  
                   _TRISB5 0435                     _TRISE0 0448                     _TRISD2 0442  
                   _TRISC4 043C                     _TRISB6 0436                     _TRISE1 0449  
                   _TRISD3 0443                     _TRISC5 043D                     _TRISB7 0437  
                   _TRISE2 044A                     _TRISD4 0444                     _TRISC6 043E  
                   _TRISD5 0445                     _TRISC7 043F                     _TRISD6 0446  
                   _TRISD7 0447                     _STATUS 0003                    itoa@buf 002D  
                   _SSPCON 0014                     _SSPBUF 0013                    itoa@val 002E  
         UART_Write_Text@i 0072   __size_of_UART_Write_Text 001F                     ___wmul 034F  
              _isdigit$354 0070                    utoa@buf 0027        __size_of_UART_Write 000C  
         ___lwdiv@quotient 0071                    utoa@val 0028            ___lwmod@divisor 0074  
          ___lwmod@counter 0071   __end_of_ad_setgetchannel 047E   __size_of_UART_Data_Ready 0006  
      ___wmul@multiplicand 0074         __size_of_UART_Init 00F4         __size_of_UART_Read 0008  
        UART_Init@baudrate 0034            _UART_Write_Text 0308  
